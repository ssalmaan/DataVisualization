# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkContourDirectedMeanDistanceImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkContourDirectedMeanDistanceImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkContourDirectedMeanDistanceImageFilterPython
            return _itkContourDirectedMeanDistanceImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkContourDirectedMeanDistanceImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkContourDirectedMeanDistanceImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkContourDirectedMeanDistanceImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkContourDirectedMeanDistanceImageFilterIUS3IF3_New():
  return itkContourDirectedMeanDistanceImageFilterIUS3IF3.New()


def itkContourDirectedMeanDistanceImageFilterIUS2IF2_New():
  return itkContourDirectedMeanDistanceImageFilterIUS2IF2.New()


def itkContourDirectedMeanDistanceImageFilterIUC3IF3_New():
  return itkContourDirectedMeanDistanceImageFilterIUC3IF3.New()


def itkContourDirectedMeanDistanceImageFilterIUC2IF2_New():
  return itkContourDirectedMeanDistanceImageFilterIUC2IF2.New()


def itkContourDirectedMeanDistanceImageFilterIF3IF3_New():
  return itkContourDirectedMeanDistanceImageFilterIF3IF3.New()


def itkContourDirectedMeanDistanceImageFilterIF2IF2_New():
  return itkContourDirectedMeanDistanceImageFilterIF2IF2.New()


def itkContourDirectedMeanDistanceImageFilterISS3ISS3_New():
  return itkContourDirectedMeanDistanceImageFilterISS3ISS3.New()


def itkContourDirectedMeanDistanceImageFilterISS2ISS2_New():
  return itkContourDirectedMeanDistanceImageFilterISS2ISS2.New()

class itkContourDirectedMeanDistanceImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourDirectedMeanDistanceImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkContourDirectedMeanDistanceImageFilterIF2IF2_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourDirectedMeanDistanceImageFilterIF2IF2_Pointer":
        """Clone(itkContourDirectedMeanDistanceImageFilterIF2IF2 self) -> itkContourDirectedMeanDistanceImageFilterIF2IF2_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_Clone(self)


    def SetInput1(self, image: 'itkImageF2') -> "void":
        """SetInput1(itkContourDirectedMeanDistanceImageFilterIF2IF2 self, itkImageF2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageF2') -> "void":
        """SetInput2(itkContourDirectedMeanDistanceImageFilterIF2IF2 self, itkImageF2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_SetInput2(self, image)


    def GetInput1(self) -> "itkImageF2 const *":
        """GetInput1(itkContourDirectedMeanDistanceImageFilterIF2IF2 self) -> itkImageF2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetInput1(self)


    def GetInput2(self) -> "itkImageF2 const *":
        """GetInput2(itkContourDirectedMeanDistanceImageFilterIF2IF2 self) -> itkImageF2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetInput2(self)


    def GetContourDirectedMeanDistance(self) -> "double":
        """GetContourDirectedMeanDistance(itkContourDirectedMeanDistanceImageFilterIF2IF2 self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetContourDirectedMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterIF2IF2 self, bool const _arg)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterIF2IF2 self) -> bool"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIF2IF2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIF2IF2

        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourDirectedMeanDistanceImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourDirectedMeanDistanceImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIF2IF2.Clone = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_Clone, None, itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_SetInput1, None, itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_SetInput2, None, itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetInput1, None, itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetInput2, None, itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetContourDirectedMeanDistance, None, itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2.SetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_SetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2.GetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_swigregister
itkContourDirectedMeanDistanceImageFilterIF2IF2_swigregister(itkContourDirectedMeanDistanceImageFilterIF2IF2)

def itkContourDirectedMeanDistanceImageFilterIF2IF2___New_orig__() -> "itkContourDirectedMeanDistanceImageFilterIF2IF2_Pointer":
    """itkContourDirectedMeanDistanceImageFilterIF2IF2___New_orig__() -> itkContourDirectedMeanDistanceImageFilterIF2IF2_Pointer"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterIF2IF2 *":
    """itkContourDirectedMeanDistanceImageFilterIF2IF2_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIF2IF2"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_cast(obj)

class itkContourDirectedMeanDistanceImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourDirectedMeanDistanceImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkContourDirectedMeanDistanceImageFilterIF3IF3_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourDirectedMeanDistanceImageFilterIF3IF3_Pointer":
        """Clone(itkContourDirectedMeanDistanceImageFilterIF3IF3 self) -> itkContourDirectedMeanDistanceImageFilterIF3IF3_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_Clone(self)


    def SetInput1(self, image: 'itkImageF3') -> "void":
        """SetInput1(itkContourDirectedMeanDistanceImageFilterIF3IF3 self, itkImageF3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageF3') -> "void":
        """SetInput2(itkContourDirectedMeanDistanceImageFilterIF3IF3 self, itkImageF3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_SetInput2(self, image)


    def GetInput1(self) -> "itkImageF3 const *":
        """GetInput1(itkContourDirectedMeanDistanceImageFilterIF3IF3 self) -> itkImageF3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetInput1(self)


    def GetInput2(self) -> "itkImageF3 const *":
        """GetInput2(itkContourDirectedMeanDistanceImageFilterIF3IF3 self) -> itkImageF3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetInput2(self)


    def GetContourDirectedMeanDistance(self) -> "double":
        """GetContourDirectedMeanDistance(itkContourDirectedMeanDistanceImageFilterIF3IF3 self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetContourDirectedMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterIF3IF3 self, bool const _arg)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterIF3IF3 self) -> bool"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIF3IF3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIF3IF3

        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourDirectedMeanDistanceImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourDirectedMeanDistanceImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIF3IF3.Clone = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_Clone, None, itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_SetInput1, None, itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_SetInput2, None, itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetInput1, None, itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetInput2, None, itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetContourDirectedMeanDistance, None, itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3.SetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_SetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3.GetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_swigregister
itkContourDirectedMeanDistanceImageFilterIF3IF3_swigregister(itkContourDirectedMeanDistanceImageFilterIF3IF3)

def itkContourDirectedMeanDistanceImageFilterIF3IF3___New_orig__() -> "itkContourDirectedMeanDistanceImageFilterIF3IF3_Pointer":
    """itkContourDirectedMeanDistanceImageFilterIF3IF3___New_orig__() -> itkContourDirectedMeanDistanceImageFilterIF3IF3_Pointer"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterIF3IF3 *":
    """itkContourDirectedMeanDistanceImageFilterIF3IF3_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIF3IF3"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_cast(obj)

class itkContourDirectedMeanDistanceImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourDirectedMeanDistanceImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkContourDirectedMeanDistanceImageFilterISS2ISS2_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourDirectedMeanDistanceImageFilterISS2ISS2_Pointer":
        """Clone(itkContourDirectedMeanDistanceImageFilterISS2ISS2 self) -> itkContourDirectedMeanDistanceImageFilterISS2ISS2_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_Clone(self)


    def SetInput1(self, image: 'itkImageSS2') -> "void":
        """SetInput1(itkContourDirectedMeanDistanceImageFilterISS2ISS2 self, itkImageSS2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageSS2') -> "void":
        """SetInput2(itkContourDirectedMeanDistanceImageFilterISS2ISS2 self, itkImageSS2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_SetInput2(self, image)


    def GetInput1(self) -> "itkImageSS2 const *":
        """GetInput1(itkContourDirectedMeanDistanceImageFilterISS2ISS2 self) -> itkImageSS2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_GetInput1(self)


    def GetInput2(self) -> "itkImageSS2 const *":
        """GetInput2(itkContourDirectedMeanDistanceImageFilterISS2ISS2 self) -> itkImageSS2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_GetInput2(self)


    def GetContourDirectedMeanDistance(self) -> "double":
        """GetContourDirectedMeanDistance(itkContourDirectedMeanDistanceImageFilterISS2ISS2 self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_GetContourDirectedMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterISS2ISS2 self, bool const _arg)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterISS2ISS2 self) -> bool"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterISS2ISS2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterISS2ISS2

        Create a new object of the class itkContourDirectedMeanDistanceImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourDirectedMeanDistanceImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourDirectedMeanDistanceImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterISS2ISS2.Clone = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_Clone, None, itkContourDirectedMeanDistanceImageFilterISS2ISS2)
itkContourDirectedMeanDistanceImageFilterISS2ISS2.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_SetInput1, None, itkContourDirectedMeanDistanceImageFilterISS2ISS2)
itkContourDirectedMeanDistanceImageFilterISS2ISS2.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_SetInput2, None, itkContourDirectedMeanDistanceImageFilterISS2ISS2)
itkContourDirectedMeanDistanceImageFilterISS2ISS2.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_GetInput1, None, itkContourDirectedMeanDistanceImageFilterISS2ISS2)
itkContourDirectedMeanDistanceImageFilterISS2ISS2.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_GetInput2, None, itkContourDirectedMeanDistanceImageFilterISS2ISS2)
itkContourDirectedMeanDistanceImageFilterISS2ISS2.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_GetContourDirectedMeanDistance, None, itkContourDirectedMeanDistanceImageFilterISS2ISS2)
itkContourDirectedMeanDistanceImageFilterISS2ISS2.SetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_SetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterISS2ISS2)
itkContourDirectedMeanDistanceImageFilterISS2ISS2.GetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_GetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterISS2ISS2)
itkContourDirectedMeanDistanceImageFilterISS2ISS2_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_swigregister
itkContourDirectedMeanDistanceImageFilterISS2ISS2_swigregister(itkContourDirectedMeanDistanceImageFilterISS2ISS2)

def itkContourDirectedMeanDistanceImageFilterISS2ISS2___New_orig__() -> "itkContourDirectedMeanDistanceImageFilterISS2ISS2_Pointer":
    """itkContourDirectedMeanDistanceImageFilterISS2ISS2___New_orig__() -> itkContourDirectedMeanDistanceImageFilterISS2ISS2_Pointer"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2___New_orig__()

def itkContourDirectedMeanDistanceImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterISS2ISS2 *":
    """itkContourDirectedMeanDistanceImageFilterISS2ISS2_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterISS2ISS2"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS2ISS2_cast(obj)

class itkContourDirectedMeanDistanceImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourDirectedMeanDistanceImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkContourDirectedMeanDistanceImageFilterISS3ISS3_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourDirectedMeanDistanceImageFilterISS3ISS3_Pointer":
        """Clone(itkContourDirectedMeanDistanceImageFilterISS3ISS3 self) -> itkContourDirectedMeanDistanceImageFilterISS3ISS3_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_Clone(self)


    def SetInput1(self, image: 'itkImageSS3') -> "void":
        """SetInput1(itkContourDirectedMeanDistanceImageFilterISS3ISS3 self, itkImageSS3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageSS3') -> "void":
        """SetInput2(itkContourDirectedMeanDistanceImageFilterISS3ISS3 self, itkImageSS3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_SetInput2(self, image)


    def GetInput1(self) -> "itkImageSS3 const *":
        """GetInput1(itkContourDirectedMeanDistanceImageFilterISS3ISS3 self) -> itkImageSS3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_GetInput1(self)


    def GetInput2(self) -> "itkImageSS3 const *":
        """GetInput2(itkContourDirectedMeanDistanceImageFilterISS3ISS3 self) -> itkImageSS3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_GetInput2(self)


    def GetContourDirectedMeanDistance(self) -> "double":
        """GetContourDirectedMeanDistance(itkContourDirectedMeanDistanceImageFilterISS3ISS3 self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_GetContourDirectedMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterISS3ISS3 self, bool const _arg)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterISS3ISS3 self) -> bool"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterISS3ISS3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterISS3ISS3

        Create a new object of the class itkContourDirectedMeanDistanceImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourDirectedMeanDistanceImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourDirectedMeanDistanceImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterISS3ISS3.Clone = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_Clone, None, itkContourDirectedMeanDistanceImageFilterISS3ISS3)
itkContourDirectedMeanDistanceImageFilterISS3ISS3.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_SetInput1, None, itkContourDirectedMeanDistanceImageFilterISS3ISS3)
itkContourDirectedMeanDistanceImageFilterISS3ISS3.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_SetInput2, None, itkContourDirectedMeanDistanceImageFilterISS3ISS3)
itkContourDirectedMeanDistanceImageFilterISS3ISS3.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_GetInput1, None, itkContourDirectedMeanDistanceImageFilterISS3ISS3)
itkContourDirectedMeanDistanceImageFilterISS3ISS3.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_GetInput2, None, itkContourDirectedMeanDistanceImageFilterISS3ISS3)
itkContourDirectedMeanDistanceImageFilterISS3ISS3.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_GetContourDirectedMeanDistance, None, itkContourDirectedMeanDistanceImageFilterISS3ISS3)
itkContourDirectedMeanDistanceImageFilterISS3ISS3.SetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_SetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterISS3ISS3)
itkContourDirectedMeanDistanceImageFilterISS3ISS3.GetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_GetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterISS3ISS3)
itkContourDirectedMeanDistanceImageFilterISS3ISS3_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_swigregister
itkContourDirectedMeanDistanceImageFilterISS3ISS3_swigregister(itkContourDirectedMeanDistanceImageFilterISS3ISS3)

def itkContourDirectedMeanDistanceImageFilterISS3ISS3___New_orig__() -> "itkContourDirectedMeanDistanceImageFilterISS3ISS3_Pointer":
    """itkContourDirectedMeanDistanceImageFilterISS3ISS3___New_orig__() -> itkContourDirectedMeanDistanceImageFilterISS3ISS3_Pointer"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3___New_orig__()

def itkContourDirectedMeanDistanceImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterISS3ISS3 *":
    """itkContourDirectedMeanDistanceImageFilterISS3ISS3_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterISS3ISS3"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterISS3ISS3_cast(obj)

class itkContourDirectedMeanDistanceImageFilterIUC2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIUC2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourDirectedMeanDistanceImageFilterIUC2IF2_Pointer":
        """__New_orig__() -> itkContourDirectedMeanDistanceImageFilterIUC2IF2_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourDirectedMeanDistanceImageFilterIUC2IF2_Pointer":
        """Clone(itkContourDirectedMeanDistanceImageFilterIUC2IF2 self) -> itkContourDirectedMeanDistanceImageFilterIUC2IF2_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_Clone(self)


    def SetInput1(self, image: 'itkImageUC2') -> "void":
        """SetInput1(itkContourDirectedMeanDistanceImageFilterIUC2IF2 self, itkImageUC2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageF2') -> "void":
        """SetInput2(itkContourDirectedMeanDistanceImageFilterIUC2IF2 self, itkImageF2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_SetInput2(self, image)


    def GetInput1(self) -> "itkImageUC2 const *":
        """GetInput1(itkContourDirectedMeanDistanceImageFilterIUC2IF2 self) -> itkImageUC2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_GetInput1(self)


    def GetInput2(self) -> "itkImageF2 const *":
        """GetInput2(itkContourDirectedMeanDistanceImageFilterIUC2IF2 self) -> itkImageF2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_GetInput2(self)


    def GetContourDirectedMeanDistance(self) -> "double":
        """GetContourDirectedMeanDistance(itkContourDirectedMeanDistanceImageFilterIUC2IF2 self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_GetContourDirectedMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterIUC2IF2 self, bool const _arg)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterIUC2IF2 self) -> bool"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIUC2IF2

    def cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterIUC2IF2 *":
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUC2IF2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIUC2IF2

        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourDirectedMeanDistanceImageFilterIUC2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourDirectedMeanDistanceImageFilterIUC2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIUC2IF2.Clone = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_Clone, None, itkContourDirectedMeanDistanceImageFilterIUC2IF2)
itkContourDirectedMeanDistanceImageFilterIUC2IF2.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_SetInput1, None, itkContourDirectedMeanDistanceImageFilterIUC2IF2)
itkContourDirectedMeanDistanceImageFilterIUC2IF2.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_SetInput2, None, itkContourDirectedMeanDistanceImageFilterIUC2IF2)
itkContourDirectedMeanDistanceImageFilterIUC2IF2.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_GetInput1, None, itkContourDirectedMeanDistanceImageFilterIUC2IF2)
itkContourDirectedMeanDistanceImageFilterIUC2IF2.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_GetInput2, None, itkContourDirectedMeanDistanceImageFilterIUC2IF2)
itkContourDirectedMeanDistanceImageFilterIUC2IF2.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_GetContourDirectedMeanDistance, None, itkContourDirectedMeanDistanceImageFilterIUC2IF2)
itkContourDirectedMeanDistanceImageFilterIUC2IF2.SetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_SetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterIUC2IF2)
itkContourDirectedMeanDistanceImageFilterIUC2IF2.GetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_GetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterIUC2IF2)
itkContourDirectedMeanDistanceImageFilterIUC2IF2_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_swigregister
itkContourDirectedMeanDistanceImageFilterIUC2IF2_swigregister(itkContourDirectedMeanDistanceImageFilterIUC2IF2)

def itkContourDirectedMeanDistanceImageFilterIUC2IF2___New_orig__() -> "itkContourDirectedMeanDistanceImageFilterIUC2IF2_Pointer":
    """itkContourDirectedMeanDistanceImageFilterIUC2IF2___New_orig__() -> itkContourDirectedMeanDistanceImageFilterIUC2IF2_Pointer"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIUC2IF2_cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterIUC2IF2 *":
    """itkContourDirectedMeanDistanceImageFilterIUC2IF2_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUC2IF2"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IF2_cast(obj)

class itkContourDirectedMeanDistanceImageFilterIUC3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIUC3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourDirectedMeanDistanceImageFilterIUC3IF3_Pointer":
        """__New_orig__() -> itkContourDirectedMeanDistanceImageFilterIUC3IF3_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourDirectedMeanDistanceImageFilterIUC3IF3_Pointer":
        """Clone(itkContourDirectedMeanDistanceImageFilterIUC3IF3 self) -> itkContourDirectedMeanDistanceImageFilterIUC3IF3_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_Clone(self)


    def SetInput1(self, image: 'itkImageUC3') -> "void":
        """SetInput1(itkContourDirectedMeanDistanceImageFilterIUC3IF3 self, itkImageUC3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageF3') -> "void":
        """SetInput2(itkContourDirectedMeanDistanceImageFilterIUC3IF3 self, itkImageF3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_SetInput2(self, image)


    def GetInput1(self) -> "itkImageUC3 const *":
        """GetInput1(itkContourDirectedMeanDistanceImageFilterIUC3IF3 self) -> itkImageUC3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_GetInput1(self)


    def GetInput2(self) -> "itkImageF3 const *":
        """GetInput2(itkContourDirectedMeanDistanceImageFilterIUC3IF3 self) -> itkImageF3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_GetInput2(self)


    def GetContourDirectedMeanDistance(self) -> "double":
        """GetContourDirectedMeanDistance(itkContourDirectedMeanDistanceImageFilterIUC3IF3 self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_GetContourDirectedMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterIUC3IF3 self, bool const _arg)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterIUC3IF3 self) -> bool"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIUC3IF3

    def cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterIUC3IF3 *":
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUC3IF3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIUC3IF3

        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourDirectedMeanDistanceImageFilterIUC3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourDirectedMeanDistanceImageFilterIUC3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIUC3IF3.Clone = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_Clone, None, itkContourDirectedMeanDistanceImageFilterIUC3IF3)
itkContourDirectedMeanDistanceImageFilterIUC3IF3.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_SetInput1, None, itkContourDirectedMeanDistanceImageFilterIUC3IF3)
itkContourDirectedMeanDistanceImageFilterIUC3IF3.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_SetInput2, None, itkContourDirectedMeanDistanceImageFilterIUC3IF3)
itkContourDirectedMeanDistanceImageFilterIUC3IF3.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_GetInput1, None, itkContourDirectedMeanDistanceImageFilterIUC3IF3)
itkContourDirectedMeanDistanceImageFilterIUC3IF3.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_GetInput2, None, itkContourDirectedMeanDistanceImageFilterIUC3IF3)
itkContourDirectedMeanDistanceImageFilterIUC3IF3.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_GetContourDirectedMeanDistance, None, itkContourDirectedMeanDistanceImageFilterIUC3IF3)
itkContourDirectedMeanDistanceImageFilterIUC3IF3.SetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_SetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterIUC3IF3)
itkContourDirectedMeanDistanceImageFilterIUC3IF3.GetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_GetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterIUC3IF3)
itkContourDirectedMeanDistanceImageFilterIUC3IF3_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_swigregister
itkContourDirectedMeanDistanceImageFilterIUC3IF3_swigregister(itkContourDirectedMeanDistanceImageFilterIUC3IF3)

def itkContourDirectedMeanDistanceImageFilterIUC3IF3___New_orig__() -> "itkContourDirectedMeanDistanceImageFilterIUC3IF3_Pointer":
    """itkContourDirectedMeanDistanceImageFilterIUC3IF3___New_orig__() -> itkContourDirectedMeanDistanceImageFilterIUC3IF3_Pointer"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIUC3IF3_cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterIUC3IF3 *":
    """itkContourDirectedMeanDistanceImageFilterIUC3IF3_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUC3IF3"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IF3_cast(obj)

class itkContourDirectedMeanDistanceImageFilterIUS2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIUS2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourDirectedMeanDistanceImageFilterIUS2IF2_Pointer":
        """__New_orig__() -> itkContourDirectedMeanDistanceImageFilterIUS2IF2_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourDirectedMeanDistanceImageFilterIUS2IF2_Pointer":
        """Clone(itkContourDirectedMeanDistanceImageFilterIUS2IF2 self) -> itkContourDirectedMeanDistanceImageFilterIUS2IF2_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_Clone(self)


    def SetInput1(self, image: 'itkImageUS2') -> "void":
        """SetInput1(itkContourDirectedMeanDistanceImageFilterIUS2IF2 self, itkImageUS2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageF2') -> "void":
        """SetInput2(itkContourDirectedMeanDistanceImageFilterIUS2IF2 self, itkImageF2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_SetInput2(self, image)


    def GetInput1(self) -> "itkImageUS2 const *":
        """GetInput1(itkContourDirectedMeanDistanceImageFilterIUS2IF2 self) -> itkImageUS2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_GetInput1(self)


    def GetInput2(self) -> "itkImageF2 const *":
        """GetInput2(itkContourDirectedMeanDistanceImageFilterIUS2IF2 self) -> itkImageF2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_GetInput2(self)


    def GetContourDirectedMeanDistance(self) -> "double":
        """GetContourDirectedMeanDistance(itkContourDirectedMeanDistanceImageFilterIUS2IF2 self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_GetContourDirectedMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterIUS2IF2 self, bool const _arg)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterIUS2IF2 self) -> bool"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIUS2IF2

    def cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterIUS2IF2 *":
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUS2IF2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIUS2IF2

        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourDirectedMeanDistanceImageFilterIUS2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourDirectedMeanDistanceImageFilterIUS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIUS2IF2.Clone = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_Clone, None, itkContourDirectedMeanDistanceImageFilterIUS2IF2)
itkContourDirectedMeanDistanceImageFilterIUS2IF2.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_SetInput1, None, itkContourDirectedMeanDistanceImageFilterIUS2IF2)
itkContourDirectedMeanDistanceImageFilterIUS2IF2.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_SetInput2, None, itkContourDirectedMeanDistanceImageFilterIUS2IF2)
itkContourDirectedMeanDistanceImageFilterIUS2IF2.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_GetInput1, None, itkContourDirectedMeanDistanceImageFilterIUS2IF2)
itkContourDirectedMeanDistanceImageFilterIUS2IF2.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_GetInput2, None, itkContourDirectedMeanDistanceImageFilterIUS2IF2)
itkContourDirectedMeanDistanceImageFilterIUS2IF2.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_GetContourDirectedMeanDistance, None, itkContourDirectedMeanDistanceImageFilterIUS2IF2)
itkContourDirectedMeanDistanceImageFilterIUS2IF2.SetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_SetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterIUS2IF2)
itkContourDirectedMeanDistanceImageFilterIUS2IF2.GetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_GetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterIUS2IF2)
itkContourDirectedMeanDistanceImageFilterIUS2IF2_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_swigregister
itkContourDirectedMeanDistanceImageFilterIUS2IF2_swigregister(itkContourDirectedMeanDistanceImageFilterIUS2IF2)

def itkContourDirectedMeanDistanceImageFilterIUS2IF2___New_orig__() -> "itkContourDirectedMeanDistanceImageFilterIUS2IF2_Pointer":
    """itkContourDirectedMeanDistanceImageFilterIUS2IF2___New_orig__() -> itkContourDirectedMeanDistanceImageFilterIUS2IF2_Pointer"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIUS2IF2_cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterIUS2IF2 *":
    """itkContourDirectedMeanDistanceImageFilterIUS2IF2_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUS2IF2"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IF2_cast(obj)

class itkContourDirectedMeanDistanceImageFilterIUS3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIUS3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourDirectedMeanDistanceImageFilterIUS3IF3_Pointer":
        """__New_orig__() -> itkContourDirectedMeanDistanceImageFilterIUS3IF3_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourDirectedMeanDistanceImageFilterIUS3IF3_Pointer":
        """Clone(itkContourDirectedMeanDistanceImageFilterIUS3IF3 self) -> itkContourDirectedMeanDistanceImageFilterIUS3IF3_Pointer"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_Clone(self)


    def SetInput1(self, image: 'itkImageUS3') -> "void":
        """SetInput1(itkContourDirectedMeanDistanceImageFilterIUS3IF3 self, itkImageUS3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageF3') -> "void":
        """SetInput2(itkContourDirectedMeanDistanceImageFilterIUS3IF3 self, itkImageF3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_SetInput2(self, image)


    def GetInput1(self) -> "itkImageUS3 const *":
        """GetInput1(itkContourDirectedMeanDistanceImageFilterIUS3IF3 self) -> itkImageUS3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_GetInput1(self)


    def GetInput2(self) -> "itkImageF3 const *":
        """GetInput2(itkContourDirectedMeanDistanceImageFilterIUS3IF3 self) -> itkImageF3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_GetInput2(self)


    def GetContourDirectedMeanDistance(self) -> "double":
        """GetContourDirectedMeanDistance(itkContourDirectedMeanDistanceImageFilterIUS3IF3 self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_GetContourDirectedMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterIUS3IF3 self, bool const _arg)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourDirectedMeanDistanceImageFilterIUS3IF3 self) -> bool"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIUS3IF3

    def cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterIUS3IF3 *":
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUS3IF3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIUS3IF3

        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourDirectedMeanDistanceImageFilterIUS3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourDirectedMeanDistanceImageFilterIUS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIUS3IF3.Clone = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_Clone, None, itkContourDirectedMeanDistanceImageFilterIUS3IF3)
itkContourDirectedMeanDistanceImageFilterIUS3IF3.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_SetInput1, None, itkContourDirectedMeanDistanceImageFilterIUS3IF3)
itkContourDirectedMeanDistanceImageFilterIUS3IF3.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_SetInput2, None, itkContourDirectedMeanDistanceImageFilterIUS3IF3)
itkContourDirectedMeanDistanceImageFilterIUS3IF3.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_GetInput1, None, itkContourDirectedMeanDistanceImageFilterIUS3IF3)
itkContourDirectedMeanDistanceImageFilterIUS3IF3.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_GetInput2, None, itkContourDirectedMeanDistanceImageFilterIUS3IF3)
itkContourDirectedMeanDistanceImageFilterIUS3IF3.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_GetContourDirectedMeanDistance, None, itkContourDirectedMeanDistanceImageFilterIUS3IF3)
itkContourDirectedMeanDistanceImageFilterIUS3IF3.SetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_SetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterIUS3IF3)
itkContourDirectedMeanDistanceImageFilterIUS3IF3.GetUseImageSpacing = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_GetUseImageSpacing, None, itkContourDirectedMeanDistanceImageFilterIUS3IF3)
itkContourDirectedMeanDistanceImageFilterIUS3IF3_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_swigregister
itkContourDirectedMeanDistanceImageFilterIUS3IF3_swigregister(itkContourDirectedMeanDistanceImageFilterIUS3IF3)

def itkContourDirectedMeanDistanceImageFilterIUS3IF3___New_orig__() -> "itkContourDirectedMeanDistanceImageFilterIUS3IF3_Pointer":
    """itkContourDirectedMeanDistanceImageFilterIUS3IF3___New_orig__() -> itkContourDirectedMeanDistanceImageFilterIUS3IF3_Pointer"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIUS3IF3_cast(obj: 'itkLightObject') -> "itkContourDirectedMeanDistanceImageFilterIUS3IF3 *":
    """itkContourDirectedMeanDistanceImageFilterIUS3IF3_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUS3IF3"""
    return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IF3_cast(obj)


def contour_directed_mean_distance_image_filter(*args, **kwargs):
    """Procedural interface for ContourDirectedMeanDistanceImageFilter"""
    import itk
    instance = itk.ContourDirectedMeanDistanceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def contour_directed_mean_distance_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ContourDirectedMeanDistanceImageFilter, itkTemplate.itkTemplate):
        contour_directed_mean_distance_image_filter.__doc__ = itk.ContourDirectedMeanDistanceImageFilter.values()[0].__doc__
    else:
        contour_directed_mean_distance_image_filter.__doc__ = itk.ContourDirectedMeanDistanceImageFilter.__doc__




