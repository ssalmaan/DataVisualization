# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkLabelSelectionLabelMapFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkLabelSelectionLabelMapFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkLabelSelectionLabelMapFilterPython
            return _itkLabelSelectionLabelMapFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkLabelSelectionLabelMapFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkLabelSelectionLabelMapFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkLabelSelectionLabelMapFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkInPlaceLabelMapFilterPython
import ITKCommonBasePython
import pyBasePython
import ITKLabelMapBasePython
import itkImageSourceCommonPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImagePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkStatisticsLabelObjectPython
import itkShapeLabelObjectPython
import itkLabelObjectPython
import itkLabelObjectLinePython
import itkAffineTransformPython
import itkTransformBasePython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkDiffusionTensor3DPython
import itkMatrixOffsetTransformBasePython
import itkHistogramPython
import itkSamplePython
import itkImageSourcePython
import itkVectorImagePython
import itkImageToImageFilterCommonPython
import itkLabelMapFilterPython

def itkLabelSelectionLabelMapFilterLM3_New():
  return itkLabelSelectionLabelMapFilterLM3.New()


def itkLabelSelectionLabelMapFilterLM3_Superclass_New():
  return itkLabelSelectionLabelMapFilterLM3_Superclass.New()


def itkLabelSelectionLabelMapFilterLM2_New():
  return itkLabelSelectionLabelMapFilterLM2.New()


def itkLabelSelectionLabelMapFilterLM2_Superclass_New():
  return itkLabelSelectionLabelMapFilterLM2_Superclass.New()

class itkLabelSelectionLabelMapFilterLM2_Superclass(itkInPlaceLabelMapFilterPython.itkInPlaceLabelMapFilterLM2):
    """Proxy of C++ itkLabelSelectionLabelMapFilterLM2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLabelSelectionLabelMapFilterLM2_Superclass_Pointer":
        """__New_orig__() -> itkLabelSelectionLabelMapFilterLM2_Superclass_Pointer"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLabelSelectionLabelMapFilterLM2_Superclass_Pointer":
        """Clone(itkLabelSelectionLabelMapFilterLM2_Superclass self) -> itkLabelSelectionLabelMapFilterLM2_Superclass_Pointer"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_Clone(self)


    def GetAttributeSet(self) -> "std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > const &":
        """GetAttributeSet(itkLabelSelectionLabelMapFilterLM2_Superclass self) -> setUL"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_GetAttributeSet(self)


    def SetAttributeSet(self, set: 'setUL') -> "void":
        """SetAttributeSet(itkLabelSelectionLabelMapFilterLM2_Superclass self, setUL set)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_SetAttributeSet(self, set)


    def GetExclude(self) -> "bool":
        """GetExclude(itkLabelSelectionLabelMapFilterLM2_Superclass self) -> bool"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_GetExclude(self)


    def SetExclude(self, _arg: 'bool const') -> "void":
        """SetExclude(itkLabelSelectionLabelMapFilterLM2_Superclass self, bool const _arg)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_SetExclude(self, _arg)


    def ExcludeOn(self) -> "void":
        """ExcludeOn(itkLabelSelectionLabelMapFilterLM2_Superclass self)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_ExcludeOn(self)


    def ExcludeOff(self) -> "void":
        """ExcludeOff(itkLabelSelectionLabelMapFilterLM2_Superclass self)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_ExcludeOff(self)


    def SetAttribute(self, attr: 'unsigned long const &') -> "void":
        """SetAttribute(itkLabelSelectionLabelMapFilterLM2_Superclass self, unsigned long const & attr)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_SetAttribute(self, attr)


    def ClearAttributeSet(self) -> "void":
        """ClearAttributeSet(itkLabelSelectionLabelMapFilterLM2_Superclass self)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_ClearAttributeSet(self)


    def AddAttribute(self, attr: 'unsigned long const &') -> "void":
        """AddAttribute(itkLabelSelectionLabelMapFilterLM2_Superclass self, unsigned long const & attr)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_AddAttribute(self, attr)

    __swig_destroy__ = _itkLabelSelectionLabelMapFilterPython.delete_itkLabelSelectionLabelMapFilterLM2_Superclass

    def cast(obj: 'itkLightObject') -> "itkLabelSelectionLabelMapFilterLM2_Superclass *":
        """cast(itkLightObject obj) -> itkLabelSelectionLabelMapFilterLM2_Superclass"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLabelSelectionLabelMapFilterLM2_Superclass

        Create a new object of the class itkLabelSelectionLabelMapFilterLM2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSelectionLabelMapFilterLM2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabelSelectionLabelMapFilterLM2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabelSelectionLabelMapFilterLM2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLabelSelectionLabelMapFilterLM2_Superclass.Clone = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_Clone, None, itkLabelSelectionLabelMapFilterLM2_Superclass)
itkLabelSelectionLabelMapFilterLM2_Superclass.GetAttributeSet = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_GetAttributeSet, None, itkLabelSelectionLabelMapFilterLM2_Superclass)
itkLabelSelectionLabelMapFilterLM2_Superclass.SetAttributeSet = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_SetAttributeSet, None, itkLabelSelectionLabelMapFilterLM2_Superclass)
itkLabelSelectionLabelMapFilterLM2_Superclass.GetExclude = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_GetExclude, None, itkLabelSelectionLabelMapFilterLM2_Superclass)
itkLabelSelectionLabelMapFilterLM2_Superclass.SetExclude = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_SetExclude, None, itkLabelSelectionLabelMapFilterLM2_Superclass)
itkLabelSelectionLabelMapFilterLM2_Superclass.ExcludeOn = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_ExcludeOn, None, itkLabelSelectionLabelMapFilterLM2_Superclass)
itkLabelSelectionLabelMapFilterLM2_Superclass.ExcludeOff = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_ExcludeOff, None, itkLabelSelectionLabelMapFilterLM2_Superclass)
itkLabelSelectionLabelMapFilterLM2_Superclass.SetAttribute = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_SetAttribute, None, itkLabelSelectionLabelMapFilterLM2_Superclass)
itkLabelSelectionLabelMapFilterLM2_Superclass.ClearAttributeSet = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_ClearAttributeSet, None, itkLabelSelectionLabelMapFilterLM2_Superclass)
itkLabelSelectionLabelMapFilterLM2_Superclass.AddAttribute = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_AddAttribute, None, itkLabelSelectionLabelMapFilterLM2_Superclass)
itkLabelSelectionLabelMapFilterLM2_Superclass_swigregister = _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_swigregister
itkLabelSelectionLabelMapFilterLM2_Superclass_swigregister(itkLabelSelectionLabelMapFilterLM2_Superclass)

def itkLabelSelectionLabelMapFilterLM2_Superclass___New_orig__() -> "itkLabelSelectionLabelMapFilterLM2_Superclass_Pointer":
    """itkLabelSelectionLabelMapFilterLM2_Superclass___New_orig__() -> itkLabelSelectionLabelMapFilterLM2_Superclass_Pointer"""
    return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass___New_orig__()

def itkLabelSelectionLabelMapFilterLM2_Superclass_cast(obj: 'itkLightObject') -> "itkLabelSelectionLabelMapFilterLM2_Superclass *":
    """itkLabelSelectionLabelMapFilterLM2_Superclass_cast(itkLightObject obj) -> itkLabelSelectionLabelMapFilterLM2_Superclass"""
    return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Superclass_cast(obj)

class itkLabelSelectionLabelMapFilterLM3_Superclass(itkInPlaceLabelMapFilterPython.itkInPlaceLabelMapFilterLM3):
    """Proxy of C++ itkLabelSelectionLabelMapFilterLM3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLabelSelectionLabelMapFilterLM3_Superclass_Pointer":
        """__New_orig__() -> itkLabelSelectionLabelMapFilterLM3_Superclass_Pointer"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLabelSelectionLabelMapFilterLM3_Superclass_Pointer":
        """Clone(itkLabelSelectionLabelMapFilterLM3_Superclass self) -> itkLabelSelectionLabelMapFilterLM3_Superclass_Pointer"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_Clone(self)


    def GetAttributeSet(self) -> "std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > const &":
        """GetAttributeSet(itkLabelSelectionLabelMapFilterLM3_Superclass self) -> setUL"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_GetAttributeSet(self)


    def SetAttributeSet(self, set: 'setUL') -> "void":
        """SetAttributeSet(itkLabelSelectionLabelMapFilterLM3_Superclass self, setUL set)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_SetAttributeSet(self, set)


    def GetExclude(self) -> "bool":
        """GetExclude(itkLabelSelectionLabelMapFilterLM3_Superclass self) -> bool"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_GetExclude(self)


    def SetExclude(self, _arg: 'bool const') -> "void":
        """SetExclude(itkLabelSelectionLabelMapFilterLM3_Superclass self, bool const _arg)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_SetExclude(self, _arg)


    def ExcludeOn(self) -> "void":
        """ExcludeOn(itkLabelSelectionLabelMapFilterLM3_Superclass self)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_ExcludeOn(self)


    def ExcludeOff(self) -> "void":
        """ExcludeOff(itkLabelSelectionLabelMapFilterLM3_Superclass self)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_ExcludeOff(self)


    def SetAttribute(self, attr: 'unsigned long const &') -> "void":
        """SetAttribute(itkLabelSelectionLabelMapFilterLM3_Superclass self, unsigned long const & attr)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_SetAttribute(self, attr)


    def ClearAttributeSet(self) -> "void":
        """ClearAttributeSet(itkLabelSelectionLabelMapFilterLM3_Superclass self)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_ClearAttributeSet(self)


    def AddAttribute(self, attr: 'unsigned long const &') -> "void":
        """AddAttribute(itkLabelSelectionLabelMapFilterLM3_Superclass self, unsigned long const & attr)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_AddAttribute(self, attr)

    __swig_destroy__ = _itkLabelSelectionLabelMapFilterPython.delete_itkLabelSelectionLabelMapFilterLM3_Superclass

    def cast(obj: 'itkLightObject') -> "itkLabelSelectionLabelMapFilterLM3_Superclass *":
        """cast(itkLightObject obj) -> itkLabelSelectionLabelMapFilterLM3_Superclass"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLabelSelectionLabelMapFilterLM3_Superclass

        Create a new object of the class itkLabelSelectionLabelMapFilterLM3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSelectionLabelMapFilterLM3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabelSelectionLabelMapFilterLM3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabelSelectionLabelMapFilterLM3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLabelSelectionLabelMapFilterLM3_Superclass.Clone = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_Clone, None, itkLabelSelectionLabelMapFilterLM3_Superclass)
itkLabelSelectionLabelMapFilterLM3_Superclass.GetAttributeSet = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_GetAttributeSet, None, itkLabelSelectionLabelMapFilterLM3_Superclass)
itkLabelSelectionLabelMapFilterLM3_Superclass.SetAttributeSet = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_SetAttributeSet, None, itkLabelSelectionLabelMapFilterLM3_Superclass)
itkLabelSelectionLabelMapFilterLM3_Superclass.GetExclude = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_GetExclude, None, itkLabelSelectionLabelMapFilterLM3_Superclass)
itkLabelSelectionLabelMapFilterLM3_Superclass.SetExclude = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_SetExclude, None, itkLabelSelectionLabelMapFilterLM3_Superclass)
itkLabelSelectionLabelMapFilterLM3_Superclass.ExcludeOn = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_ExcludeOn, None, itkLabelSelectionLabelMapFilterLM3_Superclass)
itkLabelSelectionLabelMapFilterLM3_Superclass.ExcludeOff = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_ExcludeOff, None, itkLabelSelectionLabelMapFilterLM3_Superclass)
itkLabelSelectionLabelMapFilterLM3_Superclass.SetAttribute = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_SetAttribute, None, itkLabelSelectionLabelMapFilterLM3_Superclass)
itkLabelSelectionLabelMapFilterLM3_Superclass.ClearAttributeSet = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_ClearAttributeSet, None, itkLabelSelectionLabelMapFilterLM3_Superclass)
itkLabelSelectionLabelMapFilterLM3_Superclass.AddAttribute = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_AddAttribute, None, itkLabelSelectionLabelMapFilterLM3_Superclass)
itkLabelSelectionLabelMapFilterLM3_Superclass_swigregister = _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_swigregister
itkLabelSelectionLabelMapFilterLM3_Superclass_swigregister(itkLabelSelectionLabelMapFilterLM3_Superclass)

def itkLabelSelectionLabelMapFilterLM3_Superclass___New_orig__() -> "itkLabelSelectionLabelMapFilterLM3_Superclass_Pointer":
    """itkLabelSelectionLabelMapFilterLM3_Superclass___New_orig__() -> itkLabelSelectionLabelMapFilterLM3_Superclass_Pointer"""
    return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass___New_orig__()

def itkLabelSelectionLabelMapFilterLM3_Superclass_cast(obj: 'itkLightObject') -> "itkLabelSelectionLabelMapFilterLM3_Superclass *":
    """itkLabelSelectionLabelMapFilterLM3_Superclass_cast(itkLightObject obj) -> itkLabelSelectionLabelMapFilterLM3_Superclass"""
    return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Superclass_cast(obj)

class itkLabelSelectionLabelMapFilterLM2(itkLabelSelectionLabelMapFilterLM2_Superclass):
    """Proxy of C++ itkLabelSelectionLabelMapFilterLM2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLabelSelectionLabelMapFilterLM2_Pointer":
        """__New_orig__() -> itkLabelSelectionLabelMapFilterLM2_Pointer"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLabelSelectionLabelMapFilterLM2_Pointer":
        """Clone(itkLabelSelectionLabelMapFilterLM2 self) -> itkLabelSelectionLabelMapFilterLM2_Pointer"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Clone(self)


    def GetLabelSet(self) -> "std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > const &":
        """GetLabelSet(itkLabelSelectionLabelMapFilterLM2 self) -> setUL"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_GetLabelSet(self)


    def SetLabelSet(self, set: 'setUL') -> "void":
        """SetLabelSet(itkLabelSelectionLabelMapFilterLM2 self, setUL set)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_SetLabelSet(self, set)


    def SetLabel(self, attr: 'unsigned long const &') -> "void":
        """SetLabel(itkLabelSelectionLabelMapFilterLM2 self, unsigned long const & attr)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_SetLabel(self, attr)


    def ClearLabelSet(self) -> "void":
        """ClearLabelSet(itkLabelSelectionLabelMapFilterLM2 self)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_ClearLabelSet(self)


    def AddLabel(self, attr: 'unsigned long const &') -> "void":
        """AddLabel(itkLabelSelectionLabelMapFilterLM2 self, unsigned long const & attr)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_AddLabel(self, attr)

    __swig_destroy__ = _itkLabelSelectionLabelMapFilterPython.delete_itkLabelSelectionLabelMapFilterLM2

    def cast(obj: 'itkLightObject') -> "itkLabelSelectionLabelMapFilterLM2 *":
        """cast(itkLightObject obj) -> itkLabelSelectionLabelMapFilterLM2"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLabelSelectionLabelMapFilterLM2

        Create a new object of the class itkLabelSelectionLabelMapFilterLM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSelectionLabelMapFilterLM2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabelSelectionLabelMapFilterLM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabelSelectionLabelMapFilterLM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLabelSelectionLabelMapFilterLM2.Clone = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_Clone, None, itkLabelSelectionLabelMapFilterLM2)
itkLabelSelectionLabelMapFilterLM2.GetLabelSet = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_GetLabelSet, None, itkLabelSelectionLabelMapFilterLM2)
itkLabelSelectionLabelMapFilterLM2.SetLabelSet = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_SetLabelSet, None, itkLabelSelectionLabelMapFilterLM2)
itkLabelSelectionLabelMapFilterLM2.SetLabel = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_SetLabel, None, itkLabelSelectionLabelMapFilterLM2)
itkLabelSelectionLabelMapFilterLM2.ClearLabelSet = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_ClearLabelSet, None, itkLabelSelectionLabelMapFilterLM2)
itkLabelSelectionLabelMapFilterLM2.AddLabel = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_AddLabel, None, itkLabelSelectionLabelMapFilterLM2)
itkLabelSelectionLabelMapFilterLM2_swigregister = _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_swigregister
itkLabelSelectionLabelMapFilterLM2_swigregister(itkLabelSelectionLabelMapFilterLM2)

def itkLabelSelectionLabelMapFilterLM2___New_orig__() -> "itkLabelSelectionLabelMapFilterLM2_Pointer":
    """itkLabelSelectionLabelMapFilterLM2___New_orig__() -> itkLabelSelectionLabelMapFilterLM2_Pointer"""
    return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2___New_orig__()

def itkLabelSelectionLabelMapFilterLM2_cast(obj: 'itkLightObject') -> "itkLabelSelectionLabelMapFilterLM2 *":
    """itkLabelSelectionLabelMapFilterLM2_cast(itkLightObject obj) -> itkLabelSelectionLabelMapFilterLM2"""
    return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM2_cast(obj)

class itkLabelSelectionLabelMapFilterLM3(itkLabelSelectionLabelMapFilterLM3_Superclass):
    """Proxy of C++ itkLabelSelectionLabelMapFilterLM3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLabelSelectionLabelMapFilterLM3_Pointer":
        """__New_orig__() -> itkLabelSelectionLabelMapFilterLM3_Pointer"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLabelSelectionLabelMapFilterLM3_Pointer":
        """Clone(itkLabelSelectionLabelMapFilterLM3 self) -> itkLabelSelectionLabelMapFilterLM3_Pointer"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Clone(self)


    def GetLabelSet(self) -> "std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > const &":
        """GetLabelSet(itkLabelSelectionLabelMapFilterLM3 self) -> setUL"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_GetLabelSet(self)


    def SetLabelSet(self, set: 'setUL') -> "void":
        """SetLabelSet(itkLabelSelectionLabelMapFilterLM3 self, setUL set)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_SetLabelSet(self, set)


    def SetLabel(self, attr: 'unsigned long const &') -> "void":
        """SetLabel(itkLabelSelectionLabelMapFilterLM3 self, unsigned long const & attr)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_SetLabel(self, attr)


    def ClearLabelSet(self) -> "void":
        """ClearLabelSet(itkLabelSelectionLabelMapFilterLM3 self)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_ClearLabelSet(self)


    def AddLabel(self, attr: 'unsigned long const &') -> "void":
        """AddLabel(itkLabelSelectionLabelMapFilterLM3 self, unsigned long const & attr)"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_AddLabel(self, attr)

    __swig_destroy__ = _itkLabelSelectionLabelMapFilterPython.delete_itkLabelSelectionLabelMapFilterLM3

    def cast(obj: 'itkLightObject') -> "itkLabelSelectionLabelMapFilterLM3 *":
        """cast(itkLightObject obj) -> itkLabelSelectionLabelMapFilterLM3"""
        return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLabelSelectionLabelMapFilterLM3

        Create a new object of the class itkLabelSelectionLabelMapFilterLM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSelectionLabelMapFilterLM3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabelSelectionLabelMapFilterLM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabelSelectionLabelMapFilterLM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLabelSelectionLabelMapFilterLM3.Clone = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_Clone, None, itkLabelSelectionLabelMapFilterLM3)
itkLabelSelectionLabelMapFilterLM3.GetLabelSet = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_GetLabelSet, None, itkLabelSelectionLabelMapFilterLM3)
itkLabelSelectionLabelMapFilterLM3.SetLabelSet = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_SetLabelSet, None, itkLabelSelectionLabelMapFilterLM3)
itkLabelSelectionLabelMapFilterLM3.SetLabel = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_SetLabel, None, itkLabelSelectionLabelMapFilterLM3)
itkLabelSelectionLabelMapFilterLM3.ClearLabelSet = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_ClearLabelSet, None, itkLabelSelectionLabelMapFilterLM3)
itkLabelSelectionLabelMapFilterLM3.AddLabel = new_instancemethod(_itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_AddLabel, None, itkLabelSelectionLabelMapFilterLM3)
itkLabelSelectionLabelMapFilterLM3_swigregister = _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_swigregister
itkLabelSelectionLabelMapFilterLM3_swigregister(itkLabelSelectionLabelMapFilterLM3)

def itkLabelSelectionLabelMapFilterLM3___New_orig__() -> "itkLabelSelectionLabelMapFilterLM3_Pointer":
    """itkLabelSelectionLabelMapFilterLM3___New_orig__() -> itkLabelSelectionLabelMapFilterLM3_Pointer"""
    return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3___New_orig__()

def itkLabelSelectionLabelMapFilterLM3_cast(obj: 'itkLightObject') -> "itkLabelSelectionLabelMapFilterLM3 *":
    """itkLabelSelectionLabelMapFilterLM3_cast(itkLightObject obj) -> itkLabelSelectionLabelMapFilterLM3"""
    return _itkLabelSelectionLabelMapFilterPython.itkLabelSelectionLabelMapFilterLM3_cast(obj)


def attribute_selection_label_map_filter(*args, **kwargs):
    """Procedural interface for AttributeSelectionLabelMapFilter"""
    import itk
    instance = itk.AttributeSelectionLabelMapFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def attribute_selection_label_map_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.AttributeSelectionLabelMapFilter, itkTemplate.itkTemplate):
        attribute_selection_label_map_filter.__doc__ = itk.AttributeSelectionLabelMapFilter.values()[0].__doc__
    else:
        attribute_selection_label_map_filter.__doc__ = itk.AttributeSelectionLabelMapFilter.__doc__

def label_selection_label_map_filter(*args, **kwargs):
    """Procedural interface for LabelSelectionLabelMapFilter"""
    import itk
    instance = itk.LabelSelectionLabelMapFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def label_selection_label_map_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.LabelSelectionLabelMapFilter, itkTemplate.itkTemplate):
        label_selection_label_map_filter.__doc__ = itk.LabelSelectionLabelMapFilter.values()[0].__doc__
    else:
        label_selection_label_map_filter.__doc__ = itk.LabelSelectionLabelMapFilter.__doc__




