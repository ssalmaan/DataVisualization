# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkCollidingFrontsImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkCollidingFrontsImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkCollidingFrontsImageFilterPython
            return _itkCollidingFrontsImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkCollidingFrontsImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkCollidingFrontsImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkCollidingFrontsImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import ITKFastMarchingBasePython
import itkFastMarchingStoppingCriterionBasePython
import itkNodePairPython
import itkLevelSetNodePython

def itkCollidingFrontsImageFilterIF3IF3_New():
  return itkCollidingFrontsImageFilterIF3IF3.New()


def itkCollidingFrontsImageFilterIF2IF2_New():
  return itkCollidingFrontsImageFilterIF2IF2.New()

class itkCollidingFrontsImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkCollidingFrontsImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkCollidingFrontsImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkCollidingFrontsImageFilterIF2IF2_Pointer"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkCollidingFrontsImageFilterIF2IF2_Pointer":
        """Clone(itkCollidingFrontsImageFilterIF2IF2 self) -> itkCollidingFrontsImageFilterIF2IF2_Pointer"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_Clone(self)


    def SetSeedPoints1(self, points: 'itkVectorContainerUILSNF2') -> "void":
        """SetSeedPoints1(itkCollidingFrontsImageFilterIF2IF2 self, itkVectorContainerUILSNF2 points)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_SetSeedPoints1(self, points)


    def GetSeedPoints1(self) -> "itkVectorContainerUILSNF2_Pointer":
        """GetSeedPoints1(itkCollidingFrontsImageFilterIF2IF2 self) -> itkVectorContainerUILSNF2_Pointer"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_GetSeedPoints1(self)


    def SetSeedPoints2(self, points: 'itkVectorContainerUILSNF2') -> "void":
        """SetSeedPoints2(itkCollidingFrontsImageFilterIF2IF2 self, itkVectorContainerUILSNF2 points)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_SetSeedPoints2(self, points)


    def GetSeedPoints2(self) -> "itkVectorContainerUILSNF2_Pointer":
        """GetSeedPoints2(itkCollidingFrontsImageFilterIF2IF2 self) -> itkVectorContainerUILSNF2_Pointer"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_GetSeedPoints2(self)


    def SetNegativeEpsilon(self, _arg: 'double const') -> "void":
        """SetNegativeEpsilon(itkCollidingFrontsImageFilterIF2IF2 self, double const _arg)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_SetNegativeEpsilon(self, _arg)


    def GetNegativeEpsilon(self) -> "double":
        """GetNegativeEpsilon(itkCollidingFrontsImageFilterIF2IF2 self) -> double"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_GetNegativeEpsilon(self)


    def SetApplyConnectivity(self, _arg: 'bool const') -> "void":
        """SetApplyConnectivity(itkCollidingFrontsImageFilterIF2IF2 self, bool const _arg)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_SetApplyConnectivity(self, _arg)


    def GetApplyConnectivity(self) -> "bool":
        """GetApplyConnectivity(itkCollidingFrontsImageFilterIF2IF2 self) -> bool"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_GetApplyConnectivity(self)


    def ApplyConnectivityOn(self) -> "void":
        """ApplyConnectivityOn(itkCollidingFrontsImageFilterIF2IF2 self)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_ApplyConnectivityOn(self)


    def ApplyConnectivityOff(self) -> "void":
        """ApplyConnectivityOff(itkCollidingFrontsImageFilterIF2IF2 self)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_ApplyConnectivityOff(self)


    def SetStopOnTargets(self, _arg: 'bool const') -> "void":
        """SetStopOnTargets(itkCollidingFrontsImageFilterIF2IF2 self, bool const _arg)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_SetStopOnTargets(self, _arg)


    def GetStopOnTargets(self) -> "bool":
        """GetStopOnTargets(itkCollidingFrontsImageFilterIF2IF2 self) -> bool"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_GetStopOnTargets(self)


    def StopOnTargetsOn(self) -> "void":
        """StopOnTargetsOn(itkCollidingFrontsImageFilterIF2IF2 self)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_StopOnTargetsOn(self)


    def StopOnTargetsOff(self) -> "void":
        """StopOnTargetsOff(itkCollidingFrontsImageFilterIF2IF2 self)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_StopOnTargetsOff(self)

    InputHasNumericTraitsCheck = _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkCollidingFrontsImageFilterPython.delete_itkCollidingFrontsImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkCollidingFrontsImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkCollidingFrontsImageFilterIF2IF2"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkCollidingFrontsImageFilterIF2IF2

        Create a new object of the class itkCollidingFrontsImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCollidingFrontsImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkCollidingFrontsImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCollidingFrontsImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCollidingFrontsImageFilterIF2IF2.Clone = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_Clone, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.SetSeedPoints1 = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_SetSeedPoints1, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.GetSeedPoints1 = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_GetSeedPoints1, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.SetSeedPoints2 = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_SetSeedPoints2, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.GetSeedPoints2 = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_GetSeedPoints2, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.SetNegativeEpsilon = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_SetNegativeEpsilon, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.GetNegativeEpsilon = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_GetNegativeEpsilon, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.SetApplyConnectivity = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_SetApplyConnectivity, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.GetApplyConnectivity = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_GetApplyConnectivity, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.ApplyConnectivityOn = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_ApplyConnectivityOn, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.ApplyConnectivityOff = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_ApplyConnectivityOff, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.SetStopOnTargets = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_SetStopOnTargets, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.GetStopOnTargets = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_GetStopOnTargets, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.StopOnTargetsOn = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_StopOnTargetsOn, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2.StopOnTargetsOff = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_StopOnTargetsOff, None, itkCollidingFrontsImageFilterIF2IF2)
itkCollidingFrontsImageFilterIF2IF2_swigregister = _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_swigregister
itkCollidingFrontsImageFilterIF2IF2_swigregister(itkCollidingFrontsImageFilterIF2IF2)

def itkCollidingFrontsImageFilterIF2IF2___New_orig__() -> "itkCollidingFrontsImageFilterIF2IF2_Pointer":
    """itkCollidingFrontsImageFilterIF2IF2___New_orig__() -> itkCollidingFrontsImageFilterIF2IF2_Pointer"""
    return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2___New_orig__()

def itkCollidingFrontsImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkCollidingFrontsImageFilterIF2IF2 *":
    """itkCollidingFrontsImageFilterIF2IF2_cast(itkLightObject obj) -> itkCollidingFrontsImageFilterIF2IF2"""
    return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF2IF2_cast(obj)

class itkCollidingFrontsImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkCollidingFrontsImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkCollidingFrontsImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkCollidingFrontsImageFilterIF3IF3_Pointer"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkCollidingFrontsImageFilterIF3IF3_Pointer":
        """Clone(itkCollidingFrontsImageFilterIF3IF3 self) -> itkCollidingFrontsImageFilterIF3IF3_Pointer"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_Clone(self)


    def SetSeedPoints1(self, points: 'itkVectorContainerUILSNF3') -> "void":
        """SetSeedPoints1(itkCollidingFrontsImageFilterIF3IF3 self, itkVectorContainerUILSNF3 points)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_SetSeedPoints1(self, points)


    def GetSeedPoints1(self) -> "itkVectorContainerUILSNF3_Pointer":
        """GetSeedPoints1(itkCollidingFrontsImageFilterIF3IF3 self) -> itkVectorContainerUILSNF3_Pointer"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_GetSeedPoints1(self)


    def SetSeedPoints2(self, points: 'itkVectorContainerUILSNF3') -> "void":
        """SetSeedPoints2(itkCollidingFrontsImageFilterIF3IF3 self, itkVectorContainerUILSNF3 points)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_SetSeedPoints2(self, points)


    def GetSeedPoints2(self) -> "itkVectorContainerUILSNF3_Pointer":
        """GetSeedPoints2(itkCollidingFrontsImageFilterIF3IF3 self) -> itkVectorContainerUILSNF3_Pointer"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_GetSeedPoints2(self)


    def SetNegativeEpsilon(self, _arg: 'double const') -> "void":
        """SetNegativeEpsilon(itkCollidingFrontsImageFilterIF3IF3 self, double const _arg)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_SetNegativeEpsilon(self, _arg)


    def GetNegativeEpsilon(self) -> "double":
        """GetNegativeEpsilon(itkCollidingFrontsImageFilterIF3IF3 self) -> double"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_GetNegativeEpsilon(self)


    def SetApplyConnectivity(self, _arg: 'bool const') -> "void":
        """SetApplyConnectivity(itkCollidingFrontsImageFilterIF3IF3 self, bool const _arg)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_SetApplyConnectivity(self, _arg)


    def GetApplyConnectivity(self) -> "bool":
        """GetApplyConnectivity(itkCollidingFrontsImageFilterIF3IF3 self) -> bool"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_GetApplyConnectivity(self)


    def ApplyConnectivityOn(self) -> "void":
        """ApplyConnectivityOn(itkCollidingFrontsImageFilterIF3IF3 self)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_ApplyConnectivityOn(self)


    def ApplyConnectivityOff(self) -> "void":
        """ApplyConnectivityOff(itkCollidingFrontsImageFilterIF3IF3 self)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_ApplyConnectivityOff(self)


    def SetStopOnTargets(self, _arg: 'bool const') -> "void":
        """SetStopOnTargets(itkCollidingFrontsImageFilterIF3IF3 self, bool const _arg)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_SetStopOnTargets(self, _arg)


    def GetStopOnTargets(self) -> "bool":
        """GetStopOnTargets(itkCollidingFrontsImageFilterIF3IF3 self) -> bool"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_GetStopOnTargets(self)


    def StopOnTargetsOn(self) -> "void":
        """StopOnTargetsOn(itkCollidingFrontsImageFilterIF3IF3 self)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_StopOnTargetsOn(self)


    def StopOnTargetsOff(self) -> "void":
        """StopOnTargetsOff(itkCollidingFrontsImageFilterIF3IF3 self)"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_StopOnTargetsOff(self)

    InputHasNumericTraitsCheck = _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkCollidingFrontsImageFilterPython.delete_itkCollidingFrontsImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkCollidingFrontsImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkCollidingFrontsImageFilterIF3IF3"""
        return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkCollidingFrontsImageFilterIF3IF3

        Create a new object of the class itkCollidingFrontsImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCollidingFrontsImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkCollidingFrontsImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCollidingFrontsImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCollidingFrontsImageFilterIF3IF3.Clone = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_Clone, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.SetSeedPoints1 = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_SetSeedPoints1, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.GetSeedPoints1 = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_GetSeedPoints1, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.SetSeedPoints2 = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_SetSeedPoints2, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.GetSeedPoints2 = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_GetSeedPoints2, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.SetNegativeEpsilon = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_SetNegativeEpsilon, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.GetNegativeEpsilon = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_GetNegativeEpsilon, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.SetApplyConnectivity = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_SetApplyConnectivity, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.GetApplyConnectivity = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_GetApplyConnectivity, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.ApplyConnectivityOn = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_ApplyConnectivityOn, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.ApplyConnectivityOff = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_ApplyConnectivityOff, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.SetStopOnTargets = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_SetStopOnTargets, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.GetStopOnTargets = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_GetStopOnTargets, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.StopOnTargetsOn = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_StopOnTargetsOn, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3.StopOnTargetsOff = new_instancemethod(_itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_StopOnTargetsOff, None, itkCollidingFrontsImageFilterIF3IF3)
itkCollidingFrontsImageFilterIF3IF3_swigregister = _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_swigregister
itkCollidingFrontsImageFilterIF3IF3_swigregister(itkCollidingFrontsImageFilterIF3IF3)

def itkCollidingFrontsImageFilterIF3IF3___New_orig__() -> "itkCollidingFrontsImageFilterIF3IF3_Pointer":
    """itkCollidingFrontsImageFilterIF3IF3___New_orig__() -> itkCollidingFrontsImageFilterIF3IF3_Pointer"""
    return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3___New_orig__()

def itkCollidingFrontsImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkCollidingFrontsImageFilterIF3IF3 *":
    """itkCollidingFrontsImageFilterIF3IF3_cast(itkLightObject obj) -> itkCollidingFrontsImageFilterIF3IF3"""
    return _itkCollidingFrontsImageFilterPython.itkCollidingFrontsImageFilterIF3IF3_cast(obj)


def colliding_fronts_image_filter(*args, **kwargs):
    """Procedural interface for CollidingFrontsImageFilter"""
    import itk
    instance = itk.CollidingFrontsImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def colliding_fronts_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.CollidingFrontsImageFilter, itkTemplate.itkTemplate):
        colliding_fronts_image_filter.__doc__ = itk.CollidingFrontsImageFilter.values()[0].__doc__
    else:
        colliding_fronts_image_filter.__doc__ = itk.CollidingFrontsImageFilter.__doc__




