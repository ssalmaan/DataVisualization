# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkLaplacianRecursiveGaussianImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkLaplacianRecursiveGaussianImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkLaplacianRecursiveGaussianImageFilterPython
            return _itkLaplacianRecursiveGaussianImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkLaplacianRecursiveGaussianImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkLaplacianRecursiveGaussianImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkLaplacianRecursiveGaussianImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkLaplacianRecursiveGaussianImageFilterIF3IF3_New():
  return itkLaplacianRecursiveGaussianImageFilterIF3IF3.New()


def itkLaplacianRecursiveGaussianImageFilterIF2IF2_New():
  return itkLaplacianRecursiveGaussianImageFilterIF2IF2.New()


def itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_New():
  return itkLaplacianRecursiveGaussianImageFilterIUS3IUS3.New()


def itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_New():
  return itkLaplacianRecursiveGaussianImageFilterIUS2IUS2.New()


def itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_New():
  return itkLaplacianRecursiveGaussianImageFilterIUC3IUC3.New()


def itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_New():
  return itkLaplacianRecursiveGaussianImageFilterIUC2IUC2.New()


def itkLaplacianRecursiveGaussianImageFilterISS3ISS3_New():
  return itkLaplacianRecursiveGaussianImageFilterISS3ISS3.New()


def itkLaplacianRecursiveGaussianImageFilterISS2ISS2_New():
  return itkLaplacianRecursiveGaussianImageFilterISS2ISS2.New()

class itkLaplacianRecursiveGaussianImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkLaplacianRecursiveGaussianImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkLaplacianRecursiveGaussianImageFilterIF2IF2_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianRecursiveGaussianImageFilterIF2IF2_Pointer":
        """Clone(itkLaplacianRecursiveGaussianImageFilterIF2IF2 self) -> itkLaplacianRecursiveGaussianImageFilterIF2IF2_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkLaplacianRecursiveGaussianImageFilterIF2IF2 self, double sigma)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkLaplacianRecursiveGaussianImageFilterIF2IF2 self) -> double"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterIF2IF2 self, bool normalizeInScaleSpace)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterIF2IF2 self) -> bool"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkLaplacianRecursiveGaussianImageFilterPython.delete_itkLaplacianRecursiveGaussianImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterIF2IF2"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianRecursiveGaussianImageFilterIF2IF2

        Create a new object of the class itkLaplacianRecursiveGaussianImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianRecursiveGaussianImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianRecursiveGaussianImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianRecursiveGaussianImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianRecursiveGaussianImageFilterIF2IF2.Clone = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2_Clone, None, itkLaplacianRecursiveGaussianImageFilterIF2IF2)
itkLaplacianRecursiveGaussianImageFilterIF2IF2.SetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2_SetSigma, None, itkLaplacianRecursiveGaussianImageFilterIF2IF2)
itkLaplacianRecursiveGaussianImageFilterIF2IF2.GetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2_GetSigma, None, itkLaplacianRecursiveGaussianImageFilterIF2IF2)
itkLaplacianRecursiveGaussianImageFilterIF2IF2.SetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2_SetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterIF2IF2)
itkLaplacianRecursiveGaussianImageFilterIF2IF2.GetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2_GetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterIF2IF2)
itkLaplacianRecursiveGaussianImageFilterIF2IF2_swigregister = _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2_swigregister
itkLaplacianRecursiveGaussianImageFilterIF2IF2_swigregister(itkLaplacianRecursiveGaussianImageFilterIF2IF2)

def itkLaplacianRecursiveGaussianImageFilterIF2IF2___New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterIF2IF2_Pointer":
    """itkLaplacianRecursiveGaussianImageFilterIF2IF2___New_orig__() -> itkLaplacianRecursiveGaussianImageFilterIF2IF2_Pointer"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2___New_orig__()

def itkLaplacianRecursiveGaussianImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterIF2IF2 *":
    """itkLaplacianRecursiveGaussianImageFilterIF2IF2_cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterIF2IF2"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF2IF2_cast(obj)

class itkLaplacianRecursiveGaussianImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkLaplacianRecursiveGaussianImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkLaplacianRecursiveGaussianImageFilterIF3IF3_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianRecursiveGaussianImageFilterIF3IF3_Pointer":
        """Clone(itkLaplacianRecursiveGaussianImageFilterIF3IF3 self) -> itkLaplacianRecursiveGaussianImageFilterIF3IF3_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkLaplacianRecursiveGaussianImageFilterIF3IF3 self, double sigma)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkLaplacianRecursiveGaussianImageFilterIF3IF3 self) -> double"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterIF3IF3 self, bool normalizeInScaleSpace)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterIF3IF3 self) -> bool"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkLaplacianRecursiveGaussianImageFilterPython.delete_itkLaplacianRecursiveGaussianImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterIF3IF3"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianRecursiveGaussianImageFilterIF3IF3

        Create a new object of the class itkLaplacianRecursiveGaussianImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianRecursiveGaussianImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianRecursiveGaussianImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianRecursiveGaussianImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianRecursiveGaussianImageFilterIF3IF3.Clone = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3_Clone, None, itkLaplacianRecursiveGaussianImageFilterIF3IF3)
itkLaplacianRecursiveGaussianImageFilterIF3IF3.SetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3_SetSigma, None, itkLaplacianRecursiveGaussianImageFilterIF3IF3)
itkLaplacianRecursiveGaussianImageFilterIF3IF3.GetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3_GetSigma, None, itkLaplacianRecursiveGaussianImageFilterIF3IF3)
itkLaplacianRecursiveGaussianImageFilterIF3IF3.SetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3_SetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterIF3IF3)
itkLaplacianRecursiveGaussianImageFilterIF3IF3.GetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3_GetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterIF3IF3)
itkLaplacianRecursiveGaussianImageFilterIF3IF3_swigregister = _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3_swigregister
itkLaplacianRecursiveGaussianImageFilterIF3IF3_swigregister(itkLaplacianRecursiveGaussianImageFilterIF3IF3)

def itkLaplacianRecursiveGaussianImageFilterIF3IF3___New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterIF3IF3_Pointer":
    """itkLaplacianRecursiveGaussianImageFilterIF3IF3___New_orig__() -> itkLaplacianRecursiveGaussianImageFilterIF3IF3_Pointer"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3___New_orig__()

def itkLaplacianRecursiveGaussianImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterIF3IF3 *":
    """itkLaplacianRecursiveGaussianImageFilterIF3IF3_cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterIF3IF3"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIF3IF3_cast(obj)

class itkLaplacianRecursiveGaussianImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkLaplacianRecursiveGaussianImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkLaplacianRecursiveGaussianImageFilterISS2ISS2_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianRecursiveGaussianImageFilterISS2ISS2_Pointer":
        """Clone(itkLaplacianRecursiveGaussianImageFilterISS2ISS2 self) -> itkLaplacianRecursiveGaussianImageFilterISS2ISS2_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkLaplacianRecursiveGaussianImageFilterISS2ISS2 self, double sigma)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkLaplacianRecursiveGaussianImageFilterISS2ISS2 self) -> double"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterISS2ISS2 self, bool normalizeInScaleSpace)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterISS2ISS2 self) -> bool"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkLaplacianRecursiveGaussianImageFilterPython.delete_itkLaplacianRecursiveGaussianImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterISS2ISS2"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianRecursiveGaussianImageFilterISS2ISS2

        Create a new object of the class itkLaplacianRecursiveGaussianImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianRecursiveGaussianImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianRecursiveGaussianImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianRecursiveGaussianImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianRecursiveGaussianImageFilterISS2ISS2.Clone = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2_Clone, None, itkLaplacianRecursiveGaussianImageFilterISS2ISS2)
itkLaplacianRecursiveGaussianImageFilterISS2ISS2.SetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2_SetSigma, None, itkLaplacianRecursiveGaussianImageFilterISS2ISS2)
itkLaplacianRecursiveGaussianImageFilterISS2ISS2.GetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2_GetSigma, None, itkLaplacianRecursiveGaussianImageFilterISS2ISS2)
itkLaplacianRecursiveGaussianImageFilterISS2ISS2.SetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2_SetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterISS2ISS2)
itkLaplacianRecursiveGaussianImageFilterISS2ISS2.GetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2_GetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterISS2ISS2)
itkLaplacianRecursiveGaussianImageFilterISS2ISS2_swigregister = _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2_swigregister
itkLaplacianRecursiveGaussianImageFilterISS2ISS2_swigregister(itkLaplacianRecursiveGaussianImageFilterISS2ISS2)

def itkLaplacianRecursiveGaussianImageFilterISS2ISS2___New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterISS2ISS2_Pointer":
    """itkLaplacianRecursiveGaussianImageFilterISS2ISS2___New_orig__() -> itkLaplacianRecursiveGaussianImageFilterISS2ISS2_Pointer"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2___New_orig__()

def itkLaplacianRecursiveGaussianImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterISS2ISS2 *":
    """itkLaplacianRecursiveGaussianImageFilterISS2ISS2_cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterISS2ISS2"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS2ISS2_cast(obj)

class itkLaplacianRecursiveGaussianImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkLaplacianRecursiveGaussianImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkLaplacianRecursiveGaussianImageFilterISS3ISS3_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianRecursiveGaussianImageFilterISS3ISS3_Pointer":
        """Clone(itkLaplacianRecursiveGaussianImageFilterISS3ISS3 self) -> itkLaplacianRecursiveGaussianImageFilterISS3ISS3_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkLaplacianRecursiveGaussianImageFilterISS3ISS3 self, double sigma)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkLaplacianRecursiveGaussianImageFilterISS3ISS3 self) -> double"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterISS3ISS3 self, bool normalizeInScaleSpace)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterISS3ISS3 self) -> bool"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkLaplacianRecursiveGaussianImageFilterPython.delete_itkLaplacianRecursiveGaussianImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterISS3ISS3"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianRecursiveGaussianImageFilterISS3ISS3

        Create a new object of the class itkLaplacianRecursiveGaussianImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianRecursiveGaussianImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianRecursiveGaussianImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianRecursiveGaussianImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianRecursiveGaussianImageFilterISS3ISS3.Clone = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3_Clone, None, itkLaplacianRecursiveGaussianImageFilterISS3ISS3)
itkLaplacianRecursiveGaussianImageFilterISS3ISS3.SetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3_SetSigma, None, itkLaplacianRecursiveGaussianImageFilterISS3ISS3)
itkLaplacianRecursiveGaussianImageFilterISS3ISS3.GetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3_GetSigma, None, itkLaplacianRecursiveGaussianImageFilterISS3ISS3)
itkLaplacianRecursiveGaussianImageFilterISS3ISS3.SetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3_SetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterISS3ISS3)
itkLaplacianRecursiveGaussianImageFilterISS3ISS3.GetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3_GetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterISS3ISS3)
itkLaplacianRecursiveGaussianImageFilterISS3ISS3_swigregister = _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3_swigregister
itkLaplacianRecursiveGaussianImageFilterISS3ISS3_swigregister(itkLaplacianRecursiveGaussianImageFilterISS3ISS3)

def itkLaplacianRecursiveGaussianImageFilterISS3ISS3___New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterISS3ISS3_Pointer":
    """itkLaplacianRecursiveGaussianImageFilterISS3ISS3___New_orig__() -> itkLaplacianRecursiveGaussianImageFilterISS3ISS3_Pointer"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3___New_orig__()

def itkLaplacianRecursiveGaussianImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterISS3ISS3 *":
    """itkLaplacianRecursiveGaussianImageFilterISS3ISS3_cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterISS3ISS3"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterISS3ISS3_cast(obj)

class itkLaplacianRecursiveGaussianImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkLaplacianRecursiveGaussianImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_Pointer":
        """Clone(itkLaplacianRecursiveGaussianImageFilterIUC2IUC2 self) -> itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkLaplacianRecursiveGaussianImageFilterIUC2IUC2 self, double sigma)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkLaplacianRecursiveGaussianImageFilterIUC2IUC2 self) -> double"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterIUC2IUC2 self, bool normalizeInScaleSpace)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterIUC2IUC2 self) -> bool"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkLaplacianRecursiveGaussianImageFilterPython.delete_itkLaplacianRecursiveGaussianImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterIUC2IUC2"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianRecursiveGaussianImageFilterIUC2IUC2

        Create a new object of the class itkLaplacianRecursiveGaussianImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianRecursiveGaussianImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianRecursiveGaussianImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianRecursiveGaussianImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianRecursiveGaussianImageFilterIUC2IUC2.Clone = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_Clone, None, itkLaplacianRecursiveGaussianImageFilterIUC2IUC2)
itkLaplacianRecursiveGaussianImageFilterIUC2IUC2.SetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_SetSigma, None, itkLaplacianRecursiveGaussianImageFilterIUC2IUC2)
itkLaplacianRecursiveGaussianImageFilterIUC2IUC2.GetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_GetSigma, None, itkLaplacianRecursiveGaussianImageFilterIUC2IUC2)
itkLaplacianRecursiveGaussianImageFilterIUC2IUC2.SetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_SetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterIUC2IUC2)
itkLaplacianRecursiveGaussianImageFilterIUC2IUC2.GetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_GetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterIUC2IUC2)
itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_swigregister = _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_swigregister
itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_swigregister(itkLaplacianRecursiveGaussianImageFilterIUC2IUC2)

def itkLaplacianRecursiveGaussianImageFilterIUC2IUC2___New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_Pointer":
    """itkLaplacianRecursiveGaussianImageFilterIUC2IUC2___New_orig__() -> itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_Pointer"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2___New_orig__()

def itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterIUC2IUC2 *":
    """itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterIUC2IUC2"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC2IUC2_cast(obj)

class itkLaplacianRecursiveGaussianImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkLaplacianRecursiveGaussianImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_Pointer":
        """Clone(itkLaplacianRecursiveGaussianImageFilterIUC3IUC3 self) -> itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkLaplacianRecursiveGaussianImageFilterIUC3IUC3 self, double sigma)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkLaplacianRecursiveGaussianImageFilterIUC3IUC3 self) -> double"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterIUC3IUC3 self, bool normalizeInScaleSpace)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterIUC3IUC3 self) -> bool"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkLaplacianRecursiveGaussianImageFilterPython.delete_itkLaplacianRecursiveGaussianImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterIUC3IUC3"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianRecursiveGaussianImageFilterIUC3IUC3

        Create a new object of the class itkLaplacianRecursiveGaussianImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianRecursiveGaussianImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianRecursiveGaussianImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianRecursiveGaussianImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianRecursiveGaussianImageFilterIUC3IUC3.Clone = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_Clone, None, itkLaplacianRecursiveGaussianImageFilterIUC3IUC3)
itkLaplacianRecursiveGaussianImageFilterIUC3IUC3.SetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_SetSigma, None, itkLaplacianRecursiveGaussianImageFilterIUC3IUC3)
itkLaplacianRecursiveGaussianImageFilterIUC3IUC3.GetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_GetSigma, None, itkLaplacianRecursiveGaussianImageFilterIUC3IUC3)
itkLaplacianRecursiveGaussianImageFilterIUC3IUC3.SetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_SetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterIUC3IUC3)
itkLaplacianRecursiveGaussianImageFilterIUC3IUC3.GetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_GetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterIUC3IUC3)
itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_swigregister = _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_swigregister
itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_swigregister(itkLaplacianRecursiveGaussianImageFilterIUC3IUC3)

def itkLaplacianRecursiveGaussianImageFilterIUC3IUC3___New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_Pointer":
    """itkLaplacianRecursiveGaussianImageFilterIUC3IUC3___New_orig__() -> itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_Pointer"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3___New_orig__()

def itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterIUC3IUC3 *":
    """itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterIUC3IUC3"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUC3IUC3_cast(obj)

class itkLaplacianRecursiveGaussianImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkLaplacianRecursiveGaussianImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_Pointer":
        """Clone(itkLaplacianRecursiveGaussianImageFilterIUS2IUS2 self) -> itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkLaplacianRecursiveGaussianImageFilterIUS2IUS2 self, double sigma)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkLaplacianRecursiveGaussianImageFilterIUS2IUS2 self) -> double"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterIUS2IUS2 self, bool normalizeInScaleSpace)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterIUS2IUS2 self) -> bool"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkLaplacianRecursiveGaussianImageFilterPython.delete_itkLaplacianRecursiveGaussianImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterIUS2IUS2"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianRecursiveGaussianImageFilterIUS2IUS2

        Create a new object of the class itkLaplacianRecursiveGaussianImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianRecursiveGaussianImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianRecursiveGaussianImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianRecursiveGaussianImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianRecursiveGaussianImageFilterIUS2IUS2.Clone = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_Clone, None, itkLaplacianRecursiveGaussianImageFilterIUS2IUS2)
itkLaplacianRecursiveGaussianImageFilterIUS2IUS2.SetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_SetSigma, None, itkLaplacianRecursiveGaussianImageFilterIUS2IUS2)
itkLaplacianRecursiveGaussianImageFilterIUS2IUS2.GetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_GetSigma, None, itkLaplacianRecursiveGaussianImageFilterIUS2IUS2)
itkLaplacianRecursiveGaussianImageFilterIUS2IUS2.SetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_SetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterIUS2IUS2)
itkLaplacianRecursiveGaussianImageFilterIUS2IUS2.GetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_GetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterIUS2IUS2)
itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_swigregister = _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_swigregister
itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_swigregister(itkLaplacianRecursiveGaussianImageFilterIUS2IUS2)

def itkLaplacianRecursiveGaussianImageFilterIUS2IUS2___New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_Pointer":
    """itkLaplacianRecursiveGaussianImageFilterIUS2IUS2___New_orig__() -> itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_Pointer"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2___New_orig__()

def itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterIUS2IUS2 *":
    """itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterIUS2IUS2"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS2IUS2_cast(obj)

class itkLaplacianRecursiveGaussianImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkLaplacianRecursiveGaussianImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_Pointer":
        """Clone(itkLaplacianRecursiveGaussianImageFilterIUS3IUS3 self) -> itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_Pointer"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkLaplacianRecursiveGaussianImageFilterIUS3IUS3 self, double sigma)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkLaplacianRecursiveGaussianImageFilterIUS3IUS3 self) -> double"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterIUS3IUS3 self, bool normalizeInScaleSpace)"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkLaplacianRecursiveGaussianImageFilterIUS3IUS3 self) -> bool"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkLaplacianRecursiveGaussianImageFilterPython.delete_itkLaplacianRecursiveGaussianImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterIUS3IUS3"""
        return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianRecursiveGaussianImageFilterIUS3IUS3

        Create a new object of the class itkLaplacianRecursiveGaussianImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianRecursiveGaussianImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianRecursiveGaussianImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianRecursiveGaussianImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianRecursiveGaussianImageFilterIUS3IUS3.Clone = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_Clone, None, itkLaplacianRecursiveGaussianImageFilterIUS3IUS3)
itkLaplacianRecursiveGaussianImageFilterIUS3IUS3.SetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_SetSigma, None, itkLaplacianRecursiveGaussianImageFilterIUS3IUS3)
itkLaplacianRecursiveGaussianImageFilterIUS3IUS3.GetSigma = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_GetSigma, None, itkLaplacianRecursiveGaussianImageFilterIUS3IUS3)
itkLaplacianRecursiveGaussianImageFilterIUS3IUS3.SetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_SetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterIUS3IUS3)
itkLaplacianRecursiveGaussianImageFilterIUS3IUS3.GetNormalizeAcrossScale = new_instancemethod(_itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_GetNormalizeAcrossScale, None, itkLaplacianRecursiveGaussianImageFilterIUS3IUS3)
itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_swigregister = _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_swigregister
itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_swigregister(itkLaplacianRecursiveGaussianImageFilterIUS3IUS3)

def itkLaplacianRecursiveGaussianImageFilterIUS3IUS3___New_orig__() -> "itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_Pointer":
    """itkLaplacianRecursiveGaussianImageFilterIUS3IUS3___New_orig__() -> itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_Pointer"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3___New_orig__()

def itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkLaplacianRecursiveGaussianImageFilterIUS3IUS3 *":
    """itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkLaplacianRecursiveGaussianImageFilterIUS3IUS3"""
    return _itkLaplacianRecursiveGaussianImageFilterPython.itkLaplacianRecursiveGaussianImageFilterIUS3IUS3_cast(obj)


def laplacian_recursive_gaussian_image_filter(*args, **kwargs):
    """Procedural interface for LaplacianRecursiveGaussianImageFilter"""
    import itk
    instance = itk.LaplacianRecursiveGaussianImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def laplacian_recursive_gaussian_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.LaplacianRecursiveGaussianImageFilter, itkTemplate.itkTemplate):
        laplacian_recursive_gaussian_image_filter.__doc__ = itk.LaplacianRecursiveGaussianImageFilter.values()[0].__doc__
    else:
        laplacian_recursive_gaussian_image_filter.__doc__ = itk.LaplacianRecursiveGaussianImageFilter.__doc__




