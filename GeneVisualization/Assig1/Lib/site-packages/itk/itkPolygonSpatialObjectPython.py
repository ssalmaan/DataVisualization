# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkPolygonSpatialObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkPolygonSpatialObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkPolygonSpatialObjectPython
            return _itkPolygonSpatialObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkPolygonSpatialObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkPolygonSpatialObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkPolygonSpatialObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkPointBasedSpatialObjectPython
import itkSpatialObjectBasePython
import itkCovariantVectorPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkOffsetPython
import itkSizePython
import itkContinuousIndexPython
import itkIndexPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkImageRegionPython
import itkAffineTransformPython
import itkTransformBasePython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkSymmetricSecondRankTensorPython
import itkDiffusionTensor3DPython
import itkMatrixOffsetTransformBasePython
import itkSpatialObjectPointPython

def itkPolygonSpatialObject3_New():
  return itkPolygonSpatialObject3.New()


def itkPolygonSpatialObject2_New():
  return itkPolygonSpatialObject2.New()

class itkPolygonSpatialObject2(itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2):
    """Proxy of C++ itkPolygonSpatialObject2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPolygonSpatialObject2_Pointer":
        """__New_orig__() -> itkPolygonSpatialObject2_Pointer"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPolygonSpatialObject2_Pointer":
        """Clone(itkPolygonSpatialObject2 self) -> itkPolygonSpatialObject2_Pointer"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_Clone(self)


    def GetOrientationInObjectSpace(self) -> "int":
        """GetOrientationInObjectSpace(itkPolygonSpatialObject2 self) -> int"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_GetOrientationInObjectSpace(self)


    def SetThicknessInObjectSpace(self, _arg: 'double const') -> "void":
        """SetThicknessInObjectSpace(itkPolygonSpatialObject2 self, double const _arg)"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_SetThicknessInObjectSpace(self, _arg)


    def GetThicknessInObjectSpace(self) -> "double":
        """GetThicknessInObjectSpace(itkPolygonSpatialObject2 self) -> double"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_GetThicknessInObjectSpace(self)


    def SetIsClosed(self, _arg: 'bool const') -> "void":
        """SetIsClosed(itkPolygonSpatialObject2 self, bool const _arg)"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_SetIsClosed(self, _arg)


    def GetIsClosed(self) -> "bool":
        """GetIsClosed(itkPolygonSpatialObject2 self) -> bool"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_GetIsClosed(self)


    def MeasureAreaInObjectSpace(self) -> "double":
        """MeasureAreaInObjectSpace(itkPolygonSpatialObject2 self) -> double"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_MeasureAreaInObjectSpace(self)


    def MeasureVolumeInObjectSpace(self) -> "double":
        """MeasureVolumeInObjectSpace(itkPolygonSpatialObject2 self) -> double"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_MeasureVolumeInObjectSpace(self)


    def MeasurePerimeterInObjectSpace(self) -> "double":
        """MeasurePerimeterInObjectSpace(itkPolygonSpatialObject2 self) -> double"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_MeasurePerimeterInObjectSpace(self)

    __swig_destroy__ = _itkPolygonSpatialObjectPython.delete_itkPolygonSpatialObject2

    def cast(obj: 'itkLightObject') -> "itkPolygonSpatialObject2 *":
        """cast(itkLightObject obj) -> itkPolygonSpatialObject2"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPolygonSpatialObject2

        Create a new object of the class itkPolygonSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPolygonSpatialObject2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPolygonSpatialObject2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPolygonSpatialObject2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPolygonSpatialObject2.Clone = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_Clone, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.GetOrientationInObjectSpace = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_GetOrientationInObjectSpace, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.SetThicknessInObjectSpace = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_SetThicknessInObjectSpace, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.GetThicknessInObjectSpace = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_GetThicknessInObjectSpace, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.SetIsClosed = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_SetIsClosed, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.GetIsClosed = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_GetIsClosed, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.MeasureAreaInObjectSpace = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_MeasureAreaInObjectSpace, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.MeasureVolumeInObjectSpace = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_MeasureVolumeInObjectSpace, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.MeasurePerimeterInObjectSpace = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_MeasurePerimeterInObjectSpace, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2_swigregister = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_swigregister
itkPolygonSpatialObject2_swigregister(itkPolygonSpatialObject2)

def itkPolygonSpatialObject2___New_orig__() -> "itkPolygonSpatialObject2_Pointer":
    """itkPolygonSpatialObject2___New_orig__() -> itkPolygonSpatialObject2_Pointer"""
    return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2___New_orig__()

def itkPolygonSpatialObject2_cast(obj: 'itkLightObject') -> "itkPolygonSpatialObject2 *":
    """itkPolygonSpatialObject2_cast(itkLightObject obj) -> itkPolygonSpatialObject2"""
    return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_cast(obj)

class itkPolygonSpatialObject3(itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3):
    """Proxy of C++ itkPolygonSpatialObject3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPolygonSpatialObject3_Pointer":
        """__New_orig__() -> itkPolygonSpatialObject3_Pointer"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPolygonSpatialObject3_Pointer":
        """Clone(itkPolygonSpatialObject3 self) -> itkPolygonSpatialObject3_Pointer"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_Clone(self)


    def GetOrientationInObjectSpace(self) -> "int":
        """GetOrientationInObjectSpace(itkPolygonSpatialObject3 self) -> int"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_GetOrientationInObjectSpace(self)


    def SetThicknessInObjectSpace(self, _arg: 'double const') -> "void":
        """SetThicknessInObjectSpace(itkPolygonSpatialObject3 self, double const _arg)"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_SetThicknessInObjectSpace(self, _arg)


    def GetThicknessInObjectSpace(self) -> "double":
        """GetThicknessInObjectSpace(itkPolygonSpatialObject3 self) -> double"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_GetThicknessInObjectSpace(self)


    def SetIsClosed(self, _arg: 'bool const') -> "void":
        """SetIsClosed(itkPolygonSpatialObject3 self, bool const _arg)"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_SetIsClosed(self, _arg)


    def GetIsClosed(self) -> "bool":
        """GetIsClosed(itkPolygonSpatialObject3 self) -> bool"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_GetIsClosed(self)


    def MeasureAreaInObjectSpace(self) -> "double":
        """MeasureAreaInObjectSpace(itkPolygonSpatialObject3 self) -> double"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_MeasureAreaInObjectSpace(self)


    def MeasureVolumeInObjectSpace(self) -> "double":
        """MeasureVolumeInObjectSpace(itkPolygonSpatialObject3 self) -> double"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_MeasureVolumeInObjectSpace(self)


    def MeasurePerimeterInObjectSpace(self) -> "double":
        """MeasurePerimeterInObjectSpace(itkPolygonSpatialObject3 self) -> double"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_MeasurePerimeterInObjectSpace(self)

    __swig_destroy__ = _itkPolygonSpatialObjectPython.delete_itkPolygonSpatialObject3

    def cast(obj: 'itkLightObject') -> "itkPolygonSpatialObject3 *":
        """cast(itkLightObject obj) -> itkPolygonSpatialObject3"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPolygonSpatialObject3

        Create a new object of the class itkPolygonSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPolygonSpatialObject3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPolygonSpatialObject3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPolygonSpatialObject3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPolygonSpatialObject3.Clone = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_Clone, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.GetOrientationInObjectSpace = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_GetOrientationInObjectSpace, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.SetThicknessInObjectSpace = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_SetThicknessInObjectSpace, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.GetThicknessInObjectSpace = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_GetThicknessInObjectSpace, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.SetIsClosed = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_SetIsClosed, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.GetIsClosed = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_GetIsClosed, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.MeasureAreaInObjectSpace = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_MeasureAreaInObjectSpace, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.MeasureVolumeInObjectSpace = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_MeasureVolumeInObjectSpace, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.MeasurePerimeterInObjectSpace = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_MeasurePerimeterInObjectSpace, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3_swigregister = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_swigregister
itkPolygonSpatialObject3_swigregister(itkPolygonSpatialObject3)

def itkPolygonSpatialObject3___New_orig__() -> "itkPolygonSpatialObject3_Pointer":
    """itkPolygonSpatialObject3___New_orig__() -> itkPolygonSpatialObject3_Pointer"""
    return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3___New_orig__()

def itkPolygonSpatialObject3_cast(obj: 'itkLightObject') -> "itkPolygonSpatialObject3 *":
    """itkPolygonSpatialObject3_cast(itkLightObject obj) -> itkPolygonSpatialObject3"""
    return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_cast(obj)



