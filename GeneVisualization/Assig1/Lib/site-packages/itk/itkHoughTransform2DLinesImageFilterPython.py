# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkHoughTransform2DLinesImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkHoughTransform2DLinesImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkHoughTransform2DLinesImageFilterPython
            return _itkHoughTransform2DLinesImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkHoughTransform2DLinesImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkHoughTransform2DLinesImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkHoughTransform2DLinesImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkLineSpatialObjectPython
import itkSpatialObjectBasePython
import itkSpatialObjectPropertyPython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkAffineTransformPython
import itkTransformBasePython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkDiffusionTensor3DPython
import itkMatrixOffsetTransformBasePython
import itkLineSpatialObjectPointPython
import itkSpatialObjectPointPython

def itkHoughTransform2DLinesImageFilterFF_New():
  return itkHoughTransform2DLinesImageFilterFF.New()

class itkHoughTransform2DLinesImageFilterFF(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkHoughTransform2DLinesImageFilterFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHoughTransform2DLinesImageFilterFF_Pointer":
        """__New_orig__() -> itkHoughTransform2DLinesImageFilterFF_Pointer"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHoughTransform2DLinesImageFilterFF_Pointer":
        """Clone(itkHoughTransform2DLinesImageFilterFF self) -> itkHoughTransform2DLinesImageFilterFF_Pointer"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_Clone(self)


    def GenerateData(self) -> "void":
        """GenerateData(itkHoughTransform2DLinesImageFilterFF self)"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GenerateData(self)


    def SetThreshold(self, _arg: 'double const') -> "void":
        """SetThreshold(itkHoughTransform2DLinesImageFilterFF self, double const _arg)"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetThreshold(self, _arg)


    def GetThreshold(self) -> "double":
        """GetThreshold(itkHoughTransform2DLinesImageFilterFF self) -> double"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetThreshold(self)


    def SetAngleResolution(self, _arg: 'double const') -> "void":
        """SetAngleResolution(itkHoughTransform2DLinesImageFilterFF self, double const _arg)"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetAngleResolution(self, _arg)


    def GetAngleResolution(self) -> "double":
        """GetAngleResolution(itkHoughTransform2DLinesImageFilterFF self) -> double"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetAngleResolution(self)


    def Simplify(self) -> "void":
        """Simplify(itkHoughTransform2DLinesImageFilterFF self)"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_Simplify(self)


    def GetModifiableSimplifyAccumulator(self) -> "itkImageF2 *":
        """GetModifiableSimplifyAccumulator(itkHoughTransform2DLinesImageFilterFF self) -> itkImageF2"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetModifiableSimplifyAccumulator(self)


    def GetSimplifyAccumulator(self, *args) -> "itkImageF2 *":
        """
        GetSimplifyAccumulator(itkHoughTransform2DLinesImageFilterFF self) -> itkImageF2
        GetSimplifyAccumulator(itkHoughTransform2DLinesImageFilterFF self) -> itkImageF2
        """
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetSimplifyAccumulator(self, *args)


    def GetLines(self) -> "std::list< itkLineSpatialObject2_Pointer,std::allocator< itkLineSpatialObject2_Pointer > > &":
        """GetLines(itkHoughTransform2DLinesImageFilterFF self) -> listitkLineSpatialObject2_Pointer"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetLines(self)


    def SetNumberOfLines(self, _arg: 'unsigned long long const') -> "void":
        """SetNumberOfLines(itkHoughTransform2DLinesImageFilterFF self, unsigned long long const _arg)"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetNumberOfLines(self, _arg)


    def GetNumberOfLines(self) -> "unsigned long long":
        """GetNumberOfLines(itkHoughTransform2DLinesImageFilterFF self) -> unsigned long long"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetNumberOfLines(self)


    def SetDiscRadius(self, _arg: 'double const') -> "void":
        """SetDiscRadius(itkHoughTransform2DLinesImageFilterFF self, double const _arg)"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetDiscRadius(self, _arg)


    def GetDiscRadius(self) -> "double":
        """GetDiscRadius(itkHoughTransform2DLinesImageFilterFF self) -> double"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetDiscRadius(self)


    def SetVariance(self, _arg: 'double const') -> "void":
        """SetVariance(itkHoughTransform2DLinesImageFilterFF self, double const _arg)"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetVariance(self, _arg)


    def GetVariance(self) -> "double":
        """GetVariance(itkHoughTransform2DLinesImageFilterFF self) -> double"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetVariance(self)

    IntConvertibleToOutputCheck = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_IntConvertibleToOutputCheck
    InputGreaterThanFloatCheck = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_InputGreaterThanFloatCheck
    OutputPlusIntCheck = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_OutputPlusIntCheck
    __swig_destroy__ = _itkHoughTransform2DLinesImageFilterPython.delete_itkHoughTransform2DLinesImageFilterFF

    def cast(obj: 'itkLightObject') -> "itkHoughTransform2DLinesImageFilterFF *":
        """cast(itkLightObject obj) -> itkHoughTransform2DLinesImageFilterFF"""
        return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHoughTransform2DLinesImageFilterFF

        Create a new object of the class itkHoughTransform2DLinesImageFilterFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DLinesImageFilterFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DLinesImageFilterFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHoughTransform2DLinesImageFilterFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHoughTransform2DLinesImageFilterFF.Clone = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_Clone, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.GenerateData = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GenerateData, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.SetThreshold = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetThreshold, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.GetThreshold = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetThreshold, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.SetAngleResolution = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetAngleResolution, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.GetAngleResolution = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetAngleResolution, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.Simplify = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_Simplify, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.GetModifiableSimplifyAccumulator = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetModifiableSimplifyAccumulator, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.GetSimplifyAccumulator = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetSimplifyAccumulator, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.GetLines = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetLines, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.SetNumberOfLines = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetNumberOfLines, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.GetNumberOfLines = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetNumberOfLines, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.SetDiscRadius = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetDiscRadius, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.GetDiscRadius = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetDiscRadius, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.SetVariance = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetVariance, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF.GetVariance = new_instancemethod(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetVariance, None, itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF_swigregister = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_swigregister
itkHoughTransform2DLinesImageFilterFF_swigregister(itkHoughTransform2DLinesImageFilterFF)

def itkHoughTransform2DLinesImageFilterFF___New_orig__() -> "itkHoughTransform2DLinesImageFilterFF_Pointer":
    """itkHoughTransform2DLinesImageFilterFF___New_orig__() -> itkHoughTransform2DLinesImageFilterFF_Pointer"""
    return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF___New_orig__()

def itkHoughTransform2DLinesImageFilterFF_cast(obj: 'itkLightObject') -> "itkHoughTransform2DLinesImageFilterFF *":
    """itkHoughTransform2DLinesImageFilterFF_cast(itkLightObject obj) -> itkHoughTransform2DLinesImageFilterFF"""
    return _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_cast(obj)


def hough_transform2_d_lines_image_filter(*args, **kwargs):
    """Procedural interface for HoughTransform2DLinesImageFilter"""
    import itk
    instance = itk.HoughTransform2DLinesImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def hough_transform2_d_lines_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.HoughTransform2DLinesImageFilter, itkTemplate.itkTemplate):
        hough_transform2_d_lines_image_filter.__doc__ = itk.HoughTransform2DLinesImageFilter.values()[0].__doc__
    else:
        hough_transform2_d_lines_image_filter.__doc__ = itk.HoughTransform2DLinesImageFilter.__doc__




