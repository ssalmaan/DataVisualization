# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkScalarImageToHistogramGeneratorPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkScalarImageToHistogramGeneratorPython', [dirname(__file__)])
        except ImportError:
            import _itkScalarImageToHistogramGeneratorPython
            return _itkScalarImageToHistogramGeneratorPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkScalarImageToHistogramGeneratorPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkScalarImageToHistogramGeneratorPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkScalarImageToHistogramGeneratorPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramPython
import itkSamplePython
import ITKCommonBasePython
import pyBasePython
import itkArrayPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython

def itkScalarImageToHistogramGeneratorIF3_New():
  return itkScalarImageToHistogramGeneratorIF3.New()


def itkScalarImageToHistogramGeneratorIF2_New():
  return itkScalarImageToHistogramGeneratorIF2.New()


def itkScalarImageToHistogramGeneratorIUS3_New():
  return itkScalarImageToHistogramGeneratorIUS3.New()


def itkScalarImageToHistogramGeneratorIUS2_New():
  return itkScalarImageToHistogramGeneratorIUS2.New()


def itkScalarImageToHistogramGeneratorIUC3_New():
  return itkScalarImageToHistogramGeneratorIUC3.New()


def itkScalarImageToHistogramGeneratorIUC2_New():
  return itkScalarImageToHistogramGeneratorIUC2.New()


def itkScalarImageToHistogramGeneratorISS3_New():
  return itkScalarImageToHistogramGeneratorISS3.New()


def itkScalarImageToHistogramGeneratorISS2_New():
  return itkScalarImageToHistogramGeneratorISS2.New()

class itkScalarImageToHistogramGeneratorIF2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkScalarImageToHistogramGeneratorIF2_Pointer":
        """__New_orig__() -> itkScalarImageToHistogramGeneratorIF2_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkScalarImageToHistogramGeneratorIF2_Pointer":
        """Clone(itkScalarImageToHistogramGeneratorIF2 self) -> itkScalarImageToHistogramGeneratorIF2_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_Clone(self)


    def Compute(self) -> "void":
        """Compute(itkScalarImageToHistogramGeneratorIF2 self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_Compute(self)


    def SetInput(self, arg0: 'itkImageF2') -> "void":
        """SetInput(itkScalarImageToHistogramGeneratorIF2 self, itkImageF2 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetInput(self, arg0)


    def GetOutput(self) -> "itkHistogramD const *":
        """GetOutput(itkScalarImageToHistogramGeneratorIF2 self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_GetOutput(self)


    def SetNumberOfBins(self, numberOfBins: 'unsigned int') -> "void":
        """SetNumberOfBins(itkScalarImageToHistogramGeneratorIF2 self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetNumberOfBins(self, numberOfBins)


    def SetMarginalScale(self, marginalScale: 'double') -> "void":
        """SetMarginalScale(itkScalarImageToHistogramGeneratorIF2 self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetMarginalScale(self, marginalScale)


    def SetHistogramMin(self, minimumValue: 'double') -> "void":
        """SetHistogramMin(itkScalarImageToHistogramGeneratorIF2 self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetHistogramMin(self, minimumValue)


    def SetHistogramMax(self, maximumValue: 'double') -> "void":
        """SetHistogramMax(itkScalarImageToHistogramGeneratorIF2 self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetHistogramMax(self, maximumValue)


    def SetAutoHistogramMinimumMaximum(self, autoOnOff: 'bool') -> "void":
        """SetAutoHistogramMinimumMaximum(itkScalarImageToHistogramGeneratorIF2 self, bool autoOnOff)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetAutoHistogramMinimumMaximum(self, autoOnOff)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIF2

    def cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorIF2 *":
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIF2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIF2

        Create a new object of the class itkScalarImageToHistogramGeneratorIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIF2.Clone = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_Clone, None, itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_Compute, None, itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetInput, None, itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_GetOutput, None, itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetNumberOfBins, None, itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetMarginalScale, None, itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetHistogramMin, None, itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetHistogramMax, None, itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.SetAutoHistogramMinimumMaximum = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetAutoHistogramMinimumMaximum, None, itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_swigregister
itkScalarImageToHistogramGeneratorIF2_swigregister(itkScalarImageToHistogramGeneratorIF2)

def itkScalarImageToHistogramGeneratorIF2___New_orig__() -> "itkScalarImageToHistogramGeneratorIF2_Pointer":
    """itkScalarImageToHistogramGeneratorIF2___New_orig__() -> itkScalarImageToHistogramGeneratorIF2_Pointer"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2___New_orig__()

def itkScalarImageToHistogramGeneratorIF2_cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorIF2 *":
    """itkScalarImageToHistogramGeneratorIF2_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIF2"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_cast(obj)

class itkScalarImageToHistogramGeneratorIF3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkScalarImageToHistogramGeneratorIF3_Pointer":
        """__New_orig__() -> itkScalarImageToHistogramGeneratorIF3_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkScalarImageToHistogramGeneratorIF3_Pointer":
        """Clone(itkScalarImageToHistogramGeneratorIF3 self) -> itkScalarImageToHistogramGeneratorIF3_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_Clone(self)


    def Compute(self) -> "void":
        """Compute(itkScalarImageToHistogramGeneratorIF3 self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_Compute(self)


    def SetInput(self, arg0: 'itkImageF3') -> "void":
        """SetInput(itkScalarImageToHistogramGeneratorIF3 self, itkImageF3 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetInput(self, arg0)


    def GetOutput(self) -> "itkHistogramD const *":
        """GetOutput(itkScalarImageToHistogramGeneratorIF3 self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_GetOutput(self)


    def SetNumberOfBins(self, numberOfBins: 'unsigned int') -> "void":
        """SetNumberOfBins(itkScalarImageToHistogramGeneratorIF3 self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetNumberOfBins(self, numberOfBins)


    def SetMarginalScale(self, marginalScale: 'double') -> "void":
        """SetMarginalScale(itkScalarImageToHistogramGeneratorIF3 self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetMarginalScale(self, marginalScale)


    def SetHistogramMin(self, minimumValue: 'double') -> "void":
        """SetHistogramMin(itkScalarImageToHistogramGeneratorIF3 self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetHistogramMin(self, minimumValue)


    def SetHistogramMax(self, maximumValue: 'double') -> "void":
        """SetHistogramMax(itkScalarImageToHistogramGeneratorIF3 self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetHistogramMax(self, maximumValue)


    def SetAutoHistogramMinimumMaximum(self, autoOnOff: 'bool') -> "void":
        """SetAutoHistogramMinimumMaximum(itkScalarImageToHistogramGeneratorIF3 self, bool autoOnOff)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetAutoHistogramMinimumMaximum(self, autoOnOff)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIF3

    def cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorIF3 *":
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIF3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIF3

        Create a new object of the class itkScalarImageToHistogramGeneratorIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIF3.Clone = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_Clone, None, itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_Compute, None, itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetInput, None, itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_GetOutput, None, itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetNumberOfBins, None, itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetMarginalScale, None, itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetHistogramMin, None, itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetHistogramMax, None, itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.SetAutoHistogramMinimumMaximum = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetAutoHistogramMinimumMaximum, None, itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_swigregister
itkScalarImageToHistogramGeneratorIF3_swigregister(itkScalarImageToHistogramGeneratorIF3)

def itkScalarImageToHistogramGeneratorIF3___New_orig__() -> "itkScalarImageToHistogramGeneratorIF3_Pointer":
    """itkScalarImageToHistogramGeneratorIF3___New_orig__() -> itkScalarImageToHistogramGeneratorIF3_Pointer"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3___New_orig__()

def itkScalarImageToHistogramGeneratorIF3_cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorIF3 *":
    """itkScalarImageToHistogramGeneratorIF3_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIF3"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_cast(obj)

class itkScalarImageToHistogramGeneratorISS2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkScalarImageToHistogramGeneratorISS2_Pointer":
        """__New_orig__() -> itkScalarImageToHistogramGeneratorISS2_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkScalarImageToHistogramGeneratorISS2_Pointer":
        """Clone(itkScalarImageToHistogramGeneratorISS2 self) -> itkScalarImageToHistogramGeneratorISS2_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_Clone(self)


    def Compute(self) -> "void":
        """Compute(itkScalarImageToHistogramGeneratorISS2 self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_Compute(self)


    def SetInput(self, arg0: 'itkImageSS2') -> "void":
        """SetInput(itkScalarImageToHistogramGeneratorISS2 self, itkImageSS2 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetInput(self, arg0)


    def GetOutput(self) -> "itkHistogramD const *":
        """GetOutput(itkScalarImageToHistogramGeneratorISS2 self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_GetOutput(self)


    def SetNumberOfBins(self, numberOfBins: 'unsigned int') -> "void":
        """SetNumberOfBins(itkScalarImageToHistogramGeneratorISS2 self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetNumberOfBins(self, numberOfBins)


    def SetMarginalScale(self, marginalScale: 'double') -> "void":
        """SetMarginalScale(itkScalarImageToHistogramGeneratorISS2 self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetMarginalScale(self, marginalScale)


    def SetHistogramMin(self, minimumValue: 'double') -> "void":
        """SetHistogramMin(itkScalarImageToHistogramGeneratorISS2 self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetHistogramMin(self, minimumValue)


    def SetHistogramMax(self, maximumValue: 'double') -> "void":
        """SetHistogramMax(itkScalarImageToHistogramGeneratorISS2 self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetHistogramMax(self, maximumValue)


    def SetAutoHistogramMinimumMaximum(self, autoOnOff: 'bool') -> "void":
        """SetAutoHistogramMinimumMaximum(itkScalarImageToHistogramGeneratorISS2 self, bool autoOnOff)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetAutoHistogramMinimumMaximum(self, autoOnOff)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorISS2

    def cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorISS2 *":
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorISS2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorISS2

        Create a new object of the class itkScalarImageToHistogramGeneratorISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorISS2.Clone = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_Clone, None, itkScalarImageToHistogramGeneratorISS2)
itkScalarImageToHistogramGeneratorISS2.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_Compute, None, itkScalarImageToHistogramGeneratorISS2)
itkScalarImageToHistogramGeneratorISS2.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetInput, None, itkScalarImageToHistogramGeneratorISS2)
itkScalarImageToHistogramGeneratorISS2.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_GetOutput, None, itkScalarImageToHistogramGeneratorISS2)
itkScalarImageToHistogramGeneratorISS2.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetNumberOfBins, None, itkScalarImageToHistogramGeneratorISS2)
itkScalarImageToHistogramGeneratorISS2.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetMarginalScale, None, itkScalarImageToHistogramGeneratorISS2)
itkScalarImageToHistogramGeneratorISS2.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetHistogramMin, None, itkScalarImageToHistogramGeneratorISS2)
itkScalarImageToHistogramGeneratorISS2.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetHistogramMax, None, itkScalarImageToHistogramGeneratorISS2)
itkScalarImageToHistogramGeneratorISS2.SetAutoHistogramMinimumMaximum = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetAutoHistogramMinimumMaximum, None, itkScalarImageToHistogramGeneratorISS2)
itkScalarImageToHistogramGeneratorISS2_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_swigregister
itkScalarImageToHistogramGeneratorISS2_swigregister(itkScalarImageToHistogramGeneratorISS2)

def itkScalarImageToHistogramGeneratorISS2___New_orig__() -> "itkScalarImageToHistogramGeneratorISS2_Pointer":
    """itkScalarImageToHistogramGeneratorISS2___New_orig__() -> itkScalarImageToHistogramGeneratorISS2_Pointer"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2___New_orig__()

def itkScalarImageToHistogramGeneratorISS2_cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorISS2 *":
    """itkScalarImageToHistogramGeneratorISS2_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorISS2"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_cast(obj)

class itkScalarImageToHistogramGeneratorISS3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkScalarImageToHistogramGeneratorISS3_Pointer":
        """__New_orig__() -> itkScalarImageToHistogramGeneratorISS3_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkScalarImageToHistogramGeneratorISS3_Pointer":
        """Clone(itkScalarImageToHistogramGeneratorISS3 self) -> itkScalarImageToHistogramGeneratorISS3_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_Clone(self)


    def Compute(self) -> "void":
        """Compute(itkScalarImageToHistogramGeneratorISS3 self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_Compute(self)


    def SetInput(self, arg0: 'itkImageSS3') -> "void":
        """SetInput(itkScalarImageToHistogramGeneratorISS3 self, itkImageSS3 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetInput(self, arg0)


    def GetOutput(self) -> "itkHistogramD const *":
        """GetOutput(itkScalarImageToHistogramGeneratorISS3 self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_GetOutput(self)


    def SetNumberOfBins(self, numberOfBins: 'unsigned int') -> "void":
        """SetNumberOfBins(itkScalarImageToHistogramGeneratorISS3 self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetNumberOfBins(self, numberOfBins)


    def SetMarginalScale(self, marginalScale: 'double') -> "void":
        """SetMarginalScale(itkScalarImageToHistogramGeneratorISS3 self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetMarginalScale(self, marginalScale)


    def SetHistogramMin(self, minimumValue: 'double') -> "void":
        """SetHistogramMin(itkScalarImageToHistogramGeneratorISS3 self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetHistogramMin(self, minimumValue)


    def SetHistogramMax(self, maximumValue: 'double') -> "void":
        """SetHistogramMax(itkScalarImageToHistogramGeneratorISS3 self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetHistogramMax(self, maximumValue)


    def SetAutoHistogramMinimumMaximum(self, autoOnOff: 'bool') -> "void":
        """SetAutoHistogramMinimumMaximum(itkScalarImageToHistogramGeneratorISS3 self, bool autoOnOff)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetAutoHistogramMinimumMaximum(self, autoOnOff)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorISS3

    def cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorISS3 *":
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorISS3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorISS3

        Create a new object of the class itkScalarImageToHistogramGeneratorISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorISS3.Clone = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_Clone, None, itkScalarImageToHistogramGeneratorISS3)
itkScalarImageToHistogramGeneratorISS3.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_Compute, None, itkScalarImageToHistogramGeneratorISS3)
itkScalarImageToHistogramGeneratorISS3.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetInput, None, itkScalarImageToHistogramGeneratorISS3)
itkScalarImageToHistogramGeneratorISS3.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_GetOutput, None, itkScalarImageToHistogramGeneratorISS3)
itkScalarImageToHistogramGeneratorISS3.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetNumberOfBins, None, itkScalarImageToHistogramGeneratorISS3)
itkScalarImageToHistogramGeneratorISS3.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetMarginalScale, None, itkScalarImageToHistogramGeneratorISS3)
itkScalarImageToHistogramGeneratorISS3.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetHistogramMin, None, itkScalarImageToHistogramGeneratorISS3)
itkScalarImageToHistogramGeneratorISS3.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetHistogramMax, None, itkScalarImageToHistogramGeneratorISS3)
itkScalarImageToHistogramGeneratorISS3.SetAutoHistogramMinimumMaximum = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetAutoHistogramMinimumMaximum, None, itkScalarImageToHistogramGeneratorISS3)
itkScalarImageToHistogramGeneratorISS3_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_swigregister
itkScalarImageToHistogramGeneratorISS3_swigregister(itkScalarImageToHistogramGeneratorISS3)

def itkScalarImageToHistogramGeneratorISS3___New_orig__() -> "itkScalarImageToHistogramGeneratorISS3_Pointer":
    """itkScalarImageToHistogramGeneratorISS3___New_orig__() -> itkScalarImageToHistogramGeneratorISS3_Pointer"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3___New_orig__()

def itkScalarImageToHistogramGeneratorISS3_cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorISS3 *":
    """itkScalarImageToHistogramGeneratorISS3_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorISS3"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_cast(obj)

class itkScalarImageToHistogramGeneratorIUC2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkScalarImageToHistogramGeneratorIUC2_Pointer":
        """__New_orig__() -> itkScalarImageToHistogramGeneratorIUC2_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkScalarImageToHistogramGeneratorIUC2_Pointer":
        """Clone(itkScalarImageToHistogramGeneratorIUC2 self) -> itkScalarImageToHistogramGeneratorIUC2_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_Clone(self)


    def Compute(self) -> "void":
        """Compute(itkScalarImageToHistogramGeneratorIUC2 self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_Compute(self)


    def SetInput(self, arg0: 'itkImageUC2') -> "void":
        """SetInput(itkScalarImageToHistogramGeneratorIUC2 self, itkImageUC2 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetInput(self, arg0)


    def GetOutput(self) -> "itkHistogramD const *":
        """GetOutput(itkScalarImageToHistogramGeneratorIUC2 self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_GetOutput(self)


    def SetNumberOfBins(self, numberOfBins: 'unsigned int') -> "void":
        """SetNumberOfBins(itkScalarImageToHistogramGeneratorIUC2 self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetNumberOfBins(self, numberOfBins)


    def SetMarginalScale(self, marginalScale: 'double') -> "void":
        """SetMarginalScale(itkScalarImageToHistogramGeneratorIUC2 self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetMarginalScale(self, marginalScale)


    def SetHistogramMin(self, minimumValue: 'double') -> "void":
        """SetHistogramMin(itkScalarImageToHistogramGeneratorIUC2 self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetHistogramMin(self, minimumValue)


    def SetHistogramMax(self, maximumValue: 'double') -> "void":
        """SetHistogramMax(itkScalarImageToHistogramGeneratorIUC2 self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetHistogramMax(self, maximumValue)


    def SetAutoHistogramMinimumMaximum(self, autoOnOff: 'bool') -> "void":
        """SetAutoHistogramMinimumMaximum(itkScalarImageToHistogramGeneratorIUC2 self, bool autoOnOff)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetAutoHistogramMinimumMaximum(self, autoOnOff)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUC2

    def cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorIUC2 *":
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUC2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUC2

        Create a new object of the class itkScalarImageToHistogramGeneratorIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIUC2.Clone = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_Clone, None, itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_Compute, None, itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetInput, None, itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_GetOutput, None, itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetNumberOfBins, None, itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetMarginalScale, None, itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetHistogramMin, None, itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetHistogramMax, None, itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.SetAutoHistogramMinimumMaximum = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetAutoHistogramMinimumMaximum, None, itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_swigregister
itkScalarImageToHistogramGeneratorIUC2_swigregister(itkScalarImageToHistogramGeneratorIUC2)

def itkScalarImageToHistogramGeneratorIUC2___New_orig__() -> "itkScalarImageToHistogramGeneratorIUC2_Pointer":
    """itkScalarImageToHistogramGeneratorIUC2___New_orig__() -> itkScalarImageToHistogramGeneratorIUC2_Pointer"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2___New_orig__()

def itkScalarImageToHistogramGeneratorIUC2_cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorIUC2 *":
    """itkScalarImageToHistogramGeneratorIUC2_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUC2"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_cast(obj)

class itkScalarImageToHistogramGeneratorIUC3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkScalarImageToHistogramGeneratorIUC3_Pointer":
        """__New_orig__() -> itkScalarImageToHistogramGeneratorIUC3_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkScalarImageToHistogramGeneratorIUC3_Pointer":
        """Clone(itkScalarImageToHistogramGeneratorIUC3 self) -> itkScalarImageToHistogramGeneratorIUC3_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_Clone(self)


    def Compute(self) -> "void":
        """Compute(itkScalarImageToHistogramGeneratorIUC3 self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_Compute(self)


    def SetInput(self, arg0: 'itkImageUC3') -> "void":
        """SetInput(itkScalarImageToHistogramGeneratorIUC3 self, itkImageUC3 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetInput(self, arg0)


    def GetOutput(self) -> "itkHistogramD const *":
        """GetOutput(itkScalarImageToHistogramGeneratorIUC3 self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_GetOutput(self)


    def SetNumberOfBins(self, numberOfBins: 'unsigned int') -> "void":
        """SetNumberOfBins(itkScalarImageToHistogramGeneratorIUC3 self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetNumberOfBins(self, numberOfBins)


    def SetMarginalScale(self, marginalScale: 'double') -> "void":
        """SetMarginalScale(itkScalarImageToHistogramGeneratorIUC3 self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetMarginalScale(self, marginalScale)


    def SetHistogramMin(self, minimumValue: 'double') -> "void":
        """SetHistogramMin(itkScalarImageToHistogramGeneratorIUC3 self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetHistogramMin(self, minimumValue)


    def SetHistogramMax(self, maximumValue: 'double') -> "void":
        """SetHistogramMax(itkScalarImageToHistogramGeneratorIUC3 self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetHistogramMax(self, maximumValue)


    def SetAutoHistogramMinimumMaximum(self, autoOnOff: 'bool') -> "void":
        """SetAutoHistogramMinimumMaximum(itkScalarImageToHistogramGeneratorIUC3 self, bool autoOnOff)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetAutoHistogramMinimumMaximum(self, autoOnOff)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUC3

    def cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorIUC3 *":
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUC3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUC3

        Create a new object of the class itkScalarImageToHistogramGeneratorIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIUC3.Clone = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_Clone, None, itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_Compute, None, itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetInput, None, itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_GetOutput, None, itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetNumberOfBins, None, itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetMarginalScale, None, itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetHistogramMin, None, itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetHistogramMax, None, itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.SetAutoHistogramMinimumMaximum = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetAutoHistogramMinimumMaximum, None, itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_swigregister
itkScalarImageToHistogramGeneratorIUC3_swigregister(itkScalarImageToHistogramGeneratorIUC3)

def itkScalarImageToHistogramGeneratorIUC3___New_orig__() -> "itkScalarImageToHistogramGeneratorIUC3_Pointer":
    """itkScalarImageToHistogramGeneratorIUC3___New_orig__() -> itkScalarImageToHistogramGeneratorIUC3_Pointer"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3___New_orig__()

def itkScalarImageToHistogramGeneratorIUC3_cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorIUC3 *":
    """itkScalarImageToHistogramGeneratorIUC3_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUC3"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_cast(obj)

class itkScalarImageToHistogramGeneratorIUS2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkScalarImageToHistogramGeneratorIUS2_Pointer":
        """__New_orig__() -> itkScalarImageToHistogramGeneratorIUS2_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkScalarImageToHistogramGeneratorIUS2_Pointer":
        """Clone(itkScalarImageToHistogramGeneratorIUS2 self) -> itkScalarImageToHistogramGeneratorIUS2_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_Clone(self)


    def Compute(self) -> "void":
        """Compute(itkScalarImageToHistogramGeneratorIUS2 self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_Compute(self)


    def SetInput(self, arg0: 'itkImageUS2') -> "void":
        """SetInput(itkScalarImageToHistogramGeneratorIUS2 self, itkImageUS2 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetInput(self, arg0)


    def GetOutput(self) -> "itkHistogramD const *":
        """GetOutput(itkScalarImageToHistogramGeneratorIUS2 self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_GetOutput(self)


    def SetNumberOfBins(self, numberOfBins: 'unsigned int') -> "void":
        """SetNumberOfBins(itkScalarImageToHistogramGeneratorIUS2 self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetNumberOfBins(self, numberOfBins)


    def SetMarginalScale(self, marginalScale: 'double') -> "void":
        """SetMarginalScale(itkScalarImageToHistogramGeneratorIUS2 self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetMarginalScale(self, marginalScale)


    def SetHistogramMin(self, minimumValue: 'double') -> "void":
        """SetHistogramMin(itkScalarImageToHistogramGeneratorIUS2 self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetHistogramMin(self, minimumValue)


    def SetHistogramMax(self, maximumValue: 'double') -> "void":
        """SetHistogramMax(itkScalarImageToHistogramGeneratorIUS2 self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetHistogramMax(self, maximumValue)


    def SetAutoHistogramMinimumMaximum(self, autoOnOff: 'bool') -> "void":
        """SetAutoHistogramMinimumMaximum(itkScalarImageToHistogramGeneratorIUS2 self, bool autoOnOff)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetAutoHistogramMinimumMaximum(self, autoOnOff)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUS2

    def cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorIUS2 *":
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUS2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUS2

        Create a new object of the class itkScalarImageToHistogramGeneratorIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIUS2.Clone = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_Clone, None, itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_Compute, None, itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetInput, None, itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_GetOutput, None, itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetNumberOfBins, None, itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetMarginalScale, None, itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetHistogramMin, None, itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetHistogramMax, None, itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.SetAutoHistogramMinimumMaximum = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetAutoHistogramMinimumMaximum, None, itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_swigregister
itkScalarImageToHistogramGeneratorIUS2_swigregister(itkScalarImageToHistogramGeneratorIUS2)

def itkScalarImageToHistogramGeneratorIUS2___New_orig__() -> "itkScalarImageToHistogramGeneratorIUS2_Pointer":
    """itkScalarImageToHistogramGeneratorIUS2___New_orig__() -> itkScalarImageToHistogramGeneratorIUS2_Pointer"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2___New_orig__()

def itkScalarImageToHistogramGeneratorIUS2_cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorIUS2 *":
    """itkScalarImageToHistogramGeneratorIUS2_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUS2"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_cast(obj)

class itkScalarImageToHistogramGeneratorIUS3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkScalarImageToHistogramGeneratorIUS3_Pointer":
        """__New_orig__() -> itkScalarImageToHistogramGeneratorIUS3_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkScalarImageToHistogramGeneratorIUS3_Pointer":
        """Clone(itkScalarImageToHistogramGeneratorIUS3 self) -> itkScalarImageToHistogramGeneratorIUS3_Pointer"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_Clone(self)


    def Compute(self) -> "void":
        """Compute(itkScalarImageToHistogramGeneratorIUS3 self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_Compute(self)


    def SetInput(self, arg0: 'itkImageUS3') -> "void":
        """SetInput(itkScalarImageToHistogramGeneratorIUS3 self, itkImageUS3 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetInput(self, arg0)


    def GetOutput(self) -> "itkHistogramD const *":
        """GetOutput(itkScalarImageToHistogramGeneratorIUS3 self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_GetOutput(self)


    def SetNumberOfBins(self, numberOfBins: 'unsigned int') -> "void":
        """SetNumberOfBins(itkScalarImageToHistogramGeneratorIUS3 self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetNumberOfBins(self, numberOfBins)


    def SetMarginalScale(self, marginalScale: 'double') -> "void":
        """SetMarginalScale(itkScalarImageToHistogramGeneratorIUS3 self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetMarginalScale(self, marginalScale)


    def SetHistogramMin(self, minimumValue: 'double') -> "void":
        """SetHistogramMin(itkScalarImageToHistogramGeneratorIUS3 self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetHistogramMin(self, minimumValue)


    def SetHistogramMax(self, maximumValue: 'double') -> "void":
        """SetHistogramMax(itkScalarImageToHistogramGeneratorIUS3 self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetHistogramMax(self, maximumValue)


    def SetAutoHistogramMinimumMaximum(self, autoOnOff: 'bool') -> "void":
        """SetAutoHistogramMinimumMaximum(itkScalarImageToHistogramGeneratorIUS3 self, bool autoOnOff)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetAutoHistogramMinimumMaximum(self, autoOnOff)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUS3

    def cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorIUS3 *":
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUS3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUS3

        Create a new object of the class itkScalarImageToHistogramGeneratorIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIUS3.Clone = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_Clone, None, itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_Compute, None, itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetInput, None, itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_GetOutput, None, itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetNumberOfBins, None, itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetMarginalScale, None, itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetHistogramMin, None, itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetHistogramMax, None, itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.SetAutoHistogramMinimumMaximum = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetAutoHistogramMinimumMaximum, None, itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_swigregister
itkScalarImageToHistogramGeneratorIUS3_swigregister(itkScalarImageToHistogramGeneratorIUS3)

def itkScalarImageToHistogramGeneratorIUS3___New_orig__() -> "itkScalarImageToHistogramGeneratorIUS3_Pointer":
    """itkScalarImageToHistogramGeneratorIUS3___New_orig__() -> itkScalarImageToHistogramGeneratorIUS3_Pointer"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3___New_orig__()

def itkScalarImageToHistogramGeneratorIUS3_cast(obj: 'itkLightObject') -> "itkScalarImageToHistogramGeneratorIUS3 *":
    """itkScalarImageToHistogramGeneratorIUS3_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUS3"""
    return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_cast(obj)



