# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkVTKImageExportPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkVTKImageExportPython', [dirname(__file__)])
        except ImportError:
            import _itkVTKImageExportPython
            return _itkVTKImageExportPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkVTKImageExportPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkVTKImageExportPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkVTKImageExportPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImagePython
import itkOffsetPython
import itkSizePython
import pyBasePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import ITKCommonBasePython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython

def itkVTKImageExportICVF43_New():
  return itkVTKImageExportICVF43.New()


def itkVTKImageExportICVF42_New():
  return itkVTKImageExportICVF42.New()


def itkVTKImageExportICVF33_New():
  return itkVTKImageExportICVF33.New()


def itkVTKImageExportICVF32_New():
  return itkVTKImageExportICVF32.New()


def itkVTKImageExportICVF23_New():
  return itkVTKImageExportICVF23.New()


def itkVTKImageExportICVF22_New():
  return itkVTKImageExportICVF22.New()


def itkVTKImageExportIVF43_New():
  return itkVTKImageExportIVF43.New()


def itkVTKImageExportIVF42_New():
  return itkVTKImageExportIVF42.New()


def itkVTKImageExportIVF33_New():
  return itkVTKImageExportIVF33.New()


def itkVTKImageExportIVF32_New():
  return itkVTKImageExportIVF32.New()


def itkVTKImageExportIVF23_New():
  return itkVTKImageExportIVF23.New()


def itkVTKImageExportIVF22_New():
  return itkVTKImageExportIVF22.New()


def itkVTKImageExportIRGBAUC3_New():
  return itkVTKImageExportIRGBAUC3.New()


def itkVTKImageExportIRGBAUC2_New():
  return itkVTKImageExportIRGBAUC2.New()


def itkVTKImageExportIRGBUC3_New():
  return itkVTKImageExportIRGBUC3.New()


def itkVTKImageExportIRGBUC2_New():
  return itkVTKImageExportIRGBUC2.New()


def itkVTKImageExportIF3_New():
  return itkVTKImageExportIF3.New()


def itkVTKImageExportIF2_New():
  return itkVTKImageExportIF2.New()


def itkVTKImageExportIUS3_New():
  return itkVTKImageExportIUS3.New()


def itkVTKImageExportIUS2_New():
  return itkVTKImageExportIUS2.New()


def itkVTKImageExportISS3_New():
  return itkVTKImageExportISS3.New()


def itkVTKImageExportISS2_New():
  return itkVTKImageExportISS2.New()


def itkVTKImageExportIUL3_New():
  return itkVTKImageExportIUL3.New()


def itkVTKImageExportIUL2_New():
  return itkVTKImageExportIUL2.New()


def itkVTKImageExportIUC3_New():
  return itkVTKImageExportIUC3.New()


def itkVTKImageExportIUC2_New():
  return itkVTKImageExportIUC2.New()


def itkVTKImageExportBase_New():
  return itkVTKImageExportBase.New()

class itkVTKImageExportBase(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkVTKImageExportBase class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetCallbackUserData(self) -> "void *":
        """GetCallbackUserData(itkVTKImageExportBase self) -> void *"""
        return _itkVTKImageExportPython.itkVTKImageExportBase_GetCallbackUserData(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportBase

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportBase *":
        """cast(itkLightObject obj) -> itkVTKImageExportBase"""
        return _itkVTKImageExportPython.itkVTKImageExportBase_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportBase

        Create a new object of the class itkVTKImageExportBase and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportBase.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportBase.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportBase.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportBase.GetCallbackUserData = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportBase_GetCallbackUserData, None, itkVTKImageExportBase)
itkVTKImageExportBase_swigregister = _itkVTKImageExportPython.itkVTKImageExportBase_swigregister
itkVTKImageExportBase_swigregister(itkVTKImageExportBase)

def itkVTKImageExportBase_cast(obj: 'itkLightObject') -> "itkVTKImageExportBase *":
    """itkVTKImageExportBase_cast(itkLightObject obj) -> itkVTKImageExportBase"""
    return _itkVTKImageExportPython.itkVTKImageExportBase_cast(obj)

class itkVTKImageExportICVF22(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportICVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportICVF22_Pointer":
        """__New_orig__() -> itkVTKImageExportICVF22_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportICVF22_Pointer":
        """Clone(itkVTKImageExportICVF22 self) -> itkVTKImageExportICVF22_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF22_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportICVF22_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageCVF22') -> "void":
        """SetInput(itkVTKImageExportICVF22 self, itkImageCVF22 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF22_SetInput(self, arg0)


    def GetInput(self) -> "itkImageCVF22 *":
        """GetInput(itkVTKImageExportICVF22 self) -> itkImageCVF22"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF22_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportICVF22

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportICVF22 *":
        """cast(itkLightObject obj) -> itkVTKImageExportICVF22"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportICVF22

        Create a new object of the class itkVTKImageExportICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportICVF22.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF22_Clone, None, itkVTKImageExportICVF22)
itkVTKImageExportICVF22.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF22_SetInput, None, itkVTKImageExportICVF22)
itkVTKImageExportICVF22.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF22_GetInput, None, itkVTKImageExportICVF22)
itkVTKImageExportICVF22_swigregister = _itkVTKImageExportPython.itkVTKImageExportICVF22_swigregister
itkVTKImageExportICVF22_swigregister(itkVTKImageExportICVF22)

def itkVTKImageExportICVF22___New_orig__() -> "itkVTKImageExportICVF22_Pointer":
    """itkVTKImageExportICVF22___New_orig__() -> itkVTKImageExportICVF22_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportICVF22___New_orig__()

def itkVTKImageExportICVF22_cast(obj: 'itkLightObject') -> "itkVTKImageExportICVF22 *":
    """itkVTKImageExportICVF22_cast(itkLightObject obj) -> itkVTKImageExportICVF22"""
    return _itkVTKImageExportPython.itkVTKImageExportICVF22_cast(obj)

class itkVTKImageExportICVF23(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportICVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportICVF23_Pointer":
        """__New_orig__() -> itkVTKImageExportICVF23_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportICVF23_Pointer":
        """Clone(itkVTKImageExportICVF23 self) -> itkVTKImageExportICVF23_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF23_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportICVF23_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageCVF23') -> "void":
        """SetInput(itkVTKImageExportICVF23 self, itkImageCVF23 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF23_SetInput(self, arg0)


    def GetInput(self) -> "itkImageCVF23 *":
        """GetInput(itkVTKImageExportICVF23 self) -> itkImageCVF23"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF23_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportICVF23

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportICVF23 *":
        """cast(itkLightObject obj) -> itkVTKImageExportICVF23"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportICVF23

        Create a new object of the class itkVTKImageExportICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportICVF23.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF23_Clone, None, itkVTKImageExportICVF23)
itkVTKImageExportICVF23.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF23_SetInput, None, itkVTKImageExportICVF23)
itkVTKImageExportICVF23.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF23_GetInput, None, itkVTKImageExportICVF23)
itkVTKImageExportICVF23_swigregister = _itkVTKImageExportPython.itkVTKImageExportICVF23_swigregister
itkVTKImageExportICVF23_swigregister(itkVTKImageExportICVF23)

def itkVTKImageExportICVF23___New_orig__() -> "itkVTKImageExportICVF23_Pointer":
    """itkVTKImageExportICVF23___New_orig__() -> itkVTKImageExportICVF23_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportICVF23___New_orig__()

def itkVTKImageExportICVF23_cast(obj: 'itkLightObject') -> "itkVTKImageExportICVF23 *":
    """itkVTKImageExportICVF23_cast(itkLightObject obj) -> itkVTKImageExportICVF23"""
    return _itkVTKImageExportPython.itkVTKImageExportICVF23_cast(obj)

class itkVTKImageExportICVF32(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportICVF32 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportICVF32_Pointer":
        """__New_orig__() -> itkVTKImageExportICVF32_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportICVF32_Pointer":
        """Clone(itkVTKImageExportICVF32 self) -> itkVTKImageExportICVF32_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF32_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportICVF32_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageCVF32') -> "void":
        """SetInput(itkVTKImageExportICVF32 self, itkImageCVF32 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF32_SetInput(self, arg0)


    def GetInput(self) -> "itkImageCVF32 *":
        """GetInput(itkVTKImageExportICVF32 self) -> itkImageCVF32"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF32_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportICVF32

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportICVF32 *":
        """cast(itkLightObject obj) -> itkVTKImageExportICVF32"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportICVF32

        Create a new object of the class itkVTKImageExportICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportICVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportICVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportICVF32.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF32_Clone, None, itkVTKImageExportICVF32)
itkVTKImageExportICVF32.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF32_SetInput, None, itkVTKImageExportICVF32)
itkVTKImageExportICVF32.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF32_GetInput, None, itkVTKImageExportICVF32)
itkVTKImageExportICVF32_swigregister = _itkVTKImageExportPython.itkVTKImageExportICVF32_swigregister
itkVTKImageExportICVF32_swigregister(itkVTKImageExportICVF32)

def itkVTKImageExportICVF32___New_orig__() -> "itkVTKImageExportICVF32_Pointer":
    """itkVTKImageExportICVF32___New_orig__() -> itkVTKImageExportICVF32_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportICVF32___New_orig__()

def itkVTKImageExportICVF32_cast(obj: 'itkLightObject') -> "itkVTKImageExportICVF32 *":
    """itkVTKImageExportICVF32_cast(itkLightObject obj) -> itkVTKImageExportICVF32"""
    return _itkVTKImageExportPython.itkVTKImageExportICVF32_cast(obj)

class itkVTKImageExportICVF33(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportICVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportICVF33_Pointer":
        """__New_orig__() -> itkVTKImageExportICVF33_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportICVF33_Pointer":
        """Clone(itkVTKImageExportICVF33 self) -> itkVTKImageExportICVF33_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF33_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportICVF33_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageCVF33') -> "void":
        """SetInput(itkVTKImageExportICVF33 self, itkImageCVF33 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF33_SetInput(self, arg0)


    def GetInput(self) -> "itkImageCVF33 *":
        """GetInput(itkVTKImageExportICVF33 self) -> itkImageCVF33"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF33_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportICVF33

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportICVF33 *":
        """cast(itkLightObject obj) -> itkVTKImageExportICVF33"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportICVF33

        Create a new object of the class itkVTKImageExportICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportICVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportICVF33.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF33_Clone, None, itkVTKImageExportICVF33)
itkVTKImageExportICVF33.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF33_SetInput, None, itkVTKImageExportICVF33)
itkVTKImageExportICVF33.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF33_GetInput, None, itkVTKImageExportICVF33)
itkVTKImageExportICVF33_swigregister = _itkVTKImageExportPython.itkVTKImageExportICVF33_swigregister
itkVTKImageExportICVF33_swigregister(itkVTKImageExportICVF33)

def itkVTKImageExportICVF33___New_orig__() -> "itkVTKImageExportICVF33_Pointer":
    """itkVTKImageExportICVF33___New_orig__() -> itkVTKImageExportICVF33_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportICVF33___New_orig__()

def itkVTKImageExportICVF33_cast(obj: 'itkLightObject') -> "itkVTKImageExportICVF33 *":
    """itkVTKImageExportICVF33_cast(itkLightObject obj) -> itkVTKImageExportICVF33"""
    return _itkVTKImageExportPython.itkVTKImageExportICVF33_cast(obj)

class itkVTKImageExportICVF42(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportICVF42 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportICVF42_Pointer":
        """__New_orig__() -> itkVTKImageExportICVF42_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportICVF42_Pointer":
        """Clone(itkVTKImageExportICVF42 self) -> itkVTKImageExportICVF42_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF42_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportICVF42_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageCVF42') -> "void":
        """SetInput(itkVTKImageExportICVF42 self, itkImageCVF42 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF42_SetInput(self, arg0)


    def GetInput(self) -> "itkImageCVF42 *":
        """GetInput(itkVTKImageExportICVF42 self) -> itkImageCVF42"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF42_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportICVF42

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportICVF42 *":
        """cast(itkLightObject obj) -> itkVTKImageExportICVF42"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportICVF42

        Create a new object of the class itkVTKImageExportICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportICVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportICVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportICVF42.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF42_Clone, None, itkVTKImageExportICVF42)
itkVTKImageExportICVF42.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF42_SetInput, None, itkVTKImageExportICVF42)
itkVTKImageExportICVF42.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF42_GetInput, None, itkVTKImageExportICVF42)
itkVTKImageExportICVF42_swigregister = _itkVTKImageExportPython.itkVTKImageExportICVF42_swigregister
itkVTKImageExportICVF42_swigregister(itkVTKImageExportICVF42)

def itkVTKImageExportICVF42___New_orig__() -> "itkVTKImageExportICVF42_Pointer":
    """itkVTKImageExportICVF42___New_orig__() -> itkVTKImageExportICVF42_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportICVF42___New_orig__()

def itkVTKImageExportICVF42_cast(obj: 'itkLightObject') -> "itkVTKImageExportICVF42 *":
    """itkVTKImageExportICVF42_cast(itkLightObject obj) -> itkVTKImageExportICVF42"""
    return _itkVTKImageExportPython.itkVTKImageExportICVF42_cast(obj)

class itkVTKImageExportICVF43(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportICVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportICVF43_Pointer":
        """__New_orig__() -> itkVTKImageExportICVF43_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportICVF43_Pointer":
        """Clone(itkVTKImageExportICVF43 self) -> itkVTKImageExportICVF43_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF43_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportICVF43_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageCVF43') -> "void":
        """SetInput(itkVTKImageExportICVF43 self, itkImageCVF43 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF43_SetInput(self, arg0)


    def GetInput(self) -> "itkImageCVF43 *":
        """GetInput(itkVTKImageExportICVF43 self) -> itkImageCVF43"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF43_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportICVF43

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportICVF43 *":
        """cast(itkLightObject obj) -> itkVTKImageExportICVF43"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportICVF43

        Create a new object of the class itkVTKImageExportICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportICVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportICVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportICVF43.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF43_Clone, None, itkVTKImageExportICVF43)
itkVTKImageExportICVF43.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF43_SetInput, None, itkVTKImageExportICVF43)
itkVTKImageExportICVF43.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportICVF43_GetInput, None, itkVTKImageExportICVF43)
itkVTKImageExportICVF43_swigregister = _itkVTKImageExportPython.itkVTKImageExportICVF43_swigregister
itkVTKImageExportICVF43_swigregister(itkVTKImageExportICVF43)

def itkVTKImageExportICVF43___New_orig__() -> "itkVTKImageExportICVF43_Pointer":
    """itkVTKImageExportICVF43___New_orig__() -> itkVTKImageExportICVF43_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportICVF43___New_orig__()

def itkVTKImageExportICVF43_cast(obj: 'itkLightObject') -> "itkVTKImageExportICVF43 *":
    """itkVTKImageExportICVF43_cast(itkLightObject obj) -> itkVTKImageExportICVF43"""
    return _itkVTKImageExportPython.itkVTKImageExportICVF43_cast(obj)

class itkVTKImageExportIF2(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIF2_Pointer":
        """__New_orig__() -> itkVTKImageExportIF2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIF2_Pointer":
        """Clone(itkVTKImageExportIF2 self) -> itkVTKImageExportIF2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIF2_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIF2_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageF2') -> "void":
        """SetInput(itkVTKImageExportIF2 self, itkImageF2 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIF2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageF2 *":
        """GetInput(itkVTKImageExportIF2 self) -> itkImageF2"""
        return _itkVTKImageExportPython.itkVTKImageExportIF2_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIF2

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIF2 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIF2"""
        return _itkVTKImageExportPython.itkVTKImageExportIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIF2

        Create a new object of the class itkVTKImageExportIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIF2.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIF2_Clone, None, itkVTKImageExportIF2)
itkVTKImageExportIF2.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIF2_SetInput, None, itkVTKImageExportIF2)
itkVTKImageExportIF2.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIF2_GetInput, None, itkVTKImageExportIF2)
itkVTKImageExportIF2_swigregister = _itkVTKImageExportPython.itkVTKImageExportIF2_swigregister
itkVTKImageExportIF2_swigregister(itkVTKImageExportIF2)

def itkVTKImageExportIF2___New_orig__() -> "itkVTKImageExportIF2_Pointer":
    """itkVTKImageExportIF2___New_orig__() -> itkVTKImageExportIF2_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIF2___New_orig__()

def itkVTKImageExportIF2_cast(obj: 'itkLightObject') -> "itkVTKImageExportIF2 *":
    """itkVTKImageExportIF2_cast(itkLightObject obj) -> itkVTKImageExportIF2"""
    return _itkVTKImageExportPython.itkVTKImageExportIF2_cast(obj)

class itkVTKImageExportIF3(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIF3_Pointer":
        """__New_orig__() -> itkVTKImageExportIF3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIF3_Pointer":
        """Clone(itkVTKImageExportIF3 self) -> itkVTKImageExportIF3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIF3_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIF3_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageF3') -> "void":
        """SetInput(itkVTKImageExportIF3 self, itkImageF3 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIF3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageF3 *":
        """GetInput(itkVTKImageExportIF3 self) -> itkImageF3"""
        return _itkVTKImageExportPython.itkVTKImageExportIF3_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIF3

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIF3 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIF3"""
        return _itkVTKImageExportPython.itkVTKImageExportIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIF3

        Create a new object of the class itkVTKImageExportIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIF3.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIF3_Clone, None, itkVTKImageExportIF3)
itkVTKImageExportIF3.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIF3_SetInput, None, itkVTKImageExportIF3)
itkVTKImageExportIF3.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIF3_GetInput, None, itkVTKImageExportIF3)
itkVTKImageExportIF3_swigregister = _itkVTKImageExportPython.itkVTKImageExportIF3_swigregister
itkVTKImageExportIF3_swigregister(itkVTKImageExportIF3)

def itkVTKImageExportIF3___New_orig__() -> "itkVTKImageExportIF3_Pointer":
    """itkVTKImageExportIF3___New_orig__() -> itkVTKImageExportIF3_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIF3___New_orig__()

def itkVTKImageExportIF3_cast(obj: 'itkLightObject') -> "itkVTKImageExportIF3 *":
    """itkVTKImageExportIF3_cast(itkLightObject obj) -> itkVTKImageExportIF3"""
    return _itkVTKImageExportPython.itkVTKImageExportIF3_cast(obj)

class itkVTKImageExportIRGBAUC2(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIRGBAUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIRGBAUC2_Pointer":
        """__New_orig__() -> itkVTKImageExportIRGBAUC2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIRGBAUC2_Pointer":
        """Clone(itkVTKImageExportIRGBAUC2 self) -> itkVTKImageExportIRGBAUC2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageRGBAUC2') -> "void":
        """SetInput(itkVTKImageExportIRGBAUC2 self, itkImageRGBAUC2 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageRGBAUC2 *":
        """GetInput(itkVTKImageExportIRGBAUC2 self) -> itkImageRGBAUC2"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIRGBAUC2

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIRGBAUC2 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIRGBAUC2"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIRGBAUC2

        Create a new object of the class itkVTKImageExportIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIRGBAUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIRGBAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIRGBAUC2.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_Clone, None, itkVTKImageExportIRGBAUC2)
itkVTKImageExportIRGBAUC2.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_SetInput, None, itkVTKImageExportIRGBAUC2)
itkVTKImageExportIRGBAUC2.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_GetInput, None, itkVTKImageExportIRGBAUC2)
itkVTKImageExportIRGBAUC2_swigregister = _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_swigregister
itkVTKImageExportIRGBAUC2_swigregister(itkVTKImageExportIRGBAUC2)

def itkVTKImageExportIRGBAUC2___New_orig__() -> "itkVTKImageExportIRGBAUC2_Pointer":
    """itkVTKImageExportIRGBAUC2___New_orig__() -> itkVTKImageExportIRGBAUC2_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2___New_orig__()

def itkVTKImageExportIRGBAUC2_cast(obj: 'itkLightObject') -> "itkVTKImageExportIRGBAUC2 *":
    """itkVTKImageExportIRGBAUC2_cast(itkLightObject obj) -> itkVTKImageExportIRGBAUC2"""
    return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_cast(obj)

class itkVTKImageExportIRGBAUC3(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIRGBAUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIRGBAUC3_Pointer":
        """__New_orig__() -> itkVTKImageExportIRGBAUC3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIRGBAUC3_Pointer":
        """Clone(itkVTKImageExportIRGBAUC3 self) -> itkVTKImageExportIRGBAUC3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageRGBAUC3') -> "void":
        """SetInput(itkVTKImageExportIRGBAUC3 self, itkImageRGBAUC3 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageRGBAUC3 *":
        """GetInput(itkVTKImageExportIRGBAUC3 self) -> itkImageRGBAUC3"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIRGBAUC3

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIRGBAUC3 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIRGBAUC3"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIRGBAUC3

        Create a new object of the class itkVTKImageExportIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIRGBAUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIRGBAUC3.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_Clone, None, itkVTKImageExportIRGBAUC3)
itkVTKImageExportIRGBAUC3.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_SetInput, None, itkVTKImageExportIRGBAUC3)
itkVTKImageExportIRGBAUC3.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_GetInput, None, itkVTKImageExportIRGBAUC3)
itkVTKImageExportIRGBAUC3_swigregister = _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_swigregister
itkVTKImageExportIRGBAUC3_swigregister(itkVTKImageExportIRGBAUC3)

def itkVTKImageExportIRGBAUC3___New_orig__() -> "itkVTKImageExportIRGBAUC3_Pointer":
    """itkVTKImageExportIRGBAUC3___New_orig__() -> itkVTKImageExportIRGBAUC3_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3___New_orig__()

def itkVTKImageExportIRGBAUC3_cast(obj: 'itkLightObject') -> "itkVTKImageExportIRGBAUC3 *":
    """itkVTKImageExportIRGBAUC3_cast(itkLightObject obj) -> itkVTKImageExportIRGBAUC3"""
    return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_cast(obj)

class itkVTKImageExportIRGBUC2(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIRGBUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIRGBUC2_Pointer":
        """__New_orig__() -> itkVTKImageExportIRGBUC2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIRGBUC2_Pointer":
        """Clone(itkVTKImageExportIRGBUC2 self) -> itkVTKImageExportIRGBUC2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC2_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIRGBUC2_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageRGBUC2') -> "void":
        """SetInput(itkVTKImageExportIRGBUC2 self, itkImageRGBUC2 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageRGBUC2 *":
        """GetInput(itkVTKImageExportIRGBUC2 self) -> itkImageRGBUC2"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC2_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIRGBUC2

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIRGBUC2 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIRGBUC2"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIRGBUC2

        Create a new object of the class itkVTKImageExportIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIRGBUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIRGBUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIRGBUC2.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIRGBUC2_Clone, None, itkVTKImageExportIRGBUC2)
itkVTKImageExportIRGBUC2.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIRGBUC2_SetInput, None, itkVTKImageExportIRGBUC2)
itkVTKImageExportIRGBUC2.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIRGBUC2_GetInput, None, itkVTKImageExportIRGBUC2)
itkVTKImageExportIRGBUC2_swigregister = _itkVTKImageExportPython.itkVTKImageExportIRGBUC2_swigregister
itkVTKImageExportIRGBUC2_swigregister(itkVTKImageExportIRGBUC2)

def itkVTKImageExportIRGBUC2___New_orig__() -> "itkVTKImageExportIRGBUC2_Pointer":
    """itkVTKImageExportIRGBUC2___New_orig__() -> itkVTKImageExportIRGBUC2_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIRGBUC2___New_orig__()

def itkVTKImageExportIRGBUC2_cast(obj: 'itkLightObject') -> "itkVTKImageExportIRGBUC2 *":
    """itkVTKImageExportIRGBUC2_cast(itkLightObject obj) -> itkVTKImageExportIRGBUC2"""
    return _itkVTKImageExportPython.itkVTKImageExportIRGBUC2_cast(obj)

class itkVTKImageExportIRGBUC3(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIRGBUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIRGBUC3_Pointer":
        """__New_orig__() -> itkVTKImageExportIRGBUC3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIRGBUC3_Pointer":
        """Clone(itkVTKImageExportIRGBUC3 self) -> itkVTKImageExportIRGBUC3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC3_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIRGBUC3_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageRGBUC3') -> "void":
        """SetInput(itkVTKImageExportIRGBUC3 self, itkImageRGBUC3 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageRGBUC3 *":
        """GetInput(itkVTKImageExportIRGBUC3 self) -> itkImageRGBUC3"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC3_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIRGBUC3

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIRGBUC3 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIRGBUC3"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIRGBUC3

        Create a new object of the class itkVTKImageExportIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIRGBUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIRGBUC3.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIRGBUC3_Clone, None, itkVTKImageExportIRGBUC3)
itkVTKImageExportIRGBUC3.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIRGBUC3_SetInput, None, itkVTKImageExportIRGBUC3)
itkVTKImageExportIRGBUC3.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIRGBUC3_GetInput, None, itkVTKImageExportIRGBUC3)
itkVTKImageExportIRGBUC3_swigregister = _itkVTKImageExportPython.itkVTKImageExportIRGBUC3_swigregister
itkVTKImageExportIRGBUC3_swigregister(itkVTKImageExportIRGBUC3)

def itkVTKImageExportIRGBUC3___New_orig__() -> "itkVTKImageExportIRGBUC3_Pointer":
    """itkVTKImageExportIRGBUC3___New_orig__() -> itkVTKImageExportIRGBUC3_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIRGBUC3___New_orig__()

def itkVTKImageExportIRGBUC3_cast(obj: 'itkLightObject') -> "itkVTKImageExportIRGBUC3 *":
    """itkVTKImageExportIRGBUC3_cast(itkLightObject obj) -> itkVTKImageExportIRGBUC3"""
    return _itkVTKImageExportPython.itkVTKImageExportIRGBUC3_cast(obj)

class itkVTKImageExportISS2(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportISS2_Pointer":
        """__New_orig__() -> itkVTKImageExportISS2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportISS2_Pointer":
        """Clone(itkVTKImageExportISS2 self) -> itkVTKImageExportISS2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportISS2_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportISS2_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageSS2') -> "void":
        """SetInput(itkVTKImageExportISS2 self, itkImageSS2 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportISS2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageSS2 *":
        """GetInput(itkVTKImageExportISS2 self) -> itkImageSS2"""
        return _itkVTKImageExportPython.itkVTKImageExportISS2_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportISS2

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportISS2 *":
        """cast(itkLightObject obj) -> itkVTKImageExportISS2"""
        return _itkVTKImageExportPython.itkVTKImageExportISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportISS2

        Create a new object of the class itkVTKImageExportISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportISS2.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportISS2_Clone, None, itkVTKImageExportISS2)
itkVTKImageExportISS2.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportISS2_SetInput, None, itkVTKImageExportISS2)
itkVTKImageExportISS2.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportISS2_GetInput, None, itkVTKImageExportISS2)
itkVTKImageExportISS2_swigregister = _itkVTKImageExportPython.itkVTKImageExportISS2_swigregister
itkVTKImageExportISS2_swigregister(itkVTKImageExportISS2)

def itkVTKImageExportISS2___New_orig__() -> "itkVTKImageExportISS2_Pointer":
    """itkVTKImageExportISS2___New_orig__() -> itkVTKImageExportISS2_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportISS2___New_orig__()

def itkVTKImageExportISS2_cast(obj: 'itkLightObject') -> "itkVTKImageExportISS2 *":
    """itkVTKImageExportISS2_cast(itkLightObject obj) -> itkVTKImageExportISS2"""
    return _itkVTKImageExportPython.itkVTKImageExportISS2_cast(obj)

class itkVTKImageExportISS3(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportISS3_Pointer":
        """__New_orig__() -> itkVTKImageExportISS3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportISS3_Pointer":
        """Clone(itkVTKImageExportISS3 self) -> itkVTKImageExportISS3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportISS3_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportISS3_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageSS3') -> "void":
        """SetInput(itkVTKImageExportISS3 self, itkImageSS3 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportISS3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageSS3 *":
        """GetInput(itkVTKImageExportISS3 self) -> itkImageSS3"""
        return _itkVTKImageExportPython.itkVTKImageExportISS3_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportISS3

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportISS3 *":
        """cast(itkLightObject obj) -> itkVTKImageExportISS3"""
        return _itkVTKImageExportPython.itkVTKImageExportISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportISS3

        Create a new object of the class itkVTKImageExportISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportISS3.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportISS3_Clone, None, itkVTKImageExportISS3)
itkVTKImageExportISS3.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportISS3_SetInput, None, itkVTKImageExportISS3)
itkVTKImageExportISS3.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportISS3_GetInput, None, itkVTKImageExportISS3)
itkVTKImageExportISS3_swigregister = _itkVTKImageExportPython.itkVTKImageExportISS3_swigregister
itkVTKImageExportISS3_swigregister(itkVTKImageExportISS3)

def itkVTKImageExportISS3___New_orig__() -> "itkVTKImageExportISS3_Pointer":
    """itkVTKImageExportISS3___New_orig__() -> itkVTKImageExportISS3_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportISS3___New_orig__()

def itkVTKImageExportISS3_cast(obj: 'itkLightObject') -> "itkVTKImageExportISS3 *":
    """itkVTKImageExportISS3_cast(itkLightObject obj) -> itkVTKImageExportISS3"""
    return _itkVTKImageExportPython.itkVTKImageExportISS3_cast(obj)

class itkVTKImageExportIUC2(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIUC2_Pointer":
        """__New_orig__() -> itkVTKImageExportIUC2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIUC2_Pointer":
        """Clone(itkVTKImageExportIUC2 self) -> itkVTKImageExportIUC2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC2_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIUC2_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageUC2') -> "void":
        """SetInput(itkVTKImageExportIUC2 self, itkImageUC2 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageUC2 *":
        """GetInput(itkVTKImageExportIUC2 self) -> itkImageUC2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC2_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUC2

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIUC2 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIUC2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUC2

        Create a new object of the class itkVTKImageExportIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIUC2.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUC2_Clone, None, itkVTKImageExportIUC2)
itkVTKImageExportIUC2.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUC2_SetInput, None, itkVTKImageExportIUC2)
itkVTKImageExportIUC2.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUC2_GetInput, None, itkVTKImageExportIUC2)
itkVTKImageExportIUC2_swigregister = _itkVTKImageExportPython.itkVTKImageExportIUC2_swigregister
itkVTKImageExportIUC2_swigregister(itkVTKImageExportIUC2)

def itkVTKImageExportIUC2___New_orig__() -> "itkVTKImageExportIUC2_Pointer":
    """itkVTKImageExportIUC2___New_orig__() -> itkVTKImageExportIUC2_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIUC2___New_orig__()

def itkVTKImageExportIUC2_cast(obj: 'itkLightObject') -> "itkVTKImageExportIUC2 *":
    """itkVTKImageExportIUC2_cast(itkLightObject obj) -> itkVTKImageExportIUC2"""
    return _itkVTKImageExportPython.itkVTKImageExportIUC2_cast(obj)

class itkVTKImageExportIUC3(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIUC3_Pointer":
        """__New_orig__() -> itkVTKImageExportIUC3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIUC3_Pointer":
        """Clone(itkVTKImageExportIUC3 self) -> itkVTKImageExportIUC3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC3_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIUC3_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageUC3') -> "void":
        """SetInput(itkVTKImageExportIUC3 self, itkImageUC3 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageUC3 *":
        """GetInput(itkVTKImageExportIUC3 self) -> itkImageUC3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC3_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUC3

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIUC3 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIUC3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUC3

        Create a new object of the class itkVTKImageExportIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIUC3.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUC3_Clone, None, itkVTKImageExportIUC3)
itkVTKImageExportIUC3.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUC3_SetInput, None, itkVTKImageExportIUC3)
itkVTKImageExportIUC3.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUC3_GetInput, None, itkVTKImageExportIUC3)
itkVTKImageExportIUC3_swigregister = _itkVTKImageExportPython.itkVTKImageExportIUC3_swigregister
itkVTKImageExportIUC3_swigregister(itkVTKImageExportIUC3)

def itkVTKImageExportIUC3___New_orig__() -> "itkVTKImageExportIUC3_Pointer":
    """itkVTKImageExportIUC3___New_orig__() -> itkVTKImageExportIUC3_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIUC3___New_orig__()

def itkVTKImageExportIUC3_cast(obj: 'itkLightObject') -> "itkVTKImageExportIUC3 *":
    """itkVTKImageExportIUC3_cast(itkLightObject obj) -> itkVTKImageExportIUC3"""
    return _itkVTKImageExportPython.itkVTKImageExportIUC3_cast(obj)

class itkVTKImageExportIUL2(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIUL2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIUL2_Pointer":
        """__New_orig__() -> itkVTKImageExportIUL2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIUL2_Pointer":
        """Clone(itkVTKImageExportIUL2 self) -> itkVTKImageExportIUL2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL2_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIUL2_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageUL2') -> "void":
        """SetInput(itkVTKImageExportIUL2 self, itkImageUL2 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageUL2 *":
        """GetInput(itkVTKImageExportIUL2 self) -> itkImageUL2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL2_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUL2

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIUL2 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIUL2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUL2

        Create a new object of the class itkVTKImageExportIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIUL2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIUL2.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUL2_Clone, None, itkVTKImageExportIUL2)
itkVTKImageExportIUL2.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUL2_SetInput, None, itkVTKImageExportIUL2)
itkVTKImageExportIUL2.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUL2_GetInput, None, itkVTKImageExportIUL2)
itkVTKImageExportIUL2_swigregister = _itkVTKImageExportPython.itkVTKImageExportIUL2_swigregister
itkVTKImageExportIUL2_swigregister(itkVTKImageExportIUL2)

def itkVTKImageExportIUL2___New_orig__() -> "itkVTKImageExportIUL2_Pointer":
    """itkVTKImageExportIUL2___New_orig__() -> itkVTKImageExportIUL2_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIUL2___New_orig__()

def itkVTKImageExportIUL2_cast(obj: 'itkLightObject') -> "itkVTKImageExportIUL2 *":
    """itkVTKImageExportIUL2_cast(itkLightObject obj) -> itkVTKImageExportIUL2"""
    return _itkVTKImageExportPython.itkVTKImageExportIUL2_cast(obj)

class itkVTKImageExportIUL3(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIUL3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIUL3_Pointer":
        """__New_orig__() -> itkVTKImageExportIUL3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIUL3_Pointer":
        """Clone(itkVTKImageExportIUL3 self) -> itkVTKImageExportIUL3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL3_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIUL3_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageUL3') -> "void":
        """SetInput(itkVTKImageExportIUL3 self, itkImageUL3 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageUL3 *":
        """GetInput(itkVTKImageExportIUL3 self) -> itkImageUL3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL3_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUL3

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIUL3 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIUL3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUL3

        Create a new object of the class itkVTKImageExportIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIUL3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIUL3.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUL3_Clone, None, itkVTKImageExportIUL3)
itkVTKImageExportIUL3.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUL3_SetInput, None, itkVTKImageExportIUL3)
itkVTKImageExportIUL3.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUL3_GetInput, None, itkVTKImageExportIUL3)
itkVTKImageExportIUL3_swigregister = _itkVTKImageExportPython.itkVTKImageExportIUL3_swigregister
itkVTKImageExportIUL3_swigregister(itkVTKImageExportIUL3)

def itkVTKImageExportIUL3___New_orig__() -> "itkVTKImageExportIUL3_Pointer":
    """itkVTKImageExportIUL3___New_orig__() -> itkVTKImageExportIUL3_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIUL3___New_orig__()

def itkVTKImageExportIUL3_cast(obj: 'itkLightObject') -> "itkVTKImageExportIUL3 *":
    """itkVTKImageExportIUL3_cast(itkLightObject obj) -> itkVTKImageExportIUL3"""
    return _itkVTKImageExportPython.itkVTKImageExportIUL3_cast(obj)

class itkVTKImageExportIUS2(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIUS2_Pointer":
        """__New_orig__() -> itkVTKImageExportIUS2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIUS2_Pointer":
        """Clone(itkVTKImageExportIUS2 self) -> itkVTKImageExportIUS2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS2_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIUS2_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageUS2') -> "void":
        """SetInput(itkVTKImageExportIUS2 self, itkImageUS2 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageUS2 *":
        """GetInput(itkVTKImageExportIUS2 self) -> itkImageUS2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS2_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUS2

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIUS2 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIUS2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUS2

        Create a new object of the class itkVTKImageExportIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIUS2.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUS2_Clone, None, itkVTKImageExportIUS2)
itkVTKImageExportIUS2.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUS2_SetInput, None, itkVTKImageExportIUS2)
itkVTKImageExportIUS2.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUS2_GetInput, None, itkVTKImageExportIUS2)
itkVTKImageExportIUS2_swigregister = _itkVTKImageExportPython.itkVTKImageExportIUS2_swigregister
itkVTKImageExportIUS2_swigregister(itkVTKImageExportIUS2)

def itkVTKImageExportIUS2___New_orig__() -> "itkVTKImageExportIUS2_Pointer":
    """itkVTKImageExportIUS2___New_orig__() -> itkVTKImageExportIUS2_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIUS2___New_orig__()

def itkVTKImageExportIUS2_cast(obj: 'itkLightObject') -> "itkVTKImageExportIUS2 *":
    """itkVTKImageExportIUS2_cast(itkLightObject obj) -> itkVTKImageExportIUS2"""
    return _itkVTKImageExportPython.itkVTKImageExportIUS2_cast(obj)

class itkVTKImageExportIUS3(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIUS3_Pointer":
        """__New_orig__() -> itkVTKImageExportIUS3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIUS3_Pointer":
        """Clone(itkVTKImageExportIUS3 self) -> itkVTKImageExportIUS3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS3_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIUS3_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageUS3') -> "void":
        """SetInput(itkVTKImageExportIUS3 self, itkImageUS3 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageUS3 *":
        """GetInput(itkVTKImageExportIUS3 self) -> itkImageUS3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS3_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUS3

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIUS3 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIUS3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUS3

        Create a new object of the class itkVTKImageExportIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIUS3.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUS3_Clone, None, itkVTKImageExportIUS3)
itkVTKImageExportIUS3.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUS3_SetInput, None, itkVTKImageExportIUS3)
itkVTKImageExportIUS3.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUS3_GetInput, None, itkVTKImageExportIUS3)
itkVTKImageExportIUS3_swigregister = _itkVTKImageExportPython.itkVTKImageExportIUS3_swigregister
itkVTKImageExportIUS3_swigregister(itkVTKImageExportIUS3)

def itkVTKImageExportIUS3___New_orig__() -> "itkVTKImageExportIUS3_Pointer":
    """itkVTKImageExportIUS3___New_orig__() -> itkVTKImageExportIUS3_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIUS3___New_orig__()

def itkVTKImageExportIUS3_cast(obj: 'itkLightObject') -> "itkVTKImageExportIUS3 *":
    """itkVTKImageExportIUS3_cast(itkLightObject obj) -> itkVTKImageExportIUS3"""
    return _itkVTKImageExportPython.itkVTKImageExportIUS3_cast(obj)

class itkVTKImageExportIVF22(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIVF22_Pointer":
        """__New_orig__() -> itkVTKImageExportIVF22_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIVF22_Pointer":
        """Clone(itkVTKImageExportIVF22 self) -> itkVTKImageExportIVF22_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF22_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIVF22_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageVF22') -> "void":
        """SetInput(itkVTKImageExportIVF22 self, itkImageVF22 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF22_SetInput(self, arg0)


    def GetInput(self) -> "itkImageVF22 *":
        """GetInput(itkVTKImageExportIVF22 self) -> itkImageVF22"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF22_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIVF22

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIVF22 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIVF22"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIVF22

        Create a new object of the class itkVTKImageExportIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIVF22.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF22_Clone, None, itkVTKImageExportIVF22)
itkVTKImageExportIVF22.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF22_SetInput, None, itkVTKImageExportIVF22)
itkVTKImageExportIVF22.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF22_GetInput, None, itkVTKImageExportIVF22)
itkVTKImageExportIVF22_swigregister = _itkVTKImageExportPython.itkVTKImageExportIVF22_swigregister
itkVTKImageExportIVF22_swigregister(itkVTKImageExportIVF22)

def itkVTKImageExportIVF22___New_orig__() -> "itkVTKImageExportIVF22_Pointer":
    """itkVTKImageExportIVF22___New_orig__() -> itkVTKImageExportIVF22_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIVF22___New_orig__()

def itkVTKImageExportIVF22_cast(obj: 'itkLightObject') -> "itkVTKImageExportIVF22 *":
    """itkVTKImageExportIVF22_cast(itkLightObject obj) -> itkVTKImageExportIVF22"""
    return _itkVTKImageExportPython.itkVTKImageExportIVF22_cast(obj)

class itkVTKImageExportIVF23(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIVF23_Pointer":
        """__New_orig__() -> itkVTKImageExportIVF23_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIVF23_Pointer":
        """Clone(itkVTKImageExportIVF23 self) -> itkVTKImageExportIVF23_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF23_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIVF23_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageVF23') -> "void":
        """SetInput(itkVTKImageExportIVF23 self, itkImageVF23 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF23_SetInput(self, arg0)


    def GetInput(self) -> "itkImageVF23 *":
        """GetInput(itkVTKImageExportIVF23 self) -> itkImageVF23"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF23_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIVF23

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIVF23 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIVF23"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIVF23

        Create a new object of the class itkVTKImageExportIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIVF23.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF23_Clone, None, itkVTKImageExportIVF23)
itkVTKImageExportIVF23.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF23_SetInput, None, itkVTKImageExportIVF23)
itkVTKImageExportIVF23.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF23_GetInput, None, itkVTKImageExportIVF23)
itkVTKImageExportIVF23_swigregister = _itkVTKImageExportPython.itkVTKImageExportIVF23_swigregister
itkVTKImageExportIVF23_swigregister(itkVTKImageExportIVF23)

def itkVTKImageExportIVF23___New_orig__() -> "itkVTKImageExportIVF23_Pointer":
    """itkVTKImageExportIVF23___New_orig__() -> itkVTKImageExportIVF23_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIVF23___New_orig__()

def itkVTKImageExportIVF23_cast(obj: 'itkLightObject') -> "itkVTKImageExportIVF23 *":
    """itkVTKImageExportIVF23_cast(itkLightObject obj) -> itkVTKImageExportIVF23"""
    return _itkVTKImageExportPython.itkVTKImageExportIVF23_cast(obj)

class itkVTKImageExportIVF32(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIVF32 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIVF32_Pointer":
        """__New_orig__() -> itkVTKImageExportIVF32_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIVF32_Pointer":
        """Clone(itkVTKImageExportIVF32 self) -> itkVTKImageExportIVF32_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF32_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIVF32_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageVF32') -> "void":
        """SetInput(itkVTKImageExportIVF32 self, itkImageVF32 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF32_SetInput(self, arg0)


    def GetInput(self) -> "itkImageVF32 *":
        """GetInput(itkVTKImageExportIVF32 self) -> itkImageVF32"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF32_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIVF32

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIVF32 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIVF32"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIVF32

        Create a new object of the class itkVTKImageExportIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIVF32.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF32_Clone, None, itkVTKImageExportIVF32)
itkVTKImageExportIVF32.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF32_SetInput, None, itkVTKImageExportIVF32)
itkVTKImageExportIVF32.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF32_GetInput, None, itkVTKImageExportIVF32)
itkVTKImageExportIVF32_swigregister = _itkVTKImageExportPython.itkVTKImageExportIVF32_swigregister
itkVTKImageExportIVF32_swigregister(itkVTKImageExportIVF32)

def itkVTKImageExportIVF32___New_orig__() -> "itkVTKImageExportIVF32_Pointer":
    """itkVTKImageExportIVF32___New_orig__() -> itkVTKImageExportIVF32_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIVF32___New_orig__()

def itkVTKImageExportIVF32_cast(obj: 'itkLightObject') -> "itkVTKImageExportIVF32 *":
    """itkVTKImageExportIVF32_cast(itkLightObject obj) -> itkVTKImageExportIVF32"""
    return _itkVTKImageExportPython.itkVTKImageExportIVF32_cast(obj)

class itkVTKImageExportIVF33(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIVF33_Pointer":
        """__New_orig__() -> itkVTKImageExportIVF33_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIVF33_Pointer":
        """Clone(itkVTKImageExportIVF33 self) -> itkVTKImageExportIVF33_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF33_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIVF33_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageVF33') -> "void":
        """SetInput(itkVTKImageExportIVF33 self, itkImageVF33 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF33_SetInput(self, arg0)


    def GetInput(self) -> "itkImageVF33 *":
        """GetInput(itkVTKImageExportIVF33 self) -> itkImageVF33"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF33_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIVF33

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIVF33 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIVF33"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIVF33

        Create a new object of the class itkVTKImageExportIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIVF33.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF33_Clone, None, itkVTKImageExportIVF33)
itkVTKImageExportIVF33.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF33_SetInput, None, itkVTKImageExportIVF33)
itkVTKImageExportIVF33.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF33_GetInput, None, itkVTKImageExportIVF33)
itkVTKImageExportIVF33_swigregister = _itkVTKImageExportPython.itkVTKImageExportIVF33_swigregister
itkVTKImageExportIVF33_swigregister(itkVTKImageExportIVF33)

def itkVTKImageExportIVF33___New_orig__() -> "itkVTKImageExportIVF33_Pointer":
    """itkVTKImageExportIVF33___New_orig__() -> itkVTKImageExportIVF33_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIVF33___New_orig__()

def itkVTKImageExportIVF33_cast(obj: 'itkLightObject') -> "itkVTKImageExportIVF33 *":
    """itkVTKImageExportIVF33_cast(itkLightObject obj) -> itkVTKImageExportIVF33"""
    return _itkVTKImageExportPython.itkVTKImageExportIVF33_cast(obj)

class itkVTKImageExportIVF42(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIVF42 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIVF42_Pointer":
        """__New_orig__() -> itkVTKImageExportIVF42_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIVF42_Pointer":
        """Clone(itkVTKImageExportIVF42 self) -> itkVTKImageExportIVF42_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF42_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIVF42_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageVF42') -> "void":
        """SetInput(itkVTKImageExportIVF42 self, itkImageVF42 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF42_SetInput(self, arg0)


    def GetInput(self) -> "itkImageVF42 *":
        """GetInput(itkVTKImageExportIVF42 self) -> itkImageVF42"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF42_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIVF42

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIVF42 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIVF42"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIVF42

        Create a new object of the class itkVTKImageExportIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIVF42.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF42_Clone, None, itkVTKImageExportIVF42)
itkVTKImageExportIVF42.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF42_SetInput, None, itkVTKImageExportIVF42)
itkVTKImageExportIVF42.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF42_GetInput, None, itkVTKImageExportIVF42)
itkVTKImageExportIVF42_swigregister = _itkVTKImageExportPython.itkVTKImageExportIVF42_swigregister
itkVTKImageExportIVF42_swigregister(itkVTKImageExportIVF42)

def itkVTKImageExportIVF42___New_orig__() -> "itkVTKImageExportIVF42_Pointer":
    """itkVTKImageExportIVF42___New_orig__() -> itkVTKImageExportIVF42_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIVF42___New_orig__()

def itkVTKImageExportIVF42_cast(obj: 'itkLightObject') -> "itkVTKImageExportIVF42 *":
    """itkVTKImageExportIVF42_cast(itkLightObject obj) -> itkVTKImageExportIVF42"""
    return _itkVTKImageExportPython.itkVTKImageExportIVF42_cast(obj)

class itkVTKImageExportIVF43(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageExportIVF43_Pointer":
        """__New_orig__() -> itkVTKImageExportIVF43_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageExportIVF43_Pointer":
        """Clone(itkVTKImageExportIVF43 self) -> itkVTKImageExportIVF43_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF43_Clone(self)

    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIVF43_ImageDimensionCheck

    def SetInput(self, arg0: 'itkImageVF43') -> "void":
        """SetInput(itkVTKImageExportIVF43 self, itkImageVF43 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF43_SetInput(self, arg0)


    def GetInput(self) -> "itkImageVF43 *":
        """GetInput(itkVTKImageExportIVF43 self) -> itkImageVF43"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF43_GetInput(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIVF43

    def cast(obj: 'itkLightObject') -> "itkVTKImageExportIVF43 *":
        """cast(itkLightObject obj) -> itkVTKImageExportIVF43"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIVF43

        Create a new object of the class itkVTKImageExportIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIVF43.Clone = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF43_Clone, None, itkVTKImageExportIVF43)
itkVTKImageExportIVF43.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF43_SetInput, None, itkVTKImageExportIVF43)
itkVTKImageExportIVF43.GetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIVF43_GetInput, None, itkVTKImageExportIVF43)
itkVTKImageExportIVF43_swigregister = _itkVTKImageExportPython.itkVTKImageExportIVF43_swigregister
itkVTKImageExportIVF43_swigregister(itkVTKImageExportIVF43)

def itkVTKImageExportIVF43___New_orig__() -> "itkVTKImageExportIVF43_Pointer":
    """itkVTKImageExportIVF43___New_orig__() -> itkVTKImageExportIVF43_Pointer"""
    return _itkVTKImageExportPython.itkVTKImageExportIVF43___New_orig__()

def itkVTKImageExportIVF43_cast(obj: 'itkLightObject') -> "itkVTKImageExportIVF43 *":
    """itkVTKImageExportIVF43_cast(itkLightObject obj) -> itkVTKImageExportIVF43"""
    return _itkVTKImageExportPython.itkVTKImageExportIVF43_cast(obj)


def vtk_image_export(*args, **kwargs):
    """Procedural interface for VTKImageExport"""
    import itk
    instance = itk.VTKImageExport.New(*args, **kwargs)
    return instance.__internal_call__()

def vtk_image_export_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.VTKImageExport, itkTemplate.itkTemplate):
        vtk_image_export.__doc__ = itk.VTKImageExport.values()[0].__doc__
    else:
        vtk_image_export.__doc__ = itk.VTKImageExport.__doc__

def vtk_image_export_base(*args, **kwargs):
    """Procedural interface for VTKImageExportBase"""
    import itk
    instance = itk.VTKImageExportBase.New(*args, **kwargs)
    return instance.__internal_call__()

def vtk_image_export_base_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.VTKImageExportBase, itkTemplate.itkTemplate):
        vtk_image_export_base.__doc__ = itk.VTKImageExportBase.values()[0].__doc__
    else:
        vtk_image_export_base.__doc__ = itk.VTKImageExportBase.__doc__




