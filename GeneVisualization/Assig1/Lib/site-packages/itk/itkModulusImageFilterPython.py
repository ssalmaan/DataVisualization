# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkModulusImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkModulusImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkModulusImageFilterPython
            return _itkModulusImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkModulusImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkModulusImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkModulusImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkBinaryGeneratorImageFilterPython
import itkInPlaceImageFilterBPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkSimpleDataObjectDecoratorPython
import itkArrayPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython

def itkModulusImageFilterISS3ISS3_New():
  return itkModulusImageFilterISS3ISS3.New()


def itkModulusImageFilterISS2ISS2_New():
  return itkModulusImageFilterISS2ISS2.New()


def itkModulusImageFilterIUS3IUS3_New():
  return itkModulusImageFilterIUS3IUS3.New()


def itkModulusImageFilterIUS2IUS2_New():
  return itkModulusImageFilterIUS2IUS2.New()


def itkModulusImageFilterIUC3IUC3_New():
  return itkModulusImageFilterIUC3IUC3.New()


def itkModulusImageFilterIUC2IUC2_New():
  return itkModulusImageFilterIUC2IUC2.New()

class itkModulusImageFilterISS2ISS2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2):
    """Proxy of C++ itkModulusImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkModulusImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkModulusImageFilterISS2ISS2_Pointer"""
        return _itkModulusImageFilterPython.itkModulusImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkModulusImageFilterISS2ISS2_Pointer":
        """Clone(itkModulusImageFilterISS2ISS2 self) -> itkModulusImageFilterISS2ISS2_Pointer"""
        return _itkModulusImageFilterPython.itkModulusImageFilterISS2ISS2_Clone(self)


    def SetDividend(self, _arg: 'short') -> "void":
        """SetDividend(itkModulusImageFilterISS2ISS2 self, short _arg)"""
        return _itkModulusImageFilterPython.itkModulusImageFilterISS2ISS2_SetDividend(self, _arg)


    def GetDividend(self) -> "short const &":
        """GetDividend(itkModulusImageFilterISS2ISS2 self) -> short const &"""
        return _itkModulusImageFilterPython.itkModulusImageFilterISS2ISS2_GetDividend(self)

    InputHasNumericTraitsCheck = _itkModulusImageFilterPython.itkModulusImageFilterISS2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkModulusImageFilterPython.delete_itkModulusImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkModulusImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkModulusImageFilterISS2ISS2"""
        return _itkModulusImageFilterPython.itkModulusImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkModulusImageFilterISS2ISS2

        Create a new object of the class itkModulusImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkModulusImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkModulusImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkModulusImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkModulusImageFilterISS2ISS2.Clone = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterISS2ISS2_Clone, None, itkModulusImageFilterISS2ISS2)
itkModulusImageFilterISS2ISS2.SetDividend = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterISS2ISS2_SetDividend, None, itkModulusImageFilterISS2ISS2)
itkModulusImageFilterISS2ISS2.GetDividend = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterISS2ISS2_GetDividend, None, itkModulusImageFilterISS2ISS2)
itkModulusImageFilterISS2ISS2_swigregister = _itkModulusImageFilterPython.itkModulusImageFilterISS2ISS2_swigregister
itkModulusImageFilterISS2ISS2_swigregister(itkModulusImageFilterISS2ISS2)

def itkModulusImageFilterISS2ISS2___New_orig__() -> "itkModulusImageFilterISS2ISS2_Pointer":
    """itkModulusImageFilterISS2ISS2___New_orig__() -> itkModulusImageFilterISS2ISS2_Pointer"""
    return _itkModulusImageFilterPython.itkModulusImageFilterISS2ISS2___New_orig__()

def itkModulusImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkModulusImageFilterISS2ISS2 *":
    """itkModulusImageFilterISS2ISS2_cast(itkLightObject obj) -> itkModulusImageFilterISS2ISS2"""
    return _itkModulusImageFilterPython.itkModulusImageFilterISS2ISS2_cast(obj)

class itkModulusImageFilterISS3ISS3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3):
    """Proxy of C++ itkModulusImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkModulusImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkModulusImageFilterISS3ISS3_Pointer"""
        return _itkModulusImageFilterPython.itkModulusImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkModulusImageFilterISS3ISS3_Pointer":
        """Clone(itkModulusImageFilterISS3ISS3 self) -> itkModulusImageFilterISS3ISS3_Pointer"""
        return _itkModulusImageFilterPython.itkModulusImageFilterISS3ISS3_Clone(self)


    def SetDividend(self, _arg: 'short') -> "void":
        """SetDividend(itkModulusImageFilterISS3ISS3 self, short _arg)"""
        return _itkModulusImageFilterPython.itkModulusImageFilterISS3ISS3_SetDividend(self, _arg)


    def GetDividend(self) -> "short const &":
        """GetDividend(itkModulusImageFilterISS3ISS3 self) -> short const &"""
        return _itkModulusImageFilterPython.itkModulusImageFilterISS3ISS3_GetDividend(self)

    InputHasNumericTraitsCheck = _itkModulusImageFilterPython.itkModulusImageFilterISS3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkModulusImageFilterPython.delete_itkModulusImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkModulusImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkModulusImageFilterISS3ISS3"""
        return _itkModulusImageFilterPython.itkModulusImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkModulusImageFilterISS3ISS3

        Create a new object of the class itkModulusImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkModulusImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkModulusImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkModulusImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkModulusImageFilterISS3ISS3.Clone = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterISS3ISS3_Clone, None, itkModulusImageFilterISS3ISS3)
itkModulusImageFilterISS3ISS3.SetDividend = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterISS3ISS3_SetDividend, None, itkModulusImageFilterISS3ISS3)
itkModulusImageFilterISS3ISS3.GetDividend = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterISS3ISS3_GetDividend, None, itkModulusImageFilterISS3ISS3)
itkModulusImageFilterISS3ISS3_swigregister = _itkModulusImageFilterPython.itkModulusImageFilterISS3ISS3_swigregister
itkModulusImageFilterISS3ISS3_swigregister(itkModulusImageFilterISS3ISS3)

def itkModulusImageFilterISS3ISS3___New_orig__() -> "itkModulusImageFilterISS3ISS3_Pointer":
    """itkModulusImageFilterISS3ISS3___New_orig__() -> itkModulusImageFilterISS3ISS3_Pointer"""
    return _itkModulusImageFilterPython.itkModulusImageFilterISS3ISS3___New_orig__()

def itkModulusImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkModulusImageFilterISS3ISS3 *":
    """itkModulusImageFilterISS3ISS3_cast(itkLightObject obj) -> itkModulusImageFilterISS3ISS3"""
    return _itkModulusImageFilterPython.itkModulusImageFilterISS3ISS3_cast(obj)

class itkModulusImageFilterIUC2IUC2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2):
    """Proxy of C++ itkModulusImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkModulusImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkModulusImageFilterIUC2IUC2_Pointer"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkModulusImageFilterIUC2IUC2_Pointer":
        """Clone(itkModulusImageFilterIUC2IUC2 self) -> itkModulusImageFilterIUC2IUC2_Pointer"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUC2IUC2_Clone(self)


    def SetDividend(self, _arg: 'unsigned char') -> "void":
        """SetDividend(itkModulusImageFilterIUC2IUC2 self, unsigned char _arg)"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUC2IUC2_SetDividend(self, _arg)


    def GetDividend(self) -> "unsigned char const &":
        """GetDividend(itkModulusImageFilterIUC2IUC2 self) -> unsigned char const &"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUC2IUC2_GetDividend(self)

    InputHasNumericTraitsCheck = _itkModulusImageFilterPython.itkModulusImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkModulusImageFilterPython.delete_itkModulusImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkModulusImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkModulusImageFilterIUC2IUC2"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkModulusImageFilterIUC2IUC2

        Create a new object of the class itkModulusImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkModulusImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkModulusImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkModulusImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkModulusImageFilterIUC2IUC2.Clone = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterIUC2IUC2_Clone, None, itkModulusImageFilterIUC2IUC2)
itkModulusImageFilterIUC2IUC2.SetDividend = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterIUC2IUC2_SetDividend, None, itkModulusImageFilterIUC2IUC2)
itkModulusImageFilterIUC2IUC2.GetDividend = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterIUC2IUC2_GetDividend, None, itkModulusImageFilterIUC2IUC2)
itkModulusImageFilterIUC2IUC2_swigregister = _itkModulusImageFilterPython.itkModulusImageFilterIUC2IUC2_swigregister
itkModulusImageFilterIUC2IUC2_swigregister(itkModulusImageFilterIUC2IUC2)

def itkModulusImageFilterIUC2IUC2___New_orig__() -> "itkModulusImageFilterIUC2IUC2_Pointer":
    """itkModulusImageFilterIUC2IUC2___New_orig__() -> itkModulusImageFilterIUC2IUC2_Pointer"""
    return _itkModulusImageFilterPython.itkModulusImageFilterIUC2IUC2___New_orig__()

def itkModulusImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkModulusImageFilterIUC2IUC2 *":
    """itkModulusImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkModulusImageFilterIUC2IUC2"""
    return _itkModulusImageFilterPython.itkModulusImageFilterIUC2IUC2_cast(obj)

class itkModulusImageFilterIUC3IUC3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3):
    """Proxy of C++ itkModulusImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkModulusImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkModulusImageFilterIUC3IUC3_Pointer"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkModulusImageFilterIUC3IUC3_Pointer":
        """Clone(itkModulusImageFilterIUC3IUC3 self) -> itkModulusImageFilterIUC3IUC3_Pointer"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUC3IUC3_Clone(self)


    def SetDividend(self, _arg: 'unsigned char') -> "void":
        """SetDividend(itkModulusImageFilterIUC3IUC3 self, unsigned char _arg)"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUC3IUC3_SetDividend(self, _arg)


    def GetDividend(self) -> "unsigned char const &":
        """GetDividend(itkModulusImageFilterIUC3IUC3 self) -> unsigned char const &"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUC3IUC3_GetDividend(self)

    InputHasNumericTraitsCheck = _itkModulusImageFilterPython.itkModulusImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkModulusImageFilterPython.delete_itkModulusImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkModulusImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkModulusImageFilterIUC3IUC3"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkModulusImageFilterIUC3IUC3

        Create a new object of the class itkModulusImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkModulusImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkModulusImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkModulusImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkModulusImageFilterIUC3IUC3.Clone = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterIUC3IUC3_Clone, None, itkModulusImageFilterIUC3IUC3)
itkModulusImageFilterIUC3IUC3.SetDividend = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterIUC3IUC3_SetDividend, None, itkModulusImageFilterIUC3IUC3)
itkModulusImageFilterIUC3IUC3.GetDividend = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterIUC3IUC3_GetDividend, None, itkModulusImageFilterIUC3IUC3)
itkModulusImageFilterIUC3IUC3_swigregister = _itkModulusImageFilterPython.itkModulusImageFilterIUC3IUC3_swigregister
itkModulusImageFilterIUC3IUC3_swigregister(itkModulusImageFilterIUC3IUC3)

def itkModulusImageFilterIUC3IUC3___New_orig__() -> "itkModulusImageFilterIUC3IUC3_Pointer":
    """itkModulusImageFilterIUC3IUC3___New_orig__() -> itkModulusImageFilterIUC3IUC3_Pointer"""
    return _itkModulusImageFilterPython.itkModulusImageFilterIUC3IUC3___New_orig__()

def itkModulusImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkModulusImageFilterIUC3IUC3 *":
    """itkModulusImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkModulusImageFilterIUC3IUC3"""
    return _itkModulusImageFilterPython.itkModulusImageFilterIUC3IUC3_cast(obj)

class itkModulusImageFilterIUS2IUS2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2):
    """Proxy of C++ itkModulusImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkModulusImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkModulusImageFilterIUS2IUS2_Pointer"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkModulusImageFilterIUS2IUS2_Pointer":
        """Clone(itkModulusImageFilterIUS2IUS2 self) -> itkModulusImageFilterIUS2IUS2_Pointer"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUS2IUS2_Clone(self)


    def SetDividend(self, _arg: 'unsigned short') -> "void":
        """SetDividend(itkModulusImageFilterIUS2IUS2 self, unsigned short _arg)"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUS2IUS2_SetDividend(self, _arg)


    def GetDividend(self) -> "unsigned short const &":
        """GetDividend(itkModulusImageFilterIUS2IUS2 self) -> unsigned short const &"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUS2IUS2_GetDividend(self)

    InputHasNumericTraitsCheck = _itkModulusImageFilterPython.itkModulusImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkModulusImageFilterPython.delete_itkModulusImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkModulusImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkModulusImageFilterIUS2IUS2"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkModulusImageFilterIUS2IUS2

        Create a new object of the class itkModulusImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkModulusImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkModulusImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkModulusImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkModulusImageFilterIUS2IUS2.Clone = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterIUS2IUS2_Clone, None, itkModulusImageFilterIUS2IUS2)
itkModulusImageFilterIUS2IUS2.SetDividend = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterIUS2IUS2_SetDividend, None, itkModulusImageFilterIUS2IUS2)
itkModulusImageFilterIUS2IUS2.GetDividend = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterIUS2IUS2_GetDividend, None, itkModulusImageFilterIUS2IUS2)
itkModulusImageFilterIUS2IUS2_swigregister = _itkModulusImageFilterPython.itkModulusImageFilterIUS2IUS2_swigregister
itkModulusImageFilterIUS2IUS2_swigregister(itkModulusImageFilterIUS2IUS2)

def itkModulusImageFilterIUS2IUS2___New_orig__() -> "itkModulusImageFilterIUS2IUS2_Pointer":
    """itkModulusImageFilterIUS2IUS2___New_orig__() -> itkModulusImageFilterIUS2IUS2_Pointer"""
    return _itkModulusImageFilterPython.itkModulusImageFilterIUS2IUS2___New_orig__()

def itkModulusImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkModulusImageFilterIUS2IUS2 *":
    """itkModulusImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkModulusImageFilterIUS2IUS2"""
    return _itkModulusImageFilterPython.itkModulusImageFilterIUS2IUS2_cast(obj)

class itkModulusImageFilterIUS3IUS3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3):
    """Proxy of C++ itkModulusImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkModulusImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkModulusImageFilterIUS3IUS3_Pointer"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkModulusImageFilterIUS3IUS3_Pointer":
        """Clone(itkModulusImageFilterIUS3IUS3 self) -> itkModulusImageFilterIUS3IUS3_Pointer"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUS3IUS3_Clone(self)


    def SetDividend(self, _arg: 'unsigned short') -> "void":
        """SetDividend(itkModulusImageFilterIUS3IUS3 self, unsigned short _arg)"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUS3IUS3_SetDividend(self, _arg)


    def GetDividend(self) -> "unsigned short const &":
        """GetDividend(itkModulusImageFilterIUS3IUS3 self) -> unsigned short const &"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUS3IUS3_GetDividend(self)

    InputHasNumericTraitsCheck = _itkModulusImageFilterPython.itkModulusImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkModulusImageFilterPython.delete_itkModulusImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkModulusImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkModulusImageFilterIUS3IUS3"""
        return _itkModulusImageFilterPython.itkModulusImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkModulusImageFilterIUS3IUS3

        Create a new object of the class itkModulusImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkModulusImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkModulusImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkModulusImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkModulusImageFilterIUS3IUS3.Clone = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterIUS3IUS3_Clone, None, itkModulusImageFilterIUS3IUS3)
itkModulusImageFilterIUS3IUS3.SetDividend = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterIUS3IUS3_SetDividend, None, itkModulusImageFilterIUS3IUS3)
itkModulusImageFilterIUS3IUS3.GetDividend = new_instancemethod(_itkModulusImageFilterPython.itkModulusImageFilterIUS3IUS3_GetDividend, None, itkModulusImageFilterIUS3IUS3)
itkModulusImageFilterIUS3IUS3_swigregister = _itkModulusImageFilterPython.itkModulusImageFilterIUS3IUS3_swigregister
itkModulusImageFilterIUS3IUS3_swigregister(itkModulusImageFilterIUS3IUS3)

def itkModulusImageFilterIUS3IUS3___New_orig__() -> "itkModulusImageFilterIUS3IUS3_Pointer":
    """itkModulusImageFilterIUS3IUS3___New_orig__() -> itkModulusImageFilterIUS3IUS3_Pointer"""
    return _itkModulusImageFilterPython.itkModulusImageFilterIUS3IUS3___New_orig__()

def itkModulusImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkModulusImageFilterIUS3IUS3 *":
    """itkModulusImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkModulusImageFilterIUS3IUS3"""
    return _itkModulusImageFilterPython.itkModulusImageFilterIUS3IUS3_cast(obj)


def modulus_image_filter(*args, **kwargs):
    """Procedural interface for ModulusImageFilter"""
    import itk
    instance = itk.ModulusImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def modulus_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ModulusImageFilter, itkTemplate.itkTemplate):
        modulus_image_filter.__doc__ = itk.ModulusImageFilter.values()[0].__doc__
    else:
        modulus_image_filter.__doc__ = itk.ModulusImageFilter.__doc__




