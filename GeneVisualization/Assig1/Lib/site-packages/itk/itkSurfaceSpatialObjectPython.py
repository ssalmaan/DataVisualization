# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkSurfaceSpatialObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSurfaceSpatialObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkSurfaceSpatialObjectPython
            return _itkSurfaceSpatialObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSurfaceSpatialObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSurfaceSpatialObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSurfaceSpatialObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSpatialObjectBasePython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import vnl_vector_refPython
import itkFixedArrayPython
import itkCovariantVectorPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import ITKCommonBasePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkPointPython
import itkVectorContainerPython
import itkOffsetPython
import itkSizePython
import itkContinuousIndexPython
import itkIndexPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkImageRegionPython
import itkAffineTransformPython
import itkTransformBasePython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkSymmetricSecondRankTensorPython
import itkDiffusionTensor3DPython
import itkMatrixOffsetTransformBasePython
import itkSurfaceSpatialObjectPointPython
import itkSpatialObjectPointPython

def itkSurfaceSpatialObject3_New():
  return itkSurfaceSpatialObject3.New()


def itkSurfaceSpatialObject2_New():
  return itkSurfaceSpatialObject2.New()


def itkPointBasedSpatialObjectSurface3_New():
  return itkPointBasedSpatialObjectSurface3.New()


def itkPointBasedSpatialObjectSurface2_New():
  return itkPointBasedSpatialObjectSurface2.New()

class itkPointBasedSpatialObjectSurface2(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkPointBasedSpatialObjectSurface2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPointBasedSpatialObjectSurface2_Pointer":
        """__New_orig__() -> itkPointBasedSpatialObjectSurface2_Pointer"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPointBasedSpatialObjectSurface2_Pointer":
        """Clone(itkPointBasedSpatialObjectSurface2 self) -> itkPointBasedSpatialObjectSurface2_Pointer"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_Clone(self)


    def AddPoint(self, newPoints: 'itkSurfaceSpatialObjectPoint2') -> "void":
        """AddPoint(itkPointBasedSpatialObjectSurface2 self, itkSurfaceSpatialObjectPoint2 newPoints)"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_AddPoint(self, newPoints)


    def RemovePoint(self, id: 'unsigned long long') -> "void":
        """RemovePoint(itkPointBasedSpatialObjectSurface2 self, unsigned long long id)"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_RemovePoint(self, id)


    def SetPoints(self, newPoints: 'vectoritkSurfaceSpatialObjectPoint2') -> "void":
        """SetPoints(itkPointBasedSpatialObjectSurface2 self, vectoritkSurfaceSpatialObjectPoint2 newPoints)"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_SetPoints(self, newPoints)


    def GetPoints(self, *args) -> "std::vector< itkSurfaceSpatialObjectPoint2,std::allocator< itkSurfaceSpatialObjectPoint2 > > const &":
        """
        GetPoints(itkPointBasedSpatialObjectSurface2 self) -> vectoritkSurfaceSpatialObjectPoint2
        GetPoints(itkPointBasedSpatialObjectSurface2 self) -> vectoritkSurfaceSpatialObjectPoint2
        """
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_GetPoints(self, *args)


    def GetPoint(self, *args) -> "itkSurfaceSpatialObjectPoint2 *":
        """
        GetPoint(itkPointBasedSpatialObjectSurface2 self, unsigned long long id) -> itkSurfaceSpatialObjectPoint2
        GetPoint(itkPointBasedSpatialObjectSurface2 self, unsigned long long id) -> itkSurfaceSpatialObjectPoint2
        """
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_GetPoint(self, *args)


    def GetNumberOfPoints(self) -> "unsigned long long":
        """GetNumberOfPoints(itkPointBasedSpatialObjectSurface2 self) -> unsigned long long"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_GetNumberOfPoints(self)


    def ClosestPointInWorldSpace(self, point: 'itkPointD2') -> "itkSurfaceSpatialObjectPoint2":
        """ClosestPointInWorldSpace(itkPointBasedSpatialObjectSurface2 self, itkPointD2 point) -> itkSurfaceSpatialObjectPoint2"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_ClosestPointInWorldSpace(self, point)


    def ClosestPointInObjectSpace(self, point: 'itkPointD2') -> "itkSurfaceSpatialObjectPoint2":
        """ClosestPointInObjectSpace(itkPointBasedSpatialObjectSurface2 self, itkPointD2 point) -> itkSurfaceSpatialObjectPoint2"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_ClosestPointInObjectSpace(self, point)

    __swig_destroy__ = _itkSurfaceSpatialObjectPython.delete_itkPointBasedSpatialObjectSurface2

    def cast(obj: 'itkLightObject') -> "itkPointBasedSpatialObjectSurface2 *":
        """cast(itkLightObject obj) -> itkPointBasedSpatialObjectSurface2"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObjectSurface2

        Create a new object of the class itkPointBasedSpatialObjectSurface2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObjectSurface2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObjectSurface2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPointBasedSpatialObjectSurface2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPointBasedSpatialObjectSurface2.Clone = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_Clone, None, itkPointBasedSpatialObjectSurface2)
itkPointBasedSpatialObjectSurface2.AddPoint = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_AddPoint, None, itkPointBasedSpatialObjectSurface2)
itkPointBasedSpatialObjectSurface2.RemovePoint = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_RemovePoint, None, itkPointBasedSpatialObjectSurface2)
itkPointBasedSpatialObjectSurface2.SetPoints = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_SetPoints, None, itkPointBasedSpatialObjectSurface2)
itkPointBasedSpatialObjectSurface2.GetPoints = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_GetPoints, None, itkPointBasedSpatialObjectSurface2)
itkPointBasedSpatialObjectSurface2.GetPoint = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_GetPoint, None, itkPointBasedSpatialObjectSurface2)
itkPointBasedSpatialObjectSurface2.GetNumberOfPoints = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_GetNumberOfPoints, None, itkPointBasedSpatialObjectSurface2)
itkPointBasedSpatialObjectSurface2.ClosestPointInWorldSpace = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_ClosestPointInWorldSpace, None, itkPointBasedSpatialObjectSurface2)
itkPointBasedSpatialObjectSurface2.ClosestPointInObjectSpace = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_ClosestPointInObjectSpace, None, itkPointBasedSpatialObjectSurface2)
itkPointBasedSpatialObjectSurface2_swigregister = _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_swigregister
itkPointBasedSpatialObjectSurface2_swigregister(itkPointBasedSpatialObjectSurface2)

def itkPointBasedSpatialObjectSurface2___New_orig__() -> "itkPointBasedSpatialObjectSurface2_Pointer":
    """itkPointBasedSpatialObjectSurface2___New_orig__() -> itkPointBasedSpatialObjectSurface2_Pointer"""
    return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2___New_orig__()

def itkPointBasedSpatialObjectSurface2_cast(obj: 'itkLightObject') -> "itkPointBasedSpatialObjectSurface2 *":
    """itkPointBasedSpatialObjectSurface2_cast(itkLightObject obj) -> itkPointBasedSpatialObjectSurface2"""
    return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_cast(obj)

class itkPointBasedSpatialObjectSurface3(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkPointBasedSpatialObjectSurface3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPointBasedSpatialObjectSurface3_Pointer":
        """__New_orig__() -> itkPointBasedSpatialObjectSurface3_Pointer"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPointBasedSpatialObjectSurface3_Pointer":
        """Clone(itkPointBasedSpatialObjectSurface3 self) -> itkPointBasedSpatialObjectSurface3_Pointer"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_Clone(self)


    def AddPoint(self, newPoints: 'itkSurfaceSpatialObjectPoint3') -> "void":
        """AddPoint(itkPointBasedSpatialObjectSurface3 self, itkSurfaceSpatialObjectPoint3 newPoints)"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_AddPoint(self, newPoints)


    def RemovePoint(self, id: 'unsigned long long') -> "void":
        """RemovePoint(itkPointBasedSpatialObjectSurface3 self, unsigned long long id)"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_RemovePoint(self, id)


    def SetPoints(self, newPoints: 'vectoritkSurfaceSpatialObjectPoint3') -> "void":
        """SetPoints(itkPointBasedSpatialObjectSurface3 self, vectoritkSurfaceSpatialObjectPoint3 newPoints)"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_SetPoints(self, newPoints)


    def GetPoints(self, *args) -> "std::vector< itkSurfaceSpatialObjectPoint3,std::allocator< itkSurfaceSpatialObjectPoint3 > > const &":
        """
        GetPoints(itkPointBasedSpatialObjectSurface3 self) -> vectoritkSurfaceSpatialObjectPoint3
        GetPoints(itkPointBasedSpatialObjectSurface3 self) -> vectoritkSurfaceSpatialObjectPoint3
        """
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_GetPoints(self, *args)


    def GetPoint(self, *args) -> "itkSurfaceSpatialObjectPoint3 *":
        """
        GetPoint(itkPointBasedSpatialObjectSurface3 self, unsigned long long id) -> itkSurfaceSpatialObjectPoint3
        GetPoint(itkPointBasedSpatialObjectSurface3 self, unsigned long long id) -> itkSurfaceSpatialObjectPoint3
        """
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_GetPoint(self, *args)


    def GetNumberOfPoints(self) -> "unsigned long long":
        """GetNumberOfPoints(itkPointBasedSpatialObjectSurface3 self) -> unsigned long long"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_GetNumberOfPoints(self)


    def ClosestPointInWorldSpace(self, point: 'itkPointD3') -> "itkSurfaceSpatialObjectPoint3":
        """ClosestPointInWorldSpace(itkPointBasedSpatialObjectSurface3 self, itkPointD3 point) -> itkSurfaceSpatialObjectPoint3"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_ClosestPointInWorldSpace(self, point)


    def ClosestPointInObjectSpace(self, point: 'itkPointD3') -> "itkSurfaceSpatialObjectPoint3":
        """ClosestPointInObjectSpace(itkPointBasedSpatialObjectSurface3 self, itkPointD3 point) -> itkSurfaceSpatialObjectPoint3"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_ClosestPointInObjectSpace(self, point)

    __swig_destroy__ = _itkSurfaceSpatialObjectPython.delete_itkPointBasedSpatialObjectSurface3

    def cast(obj: 'itkLightObject') -> "itkPointBasedSpatialObjectSurface3 *":
        """cast(itkLightObject obj) -> itkPointBasedSpatialObjectSurface3"""
        return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObjectSurface3

        Create a new object of the class itkPointBasedSpatialObjectSurface3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObjectSurface3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObjectSurface3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPointBasedSpatialObjectSurface3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPointBasedSpatialObjectSurface3.Clone = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_Clone, None, itkPointBasedSpatialObjectSurface3)
itkPointBasedSpatialObjectSurface3.AddPoint = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_AddPoint, None, itkPointBasedSpatialObjectSurface3)
itkPointBasedSpatialObjectSurface3.RemovePoint = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_RemovePoint, None, itkPointBasedSpatialObjectSurface3)
itkPointBasedSpatialObjectSurface3.SetPoints = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_SetPoints, None, itkPointBasedSpatialObjectSurface3)
itkPointBasedSpatialObjectSurface3.GetPoints = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_GetPoints, None, itkPointBasedSpatialObjectSurface3)
itkPointBasedSpatialObjectSurface3.GetPoint = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_GetPoint, None, itkPointBasedSpatialObjectSurface3)
itkPointBasedSpatialObjectSurface3.GetNumberOfPoints = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_GetNumberOfPoints, None, itkPointBasedSpatialObjectSurface3)
itkPointBasedSpatialObjectSurface3.ClosestPointInWorldSpace = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_ClosestPointInWorldSpace, None, itkPointBasedSpatialObjectSurface3)
itkPointBasedSpatialObjectSurface3.ClosestPointInObjectSpace = new_instancemethod(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_ClosestPointInObjectSpace, None, itkPointBasedSpatialObjectSurface3)
itkPointBasedSpatialObjectSurface3_swigregister = _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_swigregister
itkPointBasedSpatialObjectSurface3_swigregister(itkPointBasedSpatialObjectSurface3)

def itkPointBasedSpatialObjectSurface3___New_orig__() -> "itkPointBasedSpatialObjectSurface3_Pointer":
    """itkPointBasedSpatialObjectSurface3___New_orig__() -> itkPointBasedSpatialObjectSurface3_Pointer"""
    return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3___New_orig__()

def itkPointBasedSpatialObjectSurface3_cast(obj: 'itkLightObject') -> "itkPointBasedSpatialObjectSurface3 *":
    """itkPointBasedSpatialObjectSurface3_cast(itkLightObject obj) -> itkPointBasedSpatialObjectSurface3"""
    return _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_cast(obj)

class itkSurfaceSpatialObject2(itkPointBasedSpatialObjectSurface2):
    """Proxy of C++ itkSurfaceSpatialObject2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSurfaceSpatialObject2_Pointer":
        """__New_orig__() -> itkSurfaceSpatialObject2_Pointer"""
        return _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSurfaceSpatialObject2_Pointer":
        """Clone(itkSurfaceSpatialObject2 self) -> itkSurfaceSpatialObject2_Pointer"""
        return _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2_Clone(self)


    def Approximate3DNormals(self) -> "bool":
        """Approximate3DNormals(itkSurfaceSpatialObject2 self) -> bool"""
        return _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2_Approximate3DNormals(self)

    __swig_destroy__ = _itkSurfaceSpatialObjectPython.delete_itkSurfaceSpatialObject2

    def cast(obj: 'itkLightObject') -> "itkSurfaceSpatialObject2 *":
        """cast(itkLightObject obj) -> itkSurfaceSpatialObject2"""
        return _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSurfaceSpatialObject2

        Create a new object of the class itkSurfaceSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSurfaceSpatialObject2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSurfaceSpatialObject2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSurfaceSpatialObject2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSurfaceSpatialObject2.Clone = new_instancemethod(_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2_Clone, None, itkSurfaceSpatialObject2)
itkSurfaceSpatialObject2.Approximate3DNormals = new_instancemethod(_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2_Approximate3DNormals, None, itkSurfaceSpatialObject2)
itkSurfaceSpatialObject2_swigregister = _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2_swigregister
itkSurfaceSpatialObject2_swigregister(itkSurfaceSpatialObject2)

def itkSurfaceSpatialObject2___New_orig__() -> "itkSurfaceSpatialObject2_Pointer":
    """itkSurfaceSpatialObject2___New_orig__() -> itkSurfaceSpatialObject2_Pointer"""
    return _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2___New_orig__()

def itkSurfaceSpatialObject2_cast(obj: 'itkLightObject') -> "itkSurfaceSpatialObject2 *":
    """itkSurfaceSpatialObject2_cast(itkLightObject obj) -> itkSurfaceSpatialObject2"""
    return _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2_cast(obj)

class itkSurfaceSpatialObject3(itkPointBasedSpatialObjectSurface3):
    """Proxy of C++ itkSurfaceSpatialObject3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSurfaceSpatialObject3_Pointer":
        """__New_orig__() -> itkSurfaceSpatialObject3_Pointer"""
        return _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSurfaceSpatialObject3_Pointer":
        """Clone(itkSurfaceSpatialObject3 self) -> itkSurfaceSpatialObject3_Pointer"""
        return _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3_Clone(self)


    def Approximate3DNormals(self) -> "bool":
        """Approximate3DNormals(itkSurfaceSpatialObject3 self) -> bool"""
        return _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3_Approximate3DNormals(self)

    __swig_destroy__ = _itkSurfaceSpatialObjectPython.delete_itkSurfaceSpatialObject3

    def cast(obj: 'itkLightObject') -> "itkSurfaceSpatialObject3 *":
        """cast(itkLightObject obj) -> itkSurfaceSpatialObject3"""
        return _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSurfaceSpatialObject3

        Create a new object of the class itkSurfaceSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSurfaceSpatialObject3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSurfaceSpatialObject3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSurfaceSpatialObject3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSurfaceSpatialObject3.Clone = new_instancemethod(_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3_Clone, None, itkSurfaceSpatialObject3)
itkSurfaceSpatialObject3.Approximate3DNormals = new_instancemethod(_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3_Approximate3DNormals, None, itkSurfaceSpatialObject3)
itkSurfaceSpatialObject3_swigregister = _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3_swigregister
itkSurfaceSpatialObject3_swigregister(itkSurfaceSpatialObject3)

def itkSurfaceSpatialObject3___New_orig__() -> "itkSurfaceSpatialObject3_Pointer":
    """itkSurfaceSpatialObject3___New_orig__() -> itkSurfaceSpatialObject3_Pointer"""
    return _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3___New_orig__()

def itkSurfaceSpatialObject3_cast(obj: 'itkLightObject') -> "itkSurfaceSpatialObject3 *":
    """itkSurfaceSpatialObject3_cast(itkLightObject obj) -> itkSurfaceSpatialObject3"""
    return _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3_cast(obj)



