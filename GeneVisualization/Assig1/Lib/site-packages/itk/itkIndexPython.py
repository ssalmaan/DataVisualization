# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkIndexPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkIndexPython', [dirname(__file__)])
        except ImportError:
            import _itkIndexPython
            return _itkIndexPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkIndexPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkIndexPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkIndexPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSizePython
import pyBasePython
import itkOffsetPython
class itkIndex1(object):
    """Proxy of C++ itkIndex1 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetIndexDimension() -> "unsigned int":
        """GetIndexDimension() -> unsigned int"""
        return _itkIndexPython.itkIndex1_GetIndexDimension()

    GetIndexDimension = staticmethod(GetIndexDimension)

    def __add__(self, *args) -> "itkIndex1 const":
        """
        __add__(itkIndex1 self, itkSize1 sz) -> itkIndex1
        __add__(itkIndex1 self, itkOffset1 offset) -> itkIndex1
        """
        return _itkIndexPython.itkIndex1___add__(self, *args)


    def __iadd__(self, *args) -> "itkIndex1 const &":
        """
        __iadd__(itkIndex1 self, itkSize1 sz) -> itkIndex1
        __iadd__(itkIndex1 self, itkOffset1 offset) -> itkIndex1
        """
        return _itkIndexPython.itkIndex1___iadd__(self, *args)


    def __isub__(self, *args) -> "itkIndex1 const &":
        """
        __isub__(itkIndex1 self, itkSize1 sz) -> itkIndex1
        __isub__(itkIndex1 self, itkOffset1 offset) -> itkIndex1
        """
        return _itkIndexPython.itkIndex1___isub__(self, *args)


    def __sub__(self, *args) -> "itkOffset1 const":
        """
        __sub__(itkIndex1 self, itkSize1 sz) -> itkIndex1
        __sub__(itkIndex1 self, itkOffset1 off) -> itkIndex1
        __sub__(itkIndex1 self, itkIndex1 vec) -> itkOffset1
        """
        return _itkIndexPython.itkIndex1___sub__(self, *args)


    def __mul__(self, vec: 'itkSize1') -> "itkIndex1 const":
        """__mul__(itkIndex1 self, itkSize1 vec) -> itkIndex1"""
        return _itkIndexPython.itkIndex1___mul__(self, vec)


    def GetIndex(self) -> "long long const *":
        """GetIndex(itkIndex1 self) -> long long const *"""
        return _itkIndexPython.itkIndex1_GetIndex(self)


    def SetIndex(self, val: 'long long const *') -> "void":
        """SetIndex(itkIndex1 self, long long const * val)"""
        return _itkIndexPython.itkIndex1_SetIndex(self, val)


    def SetElement(self, element: 'unsigned long', val: 'long long') -> "void":
        """SetElement(itkIndex1 self, unsigned long element, long long val)"""
        return _itkIndexPython.itkIndex1_SetElement(self, element, val)


    def GetElement(self, element: 'unsigned long') -> "long long":
        """GetElement(itkIndex1 self, unsigned long element) -> long long"""
        return _itkIndexPython.itkIndex1_GetElement(self, element)


    def Fill(self, value: 'long long') -> "void":
        """Fill(itkIndex1 self, long long value)"""
        return _itkIndexPython.itkIndex1_Fill(self, value)


    def GetBasisIndex(dim: 'unsigned int') -> "itkIndex1":
        """GetBasisIndex(unsigned int dim) -> itkIndex1"""
        return _itkIndexPython.itkIndex1_GetBasisIndex(dim)

    GetBasisIndex = staticmethod(GetBasisIndex)

    def assign(self, newValue: 'long long const &') -> "void":
        """assign(itkIndex1 self, long long const & newValue)"""
        return _itkIndexPython.itkIndex1_assign(self, newValue)


    def swap(self, other: 'itkIndex1') -> "void":
        """swap(itkIndex1 self, itkIndex1 other)"""
        return _itkIndexPython.itkIndex1_swap(self, other)


    def begin(self, *args) -> "long long const *":
        """
        begin(itkIndex1 self) -> long long
        begin(itkIndex1 self) -> long long const *
        """
        return _itkIndexPython.itkIndex1_begin(self, *args)


    def end(self, *args) -> "long long const *":
        """
        end(itkIndex1 self) -> long long
        end(itkIndex1 self) -> long long const *
        """
        return _itkIndexPython.itkIndex1_end(self, *args)


    def rbegin(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rbegin(itkIndex1 self) -> std::reverse_iterator< long long * >
        rbegin(itkIndex1 self) -> std::reverse_iterator< long long const * >
        """
        return _itkIndexPython.itkIndex1_rbegin(self, *args)


    def rend(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rend(itkIndex1 self) -> std::reverse_iterator< long long * >
        rend(itkIndex1 self) -> std::reverse_iterator< long long const * >
        """
        return _itkIndexPython.itkIndex1_rend(self, *args)


    def size(self) -> "unsigned int":
        """size(itkIndex1 self) -> unsigned int"""
        return _itkIndexPython.itkIndex1_size(self)


    def max_size(self) -> "unsigned int":
        """max_size(itkIndex1 self) -> unsigned int"""
        return _itkIndexPython.itkIndex1_max_size(self)


    def empty(self) -> "bool":
        """empty(itkIndex1 self) -> bool"""
        return _itkIndexPython.itkIndex1_empty(self)


    def at(self, *args) -> "long long const &":
        """
        at(itkIndex1 self, unsigned int pos) -> long long
        at(itkIndex1 self, unsigned int pos) -> long long const &
        """
        return _itkIndexPython.itkIndex1_at(self, *args)


    def front(self, *args) -> "long long const &":
        """
        front(itkIndex1 self) -> long long
        front(itkIndex1 self) -> long long const &
        """
        return _itkIndexPython.itkIndex1_front(self, *args)


    def back(self, *args) -> "long long const &":
        """
        back(itkIndex1 self) -> long long
        back(itkIndex1 self) -> long long const &
        """
        return _itkIndexPython.itkIndex1_back(self, *args)


    def data(self, *args) -> "long long const *":
        """
        data(itkIndex1 self) -> long long
        data(itkIndex1 self) -> long long const *
        """
        return _itkIndexPython.itkIndex1_data(self, *args)


    def __init__(self, *args):
        """
        __init__(itkIndex1 self) -> itkIndex1
        __init__(itkIndex1 self, itkIndex1 arg0) -> itkIndex1
        """
        _itkIndexPython.itkIndex1_swiginit(self, _itkIndexPython.new_itkIndex1(*args))
    __swig_destroy__ = _itkIndexPython.delete_itkIndex1

    def __getitem__(self, d: 'unsigned long') -> "long":
        """__getitem__(itkIndex1 self, unsigned long d) -> long"""
        return _itkIndexPython.itkIndex1___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'long') -> "void":
        """__setitem__(itkIndex1 self, unsigned long d, long v)"""
        return _itkIndexPython.itkIndex1___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkIndexPython.itkIndex1___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkIndex1 self) -> std::string"""
        return _itkIndexPython.itkIndex1___repr__(self)

itkIndex1.__add__ = new_instancemethod(_itkIndexPython.itkIndex1___add__, None, itkIndex1)
itkIndex1.__iadd__ = new_instancemethod(_itkIndexPython.itkIndex1___iadd__, None, itkIndex1)
itkIndex1.__isub__ = new_instancemethod(_itkIndexPython.itkIndex1___isub__, None, itkIndex1)
itkIndex1.__sub__ = new_instancemethod(_itkIndexPython.itkIndex1___sub__, None, itkIndex1)
itkIndex1.__mul__ = new_instancemethod(_itkIndexPython.itkIndex1___mul__, None, itkIndex1)
itkIndex1.GetIndex = new_instancemethod(_itkIndexPython.itkIndex1_GetIndex, None, itkIndex1)
itkIndex1.SetIndex = new_instancemethod(_itkIndexPython.itkIndex1_SetIndex, None, itkIndex1)
itkIndex1.SetElement = new_instancemethod(_itkIndexPython.itkIndex1_SetElement, None, itkIndex1)
itkIndex1.GetElement = new_instancemethod(_itkIndexPython.itkIndex1_GetElement, None, itkIndex1)
itkIndex1.Fill = new_instancemethod(_itkIndexPython.itkIndex1_Fill, None, itkIndex1)
itkIndex1.assign = new_instancemethod(_itkIndexPython.itkIndex1_assign, None, itkIndex1)
itkIndex1.swap = new_instancemethod(_itkIndexPython.itkIndex1_swap, None, itkIndex1)
itkIndex1.begin = new_instancemethod(_itkIndexPython.itkIndex1_begin, None, itkIndex1)
itkIndex1.end = new_instancemethod(_itkIndexPython.itkIndex1_end, None, itkIndex1)
itkIndex1.rbegin = new_instancemethod(_itkIndexPython.itkIndex1_rbegin, None, itkIndex1)
itkIndex1.rend = new_instancemethod(_itkIndexPython.itkIndex1_rend, None, itkIndex1)
itkIndex1.size = new_instancemethod(_itkIndexPython.itkIndex1_size, None, itkIndex1)
itkIndex1.max_size = new_instancemethod(_itkIndexPython.itkIndex1_max_size, None, itkIndex1)
itkIndex1.empty = new_instancemethod(_itkIndexPython.itkIndex1_empty, None, itkIndex1)
itkIndex1.at = new_instancemethod(_itkIndexPython.itkIndex1_at, None, itkIndex1)
itkIndex1.front = new_instancemethod(_itkIndexPython.itkIndex1_front, None, itkIndex1)
itkIndex1.back = new_instancemethod(_itkIndexPython.itkIndex1_back, None, itkIndex1)
itkIndex1.data = new_instancemethod(_itkIndexPython.itkIndex1_data, None, itkIndex1)
itkIndex1.__getitem__ = new_instancemethod(_itkIndexPython.itkIndex1___getitem__, None, itkIndex1)
itkIndex1.__setitem__ = new_instancemethod(_itkIndexPython.itkIndex1___setitem__, None, itkIndex1)
itkIndex1.__repr__ = new_instancemethod(_itkIndexPython.itkIndex1___repr__, None, itkIndex1)
itkIndex1_swigregister = _itkIndexPython.itkIndex1_swigregister
itkIndex1_swigregister(itkIndex1)

def itkIndex1_GetIndexDimension() -> "unsigned int":
    """itkIndex1_GetIndexDimension() -> unsigned int"""
    return _itkIndexPython.itkIndex1_GetIndexDimension()

def itkIndex1_GetBasisIndex(dim: 'unsigned int') -> "itkIndex1":
    """itkIndex1_GetBasisIndex(unsigned int dim) -> itkIndex1"""
    return _itkIndexPython.itkIndex1_GetBasisIndex(dim)

def itkIndex1___len__() -> "unsigned int":
    """itkIndex1___len__() -> unsigned int"""
    return _itkIndexPython.itkIndex1___len__()

class itkIndex2(object):
    """Proxy of C++ itkIndex2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetIndexDimension() -> "unsigned int":
        """GetIndexDimension() -> unsigned int"""
        return _itkIndexPython.itkIndex2_GetIndexDimension()

    GetIndexDimension = staticmethod(GetIndexDimension)

    def __add__(self, *args) -> "itkIndex2 const":
        """
        __add__(itkIndex2 self, itkSize2 sz) -> itkIndex2
        __add__(itkIndex2 self, itkOffset2 offset) -> itkIndex2
        """
        return _itkIndexPython.itkIndex2___add__(self, *args)


    def __iadd__(self, *args) -> "itkIndex2 const &":
        """
        __iadd__(itkIndex2 self, itkSize2 sz) -> itkIndex2
        __iadd__(itkIndex2 self, itkOffset2 offset) -> itkIndex2
        """
        return _itkIndexPython.itkIndex2___iadd__(self, *args)


    def __isub__(self, *args) -> "itkIndex2 const &":
        """
        __isub__(itkIndex2 self, itkSize2 sz) -> itkIndex2
        __isub__(itkIndex2 self, itkOffset2 offset) -> itkIndex2
        """
        return _itkIndexPython.itkIndex2___isub__(self, *args)


    def __sub__(self, *args) -> "itkOffset2 const":
        """
        __sub__(itkIndex2 self, itkSize2 sz) -> itkIndex2
        __sub__(itkIndex2 self, itkOffset2 off) -> itkIndex2
        __sub__(itkIndex2 self, itkIndex2 vec) -> itkOffset2
        """
        return _itkIndexPython.itkIndex2___sub__(self, *args)


    def __mul__(self, vec: 'itkSize2') -> "itkIndex2 const":
        """__mul__(itkIndex2 self, itkSize2 vec) -> itkIndex2"""
        return _itkIndexPython.itkIndex2___mul__(self, vec)


    def GetIndex(self) -> "long long const *":
        """GetIndex(itkIndex2 self) -> long long const *"""
        return _itkIndexPython.itkIndex2_GetIndex(self)


    def SetIndex(self, val: 'long long const *') -> "void":
        """SetIndex(itkIndex2 self, long long const * val)"""
        return _itkIndexPython.itkIndex2_SetIndex(self, val)


    def SetElement(self, element: 'unsigned long', val: 'long long') -> "void":
        """SetElement(itkIndex2 self, unsigned long element, long long val)"""
        return _itkIndexPython.itkIndex2_SetElement(self, element, val)


    def GetElement(self, element: 'unsigned long') -> "long long":
        """GetElement(itkIndex2 self, unsigned long element) -> long long"""
        return _itkIndexPython.itkIndex2_GetElement(self, element)


    def Fill(self, value: 'long long') -> "void":
        """Fill(itkIndex2 self, long long value)"""
        return _itkIndexPython.itkIndex2_Fill(self, value)


    def GetBasisIndex(dim: 'unsigned int') -> "itkIndex2":
        """GetBasisIndex(unsigned int dim) -> itkIndex2"""
        return _itkIndexPython.itkIndex2_GetBasisIndex(dim)

    GetBasisIndex = staticmethod(GetBasisIndex)

    def assign(self, newValue: 'long long const &') -> "void":
        """assign(itkIndex2 self, long long const & newValue)"""
        return _itkIndexPython.itkIndex2_assign(self, newValue)


    def swap(self, other: 'itkIndex2') -> "void":
        """swap(itkIndex2 self, itkIndex2 other)"""
        return _itkIndexPython.itkIndex2_swap(self, other)


    def begin(self, *args) -> "long long const *":
        """
        begin(itkIndex2 self) -> long long
        begin(itkIndex2 self) -> long long const *
        """
        return _itkIndexPython.itkIndex2_begin(self, *args)


    def end(self, *args) -> "long long const *":
        """
        end(itkIndex2 self) -> long long
        end(itkIndex2 self) -> long long const *
        """
        return _itkIndexPython.itkIndex2_end(self, *args)


    def rbegin(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rbegin(itkIndex2 self) -> std::reverse_iterator< long long * >
        rbegin(itkIndex2 self) -> std::reverse_iterator< long long const * >
        """
        return _itkIndexPython.itkIndex2_rbegin(self, *args)


    def rend(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rend(itkIndex2 self) -> std::reverse_iterator< long long * >
        rend(itkIndex2 self) -> std::reverse_iterator< long long const * >
        """
        return _itkIndexPython.itkIndex2_rend(self, *args)


    def size(self) -> "unsigned int":
        """size(itkIndex2 self) -> unsigned int"""
        return _itkIndexPython.itkIndex2_size(self)


    def max_size(self) -> "unsigned int":
        """max_size(itkIndex2 self) -> unsigned int"""
        return _itkIndexPython.itkIndex2_max_size(self)


    def empty(self) -> "bool":
        """empty(itkIndex2 self) -> bool"""
        return _itkIndexPython.itkIndex2_empty(self)


    def at(self, *args) -> "long long const &":
        """
        at(itkIndex2 self, unsigned int pos) -> long long
        at(itkIndex2 self, unsigned int pos) -> long long const &
        """
        return _itkIndexPython.itkIndex2_at(self, *args)


    def front(self, *args) -> "long long const &":
        """
        front(itkIndex2 self) -> long long
        front(itkIndex2 self) -> long long const &
        """
        return _itkIndexPython.itkIndex2_front(self, *args)


    def back(self, *args) -> "long long const &":
        """
        back(itkIndex2 self) -> long long
        back(itkIndex2 self) -> long long const &
        """
        return _itkIndexPython.itkIndex2_back(self, *args)


    def data(self, *args) -> "long long const *":
        """
        data(itkIndex2 self) -> long long
        data(itkIndex2 self) -> long long const *
        """
        return _itkIndexPython.itkIndex2_data(self, *args)


    def __init__(self, *args):
        """
        __init__(itkIndex2 self) -> itkIndex2
        __init__(itkIndex2 self, itkIndex2 arg0) -> itkIndex2
        """
        _itkIndexPython.itkIndex2_swiginit(self, _itkIndexPython.new_itkIndex2(*args))
    __swig_destroy__ = _itkIndexPython.delete_itkIndex2

    def __getitem__(self, d: 'unsigned long') -> "long":
        """__getitem__(itkIndex2 self, unsigned long d) -> long"""
        return _itkIndexPython.itkIndex2___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'long') -> "void":
        """__setitem__(itkIndex2 self, unsigned long d, long v)"""
        return _itkIndexPython.itkIndex2___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkIndexPython.itkIndex2___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkIndex2 self) -> std::string"""
        return _itkIndexPython.itkIndex2___repr__(self)

itkIndex2.__add__ = new_instancemethod(_itkIndexPython.itkIndex2___add__, None, itkIndex2)
itkIndex2.__iadd__ = new_instancemethod(_itkIndexPython.itkIndex2___iadd__, None, itkIndex2)
itkIndex2.__isub__ = new_instancemethod(_itkIndexPython.itkIndex2___isub__, None, itkIndex2)
itkIndex2.__sub__ = new_instancemethod(_itkIndexPython.itkIndex2___sub__, None, itkIndex2)
itkIndex2.__mul__ = new_instancemethod(_itkIndexPython.itkIndex2___mul__, None, itkIndex2)
itkIndex2.GetIndex = new_instancemethod(_itkIndexPython.itkIndex2_GetIndex, None, itkIndex2)
itkIndex2.SetIndex = new_instancemethod(_itkIndexPython.itkIndex2_SetIndex, None, itkIndex2)
itkIndex2.SetElement = new_instancemethod(_itkIndexPython.itkIndex2_SetElement, None, itkIndex2)
itkIndex2.GetElement = new_instancemethod(_itkIndexPython.itkIndex2_GetElement, None, itkIndex2)
itkIndex2.Fill = new_instancemethod(_itkIndexPython.itkIndex2_Fill, None, itkIndex2)
itkIndex2.assign = new_instancemethod(_itkIndexPython.itkIndex2_assign, None, itkIndex2)
itkIndex2.swap = new_instancemethod(_itkIndexPython.itkIndex2_swap, None, itkIndex2)
itkIndex2.begin = new_instancemethod(_itkIndexPython.itkIndex2_begin, None, itkIndex2)
itkIndex2.end = new_instancemethod(_itkIndexPython.itkIndex2_end, None, itkIndex2)
itkIndex2.rbegin = new_instancemethod(_itkIndexPython.itkIndex2_rbegin, None, itkIndex2)
itkIndex2.rend = new_instancemethod(_itkIndexPython.itkIndex2_rend, None, itkIndex2)
itkIndex2.size = new_instancemethod(_itkIndexPython.itkIndex2_size, None, itkIndex2)
itkIndex2.max_size = new_instancemethod(_itkIndexPython.itkIndex2_max_size, None, itkIndex2)
itkIndex2.empty = new_instancemethod(_itkIndexPython.itkIndex2_empty, None, itkIndex2)
itkIndex2.at = new_instancemethod(_itkIndexPython.itkIndex2_at, None, itkIndex2)
itkIndex2.front = new_instancemethod(_itkIndexPython.itkIndex2_front, None, itkIndex2)
itkIndex2.back = new_instancemethod(_itkIndexPython.itkIndex2_back, None, itkIndex2)
itkIndex2.data = new_instancemethod(_itkIndexPython.itkIndex2_data, None, itkIndex2)
itkIndex2.__getitem__ = new_instancemethod(_itkIndexPython.itkIndex2___getitem__, None, itkIndex2)
itkIndex2.__setitem__ = new_instancemethod(_itkIndexPython.itkIndex2___setitem__, None, itkIndex2)
itkIndex2.__repr__ = new_instancemethod(_itkIndexPython.itkIndex2___repr__, None, itkIndex2)
itkIndex2_swigregister = _itkIndexPython.itkIndex2_swigregister
itkIndex2_swigregister(itkIndex2)

def itkIndex2_GetIndexDimension() -> "unsigned int":
    """itkIndex2_GetIndexDimension() -> unsigned int"""
    return _itkIndexPython.itkIndex2_GetIndexDimension()

def itkIndex2_GetBasisIndex(dim: 'unsigned int') -> "itkIndex2":
    """itkIndex2_GetBasisIndex(unsigned int dim) -> itkIndex2"""
    return _itkIndexPython.itkIndex2_GetBasisIndex(dim)

def itkIndex2___len__() -> "unsigned int":
    """itkIndex2___len__() -> unsigned int"""
    return _itkIndexPython.itkIndex2___len__()

class itkIndex3(object):
    """Proxy of C++ itkIndex3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetIndexDimension() -> "unsigned int":
        """GetIndexDimension() -> unsigned int"""
        return _itkIndexPython.itkIndex3_GetIndexDimension()

    GetIndexDimension = staticmethod(GetIndexDimension)

    def __add__(self, *args) -> "itkIndex3 const":
        """
        __add__(itkIndex3 self, itkSize3 sz) -> itkIndex3
        __add__(itkIndex3 self, itkOffset3 offset) -> itkIndex3
        """
        return _itkIndexPython.itkIndex3___add__(self, *args)


    def __iadd__(self, *args) -> "itkIndex3 const &":
        """
        __iadd__(itkIndex3 self, itkSize3 sz) -> itkIndex3
        __iadd__(itkIndex3 self, itkOffset3 offset) -> itkIndex3
        """
        return _itkIndexPython.itkIndex3___iadd__(self, *args)


    def __isub__(self, *args) -> "itkIndex3 const &":
        """
        __isub__(itkIndex3 self, itkSize3 sz) -> itkIndex3
        __isub__(itkIndex3 self, itkOffset3 offset) -> itkIndex3
        """
        return _itkIndexPython.itkIndex3___isub__(self, *args)


    def __sub__(self, *args) -> "itkOffset3 const":
        """
        __sub__(itkIndex3 self, itkSize3 sz) -> itkIndex3
        __sub__(itkIndex3 self, itkOffset3 off) -> itkIndex3
        __sub__(itkIndex3 self, itkIndex3 vec) -> itkOffset3
        """
        return _itkIndexPython.itkIndex3___sub__(self, *args)


    def __mul__(self, vec: 'itkSize3') -> "itkIndex3 const":
        """__mul__(itkIndex3 self, itkSize3 vec) -> itkIndex3"""
        return _itkIndexPython.itkIndex3___mul__(self, vec)


    def GetIndex(self) -> "long long const *":
        """GetIndex(itkIndex3 self) -> long long const *"""
        return _itkIndexPython.itkIndex3_GetIndex(self)


    def SetIndex(self, val: 'long long const *') -> "void":
        """SetIndex(itkIndex3 self, long long const * val)"""
        return _itkIndexPython.itkIndex3_SetIndex(self, val)


    def SetElement(self, element: 'unsigned long', val: 'long long') -> "void":
        """SetElement(itkIndex3 self, unsigned long element, long long val)"""
        return _itkIndexPython.itkIndex3_SetElement(self, element, val)


    def GetElement(self, element: 'unsigned long') -> "long long":
        """GetElement(itkIndex3 self, unsigned long element) -> long long"""
        return _itkIndexPython.itkIndex3_GetElement(self, element)


    def Fill(self, value: 'long long') -> "void":
        """Fill(itkIndex3 self, long long value)"""
        return _itkIndexPython.itkIndex3_Fill(self, value)


    def GetBasisIndex(dim: 'unsigned int') -> "itkIndex3":
        """GetBasisIndex(unsigned int dim) -> itkIndex3"""
        return _itkIndexPython.itkIndex3_GetBasisIndex(dim)

    GetBasisIndex = staticmethod(GetBasisIndex)

    def assign(self, newValue: 'long long const &') -> "void":
        """assign(itkIndex3 self, long long const & newValue)"""
        return _itkIndexPython.itkIndex3_assign(self, newValue)


    def swap(self, other: 'itkIndex3') -> "void":
        """swap(itkIndex3 self, itkIndex3 other)"""
        return _itkIndexPython.itkIndex3_swap(self, other)


    def begin(self, *args) -> "long long const *":
        """
        begin(itkIndex3 self) -> long long
        begin(itkIndex3 self) -> long long const *
        """
        return _itkIndexPython.itkIndex3_begin(self, *args)


    def end(self, *args) -> "long long const *":
        """
        end(itkIndex3 self) -> long long
        end(itkIndex3 self) -> long long const *
        """
        return _itkIndexPython.itkIndex3_end(self, *args)


    def rbegin(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rbegin(itkIndex3 self) -> std::reverse_iterator< long long * >
        rbegin(itkIndex3 self) -> std::reverse_iterator< long long const * >
        """
        return _itkIndexPython.itkIndex3_rbegin(self, *args)


    def rend(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rend(itkIndex3 self) -> std::reverse_iterator< long long * >
        rend(itkIndex3 self) -> std::reverse_iterator< long long const * >
        """
        return _itkIndexPython.itkIndex3_rend(self, *args)


    def size(self) -> "unsigned int":
        """size(itkIndex3 self) -> unsigned int"""
        return _itkIndexPython.itkIndex3_size(self)


    def max_size(self) -> "unsigned int":
        """max_size(itkIndex3 self) -> unsigned int"""
        return _itkIndexPython.itkIndex3_max_size(self)


    def empty(self) -> "bool":
        """empty(itkIndex3 self) -> bool"""
        return _itkIndexPython.itkIndex3_empty(self)


    def at(self, *args) -> "long long const &":
        """
        at(itkIndex3 self, unsigned int pos) -> long long
        at(itkIndex3 self, unsigned int pos) -> long long const &
        """
        return _itkIndexPython.itkIndex3_at(self, *args)


    def front(self, *args) -> "long long const &":
        """
        front(itkIndex3 self) -> long long
        front(itkIndex3 self) -> long long const &
        """
        return _itkIndexPython.itkIndex3_front(self, *args)


    def back(self, *args) -> "long long const &":
        """
        back(itkIndex3 self) -> long long
        back(itkIndex3 self) -> long long const &
        """
        return _itkIndexPython.itkIndex3_back(self, *args)


    def data(self, *args) -> "long long const *":
        """
        data(itkIndex3 self) -> long long
        data(itkIndex3 self) -> long long const *
        """
        return _itkIndexPython.itkIndex3_data(self, *args)


    def __init__(self, *args):
        """
        __init__(itkIndex3 self) -> itkIndex3
        __init__(itkIndex3 self, itkIndex3 arg0) -> itkIndex3
        """
        _itkIndexPython.itkIndex3_swiginit(self, _itkIndexPython.new_itkIndex3(*args))
    __swig_destroy__ = _itkIndexPython.delete_itkIndex3

    def __getitem__(self, d: 'unsigned long') -> "long":
        """__getitem__(itkIndex3 self, unsigned long d) -> long"""
        return _itkIndexPython.itkIndex3___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'long') -> "void":
        """__setitem__(itkIndex3 self, unsigned long d, long v)"""
        return _itkIndexPython.itkIndex3___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkIndexPython.itkIndex3___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkIndex3 self) -> std::string"""
        return _itkIndexPython.itkIndex3___repr__(self)

itkIndex3.__add__ = new_instancemethod(_itkIndexPython.itkIndex3___add__, None, itkIndex3)
itkIndex3.__iadd__ = new_instancemethod(_itkIndexPython.itkIndex3___iadd__, None, itkIndex3)
itkIndex3.__isub__ = new_instancemethod(_itkIndexPython.itkIndex3___isub__, None, itkIndex3)
itkIndex3.__sub__ = new_instancemethod(_itkIndexPython.itkIndex3___sub__, None, itkIndex3)
itkIndex3.__mul__ = new_instancemethod(_itkIndexPython.itkIndex3___mul__, None, itkIndex3)
itkIndex3.GetIndex = new_instancemethod(_itkIndexPython.itkIndex3_GetIndex, None, itkIndex3)
itkIndex3.SetIndex = new_instancemethod(_itkIndexPython.itkIndex3_SetIndex, None, itkIndex3)
itkIndex3.SetElement = new_instancemethod(_itkIndexPython.itkIndex3_SetElement, None, itkIndex3)
itkIndex3.GetElement = new_instancemethod(_itkIndexPython.itkIndex3_GetElement, None, itkIndex3)
itkIndex3.Fill = new_instancemethod(_itkIndexPython.itkIndex3_Fill, None, itkIndex3)
itkIndex3.assign = new_instancemethod(_itkIndexPython.itkIndex3_assign, None, itkIndex3)
itkIndex3.swap = new_instancemethod(_itkIndexPython.itkIndex3_swap, None, itkIndex3)
itkIndex3.begin = new_instancemethod(_itkIndexPython.itkIndex3_begin, None, itkIndex3)
itkIndex3.end = new_instancemethod(_itkIndexPython.itkIndex3_end, None, itkIndex3)
itkIndex3.rbegin = new_instancemethod(_itkIndexPython.itkIndex3_rbegin, None, itkIndex3)
itkIndex3.rend = new_instancemethod(_itkIndexPython.itkIndex3_rend, None, itkIndex3)
itkIndex3.size = new_instancemethod(_itkIndexPython.itkIndex3_size, None, itkIndex3)
itkIndex3.max_size = new_instancemethod(_itkIndexPython.itkIndex3_max_size, None, itkIndex3)
itkIndex3.empty = new_instancemethod(_itkIndexPython.itkIndex3_empty, None, itkIndex3)
itkIndex3.at = new_instancemethod(_itkIndexPython.itkIndex3_at, None, itkIndex3)
itkIndex3.front = new_instancemethod(_itkIndexPython.itkIndex3_front, None, itkIndex3)
itkIndex3.back = new_instancemethod(_itkIndexPython.itkIndex3_back, None, itkIndex3)
itkIndex3.data = new_instancemethod(_itkIndexPython.itkIndex3_data, None, itkIndex3)
itkIndex3.__getitem__ = new_instancemethod(_itkIndexPython.itkIndex3___getitem__, None, itkIndex3)
itkIndex3.__setitem__ = new_instancemethod(_itkIndexPython.itkIndex3___setitem__, None, itkIndex3)
itkIndex3.__repr__ = new_instancemethod(_itkIndexPython.itkIndex3___repr__, None, itkIndex3)
itkIndex3_swigregister = _itkIndexPython.itkIndex3_swigregister
itkIndex3_swigregister(itkIndex3)

def itkIndex3_GetIndexDimension() -> "unsigned int":
    """itkIndex3_GetIndexDimension() -> unsigned int"""
    return _itkIndexPython.itkIndex3_GetIndexDimension()

def itkIndex3_GetBasisIndex(dim: 'unsigned int') -> "itkIndex3":
    """itkIndex3_GetBasisIndex(unsigned int dim) -> itkIndex3"""
    return _itkIndexPython.itkIndex3_GetBasisIndex(dim)

def itkIndex3___len__() -> "unsigned int":
    """itkIndex3___len__() -> unsigned int"""
    return _itkIndexPython.itkIndex3___len__()

class itkIndex4(object):
    """Proxy of C++ itkIndex4 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetIndexDimension() -> "unsigned int":
        """GetIndexDimension() -> unsigned int"""
        return _itkIndexPython.itkIndex4_GetIndexDimension()

    GetIndexDimension = staticmethod(GetIndexDimension)

    def __add__(self, *args) -> "itkIndex4 const":
        """
        __add__(itkIndex4 self, itkSize4 sz) -> itkIndex4
        __add__(itkIndex4 self, itkOffset4 offset) -> itkIndex4
        """
        return _itkIndexPython.itkIndex4___add__(self, *args)


    def __iadd__(self, *args) -> "itkIndex4 const &":
        """
        __iadd__(itkIndex4 self, itkSize4 sz) -> itkIndex4
        __iadd__(itkIndex4 self, itkOffset4 offset) -> itkIndex4
        """
        return _itkIndexPython.itkIndex4___iadd__(self, *args)


    def __isub__(self, *args) -> "itkIndex4 const &":
        """
        __isub__(itkIndex4 self, itkSize4 sz) -> itkIndex4
        __isub__(itkIndex4 self, itkOffset4 offset) -> itkIndex4
        """
        return _itkIndexPython.itkIndex4___isub__(self, *args)


    def __sub__(self, *args) -> "itkOffset4 const":
        """
        __sub__(itkIndex4 self, itkSize4 sz) -> itkIndex4
        __sub__(itkIndex4 self, itkOffset4 off) -> itkIndex4
        __sub__(itkIndex4 self, itkIndex4 vec) -> itkOffset4
        """
        return _itkIndexPython.itkIndex4___sub__(self, *args)


    def __mul__(self, vec: 'itkSize4') -> "itkIndex4 const":
        """__mul__(itkIndex4 self, itkSize4 vec) -> itkIndex4"""
        return _itkIndexPython.itkIndex4___mul__(self, vec)


    def GetIndex(self) -> "long long const *":
        """GetIndex(itkIndex4 self) -> long long const *"""
        return _itkIndexPython.itkIndex4_GetIndex(self)


    def SetIndex(self, val: 'long long const *') -> "void":
        """SetIndex(itkIndex4 self, long long const * val)"""
        return _itkIndexPython.itkIndex4_SetIndex(self, val)


    def SetElement(self, element: 'unsigned long', val: 'long long') -> "void":
        """SetElement(itkIndex4 self, unsigned long element, long long val)"""
        return _itkIndexPython.itkIndex4_SetElement(self, element, val)


    def GetElement(self, element: 'unsigned long') -> "long long":
        """GetElement(itkIndex4 self, unsigned long element) -> long long"""
        return _itkIndexPython.itkIndex4_GetElement(self, element)


    def Fill(self, value: 'long long') -> "void":
        """Fill(itkIndex4 self, long long value)"""
        return _itkIndexPython.itkIndex4_Fill(self, value)


    def GetBasisIndex(dim: 'unsigned int') -> "itkIndex4":
        """GetBasisIndex(unsigned int dim) -> itkIndex4"""
        return _itkIndexPython.itkIndex4_GetBasisIndex(dim)

    GetBasisIndex = staticmethod(GetBasisIndex)

    def assign(self, newValue: 'long long const &') -> "void":
        """assign(itkIndex4 self, long long const & newValue)"""
        return _itkIndexPython.itkIndex4_assign(self, newValue)


    def swap(self, other: 'itkIndex4') -> "void":
        """swap(itkIndex4 self, itkIndex4 other)"""
        return _itkIndexPython.itkIndex4_swap(self, other)


    def begin(self, *args) -> "long long const *":
        """
        begin(itkIndex4 self) -> long long
        begin(itkIndex4 self) -> long long const *
        """
        return _itkIndexPython.itkIndex4_begin(self, *args)


    def end(self, *args) -> "long long const *":
        """
        end(itkIndex4 self) -> long long
        end(itkIndex4 self) -> long long const *
        """
        return _itkIndexPython.itkIndex4_end(self, *args)


    def rbegin(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rbegin(itkIndex4 self) -> std::reverse_iterator< long long * >
        rbegin(itkIndex4 self) -> std::reverse_iterator< long long const * >
        """
        return _itkIndexPython.itkIndex4_rbegin(self, *args)


    def rend(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rend(itkIndex4 self) -> std::reverse_iterator< long long * >
        rend(itkIndex4 self) -> std::reverse_iterator< long long const * >
        """
        return _itkIndexPython.itkIndex4_rend(self, *args)


    def size(self) -> "unsigned int":
        """size(itkIndex4 self) -> unsigned int"""
        return _itkIndexPython.itkIndex4_size(self)


    def max_size(self) -> "unsigned int":
        """max_size(itkIndex4 self) -> unsigned int"""
        return _itkIndexPython.itkIndex4_max_size(self)


    def empty(self) -> "bool":
        """empty(itkIndex4 self) -> bool"""
        return _itkIndexPython.itkIndex4_empty(self)


    def at(self, *args) -> "long long const &":
        """
        at(itkIndex4 self, unsigned int pos) -> long long
        at(itkIndex4 self, unsigned int pos) -> long long const &
        """
        return _itkIndexPython.itkIndex4_at(self, *args)


    def front(self, *args) -> "long long const &":
        """
        front(itkIndex4 self) -> long long
        front(itkIndex4 self) -> long long const &
        """
        return _itkIndexPython.itkIndex4_front(self, *args)


    def back(self, *args) -> "long long const &":
        """
        back(itkIndex4 self) -> long long
        back(itkIndex4 self) -> long long const &
        """
        return _itkIndexPython.itkIndex4_back(self, *args)


    def data(self, *args) -> "long long const *":
        """
        data(itkIndex4 self) -> long long
        data(itkIndex4 self) -> long long const *
        """
        return _itkIndexPython.itkIndex4_data(self, *args)


    def __init__(self, *args):
        """
        __init__(itkIndex4 self) -> itkIndex4
        __init__(itkIndex4 self, itkIndex4 arg0) -> itkIndex4
        """
        _itkIndexPython.itkIndex4_swiginit(self, _itkIndexPython.new_itkIndex4(*args))
    __swig_destroy__ = _itkIndexPython.delete_itkIndex4

    def __getitem__(self, d: 'unsigned long') -> "long":
        """__getitem__(itkIndex4 self, unsigned long d) -> long"""
        return _itkIndexPython.itkIndex4___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'long') -> "void":
        """__setitem__(itkIndex4 self, unsigned long d, long v)"""
        return _itkIndexPython.itkIndex4___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkIndexPython.itkIndex4___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkIndex4 self) -> std::string"""
        return _itkIndexPython.itkIndex4___repr__(self)

itkIndex4.__add__ = new_instancemethod(_itkIndexPython.itkIndex4___add__, None, itkIndex4)
itkIndex4.__iadd__ = new_instancemethod(_itkIndexPython.itkIndex4___iadd__, None, itkIndex4)
itkIndex4.__isub__ = new_instancemethod(_itkIndexPython.itkIndex4___isub__, None, itkIndex4)
itkIndex4.__sub__ = new_instancemethod(_itkIndexPython.itkIndex4___sub__, None, itkIndex4)
itkIndex4.__mul__ = new_instancemethod(_itkIndexPython.itkIndex4___mul__, None, itkIndex4)
itkIndex4.GetIndex = new_instancemethod(_itkIndexPython.itkIndex4_GetIndex, None, itkIndex4)
itkIndex4.SetIndex = new_instancemethod(_itkIndexPython.itkIndex4_SetIndex, None, itkIndex4)
itkIndex4.SetElement = new_instancemethod(_itkIndexPython.itkIndex4_SetElement, None, itkIndex4)
itkIndex4.GetElement = new_instancemethod(_itkIndexPython.itkIndex4_GetElement, None, itkIndex4)
itkIndex4.Fill = new_instancemethod(_itkIndexPython.itkIndex4_Fill, None, itkIndex4)
itkIndex4.assign = new_instancemethod(_itkIndexPython.itkIndex4_assign, None, itkIndex4)
itkIndex4.swap = new_instancemethod(_itkIndexPython.itkIndex4_swap, None, itkIndex4)
itkIndex4.begin = new_instancemethod(_itkIndexPython.itkIndex4_begin, None, itkIndex4)
itkIndex4.end = new_instancemethod(_itkIndexPython.itkIndex4_end, None, itkIndex4)
itkIndex4.rbegin = new_instancemethod(_itkIndexPython.itkIndex4_rbegin, None, itkIndex4)
itkIndex4.rend = new_instancemethod(_itkIndexPython.itkIndex4_rend, None, itkIndex4)
itkIndex4.size = new_instancemethod(_itkIndexPython.itkIndex4_size, None, itkIndex4)
itkIndex4.max_size = new_instancemethod(_itkIndexPython.itkIndex4_max_size, None, itkIndex4)
itkIndex4.empty = new_instancemethod(_itkIndexPython.itkIndex4_empty, None, itkIndex4)
itkIndex4.at = new_instancemethod(_itkIndexPython.itkIndex4_at, None, itkIndex4)
itkIndex4.front = new_instancemethod(_itkIndexPython.itkIndex4_front, None, itkIndex4)
itkIndex4.back = new_instancemethod(_itkIndexPython.itkIndex4_back, None, itkIndex4)
itkIndex4.data = new_instancemethod(_itkIndexPython.itkIndex4_data, None, itkIndex4)
itkIndex4.__getitem__ = new_instancemethod(_itkIndexPython.itkIndex4___getitem__, None, itkIndex4)
itkIndex4.__setitem__ = new_instancemethod(_itkIndexPython.itkIndex4___setitem__, None, itkIndex4)
itkIndex4.__repr__ = new_instancemethod(_itkIndexPython.itkIndex4___repr__, None, itkIndex4)
itkIndex4_swigregister = _itkIndexPython.itkIndex4_swigregister
itkIndex4_swigregister(itkIndex4)

def itkIndex4_GetIndexDimension() -> "unsigned int":
    """itkIndex4_GetIndexDimension() -> unsigned int"""
    return _itkIndexPython.itkIndex4_GetIndexDimension()

def itkIndex4_GetBasisIndex(dim: 'unsigned int') -> "itkIndex4":
    """itkIndex4_GetBasisIndex(unsigned int dim) -> itkIndex4"""
    return _itkIndexPython.itkIndex4_GetBasisIndex(dim)

def itkIndex4___len__() -> "unsigned int":
    """itkIndex4___len__() -> unsigned int"""
    return _itkIndexPython.itkIndex4___len__()



