# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMinimumMaximumImageCalculatorPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMinimumMaximumImageCalculatorPython', [dirname(__file__)])
        except ImportError:
            import _itkMinimumMaximumImageCalculatorPython
            return _itkMinimumMaximumImageCalculatorPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMinimumMaximumImageCalculatorPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMinimumMaximumImageCalculatorPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMinimumMaximumImageCalculatorPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImagePython
import itkOffsetPython
import itkSizePython
import pyBasePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import ITKCommonBasePython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython

def itkMinimumMaximumImageCalculatorIF3_New():
  return itkMinimumMaximumImageCalculatorIF3.New()


def itkMinimumMaximumImageCalculatorIF2_New():
  return itkMinimumMaximumImageCalculatorIF2.New()


def itkMinimumMaximumImageCalculatorIUS3_New():
  return itkMinimumMaximumImageCalculatorIUS3.New()


def itkMinimumMaximumImageCalculatorIUS2_New():
  return itkMinimumMaximumImageCalculatorIUS2.New()


def itkMinimumMaximumImageCalculatorIUC3_New():
  return itkMinimumMaximumImageCalculatorIUC3.New()


def itkMinimumMaximumImageCalculatorIUC2_New():
  return itkMinimumMaximumImageCalculatorIUC2.New()


def itkMinimumMaximumImageCalculatorISS3_New():
  return itkMinimumMaximumImageCalculatorISS3.New()


def itkMinimumMaximumImageCalculatorISS2_New():
  return itkMinimumMaximumImageCalculatorISS2.New()

class itkMinimumMaximumImageCalculatorIF2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkMinimumMaximumImageCalculatorIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageCalculatorIF2_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageCalculatorIF2_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageCalculatorIF2_Pointer":
        """Clone(itkMinimumMaximumImageCalculatorIF2 self) -> itkMinimumMaximumImageCalculatorIF2_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_Clone(self)


    def SetImage(self, _arg: 'itkImageF2') -> "void":
        """SetImage(itkMinimumMaximumImageCalculatorIF2 self, itkImageF2 _arg)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_SetImage(self, _arg)


    def ComputeMinimum(self) -> "void":
        """ComputeMinimum(itkMinimumMaximumImageCalculatorIF2 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_ComputeMinimum(self)


    def ComputeMaximum(self) -> "void":
        """ComputeMaximum(itkMinimumMaximumImageCalculatorIF2 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_ComputeMaximum(self)


    def Compute(self) -> "void":
        """Compute(itkMinimumMaximumImageCalculatorIF2 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_Compute(self)


    def GetMinimum(self) -> "float":
        """GetMinimum(itkMinimumMaximumImageCalculatorIF2 self) -> float"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_GetMinimum(self)


    def GetMaximum(self) -> "float":
        """GetMaximum(itkMinimumMaximumImageCalculatorIF2 self) -> float"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_GetMaximum(self)


    def GetIndexOfMinimum(self) -> "itkIndex2 const &":
        """GetIndexOfMinimum(itkMinimumMaximumImageCalculatorIF2 self) -> itkIndex2"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_GetIndexOfMinimum(self)


    def GetIndexOfMaximum(self) -> "itkIndex2 const &":
        """GetIndexOfMaximum(itkMinimumMaximumImageCalculatorIF2 self) -> itkIndex2"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_GetIndexOfMaximum(self)


    def SetRegion(self, region: 'itkImageRegion2') -> "void":
        """SetRegion(itkMinimumMaximumImageCalculatorIF2 self, itkImageRegion2 region)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_SetRegion(self, region)

    __swig_destroy__ = _itkMinimumMaximumImageCalculatorPython.delete_itkMinimumMaximumImageCalculatorIF2

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorIF2 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorIF2"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageCalculatorIF2

        Create a new object of the class itkMinimumMaximumImageCalculatorIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageCalculatorIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageCalculatorIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageCalculatorIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageCalculatorIF2.Clone = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_Clone, None, itkMinimumMaximumImageCalculatorIF2)
itkMinimumMaximumImageCalculatorIF2.SetImage = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_SetImage, None, itkMinimumMaximumImageCalculatorIF2)
itkMinimumMaximumImageCalculatorIF2.ComputeMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_ComputeMinimum, None, itkMinimumMaximumImageCalculatorIF2)
itkMinimumMaximumImageCalculatorIF2.ComputeMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_ComputeMaximum, None, itkMinimumMaximumImageCalculatorIF2)
itkMinimumMaximumImageCalculatorIF2.Compute = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_Compute, None, itkMinimumMaximumImageCalculatorIF2)
itkMinimumMaximumImageCalculatorIF2.GetMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_GetMinimum, None, itkMinimumMaximumImageCalculatorIF2)
itkMinimumMaximumImageCalculatorIF2.GetMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_GetMaximum, None, itkMinimumMaximumImageCalculatorIF2)
itkMinimumMaximumImageCalculatorIF2.GetIndexOfMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_GetIndexOfMinimum, None, itkMinimumMaximumImageCalculatorIF2)
itkMinimumMaximumImageCalculatorIF2.GetIndexOfMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_GetIndexOfMaximum, None, itkMinimumMaximumImageCalculatorIF2)
itkMinimumMaximumImageCalculatorIF2.SetRegion = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_SetRegion, None, itkMinimumMaximumImageCalculatorIF2)
itkMinimumMaximumImageCalculatorIF2_swigregister = _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_swigregister
itkMinimumMaximumImageCalculatorIF2_swigregister(itkMinimumMaximumImageCalculatorIF2)

def itkMinimumMaximumImageCalculatorIF2___New_orig__() -> "itkMinimumMaximumImageCalculatorIF2_Pointer":
    """itkMinimumMaximumImageCalculatorIF2___New_orig__() -> itkMinimumMaximumImageCalculatorIF2_Pointer"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2___New_orig__()

def itkMinimumMaximumImageCalculatorIF2_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorIF2 *":
    """itkMinimumMaximumImageCalculatorIF2_cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorIF2"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF2_cast(obj)

class itkMinimumMaximumImageCalculatorIF3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkMinimumMaximumImageCalculatorIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageCalculatorIF3_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageCalculatorIF3_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageCalculatorIF3_Pointer":
        """Clone(itkMinimumMaximumImageCalculatorIF3 self) -> itkMinimumMaximumImageCalculatorIF3_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_Clone(self)


    def SetImage(self, _arg: 'itkImageF3') -> "void":
        """SetImage(itkMinimumMaximumImageCalculatorIF3 self, itkImageF3 _arg)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_SetImage(self, _arg)


    def ComputeMinimum(self) -> "void":
        """ComputeMinimum(itkMinimumMaximumImageCalculatorIF3 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_ComputeMinimum(self)


    def ComputeMaximum(self) -> "void":
        """ComputeMaximum(itkMinimumMaximumImageCalculatorIF3 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_ComputeMaximum(self)


    def Compute(self) -> "void":
        """Compute(itkMinimumMaximumImageCalculatorIF3 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_Compute(self)


    def GetMinimum(self) -> "float":
        """GetMinimum(itkMinimumMaximumImageCalculatorIF3 self) -> float"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_GetMinimum(self)


    def GetMaximum(self) -> "float":
        """GetMaximum(itkMinimumMaximumImageCalculatorIF3 self) -> float"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_GetMaximum(self)


    def GetIndexOfMinimum(self) -> "itkIndex3 const &":
        """GetIndexOfMinimum(itkMinimumMaximumImageCalculatorIF3 self) -> itkIndex3"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_GetIndexOfMinimum(self)


    def GetIndexOfMaximum(self) -> "itkIndex3 const &":
        """GetIndexOfMaximum(itkMinimumMaximumImageCalculatorIF3 self) -> itkIndex3"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_GetIndexOfMaximum(self)


    def SetRegion(self, region: 'itkImageRegion3') -> "void":
        """SetRegion(itkMinimumMaximumImageCalculatorIF3 self, itkImageRegion3 region)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_SetRegion(self, region)

    __swig_destroy__ = _itkMinimumMaximumImageCalculatorPython.delete_itkMinimumMaximumImageCalculatorIF3

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorIF3 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorIF3"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageCalculatorIF3

        Create a new object of the class itkMinimumMaximumImageCalculatorIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageCalculatorIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageCalculatorIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageCalculatorIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageCalculatorIF3.Clone = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_Clone, None, itkMinimumMaximumImageCalculatorIF3)
itkMinimumMaximumImageCalculatorIF3.SetImage = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_SetImage, None, itkMinimumMaximumImageCalculatorIF3)
itkMinimumMaximumImageCalculatorIF3.ComputeMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_ComputeMinimum, None, itkMinimumMaximumImageCalculatorIF3)
itkMinimumMaximumImageCalculatorIF3.ComputeMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_ComputeMaximum, None, itkMinimumMaximumImageCalculatorIF3)
itkMinimumMaximumImageCalculatorIF3.Compute = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_Compute, None, itkMinimumMaximumImageCalculatorIF3)
itkMinimumMaximumImageCalculatorIF3.GetMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_GetMinimum, None, itkMinimumMaximumImageCalculatorIF3)
itkMinimumMaximumImageCalculatorIF3.GetMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_GetMaximum, None, itkMinimumMaximumImageCalculatorIF3)
itkMinimumMaximumImageCalculatorIF3.GetIndexOfMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_GetIndexOfMinimum, None, itkMinimumMaximumImageCalculatorIF3)
itkMinimumMaximumImageCalculatorIF3.GetIndexOfMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_GetIndexOfMaximum, None, itkMinimumMaximumImageCalculatorIF3)
itkMinimumMaximumImageCalculatorIF3.SetRegion = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_SetRegion, None, itkMinimumMaximumImageCalculatorIF3)
itkMinimumMaximumImageCalculatorIF3_swigregister = _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_swigregister
itkMinimumMaximumImageCalculatorIF3_swigregister(itkMinimumMaximumImageCalculatorIF3)

def itkMinimumMaximumImageCalculatorIF3___New_orig__() -> "itkMinimumMaximumImageCalculatorIF3_Pointer":
    """itkMinimumMaximumImageCalculatorIF3___New_orig__() -> itkMinimumMaximumImageCalculatorIF3_Pointer"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3___New_orig__()

def itkMinimumMaximumImageCalculatorIF3_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorIF3 *":
    """itkMinimumMaximumImageCalculatorIF3_cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorIF3"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIF3_cast(obj)

class itkMinimumMaximumImageCalculatorISS2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkMinimumMaximumImageCalculatorISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageCalculatorISS2_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageCalculatorISS2_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageCalculatorISS2_Pointer":
        """Clone(itkMinimumMaximumImageCalculatorISS2 self) -> itkMinimumMaximumImageCalculatorISS2_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_Clone(self)


    def SetImage(self, _arg: 'itkImageSS2') -> "void":
        """SetImage(itkMinimumMaximumImageCalculatorISS2 self, itkImageSS2 _arg)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_SetImage(self, _arg)


    def ComputeMinimum(self) -> "void":
        """ComputeMinimum(itkMinimumMaximumImageCalculatorISS2 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_ComputeMinimum(self)


    def ComputeMaximum(self) -> "void":
        """ComputeMaximum(itkMinimumMaximumImageCalculatorISS2 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_ComputeMaximum(self)


    def Compute(self) -> "void":
        """Compute(itkMinimumMaximumImageCalculatorISS2 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_Compute(self)


    def GetMinimum(self) -> "short":
        """GetMinimum(itkMinimumMaximumImageCalculatorISS2 self) -> short"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_GetMinimum(self)


    def GetMaximum(self) -> "short":
        """GetMaximum(itkMinimumMaximumImageCalculatorISS2 self) -> short"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_GetMaximum(self)


    def GetIndexOfMinimum(self) -> "itkIndex2 const &":
        """GetIndexOfMinimum(itkMinimumMaximumImageCalculatorISS2 self) -> itkIndex2"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_GetIndexOfMinimum(self)


    def GetIndexOfMaximum(self) -> "itkIndex2 const &":
        """GetIndexOfMaximum(itkMinimumMaximumImageCalculatorISS2 self) -> itkIndex2"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_GetIndexOfMaximum(self)


    def SetRegion(self, region: 'itkImageRegion2') -> "void":
        """SetRegion(itkMinimumMaximumImageCalculatorISS2 self, itkImageRegion2 region)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_SetRegion(self, region)

    __swig_destroy__ = _itkMinimumMaximumImageCalculatorPython.delete_itkMinimumMaximumImageCalculatorISS2

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorISS2 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorISS2"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageCalculatorISS2

        Create a new object of the class itkMinimumMaximumImageCalculatorISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageCalculatorISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageCalculatorISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageCalculatorISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageCalculatorISS2.Clone = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_Clone, None, itkMinimumMaximumImageCalculatorISS2)
itkMinimumMaximumImageCalculatorISS2.SetImage = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_SetImage, None, itkMinimumMaximumImageCalculatorISS2)
itkMinimumMaximumImageCalculatorISS2.ComputeMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_ComputeMinimum, None, itkMinimumMaximumImageCalculatorISS2)
itkMinimumMaximumImageCalculatorISS2.ComputeMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_ComputeMaximum, None, itkMinimumMaximumImageCalculatorISS2)
itkMinimumMaximumImageCalculatorISS2.Compute = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_Compute, None, itkMinimumMaximumImageCalculatorISS2)
itkMinimumMaximumImageCalculatorISS2.GetMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_GetMinimum, None, itkMinimumMaximumImageCalculatorISS2)
itkMinimumMaximumImageCalculatorISS2.GetMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_GetMaximum, None, itkMinimumMaximumImageCalculatorISS2)
itkMinimumMaximumImageCalculatorISS2.GetIndexOfMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_GetIndexOfMinimum, None, itkMinimumMaximumImageCalculatorISS2)
itkMinimumMaximumImageCalculatorISS2.GetIndexOfMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_GetIndexOfMaximum, None, itkMinimumMaximumImageCalculatorISS2)
itkMinimumMaximumImageCalculatorISS2.SetRegion = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_SetRegion, None, itkMinimumMaximumImageCalculatorISS2)
itkMinimumMaximumImageCalculatorISS2_swigregister = _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_swigregister
itkMinimumMaximumImageCalculatorISS2_swigregister(itkMinimumMaximumImageCalculatorISS2)

def itkMinimumMaximumImageCalculatorISS2___New_orig__() -> "itkMinimumMaximumImageCalculatorISS2_Pointer":
    """itkMinimumMaximumImageCalculatorISS2___New_orig__() -> itkMinimumMaximumImageCalculatorISS2_Pointer"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2___New_orig__()

def itkMinimumMaximumImageCalculatorISS2_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorISS2 *":
    """itkMinimumMaximumImageCalculatorISS2_cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorISS2"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS2_cast(obj)

class itkMinimumMaximumImageCalculatorISS3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkMinimumMaximumImageCalculatorISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageCalculatorISS3_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageCalculatorISS3_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageCalculatorISS3_Pointer":
        """Clone(itkMinimumMaximumImageCalculatorISS3 self) -> itkMinimumMaximumImageCalculatorISS3_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_Clone(self)


    def SetImage(self, _arg: 'itkImageSS3') -> "void":
        """SetImage(itkMinimumMaximumImageCalculatorISS3 self, itkImageSS3 _arg)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_SetImage(self, _arg)


    def ComputeMinimum(self) -> "void":
        """ComputeMinimum(itkMinimumMaximumImageCalculatorISS3 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_ComputeMinimum(self)


    def ComputeMaximum(self) -> "void":
        """ComputeMaximum(itkMinimumMaximumImageCalculatorISS3 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_ComputeMaximum(self)


    def Compute(self) -> "void":
        """Compute(itkMinimumMaximumImageCalculatorISS3 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_Compute(self)


    def GetMinimum(self) -> "short":
        """GetMinimum(itkMinimumMaximumImageCalculatorISS3 self) -> short"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_GetMinimum(self)


    def GetMaximum(self) -> "short":
        """GetMaximum(itkMinimumMaximumImageCalculatorISS3 self) -> short"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_GetMaximum(self)


    def GetIndexOfMinimum(self) -> "itkIndex3 const &":
        """GetIndexOfMinimum(itkMinimumMaximumImageCalculatorISS3 self) -> itkIndex3"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_GetIndexOfMinimum(self)


    def GetIndexOfMaximum(self) -> "itkIndex3 const &":
        """GetIndexOfMaximum(itkMinimumMaximumImageCalculatorISS3 self) -> itkIndex3"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_GetIndexOfMaximum(self)


    def SetRegion(self, region: 'itkImageRegion3') -> "void":
        """SetRegion(itkMinimumMaximumImageCalculatorISS3 self, itkImageRegion3 region)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_SetRegion(self, region)

    __swig_destroy__ = _itkMinimumMaximumImageCalculatorPython.delete_itkMinimumMaximumImageCalculatorISS3

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorISS3 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorISS3"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageCalculatorISS3

        Create a new object of the class itkMinimumMaximumImageCalculatorISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageCalculatorISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageCalculatorISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageCalculatorISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageCalculatorISS3.Clone = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_Clone, None, itkMinimumMaximumImageCalculatorISS3)
itkMinimumMaximumImageCalculatorISS3.SetImage = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_SetImage, None, itkMinimumMaximumImageCalculatorISS3)
itkMinimumMaximumImageCalculatorISS3.ComputeMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_ComputeMinimum, None, itkMinimumMaximumImageCalculatorISS3)
itkMinimumMaximumImageCalculatorISS3.ComputeMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_ComputeMaximum, None, itkMinimumMaximumImageCalculatorISS3)
itkMinimumMaximumImageCalculatorISS3.Compute = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_Compute, None, itkMinimumMaximumImageCalculatorISS3)
itkMinimumMaximumImageCalculatorISS3.GetMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_GetMinimum, None, itkMinimumMaximumImageCalculatorISS3)
itkMinimumMaximumImageCalculatorISS3.GetMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_GetMaximum, None, itkMinimumMaximumImageCalculatorISS3)
itkMinimumMaximumImageCalculatorISS3.GetIndexOfMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_GetIndexOfMinimum, None, itkMinimumMaximumImageCalculatorISS3)
itkMinimumMaximumImageCalculatorISS3.GetIndexOfMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_GetIndexOfMaximum, None, itkMinimumMaximumImageCalculatorISS3)
itkMinimumMaximumImageCalculatorISS3.SetRegion = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_SetRegion, None, itkMinimumMaximumImageCalculatorISS3)
itkMinimumMaximumImageCalculatorISS3_swigregister = _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_swigregister
itkMinimumMaximumImageCalculatorISS3_swigregister(itkMinimumMaximumImageCalculatorISS3)

def itkMinimumMaximumImageCalculatorISS3___New_orig__() -> "itkMinimumMaximumImageCalculatorISS3_Pointer":
    """itkMinimumMaximumImageCalculatorISS3___New_orig__() -> itkMinimumMaximumImageCalculatorISS3_Pointer"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3___New_orig__()

def itkMinimumMaximumImageCalculatorISS3_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorISS3 *":
    """itkMinimumMaximumImageCalculatorISS3_cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorISS3"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorISS3_cast(obj)

class itkMinimumMaximumImageCalculatorIUC2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkMinimumMaximumImageCalculatorIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageCalculatorIUC2_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageCalculatorIUC2_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageCalculatorIUC2_Pointer":
        """Clone(itkMinimumMaximumImageCalculatorIUC2 self) -> itkMinimumMaximumImageCalculatorIUC2_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_Clone(self)


    def SetImage(self, _arg: 'itkImageUC2') -> "void":
        """SetImage(itkMinimumMaximumImageCalculatorIUC2 self, itkImageUC2 _arg)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_SetImage(self, _arg)


    def ComputeMinimum(self) -> "void":
        """ComputeMinimum(itkMinimumMaximumImageCalculatorIUC2 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_ComputeMinimum(self)


    def ComputeMaximum(self) -> "void":
        """ComputeMaximum(itkMinimumMaximumImageCalculatorIUC2 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_ComputeMaximum(self)


    def Compute(self) -> "void":
        """Compute(itkMinimumMaximumImageCalculatorIUC2 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_Compute(self)


    def GetMinimum(self) -> "unsigned char":
        """GetMinimum(itkMinimumMaximumImageCalculatorIUC2 self) -> unsigned char"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_GetMinimum(self)


    def GetMaximum(self) -> "unsigned char":
        """GetMaximum(itkMinimumMaximumImageCalculatorIUC2 self) -> unsigned char"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_GetMaximum(self)


    def GetIndexOfMinimum(self) -> "itkIndex2 const &":
        """GetIndexOfMinimum(itkMinimumMaximumImageCalculatorIUC2 self) -> itkIndex2"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_GetIndexOfMinimum(self)


    def GetIndexOfMaximum(self) -> "itkIndex2 const &":
        """GetIndexOfMaximum(itkMinimumMaximumImageCalculatorIUC2 self) -> itkIndex2"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_GetIndexOfMaximum(self)


    def SetRegion(self, region: 'itkImageRegion2') -> "void":
        """SetRegion(itkMinimumMaximumImageCalculatorIUC2 self, itkImageRegion2 region)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_SetRegion(self, region)

    __swig_destroy__ = _itkMinimumMaximumImageCalculatorPython.delete_itkMinimumMaximumImageCalculatorIUC2

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorIUC2 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorIUC2"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageCalculatorIUC2

        Create a new object of the class itkMinimumMaximumImageCalculatorIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageCalculatorIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageCalculatorIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageCalculatorIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageCalculatorIUC2.Clone = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_Clone, None, itkMinimumMaximumImageCalculatorIUC2)
itkMinimumMaximumImageCalculatorIUC2.SetImage = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_SetImage, None, itkMinimumMaximumImageCalculatorIUC2)
itkMinimumMaximumImageCalculatorIUC2.ComputeMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_ComputeMinimum, None, itkMinimumMaximumImageCalculatorIUC2)
itkMinimumMaximumImageCalculatorIUC2.ComputeMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_ComputeMaximum, None, itkMinimumMaximumImageCalculatorIUC2)
itkMinimumMaximumImageCalculatorIUC2.Compute = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_Compute, None, itkMinimumMaximumImageCalculatorIUC2)
itkMinimumMaximumImageCalculatorIUC2.GetMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_GetMinimum, None, itkMinimumMaximumImageCalculatorIUC2)
itkMinimumMaximumImageCalculatorIUC2.GetMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_GetMaximum, None, itkMinimumMaximumImageCalculatorIUC2)
itkMinimumMaximumImageCalculatorIUC2.GetIndexOfMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_GetIndexOfMinimum, None, itkMinimumMaximumImageCalculatorIUC2)
itkMinimumMaximumImageCalculatorIUC2.GetIndexOfMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_GetIndexOfMaximum, None, itkMinimumMaximumImageCalculatorIUC2)
itkMinimumMaximumImageCalculatorIUC2.SetRegion = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_SetRegion, None, itkMinimumMaximumImageCalculatorIUC2)
itkMinimumMaximumImageCalculatorIUC2_swigregister = _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_swigregister
itkMinimumMaximumImageCalculatorIUC2_swigregister(itkMinimumMaximumImageCalculatorIUC2)

def itkMinimumMaximumImageCalculatorIUC2___New_orig__() -> "itkMinimumMaximumImageCalculatorIUC2_Pointer":
    """itkMinimumMaximumImageCalculatorIUC2___New_orig__() -> itkMinimumMaximumImageCalculatorIUC2_Pointer"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2___New_orig__()

def itkMinimumMaximumImageCalculatorIUC2_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorIUC2 *":
    """itkMinimumMaximumImageCalculatorIUC2_cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorIUC2"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC2_cast(obj)

class itkMinimumMaximumImageCalculatorIUC3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkMinimumMaximumImageCalculatorIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageCalculatorIUC3_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageCalculatorIUC3_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageCalculatorIUC3_Pointer":
        """Clone(itkMinimumMaximumImageCalculatorIUC3 self) -> itkMinimumMaximumImageCalculatorIUC3_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_Clone(self)


    def SetImage(self, _arg: 'itkImageUC3') -> "void":
        """SetImage(itkMinimumMaximumImageCalculatorIUC3 self, itkImageUC3 _arg)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_SetImage(self, _arg)


    def ComputeMinimum(self) -> "void":
        """ComputeMinimum(itkMinimumMaximumImageCalculatorIUC3 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_ComputeMinimum(self)


    def ComputeMaximum(self) -> "void":
        """ComputeMaximum(itkMinimumMaximumImageCalculatorIUC3 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_ComputeMaximum(self)


    def Compute(self) -> "void":
        """Compute(itkMinimumMaximumImageCalculatorIUC3 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_Compute(self)


    def GetMinimum(self) -> "unsigned char":
        """GetMinimum(itkMinimumMaximumImageCalculatorIUC3 self) -> unsigned char"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_GetMinimum(self)


    def GetMaximum(self) -> "unsigned char":
        """GetMaximum(itkMinimumMaximumImageCalculatorIUC3 self) -> unsigned char"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_GetMaximum(self)


    def GetIndexOfMinimum(self) -> "itkIndex3 const &":
        """GetIndexOfMinimum(itkMinimumMaximumImageCalculatorIUC3 self) -> itkIndex3"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_GetIndexOfMinimum(self)


    def GetIndexOfMaximum(self) -> "itkIndex3 const &":
        """GetIndexOfMaximum(itkMinimumMaximumImageCalculatorIUC3 self) -> itkIndex3"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_GetIndexOfMaximum(self)


    def SetRegion(self, region: 'itkImageRegion3') -> "void":
        """SetRegion(itkMinimumMaximumImageCalculatorIUC3 self, itkImageRegion3 region)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_SetRegion(self, region)

    __swig_destroy__ = _itkMinimumMaximumImageCalculatorPython.delete_itkMinimumMaximumImageCalculatorIUC3

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorIUC3 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorIUC3"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageCalculatorIUC3

        Create a new object of the class itkMinimumMaximumImageCalculatorIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageCalculatorIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageCalculatorIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageCalculatorIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageCalculatorIUC3.Clone = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_Clone, None, itkMinimumMaximumImageCalculatorIUC3)
itkMinimumMaximumImageCalculatorIUC3.SetImage = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_SetImage, None, itkMinimumMaximumImageCalculatorIUC3)
itkMinimumMaximumImageCalculatorIUC3.ComputeMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_ComputeMinimum, None, itkMinimumMaximumImageCalculatorIUC3)
itkMinimumMaximumImageCalculatorIUC3.ComputeMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_ComputeMaximum, None, itkMinimumMaximumImageCalculatorIUC3)
itkMinimumMaximumImageCalculatorIUC3.Compute = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_Compute, None, itkMinimumMaximumImageCalculatorIUC3)
itkMinimumMaximumImageCalculatorIUC3.GetMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_GetMinimum, None, itkMinimumMaximumImageCalculatorIUC3)
itkMinimumMaximumImageCalculatorIUC3.GetMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_GetMaximum, None, itkMinimumMaximumImageCalculatorIUC3)
itkMinimumMaximumImageCalculatorIUC3.GetIndexOfMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_GetIndexOfMinimum, None, itkMinimumMaximumImageCalculatorIUC3)
itkMinimumMaximumImageCalculatorIUC3.GetIndexOfMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_GetIndexOfMaximum, None, itkMinimumMaximumImageCalculatorIUC3)
itkMinimumMaximumImageCalculatorIUC3.SetRegion = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_SetRegion, None, itkMinimumMaximumImageCalculatorIUC3)
itkMinimumMaximumImageCalculatorIUC3_swigregister = _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_swigregister
itkMinimumMaximumImageCalculatorIUC3_swigregister(itkMinimumMaximumImageCalculatorIUC3)

def itkMinimumMaximumImageCalculatorIUC3___New_orig__() -> "itkMinimumMaximumImageCalculatorIUC3_Pointer":
    """itkMinimumMaximumImageCalculatorIUC3___New_orig__() -> itkMinimumMaximumImageCalculatorIUC3_Pointer"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3___New_orig__()

def itkMinimumMaximumImageCalculatorIUC3_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorIUC3 *":
    """itkMinimumMaximumImageCalculatorIUC3_cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorIUC3"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUC3_cast(obj)

class itkMinimumMaximumImageCalculatorIUS2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkMinimumMaximumImageCalculatorIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageCalculatorIUS2_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageCalculatorIUS2_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageCalculatorIUS2_Pointer":
        """Clone(itkMinimumMaximumImageCalculatorIUS2 self) -> itkMinimumMaximumImageCalculatorIUS2_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_Clone(self)


    def SetImage(self, _arg: 'itkImageUS2') -> "void":
        """SetImage(itkMinimumMaximumImageCalculatorIUS2 self, itkImageUS2 _arg)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_SetImage(self, _arg)


    def ComputeMinimum(self) -> "void":
        """ComputeMinimum(itkMinimumMaximumImageCalculatorIUS2 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_ComputeMinimum(self)


    def ComputeMaximum(self) -> "void":
        """ComputeMaximum(itkMinimumMaximumImageCalculatorIUS2 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_ComputeMaximum(self)


    def Compute(self) -> "void":
        """Compute(itkMinimumMaximumImageCalculatorIUS2 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_Compute(self)


    def GetMinimum(self) -> "unsigned short":
        """GetMinimum(itkMinimumMaximumImageCalculatorIUS2 self) -> unsigned short"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_GetMinimum(self)


    def GetMaximum(self) -> "unsigned short":
        """GetMaximum(itkMinimumMaximumImageCalculatorIUS2 self) -> unsigned short"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_GetMaximum(self)


    def GetIndexOfMinimum(self) -> "itkIndex2 const &":
        """GetIndexOfMinimum(itkMinimumMaximumImageCalculatorIUS2 self) -> itkIndex2"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_GetIndexOfMinimum(self)


    def GetIndexOfMaximum(self) -> "itkIndex2 const &":
        """GetIndexOfMaximum(itkMinimumMaximumImageCalculatorIUS2 self) -> itkIndex2"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_GetIndexOfMaximum(self)


    def SetRegion(self, region: 'itkImageRegion2') -> "void":
        """SetRegion(itkMinimumMaximumImageCalculatorIUS2 self, itkImageRegion2 region)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_SetRegion(self, region)

    __swig_destroy__ = _itkMinimumMaximumImageCalculatorPython.delete_itkMinimumMaximumImageCalculatorIUS2

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorIUS2 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorIUS2"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageCalculatorIUS2

        Create a new object of the class itkMinimumMaximumImageCalculatorIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageCalculatorIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageCalculatorIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageCalculatorIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageCalculatorIUS2.Clone = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_Clone, None, itkMinimumMaximumImageCalculatorIUS2)
itkMinimumMaximumImageCalculatorIUS2.SetImage = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_SetImage, None, itkMinimumMaximumImageCalculatorIUS2)
itkMinimumMaximumImageCalculatorIUS2.ComputeMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_ComputeMinimum, None, itkMinimumMaximumImageCalculatorIUS2)
itkMinimumMaximumImageCalculatorIUS2.ComputeMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_ComputeMaximum, None, itkMinimumMaximumImageCalculatorIUS2)
itkMinimumMaximumImageCalculatorIUS2.Compute = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_Compute, None, itkMinimumMaximumImageCalculatorIUS2)
itkMinimumMaximumImageCalculatorIUS2.GetMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_GetMinimum, None, itkMinimumMaximumImageCalculatorIUS2)
itkMinimumMaximumImageCalculatorIUS2.GetMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_GetMaximum, None, itkMinimumMaximumImageCalculatorIUS2)
itkMinimumMaximumImageCalculatorIUS2.GetIndexOfMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_GetIndexOfMinimum, None, itkMinimumMaximumImageCalculatorIUS2)
itkMinimumMaximumImageCalculatorIUS2.GetIndexOfMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_GetIndexOfMaximum, None, itkMinimumMaximumImageCalculatorIUS2)
itkMinimumMaximumImageCalculatorIUS2.SetRegion = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_SetRegion, None, itkMinimumMaximumImageCalculatorIUS2)
itkMinimumMaximumImageCalculatorIUS2_swigregister = _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_swigregister
itkMinimumMaximumImageCalculatorIUS2_swigregister(itkMinimumMaximumImageCalculatorIUS2)

def itkMinimumMaximumImageCalculatorIUS2___New_orig__() -> "itkMinimumMaximumImageCalculatorIUS2_Pointer":
    """itkMinimumMaximumImageCalculatorIUS2___New_orig__() -> itkMinimumMaximumImageCalculatorIUS2_Pointer"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2___New_orig__()

def itkMinimumMaximumImageCalculatorIUS2_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorIUS2 *":
    """itkMinimumMaximumImageCalculatorIUS2_cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorIUS2"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS2_cast(obj)

class itkMinimumMaximumImageCalculatorIUS3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkMinimumMaximumImageCalculatorIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageCalculatorIUS3_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageCalculatorIUS3_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageCalculatorIUS3_Pointer":
        """Clone(itkMinimumMaximumImageCalculatorIUS3 self) -> itkMinimumMaximumImageCalculatorIUS3_Pointer"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_Clone(self)


    def SetImage(self, _arg: 'itkImageUS3') -> "void":
        """SetImage(itkMinimumMaximumImageCalculatorIUS3 self, itkImageUS3 _arg)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_SetImage(self, _arg)


    def ComputeMinimum(self) -> "void":
        """ComputeMinimum(itkMinimumMaximumImageCalculatorIUS3 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_ComputeMinimum(self)


    def ComputeMaximum(self) -> "void":
        """ComputeMaximum(itkMinimumMaximumImageCalculatorIUS3 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_ComputeMaximum(self)


    def Compute(self) -> "void":
        """Compute(itkMinimumMaximumImageCalculatorIUS3 self)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_Compute(self)


    def GetMinimum(self) -> "unsigned short":
        """GetMinimum(itkMinimumMaximumImageCalculatorIUS3 self) -> unsigned short"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_GetMinimum(self)


    def GetMaximum(self) -> "unsigned short":
        """GetMaximum(itkMinimumMaximumImageCalculatorIUS3 self) -> unsigned short"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_GetMaximum(self)


    def GetIndexOfMinimum(self) -> "itkIndex3 const &":
        """GetIndexOfMinimum(itkMinimumMaximumImageCalculatorIUS3 self) -> itkIndex3"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_GetIndexOfMinimum(self)


    def GetIndexOfMaximum(self) -> "itkIndex3 const &":
        """GetIndexOfMaximum(itkMinimumMaximumImageCalculatorIUS3 self) -> itkIndex3"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_GetIndexOfMaximum(self)


    def SetRegion(self, region: 'itkImageRegion3') -> "void":
        """SetRegion(itkMinimumMaximumImageCalculatorIUS3 self, itkImageRegion3 region)"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_SetRegion(self, region)

    __swig_destroy__ = _itkMinimumMaximumImageCalculatorPython.delete_itkMinimumMaximumImageCalculatorIUS3

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorIUS3 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorIUS3"""
        return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageCalculatorIUS3

        Create a new object of the class itkMinimumMaximumImageCalculatorIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageCalculatorIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageCalculatorIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageCalculatorIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageCalculatorIUS3.Clone = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_Clone, None, itkMinimumMaximumImageCalculatorIUS3)
itkMinimumMaximumImageCalculatorIUS3.SetImage = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_SetImage, None, itkMinimumMaximumImageCalculatorIUS3)
itkMinimumMaximumImageCalculatorIUS3.ComputeMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_ComputeMinimum, None, itkMinimumMaximumImageCalculatorIUS3)
itkMinimumMaximumImageCalculatorIUS3.ComputeMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_ComputeMaximum, None, itkMinimumMaximumImageCalculatorIUS3)
itkMinimumMaximumImageCalculatorIUS3.Compute = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_Compute, None, itkMinimumMaximumImageCalculatorIUS3)
itkMinimumMaximumImageCalculatorIUS3.GetMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_GetMinimum, None, itkMinimumMaximumImageCalculatorIUS3)
itkMinimumMaximumImageCalculatorIUS3.GetMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_GetMaximum, None, itkMinimumMaximumImageCalculatorIUS3)
itkMinimumMaximumImageCalculatorIUS3.GetIndexOfMinimum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_GetIndexOfMinimum, None, itkMinimumMaximumImageCalculatorIUS3)
itkMinimumMaximumImageCalculatorIUS3.GetIndexOfMaximum = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_GetIndexOfMaximum, None, itkMinimumMaximumImageCalculatorIUS3)
itkMinimumMaximumImageCalculatorIUS3.SetRegion = new_instancemethod(_itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_SetRegion, None, itkMinimumMaximumImageCalculatorIUS3)
itkMinimumMaximumImageCalculatorIUS3_swigregister = _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_swigregister
itkMinimumMaximumImageCalculatorIUS3_swigregister(itkMinimumMaximumImageCalculatorIUS3)

def itkMinimumMaximumImageCalculatorIUS3___New_orig__() -> "itkMinimumMaximumImageCalculatorIUS3_Pointer":
    """itkMinimumMaximumImageCalculatorIUS3___New_orig__() -> itkMinimumMaximumImageCalculatorIUS3_Pointer"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3___New_orig__()

def itkMinimumMaximumImageCalculatorIUS3_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageCalculatorIUS3 *":
    """itkMinimumMaximumImageCalculatorIUS3_cast(itkLightObject obj) -> itkMinimumMaximumImageCalculatorIUS3"""
    return _itkMinimumMaximumImageCalculatorPython.itkMinimumMaximumImageCalculatorIUS3_cast(obj)



