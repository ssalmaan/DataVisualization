# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkTransformMeshFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkTransformMeshFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkTransformMeshFilterPython
            return _itkTransformMeshFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkTransformMeshFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkTransformMeshFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkTransformMeshFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkTransformBasePython
import itkCovariantVectorPython
import vnl_vector_refPython
import stdcomplexPython
import pyBasePython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkVariableLengthVectorPython
import ITKCommonBasePython
import itkArray2DPython
import itkPointPython
import itkOptimizerParametersPython
import itkArrayPython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkDiffusionTensor3DPython
import itkMeshToMeshFilterPython
import itkMeshSourcePython
import itkPointSetPython
import itkVectorContainerPython
import itkOffsetPython
import itkSizePython
import itkContinuousIndexPython
import itkIndexPython
import itkMeshBasePython
import itkBoundingBoxPython
import itkMapContainerPython

def itkTransformMeshFilterMF3MF3TF33_New():
  return itkTransformMeshFilterMF3MF3TF33.New()


def itkTransformMeshFilterMF3MF3TD33_New():
  return itkTransformMeshFilterMF3MF3TD33.New()


def itkTransformMeshFilterMF2MF2TF22_New():
  return itkTransformMeshFilterMF2MF2TF22.New()


def itkTransformMeshFilterMF2MF2TD22_New():
  return itkTransformMeshFilterMF2MF2TD22.New()

class itkTransformMeshFilterMF2MF2TD22(itkMeshToMeshFilterPython.itkMeshToMeshFilterMF2MF2):
    """Proxy of C++ itkTransformMeshFilterMF2MF2TD22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTransformMeshFilterMF2MF2TD22_Pointer":
        """__New_orig__() -> itkTransformMeshFilterMF2MF2TD22_Pointer"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TD22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTransformMeshFilterMF2MF2TD22_Pointer":
        """Clone(itkTransformMeshFilterMF2MF2TD22 self) -> itkTransformMeshFilterMF2MF2TD22_Pointer"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TD22_Clone(self)


    def SetTransform(self, _arg: 'itkTransformD22') -> "void":
        """SetTransform(itkTransformMeshFilterMF2MF2TD22 self, itkTransformD22 _arg)"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TD22_SetTransform(self, _arg)


    def GetModifiableTransform(self) -> "itkTransformD22 *":
        """GetModifiableTransform(itkTransformMeshFilterMF2MF2TD22 self) -> itkTransformD22"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TD22_GetModifiableTransform(self)


    def GetTransform(self, *args) -> "itkTransformD22 *":
        """
        GetTransform(itkTransformMeshFilterMF2MF2TD22 self) -> itkTransformD22
        GetTransform(itkTransformMeshFilterMF2MF2TD22 self) -> itkTransformD22
        """
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TD22_GetTransform(self, *args)

    __swig_destroy__ = _itkTransformMeshFilterPython.delete_itkTransformMeshFilterMF2MF2TD22

    def cast(obj: 'itkLightObject') -> "itkTransformMeshFilterMF2MF2TD22 *":
        """cast(itkLightObject obj) -> itkTransformMeshFilterMF2MF2TD22"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TD22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTransformMeshFilterMF2MF2TD22

        Create a new object of the class itkTransformMeshFilterMF2MF2TD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformMeshFilterMF2MF2TD22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTransformMeshFilterMF2MF2TD22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTransformMeshFilterMF2MF2TD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTransformMeshFilterMF2MF2TD22.Clone = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TD22_Clone, None, itkTransformMeshFilterMF2MF2TD22)
itkTransformMeshFilterMF2MF2TD22.SetTransform = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TD22_SetTransform, None, itkTransformMeshFilterMF2MF2TD22)
itkTransformMeshFilterMF2MF2TD22.GetModifiableTransform = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TD22_GetModifiableTransform, None, itkTransformMeshFilterMF2MF2TD22)
itkTransformMeshFilterMF2MF2TD22.GetTransform = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TD22_GetTransform, None, itkTransformMeshFilterMF2MF2TD22)
itkTransformMeshFilterMF2MF2TD22_swigregister = _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TD22_swigregister
itkTransformMeshFilterMF2MF2TD22_swigregister(itkTransformMeshFilterMF2MF2TD22)

def itkTransformMeshFilterMF2MF2TD22___New_orig__() -> "itkTransformMeshFilterMF2MF2TD22_Pointer":
    """itkTransformMeshFilterMF2MF2TD22___New_orig__() -> itkTransformMeshFilterMF2MF2TD22_Pointer"""
    return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TD22___New_orig__()

def itkTransformMeshFilterMF2MF2TD22_cast(obj: 'itkLightObject') -> "itkTransformMeshFilterMF2MF2TD22 *":
    """itkTransformMeshFilterMF2MF2TD22_cast(itkLightObject obj) -> itkTransformMeshFilterMF2MF2TD22"""
    return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TD22_cast(obj)

class itkTransformMeshFilterMF2MF2TF22(itkMeshToMeshFilterPython.itkMeshToMeshFilterMF2MF2):
    """Proxy of C++ itkTransformMeshFilterMF2MF2TF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTransformMeshFilterMF2MF2TF22_Pointer":
        """__New_orig__() -> itkTransformMeshFilterMF2MF2TF22_Pointer"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTransformMeshFilterMF2MF2TF22_Pointer":
        """Clone(itkTransformMeshFilterMF2MF2TF22 self) -> itkTransformMeshFilterMF2MF2TF22_Pointer"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TF22_Clone(self)


    def SetTransform(self, _arg: 'itkTransformF22') -> "void":
        """SetTransform(itkTransformMeshFilterMF2MF2TF22 self, itkTransformF22 _arg)"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TF22_SetTransform(self, _arg)


    def GetModifiableTransform(self) -> "itkTransformF22 *":
        """GetModifiableTransform(itkTransformMeshFilterMF2MF2TF22 self) -> itkTransformF22"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TF22_GetModifiableTransform(self)


    def GetTransform(self, *args) -> "itkTransformF22 *":
        """
        GetTransform(itkTransformMeshFilterMF2MF2TF22 self) -> itkTransformF22
        GetTransform(itkTransformMeshFilterMF2MF2TF22 self) -> itkTransformF22
        """
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TF22_GetTransform(self, *args)

    __swig_destroy__ = _itkTransformMeshFilterPython.delete_itkTransformMeshFilterMF2MF2TF22

    def cast(obj: 'itkLightObject') -> "itkTransformMeshFilterMF2MF2TF22 *":
        """cast(itkLightObject obj) -> itkTransformMeshFilterMF2MF2TF22"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTransformMeshFilterMF2MF2TF22

        Create a new object of the class itkTransformMeshFilterMF2MF2TF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformMeshFilterMF2MF2TF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTransformMeshFilterMF2MF2TF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTransformMeshFilterMF2MF2TF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTransformMeshFilterMF2MF2TF22.Clone = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TF22_Clone, None, itkTransformMeshFilterMF2MF2TF22)
itkTransformMeshFilterMF2MF2TF22.SetTransform = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TF22_SetTransform, None, itkTransformMeshFilterMF2MF2TF22)
itkTransformMeshFilterMF2MF2TF22.GetModifiableTransform = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TF22_GetModifiableTransform, None, itkTransformMeshFilterMF2MF2TF22)
itkTransformMeshFilterMF2MF2TF22.GetTransform = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TF22_GetTransform, None, itkTransformMeshFilterMF2MF2TF22)
itkTransformMeshFilterMF2MF2TF22_swigregister = _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TF22_swigregister
itkTransformMeshFilterMF2MF2TF22_swigregister(itkTransformMeshFilterMF2MF2TF22)

def itkTransformMeshFilterMF2MF2TF22___New_orig__() -> "itkTransformMeshFilterMF2MF2TF22_Pointer":
    """itkTransformMeshFilterMF2MF2TF22___New_orig__() -> itkTransformMeshFilterMF2MF2TF22_Pointer"""
    return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TF22___New_orig__()

def itkTransformMeshFilterMF2MF2TF22_cast(obj: 'itkLightObject') -> "itkTransformMeshFilterMF2MF2TF22 *":
    """itkTransformMeshFilterMF2MF2TF22_cast(itkLightObject obj) -> itkTransformMeshFilterMF2MF2TF22"""
    return _itkTransformMeshFilterPython.itkTransformMeshFilterMF2MF2TF22_cast(obj)

class itkTransformMeshFilterMF3MF3TD33(itkMeshToMeshFilterPython.itkMeshToMeshFilterMF3MF3):
    """Proxy of C++ itkTransformMeshFilterMF3MF3TD33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTransformMeshFilterMF3MF3TD33_Pointer":
        """__New_orig__() -> itkTransformMeshFilterMF3MF3TD33_Pointer"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TD33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTransformMeshFilterMF3MF3TD33_Pointer":
        """Clone(itkTransformMeshFilterMF3MF3TD33 self) -> itkTransformMeshFilterMF3MF3TD33_Pointer"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TD33_Clone(self)


    def SetTransform(self, _arg: 'itkTransformD33') -> "void":
        """SetTransform(itkTransformMeshFilterMF3MF3TD33 self, itkTransformD33 _arg)"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TD33_SetTransform(self, _arg)


    def GetModifiableTransform(self) -> "itkTransformD33 *":
        """GetModifiableTransform(itkTransformMeshFilterMF3MF3TD33 self) -> itkTransformD33"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TD33_GetModifiableTransform(self)


    def GetTransform(self, *args) -> "itkTransformD33 *":
        """
        GetTransform(itkTransformMeshFilterMF3MF3TD33 self) -> itkTransformD33
        GetTransform(itkTransformMeshFilterMF3MF3TD33 self) -> itkTransformD33
        """
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TD33_GetTransform(self, *args)

    __swig_destroy__ = _itkTransformMeshFilterPython.delete_itkTransformMeshFilterMF3MF3TD33

    def cast(obj: 'itkLightObject') -> "itkTransformMeshFilterMF3MF3TD33 *":
        """cast(itkLightObject obj) -> itkTransformMeshFilterMF3MF3TD33"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TD33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTransformMeshFilterMF3MF3TD33

        Create a new object of the class itkTransformMeshFilterMF3MF3TD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformMeshFilterMF3MF3TD33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTransformMeshFilterMF3MF3TD33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTransformMeshFilterMF3MF3TD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTransformMeshFilterMF3MF3TD33.Clone = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TD33_Clone, None, itkTransformMeshFilterMF3MF3TD33)
itkTransformMeshFilterMF3MF3TD33.SetTransform = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TD33_SetTransform, None, itkTransformMeshFilterMF3MF3TD33)
itkTransformMeshFilterMF3MF3TD33.GetModifiableTransform = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TD33_GetModifiableTransform, None, itkTransformMeshFilterMF3MF3TD33)
itkTransformMeshFilterMF3MF3TD33.GetTransform = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TD33_GetTransform, None, itkTransformMeshFilterMF3MF3TD33)
itkTransformMeshFilterMF3MF3TD33_swigregister = _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TD33_swigregister
itkTransformMeshFilterMF3MF3TD33_swigregister(itkTransformMeshFilterMF3MF3TD33)

def itkTransformMeshFilterMF3MF3TD33___New_orig__() -> "itkTransformMeshFilterMF3MF3TD33_Pointer":
    """itkTransformMeshFilterMF3MF3TD33___New_orig__() -> itkTransformMeshFilterMF3MF3TD33_Pointer"""
    return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TD33___New_orig__()

def itkTransformMeshFilterMF3MF3TD33_cast(obj: 'itkLightObject') -> "itkTransformMeshFilterMF3MF3TD33 *":
    """itkTransformMeshFilterMF3MF3TD33_cast(itkLightObject obj) -> itkTransformMeshFilterMF3MF3TD33"""
    return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TD33_cast(obj)

class itkTransformMeshFilterMF3MF3TF33(itkMeshToMeshFilterPython.itkMeshToMeshFilterMF3MF3):
    """Proxy of C++ itkTransformMeshFilterMF3MF3TF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTransformMeshFilterMF3MF3TF33_Pointer":
        """__New_orig__() -> itkTransformMeshFilterMF3MF3TF33_Pointer"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTransformMeshFilterMF3MF3TF33_Pointer":
        """Clone(itkTransformMeshFilterMF3MF3TF33 self) -> itkTransformMeshFilterMF3MF3TF33_Pointer"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TF33_Clone(self)


    def SetTransform(self, _arg: 'itkTransformF33') -> "void":
        """SetTransform(itkTransformMeshFilterMF3MF3TF33 self, itkTransformF33 _arg)"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TF33_SetTransform(self, _arg)


    def GetModifiableTransform(self) -> "itkTransformF33 *":
        """GetModifiableTransform(itkTransformMeshFilterMF3MF3TF33 self) -> itkTransformF33"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TF33_GetModifiableTransform(self)


    def GetTransform(self, *args) -> "itkTransformF33 *":
        """
        GetTransform(itkTransformMeshFilterMF3MF3TF33 self) -> itkTransformF33
        GetTransform(itkTransformMeshFilterMF3MF3TF33 self) -> itkTransformF33
        """
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TF33_GetTransform(self, *args)

    __swig_destroy__ = _itkTransformMeshFilterPython.delete_itkTransformMeshFilterMF3MF3TF33

    def cast(obj: 'itkLightObject') -> "itkTransformMeshFilterMF3MF3TF33 *":
        """cast(itkLightObject obj) -> itkTransformMeshFilterMF3MF3TF33"""
        return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTransformMeshFilterMF3MF3TF33

        Create a new object of the class itkTransformMeshFilterMF3MF3TF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformMeshFilterMF3MF3TF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTransformMeshFilterMF3MF3TF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTransformMeshFilterMF3MF3TF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTransformMeshFilterMF3MF3TF33.Clone = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TF33_Clone, None, itkTransformMeshFilterMF3MF3TF33)
itkTransformMeshFilterMF3MF3TF33.SetTransform = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TF33_SetTransform, None, itkTransformMeshFilterMF3MF3TF33)
itkTransformMeshFilterMF3MF3TF33.GetModifiableTransform = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TF33_GetModifiableTransform, None, itkTransformMeshFilterMF3MF3TF33)
itkTransformMeshFilterMF3MF3TF33.GetTransform = new_instancemethod(_itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TF33_GetTransform, None, itkTransformMeshFilterMF3MF3TF33)
itkTransformMeshFilterMF3MF3TF33_swigregister = _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TF33_swigregister
itkTransformMeshFilterMF3MF3TF33_swigregister(itkTransformMeshFilterMF3MF3TF33)

def itkTransformMeshFilterMF3MF3TF33___New_orig__() -> "itkTransformMeshFilterMF3MF3TF33_Pointer":
    """itkTransformMeshFilterMF3MF3TF33___New_orig__() -> itkTransformMeshFilterMF3MF3TF33_Pointer"""
    return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TF33___New_orig__()

def itkTransformMeshFilterMF3MF3TF33_cast(obj: 'itkLightObject') -> "itkTransformMeshFilterMF3MF3TF33 *":
    """itkTransformMeshFilterMF3MF3TF33_cast(itkLightObject obj) -> itkTransformMeshFilterMF3MF3TF33"""
    return _itkTransformMeshFilterPython.itkTransformMeshFilterMF3MF3TF33_cast(obj)


def transform_mesh_filter(*args, **kwargs):
    """Procedural interface for TransformMeshFilter"""
    import itk
    instance = itk.TransformMeshFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def transform_mesh_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.TransformMeshFilter, itkTemplate.itkTemplate):
        transform_mesh_filter.__doc__ = itk.TransformMeshFilter.values()[0].__doc__
    else:
        transform_mesh_filter.__doc__ = itk.TransformMeshFilter.__doc__




