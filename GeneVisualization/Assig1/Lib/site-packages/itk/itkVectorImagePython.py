# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkVectorImagePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkVectorImagePython', [dirname(__file__)])
        except ImportError:
            import _itkVectorImagePython
            return _itkVectorImagePython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkVectorImagePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkVectorImagePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkVectorImagePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImagePython
import itkOffsetPython
import itkSizePython
import pyBasePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import ITKCommonBasePython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVariableLengthVectorPython

def itkVectorImageF3_New():
  return itkVectorImageF3.New()


def itkVectorImageUS3_New():
  return itkVectorImageUS3.New()


def itkVectorImageUC3_New():
  return itkVectorImageUC3.New()


def itkVectorImageSS3_New():
  return itkVectorImageSS3.New()


def itkVectorImageCF3_New():
  return itkVectorImageCF3.New()


def itkVectorImageF2_New():
  return itkVectorImageF2.New()


def itkVectorImageUS2_New():
  return itkVectorImageUS2.New()


def itkVectorImageUC2_New():
  return itkVectorImageUC2.New()


def itkVectorImageSS2_New():
  return itkVectorImageSS2.New()


def itkVectorImageCF2_New():
  return itkVectorImageCF2.New()

class itkVectorImageCF2(itkImagePython.itkImageBase2):
    """Proxy of C++ itkVectorImageCF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorImageCF2_Pointer":
        """__New_orig__() -> itkVectorImageCF2_Pointer"""
        return _itkVectorImagePython.itkVectorImageCF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorImageCF2_Pointer":
        """Clone(itkVectorImageCF2 self) -> itkVectorImageCF2_Pointer"""
        return _itkVectorImagePython.itkVectorImageCF2_Clone(self)


    def Allocate(self, UseDefaultConstructor: 'bool'=False) -> "void":
        """
        Allocate(itkVectorImageCF2 self, bool UseDefaultConstructor=False)
        Allocate(itkVectorImageCF2 self)
        """
        return _itkVectorImagePython.itkVectorImageCF2_Allocate(self, UseDefaultConstructor)


    def FillBuffer(self, value: 'itkVariableLengthVectorCF') -> "void":
        """FillBuffer(itkVectorImageCF2 self, itkVariableLengthVectorCF value)"""
        return _itkVectorImagePython.itkVectorImageCF2_FillBuffer(self, value)


    def SetPixel(self, index: 'itkIndex2', value: 'itkVariableLengthVectorCF') -> "void":
        """SetPixel(itkVectorImageCF2 self, itkIndex2 index, itkVariableLengthVectorCF value)"""
        return _itkVectorImagePython.itkVectorImageCF2_SetPixel(self, index, value)


    def GetPixel(self, *args) -> "itkVariableLengthVectorCF":
        """
        GetPixel(itkVectorImageCF2 self, itkIndex2 index) -> itkVariableLengthVectorCF
        GetPixel(itkVectorImageCF2 self, itkIndex2 index) -> itkVariableLengthVectorCF
        """
        return _itkVectorImagePython.itkVectorImageCF2_GetPixel(self, *args)


    def GetBufferPointer(self, *args) -> "stdcomplexF const *":
        """
        GetBufferPointer(itkVectorImageCF2 self) -> stdcomplexF
        GetBufferPointer(itkVectorImageCF2 self) -> stdcomplexF
        """
        return _itkVectorImagePython.itkVectorImageCF2_GetBufferPointer(self, *args)


    def GetPixelContainer(self, *args) -> "itk::ImportImageContainer< unsigned long long,std::complex< float > > const *":
        """
        GetPixelContainer(itkVectorImageCF2 self) -> itk::ImportImageContainer< unsigned long long,std::complex< float > >
        GetPixelContainer(itkVectorImageCF2 self) -> itk::ImportImageContainer< unsigned long long,std::complex< float > > const *
        """
        return _itkVectorImagePython.itkVectorImageCF2_GetPixelContainer(self, *args)


    def SetPixelContainer(self, container: 'itk::ImportImageContainer< unsigned long long,std::complex< float > > *') -> "void":
        """SetPixelContainer(itkVectorImageCF2 self, itk::ImportImageContainer< unsigned long long,std::complex< float > > * container)"""
        return _itkVectorImagePython.itkVectorImageCF2_SetPixelContainer(self, container)


    def Graft(self, data: 'itkVectorImageCF2') -> "void":
        """Graft(itkVectorImageCF2 self, itkVectorImageCF2 data)"""
        return _itkVectorImagePython.itkVectorImageCF2_Graft(self, data)


    def GetPixelAccessor(self, *args) -> "itk::DefaultVectorPixelAccessor< std::complex< float > > const":
        """
        GetPixelAccessor(itkVectorImageCF2 self) -> itk::DefaultVectorPixelAccessor< std::complex< float > >
        GetPixelAccessor(itkVectorImageCF2 self) -> itk::DefaultVectorPixelAccessor< std::complex< float > > const
        """
        return _itkVectorImagePython.itkVectorImageCF2_GetPixelAccessor(self, *args)


    def GetNeighborhoodAccessor(self, *args) -> "itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< std::complex< float >,2 > > const":
        """
        GetNeighborhoodAccessor(itkVectorImageCF2 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< std::complex< float >,2 > >
        GetNeighborhoodAccessor(itkVectorImageCF2 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< std::complex< float >,2 > > const
        """
        return _itkVectorImagePython.itkVectorImageCF2_GetNeighborhoodAccessor(self, *args)


    def SetVectorLength(self, _arg: 'unsigned int const') -> "void":
        """SetVectorLength(itkVectorImageCF2 self, unsigned int const _arg)"""
        return _itkVectorImagePython.itkVectorImageCF2_SetVectorLength(self, _arg)


    def GetVectorLength(self) -> "unsigned int const &":
        """GetVectorLength(itkVectorImageCF2 self) -> unsigned int const &"""
        return _itkVectorImagePython.itkVectorImageCF2_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageCF2

    def cast(obj: 'itkLightObject') -> "itkVectorImageCF2 *":
        """cast(itkLightObject obj) -> itkVectorImageCF2"""
        return _itkVectorImagePython.itkVectorImageCF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageCF2

        Create a new object of the class itkVectorImageCF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageCF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorImageCF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageCF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageCF2.Clone = new_instancemethod(_itkVectorImagePython.itkVectorImageCF2_Clone, None, itkVectorImageCF2)
itkVectorImageCF2.Allocate = new_instancemethod(_itkVectorImagePython.itkVectorImageCF2_Allocate, None, itkVectorImageCF2)
itkVectorImageCF2.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageCF2_FillBuffer, None, itkVectorImageCF2)
itkVectorImageCF2.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageCF2_SetPixel, None, itkVectorImageCF2)
itkVectorImageCF2.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageCF2_GetPixel, None, itkVectorImageCF2)
itkVectorImageCF2.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageCF2_GetBufferPointer, None, itkVectorImageCF2)
itkVectorImageCF2.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageCF2_GetPixelContainer, None, itkVectorImageCF2)
itkVectorImageCF2.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageCF2_SetPixelContainer, None, itkVectorImageCF2)
itkVectorImageCF2.Graft = new_instancemethod(_itkVectorImagePython.itkVectorImageCF2_Graft, None, itkVectorImageCF2)
itkVectorImageCF2.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageCF2_GetPixelAccessor, None, itkVectorImageCF2)
itkVectorImageCF2.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageCF2_GetNeighborhoodAccessor, None, itkVectorImageCF2)
itkVectorImageCF2.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageCF2_SetVectorLength, None, itkVectorImageCF2)
itkVectorImageCF2.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageCF2_GetVectorLength, None, itkVectorImageCF2)
itkVectorImageCF2_swigregister = _itkVectorImagePython.itkVectorImageCF2_swigregister
itkVectorImageCF2_swigregister(itkVectorImageCF2)

def itkVectorImageCF2___New_orig__() -> "itkVectorImageCF2_Pointer":
    """itkVectorImageCF2___New_orig__() -> itkVectorImageCF2_Pointer"""
    return _itkVectorImagePython.itkVectorImageCF2___New_orig__()

def itkVectorImageCF2_cast(obj: 'itkLightObject') -> "itkVectorImageCF2 *":
    """itkVectorImageCF2_cast(itkLightObject obj) -> itkVectorImageCF2"""
    return _itkVectorImagePython.itkVectorImageCF2_cast(obj)

class itkVectorImageCF3(itkImagePython.itkImageBase3):
    """Proxy of C++ itkVectorImageCF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorImageCF3_Pointer":
        """__New_orig__() -> itkVectorImageCF3_Pointer"""
        return _itkVectorImagePython.itkVectorImageCF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorImageCF3_Pointer":
        """Clone(itkVectorImageCF3 self) -> itkVectorImageCF3_Pointer"""
        return _itkVectorImagePython.itkVectorImageCF3_Clone(self)


    def Allocate(self, UseDefaultConstructor: 'bool'=False) -> "void":
        """
        Allocate(itkVectorImageCF3 self, bool UseDefaultConstructor=False)
        Allocate(itkVectorImageCF3 self)
        """
        return _itkVectorImagePython.itkVectorImageCF3_Allocate(self, UseDefaultConstructor)


    def FillBuffer(self, value: 'itkVariableLengthVectorCF') -> "void":
        """FillBuffer(itkVectorImageCF3 self, itkVariableLengthVectorCF value)"""
        return _itkVectorImagePython.itkVectorImageCF3_FillBuffer(self, value)


    def SetPixel(self, index: 'itkIndex3', value: 'itkVariableLengthVectorCF') -> "void":
        """SetPixel(itkVectorImageCF3 self, itkIndex3 index, itkVariableLengthVectorCF value)"""
        return _itkVectorImagePython.itkVectorImageCF3_SetPixel(self, index, value)


    def GetPixel(self, *args) -> "itkVariableLengthVectorCF":
        """
        GetPixel(itkVectorImageCF3 self, itkIndex3 index) -> itkVariableLengthVectorCF
        GetPixel(itkVectorImageCF3 self, itkIndex3 index) -> itkVariableLengthVectorCF
        """
        return _itkVectorImagePython.itkVectorImageCF3_GetPixel(self, *args)


    def GetBufferPointer(self, *args) -> "stdcomplexF const *":
        """
        GetBufferPointer(itkVectorImageCF3 self) -> stdcomplexF
        GetBufferPointer(itkVectorImageCF3 self) -> stdcomplexF
        """
        return _itkVectorImagePython.itkVectorImageCF3_GetBufferPointer(self, *args)


    def GetPixelContainer(self, *args) -> "itk::ImportImageContainer< unsigned long long,std::complex< float > > const *":
        """
        GetPixelContainer(itkVectorImageCF3 self) -> itk::ImportImageContainer< unsigned long long,std::complex< float > >
        GetPixelContainer(itkVectorImageCF3 self) -> itk::ImportImageContainer< unsigned long long,std::complex< float > > const *
        """
        return _itkVectorImagePython.itkVectorImageCF3_GetPixelContainer(self, *args)


    def SetPixelContainer(self, container: 'itk::ImportImageContainer< unsigned long long,std::complex< float > > *') -> "void":
        """SetPixelContainer(itkVectorImageCF3 self, itk::ImportImageContainer< unsigned long long,std::complex< float > > * container)"""
        return _itkVectorImagePython.itkVectorImageCF3_SetPixelContainer(self, container)


    def Graft(self, data: 'itkVectorImageCF3') -> "void":
        """Graft(itkVectorImageCF3 self, itkVectorImageCF3 data)"""
        return _itkVectorImagePython.itkVectorImageCF3_Graft(self, data)


    def GetPixelAccessor(self, *args) -> "itk::DefaultVectorPixelAccessor< std::complex< float > > const":
        """
        GetPixelAccessor(itkVectorImageCF3 self) -> itk::DefaultVectorPixelAccessor< std::complex< float > >
        GetPixelAccessor(itkVectorImageCF3 self) -> itk::DefaultVectorPixelAccessor< std::complex< float > > const
        """
        return _itkVectorImagePython.itkVectorImageCF3_GetPixelAccessor(self, *args)


    def GetNeighborhoodAccessor(self, *args) -> "itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< std::complex< float >,3 > > const":
        """
        GetNeighborhoodAccessor(itkVectorImageCF3 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< std::complex< float >,3 > >
        GetNeighborhoodAccessor(itkVectorImageCF3 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< std::complex< float >,3 > > const
        """
        return _itkVectorImagePython.itkVectorImageCF3_GetNeighborhoodAccessor(self, *args)


    def SetVectorLength(self, _arg: 'unsigned int const') -> "void":
        """SetVectorLength(itkVectorImageCF3 self, unsigned int const _arg)"""
        return _itkVectorImagePython.itkVectorImageCF3_SetVectorLength(self, _arg)


    def GetVectorLength(self) -> "unsigned int const &":
        """GetVectorLength(itkVectorImageCF3 self) -> unsigned int const &"""
        return _itkVectorImagePython.itkVectorImageCF3_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageCF3

    def cast(obj: 'itkLightObject') -> "itkVectorImageCF3 *":
        """cast(itkLightObject obj) -> itkVectorImageCF3"""
        return _itkVectorImagePython.itkVectorImageCF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageCF3

        Create a new object of the class itkVectorImageCF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageCF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorImageCF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageCF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageCF3.Clone = new_instancemethod(_itkVectorImagePython.itkVectorImageCF3_Clone, None, itkVectorImageCF3)
itkVectorImageCF3.Allocate = new_instancemethod(_itkVectorImagePython.itkVectorImageCF3_Allocate, None, itkVectorImageCF3)
itkVectorImageCF3.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageCF3_FillBuffer, None, itkVectorImageCF3)
itkVectorImageCF3.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageCF3_SetPixel, None, itkVectorImageCF3)
itkVectorImageCF3.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageCF3_GetPixel, None, itkVectorImageCF3)
itkVectorImageCF3.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageCF3_GetBufferPointer, None, itkVectorImageCF3)
itkVectorImageCF3.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageCF3_GetPixelContainer, None, itkVectorImageCF3)
itkVectorImageCF3.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageCF3_SetPixelContainer, None, itkVectorImageCF3)
itkVectorImageCF3.Graft = new_instancemethod(_itkVectorImagePython.itkVectorImageCF3_Graft, None, itkVectorImageCF3)
itkVectorImageCF3.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageCF3_GetPixelAccessor, None, itkVectorImageCF3)
itkVectorImageCF3.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageCF3_GetNeighborhoodAccessor, None, itkVectorImageCF3)
itkVectorImageCF3.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageCF3_SetVectorLength, None, itkVectorImageCF3)
itkVectorImageCF3.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageCF3_GetVectorLength, None, itkVectorImageCF3)
itkVectorImageCF3_swigregister = _itkVectorImagePython.itkVectorImageCF3_swigregister
itkVectorImageCF3_swigregister(itkVectorImageCF3)

def itkVectorImageCF3___New_orig__() -> "itkVectorImageCF3_Pointer":
    """itkVectorImageCF3___New_orig__() -> itkVectorImageCF3_Pointer"""
    return _itkVectorImagePython.itkVectorImageCF3___New_orig__()

def itkVectorImageCF3_cast(obj: 'itkLightObject') -> "itkVectorImageCF3 *":
    """itkVectorImageCF3_cast(itkLightObject obj) -> itkVectorImageCF3"""
    return _itkVectorImagePython.itkVectorImageCF3_cast(obj)

class itkVectorImageF2(itkImagePython.itkImageBase2):
    """Proxy of C++ itkVectorImageF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorImageF2_Pointer":
        """__New_orig__() -> itkVectorImageF2_Pointer"""
        return _itkVectorImagePython.itkVectorImageF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorImageF2_Pointer":
        """Clone(itkVectorImageF2 self) -> itkVectorImageF2_Pointer"""
        return _itkVectorImagePython.itkVectorImageF2_Clone(self)


    def Allocate(self, UseDefaultConstructor: 'bool'=False) -> "void":
        """
        Allocate(itkVectorImageF2 self, bool UseDefaultConstructor=False)
        Allocate(itkVectorImageF2 self)
        """
        return _itkVectorImagePython.itkVectorImageF2_Allocate(self, UseDefaultConstructor)


    def FillBuffer(self, value: 'itkVariableLengthVectorF') -> "void":
        """FillBuffer(itkVectorImageF2 self, itkVariableLengthVectorF value)"""
        return _itkVectorImagePython.itkVectorImageF2_FillBuffer(self, value)


    def SetPixel(self, index: 'itkIndex2', value: 'itkVariableLengthVectorF') -> "void":
        """SetPixel(itkVectorImageF2 self, itkIndex2 index, itkVariableLengthVectorF value)"""
        return _itkVectorImagePython.itkVectorImageF2_SetPixel(self, index, value)


    def GetPixel(self, *args) -> "itkVariableLengthVectorF":
        """
        GetPixel(itkVectorImageF2 self, itkIndex2 index) -> itkVariableLengthVectorF
        GetPixel(itkVectorImageF2 self, itkIndex2 index) -> itkVariableLengthVectorF
        """
        return _itkVectorImagePython.itkVectorImageF2_GetPixel(self, *args)


    def GetBufferPointer(self, *args) -> "float const *":
        """
        GetBufferPointer(itkVectorImageF2 self) -> float
        GetBufferPointer(itkVectorImageF2 self) -> float const *
        """
        return _itkVectorImagePython.itkVectorImageF2_GetBufferPointer(self, *args)


    def GetPixelContainer(self, *args) -> "itk::ImportImageContainer< unsigned long long,float > const *":
        """
        GetPixelContainer(itkVectorImageF2 self) -> itk::ImportImageContainer< unsigned long long,float >
        GetPixelContainer(itkVectorImageF2 self) -> itk::ImportImageContainer< unsigned long long,float > const *
        """
        return _itkVectorImagePython.itkVectorImageF2_GetPixelContainer(self, *args)


    def SetPixelContainer(self, container: 'itk::ImportImageContainer< unsigned long long,float > *') -> "void":
        """SetPixelContainer(itkVectorImageF2 self, itk::ImportImageContainer< unsigned long long,float > * container)"""
        return _itkVectorImagePython.itkVectorImageF2_SetPixelContainer(self, container)


    def Graft(self, data: 'itkVectorImageF2') -> "void":
        """Graft(itkVectorImageF2 self, itkVectorImageF2 data)"""
        return _itkVectorImagePython.itkVectorImageF2_Graft(self, data)


    def GetPixelAccessor(self, *args) -> "itk::DefaultVectorPixelAccessor< float > const":
        """
        GetPixelAccessor(itkVectorImageF2 self) -> itk::DefaultVectorPixelAccessor< float >
        GetPixelAccessor(itkVectorImageF2 self) -> itk::DefaultVectorPixelAccessor< float > const
        """
        return _itkVectorImagePython.itkVectorImageF2_GetPixelAccessor(self, *args)


    def GetNeighborhoodAccessor(self, *args) -> "itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< float,2 > > const":
        """
        GetNeighborhoodAccessor(itkVectorImageF2 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< float,2 > >
        GetNeighborhoodAccessor(itkVectorImageF2 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< float,2 > > const
        """
        return _itkVectorImagePython.itkVectorImageF2_GetNeighborhoodAccessor(self, *args)


    def SetVectorLength(self, _arg: 'unsigned int const') -> "void":
        """SetVectorLength(itkVectorImageF2 self, unsigned int const _arg)"""
        return _itkVectorImagePython.itkVectorImageF2_SetVectorLength(self, _arg)


    def GetVectorLength(self) -> "unsigned int const &":
        """GetVectorLength(itkVectorImageF2 self) -> unsigned int const &"""
        return _itkVectorImagePython.itkVectorImageF2_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageF2

    def cast(obj: 'itkLightObject') -> "itkVectorImageF2 *":
        """cast(itkLightObject obj) -> itkVectorImageF2"""
        return _itkVectorImagePython.itkVectorImageF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageF2

        Create a new object of the class itkVectorImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorImageF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageF2.Clone = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_Clone, None, itkVectorImageF2)
itkVectorImageF2.Allocate = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_Allocate, None, itkVectorImageF2)
itkVectorImageF2.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_FillBuffer, None, itkVectorImageF2)
itkVectorImageF2.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_SetPixel, None, itkVectorImageF2)
itkVectorImageF2.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_GetPixel, None, itkVectorImageF2)
itkVectorImageF2.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_GetBufferPointer, None, itkVectorImageF2)
itkVectorImageF2.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_GetPixelContainer, None, itkVectorImageF2)
itkVectorImageF2.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_SetPixelContainer, None, itkVectorImageF2)
itkVectorImageF2.Graft = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_Graft, None, itkVectorImageF2)
itkVectorImageF2.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_GetPixelAccessor, None, itkVectorImageF2)
itkVectorImageF2.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_GetNeighborhoodAccessor, None, itkVectorImageF2)
itkVectorImageF2.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_SetVectorLength, None, itkVectorImageF2)
itkVectorImageF2.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_GetVectorLength, None, itkVectorImageF2)
itkVectorImageF2_swigregister = _itkVectorImagePython.itkVectorImageF2_swigregister
itkVectorImageF2_swigregister(itkVectorImageF2)

def itkVectorImageF2___New_orig__() -> "itkVectorImageF2_Pointer":
    """itkVectorImageF2___New_orig__() -> itkVectorImageF2_Pointer"""
    return _itkVectorImagePython.itkVectorImageF2___New_orig__()

def itkVectorImageF2_cast(obj: 'itkLightObject') -> "itkVectorImageF2 *":
    """itkVectorImageF2_cast(itkLightObject obj) -> itkVectorImageF2"""
    return _itkVectorImagePython.itkVectorImageF2_cast(obj)

class itkVectorImageF3(itkImagePython.itkImageBase3):
    """Proxy of C++ itkVectorImageF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorImageF3_Pointer":
        """__New_orig__() -> itkVectorImageF3_Pointer"""
        return _itkVectorImagePython.itkVectorImageF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorImageF3_Pointer":
        """Clone(itkVectorImageF3 self) -> itkVectorImageF3_Pointer"""
        return _itkVectorImagePython.itkVectorImageF3_Clone(self)


    def Allocate(self, UseDefaultConstructor: 'bool'=False) -> "void":
        """
        Allocate(itkVectorImageF3 self, bool UseDefaultConstructor=False)
        Allocate(itkVectorImageF3 self)
        """
        return _itkVectorImagePython.itkVectorImageF3_Allocate(self, UseDefaultConstructor)


    def FillBuffer(self, value: 'itkVariableLengthVectorF') -> "void":
        """FillBuffer(itkVectorImageF3 self, itkVariableLengthVectorF value)"""
        return _itkVectorImagePython.itkVectorImageF3_FillBuffer(self, value)


    def SetPixel(self, index: 'itkIndex3', value: 'itkVariableLengthVectorF') -> "void":
        """SetPixel(itkVectorImageF3 self, itkIndex3 index, itkVariableLengthVectorF value)"""
        return _itkVectorImagePython.itkVectorImageF3_SetPixel(self, index, value)


    def GetPixel(self, *args) -> "itkVariableLengthVectorF":
        """
        GetPixel(itkVectorImageF3 self, itkIndex3 index) -> itkVariableLengthVectorF
        GetPixel(itkVectorImageF3 self, itkIndex3 index) -> itkVariableLengthVectorF
        """
        return _itkVectorImagePython.itkVectorImageF3_GetPixel(self, *args)


    def GetBufferPointer(self, *args) -> "float const *":
        """
        GetBufferPointer(itkVectorImageF3 self) -> float
        GetBufferPointer(itkVectorImageF3 self) -> float const *
        """
        return _itkVectorImagePython.itkVectorImageF3_GetBufferPointer(self, *args)


    def GetPixelContainer(self, *args) -> "itk::ImportImageContainer< unsigned long long,float > const *":
        """
        GetPixelContainer(itkVectorImageF3 self) -> itk::ImportImageContainer< unsigned long long,float >
        GetPixelContainer(itkVectorImageF3 self) -> itk::ImportImageContainer< unsigned long long,float > const *
        """
        return _itkVectorImagePython.itkVectorImageF3_GetPixelContainer(self, *args)


    def SetPixelContainer(self, container: 'itk::ImportImageContainer< unsigned long long,float > *') -> "void":
        """SetPixelContainer(itkVectorImageF3 self, itk::ImportImageContainer< unsigned long long,float > * container)"""
        return _itkVectorImagePython.itkVectorImageF3_SetPixelContainer(self, container)


    def Graft(self, data: 'itkVectorImageF3') -> "void":
        """Graft(itkVectorImageF3 self, itkVectorImageF3 data)"""
        return _itkVectorImagePython.itkVectorImageF3_Graft(self, data)


    def GetPixelAccessor(self, *args) -> "itk::DefaultVectorPixelAccessor< float > const":
        """
        GetPixelAccessor(itkVectorImageF3 self) -> itk::DefaultVectorPixelAccessor< float >
        GetPixelAccessor(itkVectorImageF3 self) -> itk::DefaultVectorPixelAccessor< float > const
        """
        return _itkVectorImagePython.itkVectorImageF3_GetPixelAccessor(self, *args)


    def GetNeighborhoodAccessor(self, *args) -> "itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< float,3 > > const":
        """
        GetNeighborhoodAccessor(itkVectorImageF3 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< float,3 > >
        GetNeighborhoodAccessor(itkVectorImageF3 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< float,3 > > const
        """
        return _itkVectorImagePython.itkVectorImageF3_GetNeighborhoodAccessor(self, *args)


    def SetVectorLength(self, _arg: 'unsigned int const') -> "void":
        """SetVectorLength(itkVectorImageF3 self, unsigned int const _arg)"""
        return _itkVectorImagePython.itkVectorImageF3_SetVectorLength(self, _arg)


    def GetVectorLength(self) -> "unsigned int const &":
        """GetVectorLength(itkVectorImageF3 self) -> unsigned int const &"""
        return _itkVectorImagePython.itkVectorImageF3_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageF3

    def cast(obj: 'itkLightObject') -> "itkVectorImageF3 *":
        """cast(itkLightObject obj) -> itkVectorImageF3"""
        return _itkVectorImagePython.itkVectorImageF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageF3

        Create a new object of the class itkVectorImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorImageF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageF3.Clone = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_Clone, None, itkVectorImageF3)
itkVectorImageF3.Allocate = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_Allocate, None, itkVectorImageF3)
itkVectorImageF3.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_FillBuffer, None, itkVectorImageF3)
itkVectorImageF3.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_SetPixel, None, itkVectorImageF3)
itkVectorImageF3.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_GetPixel, None, itkVectorImageF3)
itkVectorImageF3.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_GetBufferPointer, None, itkVectorImageF3)
itkVectorImageF3.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_GetPixelContainer, None, itkVectorImageF3)
itkVectorImageF3.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_SetPixelContainer, None, itkVectorImageF3)
itkVectorImageF3.Graft = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_Graft, None, itkVectorImageF3)
itkVectorImageF3.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_GetPixelAccessor, None, itkVectorImageF3)
itkVectorImageF3.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_GetNeighborhoodAccessor, None, itkVectorImageF3)
itkVectorImageF3.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_SetVectorLength, None, itkVectorImageF3)
itkVectorImageF3.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_GetVectorLength, None, itkVectorImageF3)
itkVectorImageF3_swigregister = _itkVectorImagePython.itkVectorImageF3_swigregister
itkVectorImageF3_swigregister(itkVectorImageF3)

def itkVectorImageF3___New_orig__() -> "itkVectorImageF3_Pointer":
    """itkVectorImageF3___New_orig__() -> itkVectorImageF3_Pointer"""
    return _itkVectorImagePython.itkVectorImageF3___New_orig__()

def itkVectorImageF3_cast(obj: 'itkLightObject') -> "itkVectorImageF3 *":
    """itkVectorImageF3_cast(itkLightObject obj) -> itkVectorImageF3"""
    return _itkVectorImagePython.itkVectorImageF3_cast(obj)

class itkVectorImageSS2(itkImagePython.itkImageBase2):
    """Proxy of C++ itkVectorImageSS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorImageSS2_Pointer":
        """__New_orig__() -> itkVectorImageSS2_Pointer"""
        return _itkVectorImagePython.itkVectorImageSS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorImageSS2_Pointer":
        """Clone(itkVectorImageSS2 self) -> itkVectorImageSS2_Pointer"""
        return _itkVectorImagePython.itkVectorImageSS2_Clone(self)


    def Allocate(self, UseDefaultConstructor: 'bool'=False) -> "void":
        """
        Allocate(itkVectorImageSS2 self, bool UseDefaultConstructor=False)
        Allocate(itkVectorImageSS2 self)
        """
        return _itkVectorImagePython.itkVectorImageSS2_Allocate(self, UseDefaultConstructor)


    def FillBuffer(self, value: 'itkVariableLengthVectorSS') -> "void":
        """FillBuffer(itkVectorImageSS2 self, itkVariableLengthVectorSS value)"""
        return _itkVectorImagePython.itkVectorImageSS2_FillBuffer(self, value)


    def SetPixel(self, index: 'itkIndex2', value: 'itkVariableLengthVectorSS') -> "void":
        """SetPixel(itkVectorImageSS2 self, itkIndex2 index, itkVariableLengthVectorSS value)"""
        return _itkVectorImagePython.itkVectorImageSS2_SetPixel(self, index, value)


    def GetPixel(self, *args) -> "itkVariableLengthVectorSS":
        """
        GetPixel(itkVectorImageSS2 self, itkIndex2 index) -> itkVariableLengthVectorSS
        GetPixel(itkVectorImageSS2 self, itkIndex2 index) -> itkVariableLengthVectorSS
        """
        return _itkVectorImagePython.itkVectorImageSS2_GetPixel(self, *args)


    def GetBufferPointer(self, *args) -> "short const *":
        """
        GetBufferPointer(itkVectorImageSS2 self) -> short
        GetBufferPointer(itkVectorImageSS2 self) -> short const *
        """
        return _itkVectorImagePython.itkVectorImageSS2_GetBufferPointer(self, *args)


    def GetPixelContainer(self, *args) -> "itk::ImportImageContainer< unsigned long long,short > const *":
        """
        GetPixelContainer(itkVectorImageSS2 self) -> itk::ImportImageContainer< unsigned long long,short >
        GetPixelContainer(itkVectorImageSS2 self) -> itk::ImportImageContainer< unsigned long long,short > const *
        """
        return _itkVectorImagePython.itkVectorImageSS2_GetPixelContainer(self, *args)


    def SetPixelContainer(self, container: 'itk::ImportImageContainer< unsigned long long,short > *') -> "void":
        """SetPixelContainer(itkVectorImageSS2 self, itk::ImportImageContainer< unsigned long long,short > * container)"""
        return _itkVectorImagePython.itkVectorImageSS2_SetPixelContainer(self, container)


    def Graft(self, data: 'itkVectorImageSS2') -> "void":
        """Graft(itkVectorImageSS2 self, itkVectorImageSS2 data)"""
        return _itkVectorImagePython.itkVectorImageSS2_Graft(self, data)


    def GetPixelAccessor(self, *args) -> "itk::DefaultVectorPixelAccessor< short > const":
        """
        GetPixelAccessor(itkVectorImageSS2 self) -> itk::DefaultVectorPixelAccessor< short >
        GetPixelAccessor(itkVectorImageSS2 self) -> itk::DefaultVectorPixelAccessor< short > const
        """
        return _itkVectorImagePython.itkVectorImageSS2_GetPixelAccessor(self, *args)


    def GetNeighborhoodAccessor(self, *args) -> "itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< short,2 > > const":
        """
        GetNeighborhoodAccessor(itkVectorImageSS2 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< short,2 > >
        GetNeighborhoodAccessor(itkVectorImageSS2 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< short,2 > > const
        """
        return _itkVectorImagePython.itkVectorImageSS2_GetNeighborhoodAccessor(self, *args)


    def SetVectorLength(self, _arg: 'unsigned int const') -> "void":
        """SetVectorLength(itkVectorImageSS2 self, unsigned int const _arg)"""
        return _itkVectorImagePython.itkVectorImageSS2_SetVectorLength(self, _arg)


    def GetVectorLength(self) -> "unsigned int const &":
        """GetVectorLength(itkVectorImageSS2 self) -> unsigned int const &"""
        return _itkVectorImagePython.itkVectorImageSS2_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageSS2

    def cast(obj: 'itkLightObject') -> "itkVectorImageSS2 *":
        """cast(itkLightObject obj) -> itkVectorImageSS2"""
        return _itkVectorImagePython.itkVectorImageSS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageSS2

        Create a new object of the class itkVectorImageSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageSS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorImageSS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageSS2.Clone = new_instancemethod(_itkVectorImagePython.itkVectorImageSS2_Clone, None, itkVectorImageSS2)
itkVectorImageSS2.Allocate = new_instancemethod(_itkVectorImagePython.itkVectorImageSS2_Allocate, None, itkVectorImageSS2)
itkVectorImageSS2.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageSS2_FillBuffer, None, itkVectorImageSS2)
itkVectorImageSS2.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageSS2_SetPixel, None, itkVectorImageSS2)
itkVectorImageSS2.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageSS2_GetPixel, None, itkVectorImageSS2)
itkVectorImageSS2.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageSS2_GetBufferPointer, None, itkVectorImageSS2)
itkVectorImageSS2.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageSS2_GetPixelContainer, None, itkVectorImageSS2)
itkVectorImageSS2.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageSS2_SetPixelContainer, None, itkVectorImageSS2)
itkVectorImageSS2.Graft = new_instancemethod(_itkVectorImagePython.itkVectorImageSS2_Graft, None, itkVectorImageSS2)
itkVectorImageSS2.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageSS2_GetPixelAccessor, None, itkVectorImageSS2)
itkVectorImageSS2.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageSS2_GetNeighborhoodAccessor, None, itkVectorImageSS2)
itkVectorImageSS2.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageSS2_SetVectorLength, None, itkVectorImageSS2)
itkVectorImageSS2.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageSS2_GetVectorLength, None, itkVectorImageSS2)
itkVectorImageSS2_swigregister = _itkVectorImagePython.itkVectorImageSS2_swigregister
itkVectorImageSS2_swigregister(itkVectorImageSS2)

def itkVectorImageSS2___New_orig__() -> "itkVectorImageSS2_Pointer":
    """itkVectorImageSS2___New_orig__() -> itkVectorImageSS2_Pointer"""
    return _itkVectorImagePython.itkVectorImageSS2___New_orig__()

def itkVectorImageSS2_cast(obj: 'itkLightObject') -> "itkVectorImageSS2 *":
    """itkVectorImageSS2_cast(itkLightObject obj) -> itkVectorImageSS2"""
    return _itkVectorImagePython.itkVectorImageSS2_cast(obj)

class itkVectorImageSS3(itkImagePython.itkImageBase3):
    """Proxy of C++ itkVectorImageSS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorImageSS3_Pointer":
        """__New_orig__() -> itkVectorImageSS3_Pointer"""
        return _itkVectorImagePython.itkVectorImageSS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorImageSS3_Pointer":
        """Clone(itkVectorImageSS3 self) -> itkVectorImageSS3_Pointer"""
        return _itkVectorImagePython.itkVectorImageSS3_Clone(self)


    def Allocate(self, UseDefaultConstructor: 'bool'=False) -> "void":
        """
        Allocate(itkVectorImageSS3 self, bool UseDefaultConstructor=False)
        Allocate(itkVectorImageSS3 self)
        """
        return _itkVectorImagePython.itkVectorImageSS3_Allocate(self, UseDefaultConstructor)


    def FillBuffer(self, value: 'itkVariableLengthVectorSS') -> "void":
        """FillBuffer(itkVectorImageSS3 self, itkVariableLengthVectorSS value)"""
        return _itkVectorImagePython.itkVectorImageSS3_FillBuffer(self, value)


    def SetPixel(self, index: 'itkIndex3', value: 'itkVariableLengthVectorSS') -> "void":
        """SetPixel(itkVectorImageSS3 self, itkIndex3 index, itkVariableLengthVectorSS value)"""
        return _itkVectorImagePython.itkVectorImageSS3_SetPixel(self, index, value)


    def GetPixel(self, *args) -> "itkVariableLengthVectorSS":
        """
        GetPixel(itkVectorImageSS3 self, itkIndex3 index) -> itkVariableLengthVectorSS
        GetPixel(itkVectorImageSS3 self, itkIndex3 index) -> itkVariableLengthVectorSS
        """
        return _itkVectorImagePython.itkVectorImageSS3_GetPixel(self, *args)


    def GetBufferPointer(self, *args) -> "short const *":
        """
        GetBufferPointer(itkVectorImageSS3 self) -> short
        GetBufferPointer(itkVectorImageSS3 self) -> short const *
        """
        return _itkVectorImagePython.itkVectorImageSS3_GetBufferPointer(self, *args)


    def GetPixelContainer(self, *args) -> "itk::ImportImageContainer< unsigned long long,short > const *":
        """
        GetPixelContainer(itkVectorImageSS3 self) -> itk::ImportImageContainer< unsigned long long,short >
        GetPixelContainer(itkVectorImageSS3 self) -> itk::ImportImageContainer< unsigned long long,short > const *
        """
        return _itkVectorImagePython.itkVectorImageSS3_GetPixelContainer(self, *args)


    def SetPixelContainer(self, container: 'itk::ImportImageContainer< unsigned long long,short > *') -> "void":
        """SetPixelContainer(itkVectorImageSS3 self, itk::ImportImageContainer< unsigned long long,short > * container)"""
        return _itkVectorImagePython.itkVectorImageSS3_SetPixelContainer(self, container)


    def Graft(self, data: 'itkVectorImageSS3') -> "void":
        """Graft(itkVectorImageSS3 self, itkVectorImageSS3 data)"""
        return _itkVectorImagePython.itkVectorImageSS3_Graft(self, data)


    def GetPixelAccessor(self, *args) -> "itk::DefaultVectorPixelAccessor< short > const":
        """
        GetPixelAccessor(itkVectorImageSS3 self) -> itk::DefaultVectorPixelAccessor< short >
        GetPixelAccessor(itkVectorImageSS3 self) -> itk::DefaultVectorPixelAccessor< short > const
        """
        return _itkVectorImagePython.itkVectorImageSS3_GetPixelAccessor(self, *args)


    def GetNeighborhoodAccessor(self, *args) -> "itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< short,3 > > const":
        """
        GetNeighborhoodAccessor(itkVectorImageSS3 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< short,3 > >
        GetNeighborhoodAccessor(itkVectorImageSS3 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< short,3 > > const
        """
        return _itkVectorImagePython.itkVectorImageSS3_GetNeighborhoodAccessor(self, *args)


    def SetVectorLength(self, _arg: 'unsigned int const') -> "void":
        """SetVectorLength(itkVectorImageSS3 self, unsigned int const _arg)"""
        return _itkVectorImagePython.itkVectorImageSS3_SetVectorLength(self, _arg)


    def GetVectorLength(self) -> "unsigned int const &":
        """GetVectorLength(itkVectorImageSS3 self) -> unsigned int const &"""
        return _itkVectorImagePython.itkVectorImageSS3_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageSS3

    def cast(obj: 'itkLightObject') -> "itkVectorImageSS3 *":
        """cast(itkLightObject obj) -> itkVectorImageSS3"""
        return _itkVectorImagePython.itkVectorImageSS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageSS3

        Create a new object of the class itkVectorImageSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorImageSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageSS3.Clone = new_instancemethod(_itkVectorImagePython.itkVectorImageSS3_Clone, None, itkVectorImageSS3)
itkVectorImageSS3.Allocate = new_instancemethod(_itkVectorImagePython.itkVectorImageSS3_Allocate, None, itkVectorImageSS3)
itkVectorImageSS3.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageSS3_FillBuffer, None, itkVectorImageSS3)
itkVectorImageSS3.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageSS3_SetPixel, None, itkVectorImageSS3)
itkVectorImageSS3.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageSS3_GetPixel, None, itkVectorImageSS3)
itkVectorImageSS3.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageSS3_GetBufferPointer, None, itkVectorImageSS3)
itkVectorImageSS3.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageSS3_GetPixelContainer, None, itkVectorImageSS3)
itkVectorImageSS3.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageSS3_SetPixelContainer, None, itkVectorImageSS3)
itkVectorImageSS3.Graft = new_instancemethod(_itkVectorImagePython.itkVectorImageSS3_Graft, None, itkVectorImageSS3)
itkVectorImageSS3.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageSS3_GetPixelAccessor, None, itkVectorImageSS3)
itkVectorImageSS3.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageSS3_GetNeighborhoodAccessor, None, itkVectorImageSS3)
itkVectorImageSS3.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageSS3_SetVectorLength, None, itkVectorImageSS3)
itkVectorImageSS3.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageSS3_GetVectorLength, None, itkVectorImageSS3)
itkVectorImageSS3_swigregister = _itkVectorImagePython.itkVectorImageSS3_swigregister
itkVectorImageSS3_swigregister(itkVectorImageSS3)

def itkVectorImageSS3___New_orig__() -> "itkVectorImageSS3_Pointer":
    """itkVectorImageSS3___New_orig__() -> itkVectorImageSS3_Pointer"""
    return _itkVectorImagePython.itkVectorImageSS3___New_orig__()

def itkVectorImageSS3_cast(obj: 'itkLightObject') -> "itkVectorImageSS3 *":
    """itkVectorImageSS3_cast(itkLightObject obj) -> itkVectorImageSS3"""
    return _itkVectorImagePython.itkVectorImageSS3_cast(obj)

class itkVectorImageUC2(itkImagePython.itkImageBase2):
    """Proxy of C++ itkVectorImageUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorImageUC2_Pointer":
        """__New_orig__() -> itkVectorImageUC2_Pointer"""
        return _itkVectorImagePython.itkVectorImageUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorImageUC2_Pointer":
        """Clone(itkVectorImageUC2 self) -> itkVectorImageUC2_Pointer"""
        return _itkVectorImagePython.itkVectorImageUC2_Clone(self)


    def Allocate(self, UseDefaultConstructor: 'bool'=False) -> "void":
        """
        Allocate(itkVectorImageUC2 self, bool UseDefaultConstructor=False)
        Allocate(itkVectorImageUC2 self)
        """
        return _itkVectorImagePython.itkVectorImageUC2_Allocate(self, UseDefaultConstructor)


    def FillBuffer(self, value: 'itkVariableLengthVectorUC') -> "void":
        """FillBuffer(itkVectorImageUC2 self, itkVariableLengthVectorUC value)"""
        return _itkVectorImagePython.itkVectorImageUC2_FillBuffer(self, value)


    def SetPixel(self, index: 'itkIndex2', value: 'itkVariableLengthVectorUC') -> "void":
        """SetPixel(itkVectorImageUC2 self, itkIndex2 index, itkVariableLengthVectorUC value)"""
        return _itkVectorImagePython.itkVectorImageUC2_SetPixel(self, index, value)


    def GetPixel(self, *args) -> "itkVariableLengthVectorUC":
        """
        GetPixel(itkVectorImageUC2 self, itkIndex2 index) -> itkVariableLengthVectorUC
        GetPixel(itkVectorImageUC2 self, itkIndex2 index) -> itkVariableLengthVectorUC
        """
        return _itkVectorImagePython.itkVectorImageUC2_GetPixel(self, *args)


    def GetBufferPointer(self, *args) -> "unsigned char const *":
        """
        GetBufferPointer(itkVectorImageUC2 self) -> unsigned char
        GetBufferPointer(itkVectorImageUC2 self) -> unsigned char const *
        """
        return _itkVectorImagePython.itkVectorImageUC2_GetBufferPointer(self, *args)


    def GetPixelContainer(self, *args) -> "itk::ImportImageContainer< unsigned long long,unsigned char > const *":
        """
        GetPixelContainer(itkVectorImageUC2 self) -> itk::ImportImageContainer< unsigned long long,unsigned char >
        GetPixelContainer(itkVectorImageUC2 self) -> itk::ImportImageContainer< unsigned long long,unsigned char > const *
        """
        return _itkVectorImagePython.itkVectorImageUC2_GetPixelContainer(self, *args)


    def SetPixelContainer(self, container: 'itk::ImportImageContainer< unsigned long long,unsigned char > *') -> "void":
        """SetPixelContainer(itkVectorImageUC2 self, itk::ImportImageContainer< unsigned long long,unsigned char > * container)"""
        return _itkVectorImagePython.itkVectorImageUC2_SetPixelContainer(self, container)


    def Graft(self, data: 'itkVectorImageUC2') -> "void":
        """Graft(itkVectorImageUC2 self, itkVectorImageUC2 data)"""
        return _itkVectorImagePython.itkVectorImageUC2_Graft(self, data)


    def GetPixelAccessor(self, *args) -> "itk::DefaultVectorPixelAccessor< unsigned char > const":
        """
        GetPixelAccessor(itkVectorImageUC2 self) -> itk::DefaultVectorPixelAccessor< unsigned char >
        GetPixelAccessor(itkVectorImageUC2 self) -> itk::DefaultVectorPixelAccessor< unsigned char > const
        """
        return _itkVectorImagePython.itkVectorImageUC2_GetPixelAccessor(self, *args)


    def GetNeighborhoodAccessor(self, *args) -> "itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned char,2 > > const":
        """
        GetNeighborhoodAccessor(itkVectorImageUC2 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned char,2 > >
        GetNeighborhoodAccessor(itkVectorImageUC2 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned char,2 > > const
        """
        return _itkVectorImagePython.itkVectorImageUC2_GetNeighborhoodAccessor(self, *args)


    def SetVectorLength(self, _arg: 'unsigned int const') -> "void":
        """SetVectorLength(itkVectorImageUC2 self, unsigned int const _arg)"""
        return _itkVectorImagePython.itkVectorImageUC2_SetVectorLength(self, _arg)


    def GetVectorLength(self) -> "unsigned int const &":
        """GetVectorLength(itkVectorImageUC2 self) -> unsigned int const &"""
        return _itkVectorImagePython.itkVectorImageUC2_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUC2

    def cast(obj: 'itkLightObject') -> "itkVectorImageUC2 *":
        """cast(itkLightObject obj) -> itkVectorImageUC2"""
        return _itkVectorImagePython.itkVectorImageUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageUC2

        Create a new object of the class itkVectorImageUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorImageUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageUC2.Clone = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_Clone, None, itkVectorImageUC2)
itkVectorImageUC2.Allocate = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_Allocate, None, itkVectorImageUC2)
itkVectorImageUC2.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_FillBuffer, None, itkVectorImageUC2)
itkVectorImageUC2.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_SetPixel, None, itkVectorImageUC2)
itkVectorImageUC2.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_GetPixel, None, itkVectorImageUC2)
itkVectorImageUC2.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_GetBufferPointer, None, itkVectorImageUC2)
itkVectorImageUC2.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_GetPixelContainer, None, itkVectorImageUC2)
itkVectorImageUC2.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_SetPixelContainer, None, itkVectorImageUC2)
itkVectorImageUC2.Graft = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_Graft, None, itkVectorImageUC2)
itkVectorImageUC2.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_GetPixelAccessor, None, itkVectorImageUC2)
itkVectorImageUC2.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_GetNeighborhoodAccessor, None, itkVectorImageUC2)
itkVectorImageUC2.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_SetVectorLength, None, itkVectorImageUC2)
itkVectorImageUC2.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_GetVectorLength, None, itkVectorImageUC2)
itkVectorImageUC2_swigregister = _itkVectorImagePython.itkVectorImageUC2_swigregister
itkVectorImageUC2_swigregister(itkVectorImageUC2)

def itkVectorImageUC2___New_orig__() -> "itkVectorImageUC2_Pointer":
    """itkVectorImageUC2___New_orig__() -> itkVectorImageUC2_Pointer"""
    return _itkVectorImagePython.itkVectorImageUC2___New_orig__()

def itkVectorImageUC2_cast(obj: 'itkLightObject') -> "itkVectorImageUC2 *":
    """itkVectorImageUC2_cast(itkLightObject obj) -> itkVectorImageUC2"""
    return _itkVectorImagePython.itkVectorImageUC2_cast(obj)

class itkVectorImageUC3(itkImagePython.itkImageBase3):
    """Proxy of C++ itkVectorImageUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorImageUC3_Pointer":
        """__New_orig__() -> itkVectorImageUC3_Pointer"""
        return _itkVectorImagePython.itkVectorImageUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorImageUC3_Pointer":
        """Clone(itkVectorImageUC3 self) -> itkVectorImageUC3_Pointer"""
        return _itkVectorImagePython.itkVectorImageUC3_Clone(self)


    def Allocate(self, UseDefaultConstructor: 'bool'=False) -> "void":
        """
        Allocate(itkVectorImageUC3 self, bool UseDefaultConstructor=False)
        Allocate(itkVectorImageUC3 self)
        """
        return _itkVectorImagePython.itkVectorImageUC3_Allocate(self, UseDefaultConstructor)


    def FillBuffer(self, value: 'itkVariableLengthVectorUC') -> "void":
        """FillBuffer(itkVectorImageUC3 self, itkVariableLengthVectorUC value)"""
        return _itkVectorImagePython.itkVectorImageUC3_FillBuffer(self, value)


    def SetPixel(self, index: 'itkIndex3', value: 'itkVariableLengthVectorUC') -> "void":
        """SetPixel(itkVectorImageUC3 self, itkIndex3 index, itkVariableLengthVectorUC value)"""
        return _itkVectorImagePython.itkVectorImageUC3_SetPixel(self, index, value)


    def GetPixel(self, *args) -> "itkVariableLengthVectorUC":
        """
        GetPixel(itkVectorImageUC3 self, itkIndex3 index) -> itkVariableLengthVectorUC
        GetPixel(itkVectorImageUC3 self, itkIndex3 index) -> itkVariableLengthVectorUC
        """
        return _itkVectorImagePython.itkVectorImageUC3_GetPixel(self, *args)


    def GetBufferPointer(self, *args) -> "unsigned char const *":
        """
        GetBufferPointer(itkVectorImageUC3 self) -> unsigned char
        GetBufferPointer(itkVectorImageUC3 self) -> unsigned char const *
        """
        return _itkVectorImagePython.itkVectorImageUC3_GetBufferPointer(self, *args)


    def GetPixelContainer(self, *args) -> "itk::ImportImageContainer< unsigned long long,unsigned char > const *":
        """
        GetPixelContainer(itkVectorImageUC3 self) -> itk::ImportImageContainer< unsigned long long,unsigned char >
        GetPixelContainer(itkVectorImageUC3 self) -> itk::ImportImageContainer< unsigned long long,unsigned char > const *
        """
        return _itkVectorImagePython.itkVectorImageUC3_GetPixelContainer(self, *args)


    def SetPixelContainer(self, container: 'itk::ImportImageContainer< unsigned long long,unsigned char > *') -> "void":
        """SetPixelContainer(itkVectorImageUC3 self, itk::ImportImageContainer< unsigned long long,unsigned char > * container)"""
        return _itkVectorImagePython.itkVectorImageUC3_SetPixelContainer(self, container)


    def Graft(self, data: 'itkVectorImageUC3') -> "void":
        """Graft(itkVectorImageUC3 self, itkVectorImageUC3 data)"""
        return _itkVectorImagePython.itkVectorImageUC3_Graft(self, data)


    def GetPixelAccessor(self, *args) -> "itk::DefaultVectorPixelAccessor< unsigned char > const":
        """
        GetPixelAccessor(itkVectorImageUC3 self) -> itk::DefaultVectorPixelAccessor< unsigned char >
        GetPixelAccessor(itkVectorImageUC3 self) -> itk::DefaultVectorPixelAccessor< unsigned char > const
        """
        return _itkVectorImagePython.itkVectorImageUC3_GetPixelAccessor(self, *args)


    def GetNeighborhoodAccessor(self, *args) -> "itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned char,3 > > const":
        """
        GetNeighborhoodAccessor(itkVectorImageUC3 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned char,3 > >
        GetNeighborhoodAccessor(itkVectorImageUC3 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned char,3 > > const
        """
        return _itkVectorImagePython.itkVectorImageUC3_GetNeighborhoodAccessor(self, *args)


    def SetVectorLength(self, _arg: 'unsigned int const') -> "void":
        """SetVectorLength(itkVectorImageUC3 self, unsigned int const _arg)"""
        return _itkVectorImagePython.itkVectorImageUC3_SetVectorLength(self, _arg)


    def GetVectorLength(self) -> "unsigned int const &":
        """GetVectorLength(itkVectorImageUC3 self) -> unsigned int const &"""
        return _itkVectorImagePython.itkVectorImageUC3_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUC3

    def cast(obj: 'itkLightObject') -> "itkVectorImageUC3 *":
        """cast(itkLightObject obj) -> itkVectorImageUC3"""
        return _itkVectorImagePython.itkVectorImageUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageUC3

        Create a new object of the class itkVectorImageUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorImageUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageUC3.Clone = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_Clone, None, itkVectorImageUC3)
itkVectorImageUC3.Allocate = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_Allocate, None, itkVectorImageUC3)
itkVectorImageUC3.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_FillBuffer, None, itkVectorImageUC3)
itkVectorImageUC3.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_SetPixel, None, itkVectorImageUC3)
itkVectorImageUC3.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_GetPixel, None, itkVectorImageUC3)
itkVectorImageUC3.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_GetBufferPointer, None, itkVectorImageUC3)
itkVectorImageUC3.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_GetPixelContainer, None, itkVectorImageUC3)
itkVectorImageUC3.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_SetPixelContainer, None, itkVectorImageUC3)
itkVectorImageUC3.Graft = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_Graft, None, itkVectorImageUC3)
itkVectorImageUC3.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_GetPixelAccessor, None, itkVectorImageUC3)
itkVectorImageUC3.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_GetNeighborhoodAccessor, None, itkVectorImageUC3)
itkVectorImageUC3.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_SetVectorLength, None, itkVectorImageUC3)
itkVectorImageUC3.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_GetVectorLength, None, itkVectorImageUC3)
itkVectorImageUC3_swigregister = _itkVectorImagePython.itkVectorImageUC3_swigregister
itkVectorImageUC3_swigregister(itkVectorImageUC3)

def itkVectorImageUC3___New_orig__() -> "itkVectorImageUC3_Pointer":
    """itkVectorImageUC3___New_orig__() -> itkVectorImageUC3_Pointer"""
    return _itkVectorImagePython.itkVectorImageUC3___New_orig__()

def itkVectorImageUC3_cast(obj: 'itkLightObject') -> "itkVectorImageUC3 *":
    """itkVectorImageUC3_cast(itkLightObject obj) -> itkVectorImageUC3"""
    return _itkVectorImagePython.itkVectorImageUC3_cast(obj)

class itkVectorImageUS2(itkImagePython.itkImageBase2):
    """Proxy of C++ itkVectorImageUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorImageUS2_Pointer":
        """__New_orig__() -> itkVectorImageUS2_Pointer"""
        return _itkVectorImagePython.itkVectorImageUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorImageUS2_Pointer":
        """Clone(itkVectorImageUS2 self) -> itkVectorImageUS2_Pointer"""
        return _itkVectorImagePython.itkVectorImageUS2_Clone(self)


    def Allocate(self, UseDefaultConstructor: 'bool'=False) -> "void":
        """
        Allocate(itkVectorImageUS2 self, bool UseDefaultConstructor=False)
        Allocate(itkVectorImageUS2 self)
        """
        return _itkVectorImagePython.itkVectorImageUS2_Allocate(self, UseDefaultConstructor)


    def FillBuffer(self, value: 'itkVariableLengthVectorUS') -> "void":
        """FillBuffer(itkVectorImageUS2 self, itkVariableLengthVectorUS value)"""
        return _itkVectorImagePython.itkVectorImageUS2_FillBuffer(self, value)


    def SetPixel(self, index: 'itkIndex2', value: 'itkVariableLengthVectorUS') -> "void":
        """SetPixel(itkVectorImageUS2 self, itkIndex2 index, itkVariableLengthVectorUS value)"""
        return _itkVectorImagePython.itkVectorImageUS2_SetPixel(self, index, value)


    def GetPixel(self, *args) -> "itkVariableLengthVectorUS":
        """
        GetPixel(itkVectorImageUS2 self, itkIndex2 index) -> itkVariableLengthVectorUS
        GetPixel(itkVectorImageUS2 self, itkIndex2 index) -> itkVariableLengthVectorUS
        """
        return _itkVectorImagePython.itkVectorImageUS2_GetPixel(self, *args)


    def GetBufferPointer(self, *args) -> "unsigned short const *":
        """
        GetBufferPointer(itkVectorImageUS2 self) -> unsigned short
        GetBufferPointer(itkVectorImageUS2 self) -> unsigned short const *
        """
        return _itkVectorImagePython.itkVectorImageUS2_GetBufferPointer(self, *args)


    def GetPixelContainer(self, *args) -> "itk::ImportImageContainer< unsigned long long,unsigned short > const *":
        """
        GetPixelContainer(itkVectorImageUS2 self) -> itk::ImportImageContainer< unsigned long long,unsigned short >
        GetPixelContainer(itkVectorImageUS2 self) -> itk::ImportImageContainer< unsigned long long,unsigned short > const *
        """
        return _itkVectorImagePython.itkVectorImageUS2_GetPixelContainer(self, *args)


    def SetPixelContainer(self, container: 'itk::ImportImageContainer< unsigned long long,unsigned short > *') -> "void":
        """SetPixelContainer(itkVectorImageUS2 self, itk::ImportImageContainer< unsigned long long,unsigned short > * container)"""
        return _itkVectorImagePython.itkVectorImageUS2_SetPixelContainer(self, container)


    def Graft(self, data: 'itkVectorImageUS2') -> "void":
        """Graft(itkVectorImageUS2 self, itkVectorImageUS2 data)"""
        return _itkVectorImagePython.itkVectorImageUS2_Graft(self, data)


    def GetPixelAccessor(self, *args) -> "itk::DefaultVectorPixelAccessor< unsigned short > const":
        """
        GetPixelAccessor(itkVectorImageUS2 self) -> itk::DefaultVectorPixelAccessor< unsigned short >
        GetPixelAccessor(itkVectorImageUS2 self) -> itk::DefaultVectorPixelAccessor< unsigned short > const
        """
        return _itkVectorImagePython.itkVectorImageUS2_GetPixelAccessor(self, *args)


    def GetNeighborhoodAccessor(self, *args) -> "itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned short,2 > > const":
        """
        GetNeighborhoodAccessor(itkVectorImageUS2 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned short,2 > >
        GetNeighborhoodAccessor(itkVectorImageUS2 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned short,2 > > const
        """
        return _itkVectorImagePython.itkVectorImageUS2_GetNeighborhoodAccessor(self, *args)


    def SetVectorLength(self, _arg: 'unsigned int const') -> "void":
        """SetVectorLength(itkVectorImageUS2 self, unsigned int const _arg)"""
        return _itkVectorImagePython.itkVectorImageUS2_SetVectorLength(self, _arg)


    def GetVectorLength(self) -> "unsigned int const &":
        """GetVectorLength(itkVectorImageUS2 self) -> unsigned int const &"""
        return _itkVectorImagePython.itkVectorImageUS2_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUS2

    def cast(obj: 'itkLightObject') -> "itkVectorImageUS2 *":
        """cast(itkLightObject obj) -> itkVectorImageUS2"""
        return _itkVectorImagePython.itkVectorImageUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageUS2

        Create a new object of the class itkVectorImageUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorImageUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageUS2.Clone = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_Clone, None, itkVectorImageUS2)
itkVectorImageUS2.Allocate = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_Allocate, None, itkVectorImageUS2)
itkVectorImageUS2.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_FillBuffer, None, itkVectorImageUS2)
itkVectorImageUS2.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_SetPixel, None, itkVectorImageUS2)
itkVectorImageUS2.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_GetPixel, None, itkVectorImageUS2)
itkVectorImageUS2.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_GetBufferPointer, None, itkVectorImageUS2)
itkVectorImageUS2.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_GetPixelContainer, None, itkVectorImageUS2)
itkVectorImageUS2.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_SetPixelContainer, None, itkVectorImageUS2)
itkVectorImageUS2.Graft = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_Graft, None, itkVectorImageUS2)
itkVectorImageUS2.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_GetPixelAccessor, None, itkVectorImageUS2)
itkVectorImageUS2.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_GetNeighborhoodAccessor, None, itkVectorImageUS2)
itkVectorImageUS2.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_SetVectorLength, None, itkVectorImageUS2)
itkVectorImageUS2.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_GetVectorLength, None, itkVectorImageUS2)
itkVectorImageUS2_swigregister = _itkVectorImagePython.itkVectorImageUS2_swigregister
itkVectorImageUS2_swigregister(itkVectorImageUS2)

def itkVectorImageUS2___New_orig__() -> "itkVectorImageUS2_Pointer":
    """itkVectorImageUS2___New_orig__() -> itkVectorImageUS2_Pointer"""
    return _itkVectorImagePython.itkVectorImageUS2___New_orig__()

def itkVectorImageUS2_cast(obj: 'itkLightObject') -> "itkVectorImageUS2 *":
    """itkVectorImageUS2_cast(itkLightObject obj) -> itkVectorImageUS2"""
    return _itkVectorImagePython.itkVectorImageUS2_cast(obj)

class itkVectorImageUS3(itkImagePython.itkImageBase3):
    """Proxy of C++ itkVectorImageUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorImageUS3_Pointer":
        """__New_orig__() -> itkVectorImageUS3_Pointer"""
        return _itkVectorImagePython.itkVectorImageUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorImageUS3_Pointer":
        """Clone(itkVectorImageUS3 self) -> itkVectorImageUS3_Pointer"""
        return _itkVectorImagePython.itkVectorImageUS3_Clone(self)


    def Allocate(self, UseDefaultConstructor: 'bool'=False) -> "void":
        """
        Allocate(itkVectorImageUS3 self, bool UseDefaultConstructor=False)
        Allocate(itkVectorImageUS3 self)
        """
        return _itkVectorImagePython.itkVectorImageUS3_Allocate(self, UseDefaultConstructor)


    def FillBuffer(self, value: 'itkVariableLengthVectorUS') -> "void":
        """FillBuffer(itkVectorImageUS3 self, itkVariableLengthVectorUS value)"""
        return _itkVectorImagePython.itkVectorImageUS3_FillBuffer(self, value)


    def SetPixel(self, index: 'itkIndex3', value: 'itkVariableLengthVectorUS') -> "void":
        """SetPixel(itkVectorImageUS3 self, itkIndex3 index, itkVariableLengthVectorUS value)"""
        return _itkVectorImagePython.itkVectorImageUS3_SetPixel(self, index, value)


    def GetPixel(self, *args) -> "itkVariableLengthVectorUS":
        """
        GetPixel(itkVectorImageUS3 self, itkIndex3 index) -> itkVariableLengthVectorUS
        GetPixel(itkVectorImageUS3 self, itkIndex3 index) -> itkVariableLengthVectorUS
        """
        return _itkVectorImagePython.itkVectorImageUS3_GetPixel(self, *args)


    def GetBufferPointer(self, *args) -> "unsigned short const *":
        """
        GetBufferPointer(itkVectorImageUS3 self) -> unsigned short
        GetBufferPointer(itkVectorImageUS3 self) -> unsigned short const *
        """
        return _itkVectorImagePython.itkVectorImageUS3_GetBufferPointer(self, *args)


    def GetPixelContainer(self, *args) -> "itk::ImportImageContainer< unsigned long long,unsigned short > const *":
        """
        GetPixelContainer(itkVectorImageUS3 self) -> itk::ImportImageContainer< unsigned long long,unsigned short >
        GetPixelContainer(itkVectorImageUS3 self) -> itk::ImportImageContainer< unsigned long long,unsigned short > const *
        """
        return _itkVectorImagePython.itkVectorImageUS3_GetPixelContainer(self, *args)


    def SetPixelContainer(self, container: 'itk::ImportImageContainer< unsigned long long,unsigned short > *') -> "void":
        """SetPixelContainer(itkVectorImageUS3 self, itk::ImportImageContainer< unsigned long long,unsigned short > * container)"""
        return _itkVectorImagePython.itkVectorImageUS3_SetPixelContainer(self, container)


    def Graft(self, data: 'itkVectorImageUS3') -> "void":
        """Graft(itkVectorImageUS3 self, itkVectorImageUS3 data)"""
        return _itkVectorImagePython.itkVectorImageUS3_Graft(self, data)


    def GetPixelAccessor(self, *args) -> "itk::DefaultVectorPixelAccessor< unsigned short > const":
        """
        GetPixelAccessor(itkVectorImageUS3 self) -> itk::DefaultVectorPixelAccessor< unsigned short >
        GetPixelAccessor(itkVectorImageUS3 self) -> itk::DefaultVectorPixelAccessor< unsigned short > const
        """
        return _itkVectorImagePython.itkVectorImageUS3_GetPixelAccessor(self, *args)


    def GetNeighborhoodAccessor(self, *args) -> "itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned short,3 > > const":
        """
        GetNeighborhoodAccessor(itkVectorImageUS3 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned short,3 > >
        GetNeighborhoodAccessor(itkVectorImageUS3 self) -> itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned short,3 > > const
        """
        return _itkVectorImagePython.itkVectorImageUS3_GetNeighborhoodAccessor(self, *args)


    def SetVectorLength(self, _arg: 'unsigned int const') -> "void":
        """SetVectorLength(itkVectorImageUS3 self, unsigned int const _arg)"""
        return _itkVectorImagePython.itkVectorImageUS3_SetVectorLength(self, _arg)


    def GetVectorLength(self) -> "unsigned int const &":
        """GetVectorLength(itkVectorImageUS3 self) -> unsigned int const &"""
        return _itkVectorImagePython.itkVectorImageUS3_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUS3

    def cast(obj: 'itkLightObject') -> "itkVectorImageUS3 *":
        """cast(itkLightObject obj) -> itkVectorImageUS3"""
        return _itkVectorImagePython.itkVectorImageUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageUS3

        Create a new object of the class itkVectorImageUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorImageUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageUS3.Clone = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_Clone, None, itkVectorImageUS3)
itkVectorImageUS3.Allocate = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_Allocate, None, itkVectorImageUS3)
itkVectorImageUS3.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_FillBuffer, None, itkVectorImageUS3)
itkVectorImageUS3.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_SetPixel, None, itkVectorImageUS3)
itkVectorImageUS3.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_GetPixel, None, itkVectorImageUS3)
itkVectorImageUS3.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_GetBufferPointer, None, itkVectorImageUS3)
itkVectorImageUS3.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_GetPixelContainer, None, itkVectorImageUS3)
itkVectorImageUS3.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_SetPixelContainer, None, itkVectorImageUS3)
itkVectorImageUS3.Graft = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_Graft, None, itkVectorImageUS3)
itkVectorImageUS3.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_GetPixelAccessor, None, itkVectorImageUS3)
itkVectorImageUS3.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_GetNeighborhoodAccessor, None, itkVectorImageUS3)
itkVectorImageUS3.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_SetVectorLength, None, itkVectorImageUS3)
itkVectorImageUS3.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_GetVectorLength, None, itkVectorImageUS3)
itkVectorImageUS3_swigregister = _itkVectorImagePython.itkVectorImageUS3_swigregister
itkVectorImageUS3_swigregister(itkVectorImageUS3)

def itkVectorImageUS3___New_orig__() -> "itkVectorImageUS3_Pointer":
    """itkVectorImageUS3___New_orig__() -> itkVectorImageUS3_Pointer"""
    return _itkVectorImagePython.itkVectorImageUS3___New_orig__()

def itkVectorImageUS3_cast(obj: 'itkLightObject') -> "itkVectorImageUS3 *":
    """itkVectorImageUS3_cast(itkLightObject obj) -> itkVectorImageUS3"""
    return _itkVectorImagePython.itkVectorImageUS3_cast(obj)



