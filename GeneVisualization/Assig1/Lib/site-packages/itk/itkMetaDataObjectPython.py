# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMetaDataObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMetaDataObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkMetaDataObjectPython
            return _itkMetaDataObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMetaDataObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMetaDataObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMetaDataObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython

def itkMetaDataObjectUL_New():
  return itkMetaDataObjectUL.New()


def itkMetaDataObjectUS_New():
  return itkMetaDataObjectUS.New()


def itkMetaDataObjectUI_New():
  return itkMetaDataObjectUI.New()


def itkMetaDataObjectSI_New():
  return itkMetaDataObjectSI.New()


def itkMetaDataObjectSS_New():
  return itkMetaDataObjectSS.New()


def itkMetaDataObjectS_New():
  return itkMetaDataObjectS.New()


def itkMetaDataObjectB_New():
  return itkMetaDataObjectB.New()


def itkMetaDataObjectF_New():
  return itkMetaDataObjectF.New()


def itkMetaDataObjectD_New():
  return itkMetaDataObjectD.New()

class itkMetaDataObjectB(ITKCommonBasePython.itkMetaDataObjectBase):
    """Proxy of C++ itkMetaDataObjectB class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMetaDataObjectB_Pointer":
        """__New_orig__() -> itkMetaDataObjectB_Pointer"""
        return _itkMetaDataObjectPython.itkMetaDataObjectB___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def GetMetaDataObjectValue(self) -> "bool const &":
        """GetMetaDataObjectValue(itkMetaDataObjectB self) -> bool const &"""
        return _itkMetaDataObjectPython.itkMetaDataObjectB_GetMetaDataObjectValue(self)


    def SetMetaDataObjectValue(self, newValue: 'bool const &') -> "void":
        """SetMetaDataObjectValue(itkMetaDataObjectB self, bool const & newValue)"""
        return _itkMetaDataObjectPython.itkMetaDataObjectB_SetMetaDataObjectValue(self, newValue)

    __swig_destroy__ = _itkMetaDataObjectPython.delete_itkMetaDataObjectB

    def cast(obj: 'itkLightObject') -> "itkMetaDataObjectB *":
        """cast(itkLightObject obj) -> itkMetaDataObjectB"""
        return _itkMetaDataObjectPython.itkMetaDataObjectB_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMetaDataObjectB

        Create a new object of the class itkMetaDataObjectB and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMetaDataObjectB.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMetaDataObjectB.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMetaDataObjectB.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMetaDataObjectB.GetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectB_GetMetaDataObjectValue, None, itkMetaDataObjectB)
itkMetaDataObjectB.SetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectB_SetMetaDataObjectValue, None, itkMetaDataObjectB)
itkMetaDataObjectB_swigregister = _itkMetaDataObjectPython.itkMetaDataObjectB_swigregister
itkMetaDataObjectB_swigregister(itkMetaDataObjectB)

def itkMetaDataObjectB___New_orig__() -> "itkMetaDataObjectB_Pointer":
    """itkMetaDataObjectB___New_orig__() -> itkMetaDataObjectB_Pointer"""
    return _itkMetaDataObjectPython.itkMetaDataObjectB___New_orig__()

def itkMetaDataObjectB_cast(obj: 'itkLightObject') -> "itkMetaDataObjectB *":
    """itkMetaDataObjectB_cast(itkLightObject obj) -> itkMetaDataObjectB"""
    return _itkMetaDataObjectPython.itkMetaDataObjectB_cast(obj)

class itkMetaDataObjectD(ITKCommonBasePython.itkMetaDataObjectBase):
    """Proxy of C++ itkMetaDataObjectD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMetaDataObjectD_Pointer":
        """__New_orig__() -> itkMetaDataObjectD_Pointer"""
        return _itkMetaDataObjectPython.itkMetaDataObjectD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def GetMetaDataObjectValue(self) -> "double const &":
        """GetMetaDataObjectValue(itkMetaDataObjectD self) -> double const &"""
        return _itkMetaDataObjectPython.itkMetaDataObjectD_GetMetaDataObjectValue(self)


    def SetMetaDataObjectValue(self, newValue: 'double const &') -> "void":
        """SetMetaDataObjectValue(itkMetaDataObjectD self, double const & newValue)"""
        return _itkMetaDataObjectPython.itkMetaDataObjectD_SetMetaDataObjectValue(self, newValue)

    __swig_destroy__ = _itkMetaDataObjectPython.delete_itkMetaDataObjectD

    def cast(obj: 'itkLightObject') -> "itkMetaDataObjectD *":
        """cast(itkLightObject obj) -> itkMetaDataObjectD"""
        return _itkMetaDataObjectPython.itkMetaDataObjectD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMetaDataObjectD

        Create a new object of the class itkMetaDataObjectD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMetaDataObjectD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMetaDataObjectD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMetaDataObjectD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMetaDataObjectD.GetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectD_GetMetaDataObjectValue, None, itkMetaDataObjectD)
itkMetaDataObjectD.SetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectD_SetMetaDataObjectValue, None, itkMetaDataObjectD)
itkMetaDataObjectD_swigregister = _itkMetaDataObjectPython.itkMetaDataObjectD_swigregister
itkMetaDataObjectD_swigregister(itkMetaDataObjectD)

def itkMetaDataObjectD___New_orig__() -> "itkMetaDataObjectD_Pointer":
    """itkMetaDataObjectD___New_orig__() -> itkMetaDataObjectD_Pointer"""
    return _itkMetaDataObjectPython.itkMetaDataObjectD___New_orig__()

def itkMetaDataObjectD_cast(obj: 'itkLightObject') -> "itkMetaDataObjectD *":
    """itkMetaDataObjectD_cast(itkLightObject obj) -> itkMetaDataObjectD"""
    return _itkMetaDataObjectPython.itkMetaDataObjectD_cast(obj)

class itkMetaDataObjectF(ITKCommonBasePython.itkMetaDataObjectBase):
    """Proxy of C++ itkMetaDataObjectF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMetaDataObjectF_Pointer":
        """__New_orig__() -> itkMetaDataObjectF_Pointer"""
        return _itkMetaDataObjectPython.itkMetaDataObjectF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def GetMetaDataObjectValue(self) -> "float const &":
        """GetMetaDataObjectValue(itkMetaDataObjectF self) -> float const &"""
        return _itkMetaDataObjectPython.itkMetaDataObjectF_GetMetaDataObjectValue(self)


    def SetMetaDataObjectValue(self, newValue: 'float const &') -> "void":
        """SetMetaDataObjectValue(itkMetaDataObjectF self, float const & newValue)"""
        return _itkMetaDataObjectPython.itkMetaDataObjectF_SetMetaDataObjectValue(self, newValue)

    __swig_destroy__ = _itkMetaDataObjectPython.delete_itkMetaDataObjectF

    def cast(obj: 'itkLightObject') -> "itkMetaDataObjectF *":
        """cast(itkLightObject obj) -> itkMetaDataObjectF"""
        return _itkMetaDataObjectPython.itkMetaDataObjectF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMetaDataObjectF

        Create a new object of the class itkMetaDataObjectF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMetaDataObjectF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMetaDataObjectF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMetaDataObjectF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMetaDataObjectF.GetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectF_GetMetaDataObjectValue, None, itkMetaDataObjectF)
itkMetaDataObjectF.SetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectF_SetMetaDataObjectValue, None, itkMetaDataObjectF)
itkMetaDataObjectF_swigregister = _itkMetaDataObjectPython.itkMetaDataObjectF_swigregister
itkMetaDataObjectF_swigregister(itkMetaDataObjectF)

def itkMetaDataObjectF___New_orig__() -> "itkMetaDataObjectF_Pointer":
    """itkMetaDataObjectF___New_orig__() -> itkMetaDataObjectF_Pointer"""
    return _itkMetaDataObjectPython.itkMetaDataObjectF___New_orig__()

def itkMetaDataObjectF_cast(obj: 'itkLightObject') -> "itkMetaDataObjectF *":
    """itkMetaDataObjectF_cast(itkLightObject obj) -> itkMetaDataObjectF"""
    return _itkMetaDataObjectPython.itkMetaDataObjectF_cast(obj)

class itkMetaDataObjectS(ITKCommonBasePython.itkMetaDataObjectBase):
    """Proxy of C++ itkMetaDataObjectS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMetaDataObjectS_Pointer":
        """__New_orig__() -> itkMetaDataObjectS_Pointer"""
        return _itkMetaDataObjectPython.itkMetaDataObjectS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def GetMetaDataObjectValue(self) -> "std::string const &":
        """GetMetaDataObjectValue(itkMetaDataObjectS self) -> std::string const &"""
        return _itkMetaDataObjectPython.itkMetaDataObjectS_GetMetaDataObjectValue(self)


    def SetMetaDataObjectValue(self, newValue: 'std::string const &') -> "void":
        """SetMetaDataObjectValue(itkMetaDataObjectS self, std::string const & newValue)"""
        return _itkMetaDataObjectPython.itkMetaDataObjectS_SetMetaDataObjectValue(self, newValue)

    __swig_destroy__ = _itkMetaDataObjectPython.delete_itkMetaDataObjectS

    def cast(obj: 'itkLightObject') -> "itkMetaDataObjectS *":
        """cast(itkLightObject obj) -> itkMetaDataObjectS"""
        return _itkMetaDataObjectPython.itkMetaDataObjectS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMetaDataObjectS

        Create a new object of the class itkMetaDataObjectS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMetaDataObjectS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMetaDataObjectS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMetaDataObjectS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMetaDataObjectS.GetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectS_GetMetaDataObjectValue, None, itkMetaDataObjectS)
itkMetaDataObjectS.SetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectS_SetMetaDataObjectValue, None, itkMetaDataObjectS)
itkMetaDataObjectS_swigregister = _itkMetaDataObjectPython.itkMetaDataObjectS_swigregister
itkMetaDataObjectS_swigregister(itkMetaDataObjectS)

def itkMetaDataObjectS___New_orig__() -> "itkMetaDataObjectS_Pointer":
    """itkMetaDataObjectS___New_orig__() -> itkMetaDataObjectS_Pointer"""
    return _itkMetaDataObjectPython.itkMetaDataObjectS___New_orig__()

def itkMetaDataObjectS_cast(obj: 'itkLightObject') -> "itkMetaDataObjectS *":
    """itkMetaDataObjectS_cast(itkLightObject obj) -> itkMetaDataObjectS"""
    return _itkMetaDataObjectPython.itkMetaDataObjectS_cast(obj)

class itkMetaDataObjectSI(ITKCommonBasePython.itkMetaDataObjectBase):
    """Proxy of C++ itkMetaDataObjectSI class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMetaDataObjectSI_Pointer":
        """__New_orig__() -> itkMetaDataObjectSI_Pointer"""
        return _itkMetaDataObjectPython.itkMetaDataObjectSI___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def GetMetaDataObjectValue(self) -> "int const &":
        """GetMetaDataObjectValue(itkMetaDataObjectSI self) -> int const &"""
        return _itkMetaDataObjectPython.itkMetaDataObjectSI_GetMetaDataObjectValue(self)


    def SetMetaDataObjectValue(self, newValue: 'int const &') -> "void":
        """SetMetaDataObjectValue(itkMetaDataObjectSI self, int const & newValue)"""
        return _itkMetaDataObjectPython.itkMetaDataObjectSI_SetMetaDataObjectValue(self, newValue)

    __swig_destroy__ = _itkMetaDataObjectPython.delete_itkMetaDataObjectSI

    def cast(obj: 'itkLightObject') -> "itkMetaDataObjectSI *":
        """cast(itkLightObject obj) -> itkMetaDataObjectSI"""
        return _itkMetaDataObjectPython.itkMetaDataObjectSI_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMetaDataObjectSI

        Create a new object of the class itkMetaDataObjectSI and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMetaDataObjectSI.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMetaDataObjectSI.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMetaDataObjectSI.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMetaDataObjectSI.GetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectSI_GetMetaDataObjectValue, None, itkMetaDataObjectSI)
itkMetaDataObjectSI.SetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectSI_SetMetaDataObjectValue, None, itkMetaDataObjectSI)
itkMetaDataObjectSI_swigregister = _itkMetaDataObjectPython.itkMetaDataObjectSI_swigregister
itkMetaDataObjectSI_swigregister(itkMetaDataObjectSI)

def itkMetaDataObjectSI___New_orig__() -> "itkMetaDataObjectSI_Pointer":
    """itkMetaDataObjectSI___New_orig__() -> itkMetaDataObjectSI_Pointer"""
    return _itkMetaDataObjectPython.itkMetaDataObjectSI___New_orig__()

def itkMetaDataObjectSI_cast(obj: 'itkLightObject') -> "itkMetaDataObjectSI *":
    """itkMetaDataObjectSI_cast(itkLightObject obj) -> itkMetaDataObjectSI"""
    return _itkMetaDataObjectPython.itkMetaDataObjectSI_cast(obj)

class itkMetaDataObjectSS(ITKCommonBasePython.itkMetaDataObjectBase):
    """Proxy of C++ itkMetaDataObjectSS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMetaDataObjectSS_Pointer":
        """__New_orig__() -> itkMetaDataObjectSS_Pointer"""
        return _itkMetaDataObjectPython.itkMetaDataObjectSS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def GetMetaDataObjectValue(self) -> "short const &":
        """GetMetaDataObjectValue(itkMetaDataObjectSS self) -> short const &"""
        return _itkMetaDataObjectPython.itkMetaDataObjectSS_GetMetaDataObjectValue(self)


    def SetMetaDataObjectValue(self, newValue: 'short const &') -> "void":
        """SetMetaDataObjectValue(itkMetaDataObjectSS self, short const & newValue)"""
        return _itkMetaDataObjectPython.itkMetaDataObjectSS_SetMetaDataObjectValue(self, newValue)

    __swig_destroy__ = _itkMetaDataObjectPython.delete_itkMetaDataObjectSS

    def cast(obj: 'itkLightObject') -> "itkMetaDataObjectSS *":
        """cast(itkLightObject obj) -> itkMetaDataObjectSS"""
        return _itkMetaDataObjectPython.itkMetaDataObjectSS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMetaDataObjectSS

        Create a new object of the class itkMetaDataObjectSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMetaDataObjectSS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMetaDataObjectSS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMetaDataObjectSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMetaDataObjectSS.GetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectSS_GetMetaDataObjectValue, None, itkMetaDataObjectSS)
itkMetaDataObjectSS.SetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectSS_SetMetaDataObjectValue, None, itkMetaDataObjectSS)
itkMetaDataObjectSS_swigregister = _itkMetaDataObjectPython.itkMetaDataObjectSS_swigregister
itkMetaDataObjectSS_swigregister(itkMetaDataObjectSS)

def itkMetaDataObjectSS___New_orig__() -> "itkMetaDataObjectSS_Pointer":
    """itkMetaDataObjectSS___New_orig__() -> itkMetaDataObjectSS_Pointer"""
    return _itkMetaDataObjectPython.itkMetaDataObjectSS___New_orig__()

def itkMetaDataObjectSS_cast(obj: 'itkLightObject') -> "itkMetaDataObjectSS *":
    """itkMetaDataObjectSS_cast(itkLightObject obj) -> itkMetaDataObjectSS"""
    return _itkMetaDataObjectPython.itkMetaDataObjectSS_cast(obj)

class itkMetaDataObjectUI(ITKCommonBasePython.itkMetaDataObjectBase):
    """Proxy of C++ itkMetaDataObjectUI class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMetaDataObjectUI_Pointer":
        """__New_orig__() -> itkMetaDataObjectUI_Pointer"""
        return _itkMetaDataObjectPython.itkMetaDataObjectUI___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def GetMetaDataObjectValue(self) -> "unsigned int const &":
        """GetMetaDataObjectValue(itkMetaDataObjectUI self) -> unsigned int const &"""
        return _itkMetaDataObjectPython.itkMetaDataObjectUI_GetMetaDataObjectValue(self)


    def SetMetaDataObjectValue(self, newValue: 'unsigned int const &') -> "void":
        """SetMetaDataObjectValue(itkMetaDataObjectUI self, unsigned int const & newValue)"""
        return _itkMetaDataObjectPython.itkMetaDataObjectUI_SetMetaDataObjectValue(self, newValue)

    __swig_destroy__ = _itkMetaDataObjectPython.delete_itkMetaDataObjectUI

    def cast(obj: 'itkLightObject') -> "itkMetaDataObjectUI *":
        """cast(itkLightObject obj) -> itkMetaDataObjectUI"""
        return _itkMetaDataObjectPython.itkMetaDataObjectUI_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMetaDataObjectUI

        Create a new object of the class itkMetaDataObjectUI and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMetaDataObjectUI.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMetaDataObjectUI.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMetaDataObjectUI.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMetaDataObjectUI.GetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectUI_GetMetaDataObjectValue, None, itkMetaDataObjectUI)
itkMetaDataObjectUI.SetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectUI_SetMetaDataObjectValue, None, itkMetaDataObjectUI)
itkMetaDataObjectUI_swigregister = _itkMetaDataObjectPython.itkMetaDataObjectUI_swigregister
itkMetaDataObjectUI_swigregister(itkMetaDataObjectUI)

def itkMetaDataObjectUI___New_orig__() -> "itkMetaDataObjectUI_Pointer":
    """itkMetaDataObjectUI___New_orig__() -> itkMetaDataObjectUI_Pointer"""
    return _itkMetaDataObjectPython.itkMetaDataObjectUI___New_orig__()

def itkMetaDataObjectUI_cast(obj: 'itkLightObject') -> "itkMetaDataObjectUI *":
    """itkMetaDataObjectUI_cast(itkLightObject obj) -> itkMetaDataObjectUI"""
    return _itkMetaDataObjectPython.itkMetaDataObjectUI_cast(obj)

class itkMetaDataObjectUL(ITKCommonBasePython.itkMetaDataObjectBase):
    """Proxy of C++ itkMetaDataObjectUL class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMetaDataObjectUL_Pointer":
        """__New_orig__() -> itkMetaDataObjectUL_Pointer"""
        return _itkMetaDataObjectPython.itkMetaDataObjectUL___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def GetMetaDataObjectValue(self) -> "unsigned long const &":
        """GetMetaDataObjectValue(itkMetaDataObjectUL self) -> unsigned long const &"""
        return _itkMetaDataObjectPython.itkMetaDataObjectUL_GetMetaDataObjectValue(self)


    def SetMetaDataObjectValue(self, newValue: 'unsigned long const &') -> "void":
        """SetMetaDataObjectValue(itkMetaDataObjectUL self, unsigned long const & newValue)"""
        return _itkMetaDataObjectPython.itkMetaDataObjectUL_SetMetaDataObjectValue(self, newValue)

    __swig_destroy__ = _itkMetaDataObjectPython.delete_itkMetaDataObjectUL

    def cast(obj: 'itkLightObject') -> "itkMetaDataObjectUL *":
        """cast(itkLightObject obj) -> itkMetaDataObjectUL"""
        return _itkMetaDataObjectPython.itkMetaDataObjectUL_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMetaDataObjectUL

        Create a new object of the class itkMetaDataObjectUL and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMetaDataObjectUL.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMetaDataObjectUL.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMetaDataObjectUL.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMetaDataObjectUL.GetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectUL_GetMetaDataObjectValue, None, itkMetaDataObjectUL)
itkMetaDataObjectUL.SetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectUL_SetMetaDataObjectValue, None, itkMetaDataObjectUL)
itkMetaDataObjectUL_swigregister = _itkMetaDataObjectPython.itkMetaDataObjectUL_swigregister
itkMetaDataObjectUL_swigregister(itkMetaDataObjectUL)

def itkMetaDataObjectUL___New_orig__() -> "itkMetaDataObjectUL_Pointer":
    """itkMetaDataObjectUL___New_orig__() -> itkMetaDataObjectUL_Pointer"""
    return _itkMetaDataObjectPython.itkMetaDataObjectUL___New_orig__()

def itkMetaDataObjectUL_cast(obj: 'itkLightObject') -> "itkMetaDataObjectUL *":
    """itkMetaDataObjectUL_cast(itkLightObject obj) -> itkMetaDataObjectUL"""
    return _itkMetaDataObjectPython.itkMetaDataObjectUL_cast(obj)

class itkMetaDataObjectUS(ITKCommonBasePython.itkMetaDataObjectBase):
    """Proxy of C++ itkMetaDataObjectUS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMetaDataObjectUS_Pointer":
        """__New_orig__() -> itkMetaDataObjectUS_Pointer"""
        return _itkMetaDataObjectPython.itkMetaDataObjectUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def GetMetaDataObjectValue(self) -> "unsigned short const &":
        """GetMetaDataObjectValue(itkMetaDataObjectUS self) -> unsigned short const &"""
        return _itkMetaDataObjectPython.itkMetaDataObjectUS_GetMetaDataObjectValue(self)


    def SetMetaDataObjectValue(self, newValue: 'unsigned short const &') -> "void":
        """SetMetaDataObjectValue(itkMetaDataObjectUS self, unsigned short const & newValue)"""
        return _itkMetaDataObjectPython.itkMetaDataObjectUS_SetMetaDataObjectValue(self, newValue)

    __swig_destroy__ = _itkMetaDataObjectPython.delete_itkMetaDataObjectUS

    def cast(obj: 'itkLightObject') -> "itkMetaDataObjectUS *":
        """cast(itkLightObject obj) -> itkMetaDataObjectUS"""
        return _itkMetaDataObjectPython.itkMetaDataObjectUS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMetaDataObjectUS

        Create a new object of the class itkMetaDataObjectUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMetaDataObjectUS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMetaDataObjectUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMetaDataObjectUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMetaDataObjectUS.GetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectUS_GetMetaDataObjectValue, None, itkMetaDataObjectUS)
itkMetaDataObjectUS.SetMetaDataObjectValue = new_instancemethod(_itkMetaDataObjectPython.itkMetaDataObjectUS_SetMetaDataObjectValue, None, itkMetaDataObjectUS)
itkMetaDataObjectUS_swigregister = _itkMetaDataObjectPython.itkMetaDataObjectUS_swigregister
itkMetaDataObjectUS_swigregister(itkMetaDataObjectUS)

def itkMetaDataObjectUS___New_orig__() -> "itkMetaDataObjectUS_Pointer":
    """itkMetaDataObjectUS___New_orig__() -> itkMetaDataObjectUS_Pointer"""
    return _itkMetaDataObjectPython.itkMetaDataObjectUS___New_orig__()

def itkMetaDataObjectUS_cast(obj: 'itkLightObject') -> "itkMetaDataObjectUS *":
    """itkMetaDataObjectUS_cast(itkLightObject obj) -> itkMetaDataObjectUS"""
    return _itkMetaDataObjectPython.itkMetaDataObjectUS_cast(obj)



