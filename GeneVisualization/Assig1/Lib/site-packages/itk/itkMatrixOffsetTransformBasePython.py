# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMatrixOffsetTransformBasePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMatrixOffsetTransformBasePython', [dirname(__file__)])
        except ImportError:
            import _itkMatrixOffsetTransformBasePython
            return _itkMatrixOffsetTransformBasePython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMatrixOffsetTransformBasePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMatrixOffsetTransformBasePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMatrixOffsetTransformBasePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkCovariantVectorPython
import vnl_vector_refPython
import stdcomplexPython
import pyBasePython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkVariableLengthVectorPython
import ITKCommonBasePython
import itkArray2DPython
import itkPointPython
import itkOptimizerParametersPython
import itkArrayPython
import itkTransformBasePython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkDiffusionTensor3DPython

def itkMatrixOffsetTransformBaseF33_New():
  return itkMatrixOffsetTransformBaseF33.New()


def itkMatrixOffsetTransformBaseD33_New():
  return itkMatrixOffsetTransformBaseD33.New()


def itkMatrixOffsetTransformBaseF22_New():
  return itkMatrixOffsetTransformBaseF22.New()


def itkMatrixOffsetTransformBaseD22_New():
  return itkMatrixOffsetTransformBaseD22.New()

class itkMatrixOffsetTransformBaseD22(itkTransformBasePython.itkTransformD22):
    """Proxy of C++ itkMatrixOffsetTransformBaseD22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMatrixOffsetTransformBaseD22_Pointer":
        """__New_orig__() -> itkMatrixOffsetTransformBaseD22_Pointer"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMatrixOffsetTransformBaseD22_Pointer":
        """Clone(itkMatrixOffsetTransformBaseD22 self) -> itkMatrixOffsetTransformBaseD22_Pointer"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_Clone(self)


    def SetIdentity(self) -> "void":
        """SetIdentity(itkMatrixOffsetTransformBaseD22 self)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_SetIdentity(self)


    def SetMatrix(self, matrix: 'itkMatrixD22') -> "void":
        """SetMatrix(itkMatrixOffsetTransformBaseD22 self, itkMatrixD22 matrix)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_SetMatrix(self, matrix)


    def GetMatrix(self) -> "itkMatrixD22 const &":
        """GetMatrix(itkMatrixOffsetTransformBaseD22 self) -> itkMatrixD22"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_GetMatrix(self)


    def SetOffset(self, offset: 'itkVectorD2') -> "void":
        """SetOffset(itkMatrixOffsetTransformBaseD22 self, itkVectorD2 offset)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_SetOffset(self, offset)


    def GetOffset(self) -> "itkVectorD2 const &":
        """GetOffset(itkMatrixOffsetTransformBaseD22 self) -> itkVectorD2"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_GetOffset(self)


    def SetCenter(self, center: 'itkPointD2') -> "void":
        """SetCenter(itkMatrixOffsetTransformBaseD22 self, itkPointD2 center)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_SetCenter(self, center)


    def GetCenter(self) -> "itkPointD2 const &":
        """GetCenter(itkMatrixOffsetTransformBaseD22 self) -> itkPointD2"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_GetCenter(self)


    def SetTranslation(self, translation: 'itkVectorD2') -> "void":
        """SetTranslation(itkMatrixOffsetTransformBaseD22 self, itkVectorD2 translation)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_SetTranslation(self, translation)


    def GetTranslation(self) -> "itkVectorD2 const &":
        """GetTranslation(itkMatrixOffsetTransformBaseD22 self) -> itkVectorD2"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_GetTranslation(self)


    def Compose(self, other: 'itkMatrixOffsetTransformBaseD22', pre: 'bool'=False) -> "void":
        """
        Compose(itkMatrixOffsetTransformBaseD22 self, itkMatrixOffsetTransformBaseD22 other, bool pre=False)
        Compose(itkMatrixOffsetTransformBaseD22 self, itkMatrixOffsetTransformBaseD22 other)
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_Compose(self, other, pre)


    def TransformVector(self, *args) -> "itkVariableLengthVectorD":
        """
        TransformVector(itkMatrixOffsetTransformBaseD22 self, itkVectorD2 vector) -> itkVectorD2
        TransformVector(itkMatrixOffsetTransformBaseD22 self, vnl_vector_fixed< double,2 > const & vector) -> vnl_vector_fixed< double,2 >
        TransformVector(itkMatrixOffsetTransformBaseD22 self, itkVariableLengthVectorD vector) -> itkVariableLengthVectorD
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_TransformVector(self, *args)


    def TransformCovariantVector(self, *args) -> "itkVariableLengthVectorD":
        """
        TransformCovariantVector(itkMatrixOffsetTransformBaseD22 self, itkCovariantVectorD2 vector) -> itkCovariantVectorD2
        TransformCovariantVector(itkMatrixOffsetTransformBaseD22 self, itkVariableLengthVectorD vector) -> itkVariableLengthVectorD
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_TransformCovariantVector(self, *args)


    def TransformDiffusionTensor3D(self, *args) -> "itkVariableLengthVectorD":
        """
        TransformDiffusionTensor3D(itkMatrixOffsetTransformBaseD22 self, itkDiffusionTensor3DD tensor) -> itkDiffusionTensor3DD
        TransformDiffusionTensor3D(itkMatrixOffsetTransformBaseD22 self, itkVariableLengthVectorD tensor) -> itkVariableLengthVectorD
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_TransformDiffusionTensor3D(self, *args)


    def TransformSymmetricSecondRankTensor(self, *args) -> "itkVariableLengthVectorD":
        """
        TransformSymmetricSecondRankTensor(itkMatrixOffsetTransformBaseD22 self, itkSymmetricSecondRankTensorD2 tensor) -> itkSymmetricSecondRankTensorD2
        TransformSymmetricSecondRankTensor(itkMatrixOffsetTransformBaseD22 self, itkVariableLengthVectorD tensor) -> itkVariableLengthVectorD
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_TransformSymmetricSecondRankTensor(self, *args)


    def GetInverse(self, inverse: 'itkMatrixOffsetTransformBaseD22') -> "bool":
        """GetInverse(itkMatrixOffsetTransformBaseD22 self, itkMatrixOffsetTransformBaseD22 inverse) -> bool"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_GetInverse(self, inverse)

    __swig_destroy__ = _itkMatrixOffsetTransformBasePython.delete_itkMatrixOffsetTransformBaseD22

    def cast(obj: 'itkLightObject') -> "itkMatrixOffsetTransformBaseD22 *":
        """cast(itkLightObject obj) -> itkMatrixOffsetTransformBaseD22"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMatrixOffsetTransformBaseD22

        Create a new object of the class itkMatrixOffsetTransformBaseD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatrixOffsetTransformBaseD22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMatrixOffsetTransformBaseD22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMatrixOffsetTransformBaseD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMatrixOffsetTransformBaseD22.Clone = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_Clone, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.SetIdentity = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_SetIdentity, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.SetMatrix = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_SetMatrix, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.GetMatrix = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_GetMatrix, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.SetOffset = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_SetOffset, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.GetOffset = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_GetOffset, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.SetCenter = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_SetCenter, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.GetCenter = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_GetCenter, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.SetTranslation = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_SetTranslation, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.GetTranslation = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_GetTranslation, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.Compose = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_Compose, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.TransformVector = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_TransformVector, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.TransformCovariantVector = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_TransformCovariantVector, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.TransformDiffusionTensor3D = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_TransformDiffusionTensor3D, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.TransformSymmetricSecondRankTensor = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_TransformSymmetricSecondRankTensor, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22.GetInverse = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_GetInverse, None, itkMatrixOffsetTransformBaseD22)
itkMatrixOffsetTransformBaseD22_swigregister = _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_swigregister
itkMatrixOffsetTransformBaseD22_swigregister(itkMatrixOffsetTransformBaseD22)

def itkMatrixOffsetTransformBaseD22___New_orig__() -> "itkMatrixOffsetTransformBaseD22_Pointer":
    """itkMatrixOffsetTransformBaseD22___New_orig__() -> itkMatrixOffsetTransformBaseD22_Pointer"""
    return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22___New_orig__()

def itkMatrixOffsetTransformBaseD22_cast(obj: 'itkLightObject') -> "itkMatrixOffsetTransformBaseD22 *":
    """itkMatrixOffsetTransformBaseD22_cast(itkLightObject obj) -> itkMatrixOffsetTransformBaseD22"""
    return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD22_cast(obj)

class itkMatrixOffsetTransformBaseD33(itkTransformBasePython.itkTransformD33):
    """Proxy of C++ itkMatrixOffsetTransformBaseD33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMatrixOffsetTransformBaseD33_Pointer":
        """__New_orig__() -> itkMatrixOffsetTransformBaseD33_Pointer"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMatrixOffsetTransformBaseD33_Pointer":
        """Clone(itkMatrixOffsetTransformBaseD33 self) -> itkMatrixOffsetTransformBaseD33_Pointer"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_Clone(self)


    def SetIdentity(self) -> "void":
        """SetIdentity(itkMatrixOffsetTransformBaseD33 self)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_SetIdentity(self)


    def SetMatrix(self, matrix: 'itkMatrixD33') -> "void":
        """SetMatrix(itkMatrixOffsetTransformBaseD33 self, itkMatrixD33 matrix)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_SetMatrix(self, matrix)


    def GetMatrix(self) -> "itkMatrixD33 const &":
        """GetMatrix(itkMatrixOffsetTransformBaseD33 self) -> itkMatrixD33"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_GetMatrix(self)


    def SetOffset(self, offset: 'itkVectorD3') -> "void":
        """SetOffset(itkMatrixOffsetTransformBaseD33 self, itkVectorD3 offset)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_SetOffset(self, offset)


    def GetOffset(self) -> "itkVectorD3 const &":
        """GetOffset(itkMatrixOffsetTransformBaseD33 self) -> itkVectorD3"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_GetOffset(self)


    def SetCenter(self, center: 'itkPointD3') -> "void":
        """SetCenter(itkMatrixOffsetTransformBaseD33 self, itkPointD3 center)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_SetCenter(self, center)


    def GetCenter(self) -> "itkPointD3 const &":
        """GetCenter(itkMatrixOffsetTransformBaseD33 self) -> itkPointD3"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_GetCenter(self)


    def SetTranslation(self, translation: 'itkVectorD3') -> "void":
        """SetTranslation(itkMatrixOffsetTransformBaseD33 self, itkVectorD3 translation)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_SetTranslation(self, translation)


    def GetTranslation(self) -> "itkVectorD3 const &":
        """GetTranslation(itkMatrixOffsetTransformBaseD33 self) -> itkVectorD3"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_GetTranslation(self)


    def Compose(self, other: 'itkMatrixOffsetTransformBaseD33', pre: 'bool'=False) -> "void":
        """
        Compose(itkMatrixOffsetTransformBaseD33 self, itkMatrixOffsetTransformBaseD33 other, bool pre=False)
        Compose(itkMatrixOffsetTransformBaseD33 self, itkMatrixOffsetTransformBaseD33 other)
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_Compose(self, other, pre)


    def TransformVector(self, *args) -> "itkVariableLengthVectorD":
        """
        TransformVector(itkMatrixOffsetTransformBaseD33 self, itkVectorD3 vector) -> itkVectorD3
        TransformVector(itkMatrixOffsetTransformBaseD33 self, vnl_vector_fixed< double,3 > const & vector) -> vnl_vector_fixed< double,3 >
        TransformVector(itkMatrixOffsetTransformBaseD33 self, itkVariableLengthVectorD vector) -> itkVariableLengthVectorD
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_TransformVector(self, *args)


    def TransformCovariantVector(self, *args) -> "itkVariableLengthVectorD":
        """
        TransformCovariantVector(itkMatrixOffsetTransformBaseD33 self, itkCovariantVectorD3 vector) -> itkCovariantVectorD3
        TransformCovariantVector(itkMatrixOffsetTransformBaseD33 self, itkVariableLengthVectorD vector) -> itkVariableLengthVectorD
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_TransformCovariantVector(self, *args)


    def TransformDiffusionTensor3D(self, *args) -> "itkVariableLengthVectorD":
        """
        TransformDiffusionTensor3D(itkMatrixOffsetTransformBaseD33 self, itkDiffusionTensor3DD tensor) -> itkDiffusionTensor3DD
        TransformDiffusionTensor3D(itkMatrixOffsetTransformBaseD33 self, itkVariableLengthVectorD tensor) -> itkVariableLengthVectorD
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_TransformDiffusionTensor3D(self, *args)


    def TransformSymmetricSecondRankTensor(self, *args) -> "itkVariableLengthVectorD":
        """
        TransformSymmetricSecondRankTensor(itkMatrixOffsetTransformBaseD33 self, itkSymmetricSecondRankTensorD3 tensor) -> itkSymmetricSecondRankTensorD3
        TransformSymmetricSecondRankTensor(itkMatrixOffsetTransformBaseD33 self, itkVariableLengthVectorD tensor) -> itkVariableLengthVectorD
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_TransformSymmetricSecondRankTensor(self, *args)


    def GetInverse(self, inverse: 'itkMatrixOffsetTransformBaseD33') -> "bool":
        """GetInverse(itkMatrixOffsetTransformBaseD33 self, itkMatrixOffsetTransformBaseD33 inverse) -> bool"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_GetInverse(self, inverse)

    __swig_destroy__ = _itkMatrixOffsetTransformBasePython.delete_itkMatrixOffsetTransformBaseD33

    def cast(obj: 'itkLightObject') -> "itkMatrixOffsetTransformBaseD33 *":
        """cast(itkLightObject obj) -> itkMatrixOffsetTransformBaseD33"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMatrixOffsetTransformBaseD33

        Create a new object of the class itkMatrixOffsetTransformBaseD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatrixOffsetTransformBaseD33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMatrixOffsetTransformBaseD33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMatrixOffsetTransformBaseD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMatrixOffsetTransformBaseD33.Clone = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_Clone, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.SetIdentity = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_SetIdentity, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.SetMatrix = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_SetMatrix, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.GetMatrix = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_GetMatrix, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.SetOffset = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_SetOffset, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.GetOffset = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_GetOffset, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.SetCenter = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_SetCenter, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.GetCenter = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_GetCenter, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.SetTranslation = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_SetTranslation, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.GetTranslation = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_GetTranslation, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.Compose = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_Compose, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.TransformVector = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_TransformVector, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.TransformCovariantVector = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_TransformCovariantVector, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.TransformDiffusionTensor3D = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_TransformDiffusionTensor3D, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.TransformSymmetricSecondRankTensor = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_TransformSymmetricSecondRankTensor, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33.GetInverse = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_GetInverse, None, itkMatrixOffsetTransformBaseD33)
itkMatrixOffsetTransformBaseD33_swigregister = _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_swigregister
itkMatrixOffsetTransformBaseD33_swigregister(itkMatrixOffsetTransformBaseD33)

def itkMatrixOffsetTransformBaseD33___New_orig__() -> "itkMatrixOffsetTransformBaseD33_Pointer":
    """itkMatrixOffsetTransformBaseD33___New_orig__() -> itkMatrixOffsetTransformBaseD33_Pointer"""
    return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33___New_orig__()

def itkMatrixOffsetTransformBaseD33_cast(obj: 'itkLightObject') -> "itkMatrixOffsetTransformBaseD33 *":
    """itkMatrixOffsetTransformBaseD33_cast(itkLightObject obj) -> itkMatrixOffsetTransformBaseD33"""
    return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseD33_cast(obj)

class itkMatrixOffsetTransformBaseF22(itkTransformBasePython.itkTransformF22):
    """Proxy of C++ itkMatrixOffsetTransformBaseF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMatrixOffsetTransformBaseF22_Pointer":
        """__New_orig__() -> itkMatrixOffsetTransformBaseF22_Pointer"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMatrixOffsetTransformBaseF22_Pointer":
        """Clone(itkMatrixOffsetTransformBaseF22 self) -> itkMatrixOffsetTransformBaseF22_Pointer"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_Clone(self)


    def SetIdentity(self) -> "void":
        """SetIdentity(itkMatrixOffsetTransformBaseF22 self)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_SetIdentity(self)


    def SetMatrix(self, matrix: 'itkMatrixF22') -> "void":
        """SetMatrix(itkMatrixOffsetTransformBaseF22 self, itkMatrixF22 matrix)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_SetMatrix(self, matrix)


    def GetMatrix(self) -> "itkMatrixF22 const &":
        """GetMatrix(itkMatrixOffsetTransformBaseF22 self) -> itkMatrixF22"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_GetMatrix(self)


    def SetOffset(self, offset: 'itkVectorF2') -> "void":
        """SetOffset(itkMatrixOffsetTransformBaseF22 self, itkVectorF2 offset)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_SetOffset(self, offset)


    def GetOffset(self) -> "itkVectorF2 const &":
        """GetOffset(itkMatrixOffsetTransformBaseF22 self) -> itkVectorF2"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_GetOffset(self)


    def SetCenter(self, center: 'itkPointF2') -> "void":
        """SetCenter(itkMatrixOffsetTransformBaseF22 self, itkPointF2 center)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_SetCenter(self, center)


    def GetCenter(self) -> "itkPointF2 const &":
        """GetCenter(itkMatrixOffsetTransformBaseF22 self) -> itkPointF2"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_GetCenter(self)


    def SetTranslation(self, translation: 'itkVectorF2') -> "void":
        """SetTranslation(itkMatrixOffsetTransformBaseF22 self, itkVectorF2 translation)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_SetTranslation(self, translation)


    def GetTranslation(self) -> "itkVectorF2 const &":
        """GetTranslation(itkMatrixOffsetTransformBaseF22 self) -> itkVectorF2"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_GetTranslation(self)


    def Compose(self, other: 'itkMatrixOffsetTransformBaseF22', pre: 'bool'=False) -> "void":
        """
        Compose(itkMatrixOffsetTransformBaseF22 self, itkMatrixOffsetTransformBaseF22 other, bool pre=False)
        Compose(itkMatrixOffsetTransformBaseF22 self, itkMatrixOffsetTransformBaseF22 other)
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_Compose(self, other, pre)


    def TransformVector(self, *args) -> "itkVariableLengthVectorF":
        """
        TransformVector(itkMatrixOffsetTransformBaseF22 self, itkVectorF2 vector) -> itkVectorF2
        TransformVector(itkMatrixOffsetTransformBaseF22 self, vnl_vector_fixed< float,2 > const & vector) -> vnl_vector_fixed< float,2 >
        TransformVector(itkMatrixOffsetTransformBaseF22 self, itkVariableLengthVectorF vector) -> itkVariableLengthVectorF
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_TransformVector(self, *args)


    def TransformCovariantVector(self, *args) -> "itkVariableLengthVectorF":
        """
        TransformCovariantVector(itkMatrixOffsetTransformBaseF22 self, itkCovariantVectorF2 vector) -> itkCovariantVectorF2
        TransformCovariantVector(itkMatrixOffsetTransformBaseF22 self, itkVariableLengthVectorF vector) -> itkVariableLengthVectorF
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_TransformCovariantVector(self, *args)


    def TransformDiffusionTensor3D(self, *args) -> "itkVariableLengthVectorF":
        """
        TransformDiffusionTensor3D(itkMatrixOffsetTransformBaseF22 self, itkDiffusionTensor3DF tensor) -> itkDiffusionTensor3DF
        TransformDiffusionTensor3D(itkMatrixOffsetTransformBaseF22 self, itkVariableLengthVectorF tensor) -> itkVariableLengthVectorF
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_TransformDiffusionTensor3D(self, *args)


    def TransformSymmetricSecondRankTensor(self, *args) -> "itkVariableLengthVectorF":
        """
        TransformSymmetricSecondRankTensor(itkMatrixOffsetTransformBaseF22 self, itkSymmetricSecondRankTensorF2 tensor) -> itkSymmetricSecondRankTensorF2
        TransformSymmetricSecondRankTensor(itkMatrixOffsetTransformBaseF22 self, itkVariableLengthVectorF tensor) -> itkVariableLengthVectorF
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_TransformSymmetricSecondRankTensor(self, *args)


    def GetInverse(self, inverse: 'itkMatrixOffsetTransformBaseF22') -> "bool":
        """GetInverse(itkMatrixOffsetTransformBaseF22 self, itkMatrixOffsetTransformBaseF22 inverse) -> bool"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_GetInverse(self, inverse)

    __swig_destroy__ = _itkMatrixOffsetTransformBasePython.delete_itkMatrixOffsetTransformBaseF22

    def cast(obj: 'itkLightObject') -> "itkMatrixOffsetTransformBaseF22 *":
        """cast(itkLightObject obj) -> itkMatrixOffsetTransformBaseF22"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMatrixOffsetTransformBaseF22

        Create a new object of the class itkMatrixOffsetTransformBaseF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatrixOffsetTransformBaseF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMatrixOffsetTransformBaseF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMatrixOffsetTransformBaseF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMatrixOffsetTransformBaseF22.Clone = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_Clone, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.SetIdentity = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_SetIdentity, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.SetMatrix = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_SetMatrix, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.GetMatrix = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_GetMatrix, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.SetOffset = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_SetOffset, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.GetOffset = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_GetOffset, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.SetCenter = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_SetCenter, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.GetCenter = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_GetCenter, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.SetTranslation = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_SetTranslation, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.GetTranslation = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_GetTranslation, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.Compose = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_Compose, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.TransformVector = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_TransformVector, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.TransformCovariantVector = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_TransformCovariantVector, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.TransformDiffusionTensor3D = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_TransformDiffusionTensor3D, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.TransformSymmetricSecondRankTensor = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_TransformSymmetricSecondRankTensor, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22.GetInverse = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_GetInverse, None, itkMatrixOffsetTransformBaseF22)
itkMatrixOffsetTransformBaseF22_swigregister = _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_swigregister
itkMatrixOffsetTransformBaseF22_swigregister(itkMatrixOffsetTransformBaseF22)

def itkMatrixOffsetTransformBaseF22___New_orig__() -> "itkMatrixOffsetTransformBaseF22_Pointer":
    """itkMatrixOffsetTransformBaseF22___New_orig__() -> itkMatrixOffsetTransformBaseF22_Pointer"""
    return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22___New_orig__()

def itkMatrixOffsetTransformBaseF22_cast(obj: 'itkLightObject') -> "itkMatrixOffsetTransformBaseF22 *":
    """itkMatrixOffsetTransformBaseF22_cast(itkLightObject obj) -> itkMatrixOffsetTransformBaseF22"""
    return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF22_cast(obj)

class itkMatrixOffsetTransformBaseF33(itkTransformBasePython.itkTransformF33):
    """Proxy of C++ itkMatrixOffsetTransformBaseF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMatrixOffsetTransformBaseF33_Pointer":
        """__New_orig__() -> itkMatrixOffsetTransformBaseF33_Pointer"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMatrixOffsetTransformBaseF33_Pointer":
        """Clone(itkMatrixOffsetTransformBaseF33 self) -> itkMatrixOffsetTransformBaseF33_Pointer"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_Clone(self)


    def SetIdentity(self) -> "void":
        """SetIdentity(itkMatrixOffsetTransformBaseF33 self)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_SetIdentity(self)


    def SetMatrix(self, matrix: 'itkMatrixF33') -> "void":
        """SetMatrix(itkMatrixOffsetTransformBaseF33 self, itkMatrixF33 matrix)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_SetMatrix(self, matrix)


    def GetMatrix(self) -> "itkMatrixF33 const &":
        """GetMatrix(itkMatrixOffsetTransformBaseF33 self) -> itkMatrixF33"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_GetMatrix(self)


    def SetOffset(self, offset: 'itkVectorF3') -> "void":
        """SetOffset(itkMatrixOffsetTransformBaseF33 self, itkVectorF3 offset)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_SetOffset(self, offset)


    def GetOffset(self) -> "itkVectorF3 const &":
        """GetOffset(itkMatrixOffsetTransformBaseF33 self) -> itkVectorF3"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_GetOffset(self)


    def SetCenter(self, center: 'itkPointF3') -> "void":
        """SetCenter(itkMatrixOffsetTransformBaseF33 self, itkPointF3 center)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_SetCenter(self, center)


    def GetCenter(self) -> "itkPointF3 const &":
        """GetCenter(itkMatrixOffsetTransformBaseF33 self) -> itkPointF3"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_GetCenter(self)


    def SetTranslation(self, translation: 'itkVectorF3') -> "void":
        """SetTranslation(itkMatrixOffsetTransformBaseF33 self, itkVectorF3 translation)"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_SetTranslation(self, translation)


    def GetTranslation(self) -> "itkVectorF3 const &":
        """GetTranslation(itkMatrixOffsetTransformBaseF33 self) -> itkVectorF3"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_GetTranslation(self)


    def Compose(self, other: 'itkMatrixOffsetTransformBaseF33', pre: 'bool'=False) -> "void":
        """
        Compose(itkMatrixOffsetTransformBaseF33 self, itkMatrixOffsetTransformBaseF33 other, bool pre=False)
        Compose(itkMatrixOffsetTransformBaseF33 self, itkMatrixOffsetTransformBaseF33 other)
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_Compose(self, other, pre)


    def TransformVector(self, *args) -> "itkVariableLengthVectorF":
        """
        TransformVector(itkMatrixOffsetTransformBaseF33 self, itkVectorF3 vector) -> itkVectorF3
        TransformVector(itkMatrixOffsetTransformBaseF33 self, vnl_vector_fixed< float,3 > const & vector) -> vnl_vector_fixed< float,3 >
        TransformVector(itkMatrixOffsetTransformBaseF33 self, itkVariableLengthVectorF vector) -> itkVariableLengthVectorF
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_TransformVector(self, *args)


    def TransformCovariantVector(self, *args) -> "itkVariableLengthVectorF":
        """
        TransformCovariantVector(itkMatrixOffsetTransformBaseF33 self, itkCovariantVectorF3 vector) -> itkCovariantVectorF3
        TransformCovariantVector(itkMatrixOffsetTransformBaseF33 self, itkVariableLengthVectorF vector) -> itkVariableLengthVectorF
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_TransformCovariantVector(self, *args)


    def TransformDiffusionTensor3D(self, *args) -> "itkVariableLengthVectorF":
        """
        TransformDiffusionTensor3D(itkMatrixOffsetTransformBaseF33 self, itkDiffusionTensor3DF tensor) -> itkDiffusionTensor3DF
        TransformDiffusionTensor3D(itkMatrixOffsetTransformBaseF33 self, itkVariableLengthVectorF tensor) -> itkVariableLengthVectorF
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_TransformDiffusionTensor3D(self, *args)


    def TransformSymmetricSecondRankTensor(self, *args) -> "itkVariableLengthVectorF":
        """
        TransformSymmetricSecondRankTensor(itkMatrixOffsetTransformBaseF33 self, itkSymmetricSecondRankTensorF3 tensor) -> itkSymmetricSecondRankTensorF3
        TransformSymmetricSecondRankTensor(itkMatrixOffsetTransformBaseF33 self, itkVariableLengthVectorF tensor) -> itkVariableLengthVectorF
        """
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_TransformSymmetricSecondRankTensor(self, *args)


    def GetInverse(self, inverse: 'itkMatrixOffsetTransformBaseF33') -> "bool":
        """GetInverse(itkMatrixOffsetTransformBaseF33 self, itkMatrixOffsetTransformBaseF33 inverse) -> bool"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_GetInverse(self, inverse)

    __swig_destroy__ = _itkMatrixOffsetTransformBasePython.delete_itkMatrixOffsetTransformBaseF33

    def cast(obj: 'itkLightObject') -> "itkMatrixOffsetTransformBaseF33 *":
        """cast(itkLightObject obj) -> itkMatrixOffsetTransformBaseF33"""
        return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMatrixOffsetTransformBaseF33

        Create a new object of the class itkMatrixOffsetTransformBaseF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatrixOffsetTransformBaseF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMatrixOffsetTransformBaseF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMatrixOffsetTransformBaseF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMatrixOffsetTransformBaseF33.Clone = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_Clone, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.SetIdentity = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_SetIdentity, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.SetMatrix = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_SetMatrix, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.GetMatrix = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_GetMatrix, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.SetOffset = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_SetOffset, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.GetOffset = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_GetOffset, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.SetCenter = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_SetCenter, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.GetCenter = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_GetCenter, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.SetTranslation = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_SetTranslation, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.GetTranslation = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_GetTranslation, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.Compose = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_Compose, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.TransformVector = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_TransformVector, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.TransformCovariantVector = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_TransformCovariantVector, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.TransformDiffusionTensor3D = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_TransformDiffusionTensor3D, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.TransformSymmetricSecondRankTensor = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_TransformSymmetricSecondRankTensor, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33.GetInverse = new_instancemethod(_itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_GetInverse, None, itkMatrixOffsetTransformBaseF33)
itkMatrixOffsetTransformBaseF33_swigregister = _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_swigregister
itkMatrixOffsetTransformBaseF33_swigregister(itkMatrixOffsetTransformBaseF33)

def itkMatrixOffsetTransformBaseF33___New_orig__() -> "itkMatrixOffsetTransformBaseF33_Pointer":
    """itkMatrixOffsetTransformBaseF33___New_orig__() -> itkMatrixOffsetTransformBaseF33_Pointer"""
    return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33___New_orig__()

def itkMatrixOffsetTransformBaseF33_cast(obj: 'itkLightObject') -> "itkMatrixOffsetTransformBaseF33 *":
    """itkMatrixOffsetTransformBaseF33_cast(itkLightObject obj) -> itkMatrixOffsetTransformBaseF33"""
    return _itkMatrixOffsetTransformBasePython.itkMatrixOffsetTransformBaseF33_cast(obj)



