# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkGaussianSpatialObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkGaussianSpatialObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkGaussianSpatialObjectPython
            return _itkGaussianSpatialObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkGaussianSpatialObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkGaussianSpatialObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkGaussianSpatialObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSpatialObjectBasePython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import vnl_vector_refPython
import itkFixedArrayPython
import itkCovariantVectorPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import ITKCommonBasePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkPointPython
import itkVectorContainerPython
import itkOffsetPython
import itkSizePython
import itkContinuousIndexPython
import itkIndexPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkImageRegionPython
import itkAffineTransformPython
import itkTransformBasePython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkSymmetricSecondRankTensorPython
import itkDiffusionTensor3DPython
import itkMatrixOffsetTransformBasePython
import itkEllipseSpatialObjectPython

def itkGaussianSpatialObject3_New():
  return itkGaussianSpatialObject3.New()


def itkGaussianSpatialObject2_New():
  return itkGaussianSpatialObject2.New()

class itkGaussianSpatialObject2(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkGaussianSpatialObject2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGaussianSpatialObject2_Pointer":
        """__New_orig__() -> itkGaussianSpatialObject2_Pointer"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGaussianSpatialObject2_Pointer":
        """Clone(itkGaussianSpatialObject2 self) -> itkGaussianSpatialObject2_Pointer"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_Clone(self)


    def SetRadiusInObjectSpace(self, _arg: 'double const') -> "void":
        """SetRadiusInObjectSpace(itkGaussianSpatialObject2 self, double const _arg)"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SetRadiusInObjectSpace(self, _arg)


    def GetRadiusInObjectSpace(self) -> "double const &":
        """GetRadiusInObjectSpace(itkGaussianSpatialObject2 self) -> double const &"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_GetRadiusInObjectSpace(self)


    def SetSigmaInObjectSpace(self, _arg: 'double const') -> "void":
        """SetSigmaInObjectSpace(itkGaussianSpatialObject2 self, double const _arg)"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SetSigmaInObjectSpace(self, _arg)


    def GetSigmaInObjectSpace(self) -> "double const &":
        """GetSigmaInObjectSpace(itkGaussianSpatialObject2 self) -> double const &"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_GetSigmaInObjectSpace(self)


    def SetCenterInObjectSpace(self, _arg: 'itkPointD2') -> "void":
        """SetCenterInObjectSpace(itkGaussianSpatialObject2 self, itkPointD2 _arg)"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SetCenterInObjectSpace(self, _arg)


    def GetCenterInObjectSpace(self) -> "itkPointD2 const &":
        """GetCenterInObjectSpace(itkGaussianSpatialObject2 self) -> itkPointD2"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_GetCenterInObjectSpace(self)


    def SetMaximum(self, _arg: 'double const') -> "void":
        """SetMaximum(itkGaussianSpatialObject2 self, double const _arg)"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SetMaximum(self, _arg)


    def GetMaximum(self) -> "double const &":
        """GetMaximum(itkGaussianSpatialObject2 self) -> double const &"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_GetMaximum(self)


    def SquaredZScoreInObjectSpace(self, point: 'itkPointD2') -> "double":
        """SquaredZScoreInObjectSpace(itkGaussianSpatialObject2 self, itkPointD2 point) -> double"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SquaredZScoreInObjectSpace(self, point)


    def SquaredZScoreInWorldSpace(self, point: 'itkPointD2') -> "double":
        """SquaredZScoreInWorldSpace(itkGaussianSpatialObject2 self, itkPointD2 point) -> double"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SquaredZScoreInWorldSpace(self, point)


    def ValueAtInObjectSpace(self, *args) -> "bool":
        """
        ValueAtInObjectSpace(itkGaussianSpatialObject2 self, itkPointD2 point, double & value, unsigned int depth=0, std::string const & name) -> bool
        ValueAtInObjectSpace(itkGaussianSpatialObject2 self, itkPointD2 point, double & value, unsigned int depth=0) -> bool
        ValueAtInObjectSpace(itkGaussianSpatialObject2 self, itkPointD2 point, double & value) -> bool
        """
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_ValueAtInObjectSpace(self, *args)


    def GetEllipsoid(self) -> "itkEllipseSpatialObject2_Pointer":
        """GetEllipsoid(itkGaussianSpatialObject2 self) -> itkEllipseSpatialObject2_Pointer"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_GetEllipsoid(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGaussianSpatialObject2 self, double sigma)"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkGaussianSpatialObject2 self) -> double"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_GetSigma(self)

    __swig_destroy__ = _itkGaussianSpatialObjectPython.delete_itkGaussianSpatialObject2

    def cast(obj: 'itkLightObject') -> "itkGaussianSpatialObject2 *":
        """cast(itkLightObject obj) -> itkGaussianSpatialObject2"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGaussianSpatialObject2

        Create a new object of the class itkGaussianSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianSpatialObject2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGaussianSpatialObject2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGaussianSpatialObject2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGaussianSpatialObject2.Clone = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_Clone, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.SetRadiusInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SetRadiusInObjectSpace, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.GetRadiusInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_GetRadiusInObjectSpace, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.SetSigmaInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SetSigmaInObjectSpace, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.GetSigmaInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_GetSigmaInObjectSpace, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.SetCenterInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SetCenterInObjectSpace, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.GetCenterInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_GetCenterInObjectSpace, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.SetMaximum = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SetMaximum, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.GetMaximum = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_GetMaximum, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.SquaredZScoreInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SquaredZScoreInObjectSpace, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.SquaredZScoreInWorldSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SquaredZScoreInWorldSpace, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.ValueAtInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_ValueAtInObjectSpace, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.GetEllipsoid = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_GetEllipsoid, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.SetSigma = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_SetSigma, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2.GetSigma = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_GetSigma, None, itkGaussianSpatialObject2)
itkGaussianSpatialObject2_swigregister = _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_swigregister
itkGaussianSpatialObject2_swigregister(itkGaussianSpatialObject2)

def itkGaussianSpatialObject2___New_orig__() -> "itkGaussianSpatialObject2_Pointer":
    """itkGaussianSpatialObject2___New_orig__() -> itkGaussianSpatialObject2_Pointer"""
    return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2___New_orig__()

def itkGaussianSpatialObject2_cast(obj: 'itkLightObject') -> "itkGaussianSpatialObject2 *":
    """itkGaussianSpatialObject2_cast(itkLightObject obj) -> itkGaussianSpatialObject2"""
    return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject2_cast(obj)

class itkGaussianSpatialObject3(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkGaussianSpatialObject3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGaussianSpatialObject3_Pointer":
        """__New_orig__() -> itkGaussianSpatialObject3_Pointer"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGaussianSpatialObject3_Pointer":
        """Clone(itkGaussianSpatialObject3 self) -> itkGaussianSpatialObject3_Pointer"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_Clone(self)


    def SetRadiusInObjectSpace(self, _arg: 'double const') -> "void":
        """SetRadiusInObjectSpace(itkGaussianSpatialObject3 self, double const _arg)"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SetRadiusInObjectSpace(self, _arg)


    def GetRadiusInObjectSpace(self) -> "double const &":
        """GetRadiusInObjectSpace(itkGaussianSpatialObject3 self) -> double const &"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_GetRadiusInObjectSpace(self)


    def SetSigmaInObjectSpace(self, _arg: 'double const') -> "void":
        """SetSigmaInObjectSpace(itkGaussianSpatialObject3 self, double const _arg)"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SetSigmaInObjectSpace(self, _arg)


    def GetSigmaInObjectSpace(self) -> "double const &":
        """GetSigmaInObjectSpace(itkGaussianSpatialObject3 self) -> double const &"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_GetSigmaInObjectSpace(self)


    def SetCenterInObjectSpace(self, _arg: 'itkPointD3') -> "void":
        """SetCenterInObjectSpace(itkGaussianSpatialObject3 self, itkPointD3 _arg)"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SetCenterInObjectSpace(self, _arg)


    def GetCenterInObjectSpace(self) -> "itkPointD3 const &":
        """GetCenterInObjectSpace(itkGaussianSpatialObject3 self) -> itkPointD3"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_GetCenterInObjectSpace(self)


    def SetMaximum(self, _arg: 'double const') -> "void":
        """SetMaximum(itkGaussianSpatialObject3 self, double const _arg)"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SetMaximum(self, _arg)


    def GetMaximum(self) -> "double const &":
        """GetMaximum(itkGaussianSpatialObject3 self) -> double const &"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_GetMaximum(self)


    def SquaredZScoreInObjectSpace(self, point: 'itkPointD3') -> "double":
        """SquaredZScoreInObjectSpace(itkGaussianSpatialObject3 self, itkPointD3 point) -> double"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SquaredZScoreInObjectSpace(self, point)


    def SquaredZScoreInWorldSpace(self, point: 'itkPointD3') -> "double":
        """SquaredZScoreInWorldSpace(itkGaussianSpatialObject3 self, itkPointD3 point) -> double"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SquaredZScoreInWorldSpace(self, point)


    def ValueAtInObjectSpace(self, *args) -> "bool":
        """
        ValueAtInObjectSpace(itkGaussianSpatialObject3 self, itkPointD3 point, double & value, unsigned int depth=0, std::string const & name) -> bool
        ValueAtInObjectSpace(itkGaussianSpatialObject3 self, itkPointD3 point, double & value, unsigned int depth=0) -> bool
        ValueAtInObjectSpace(itkGaussianSpatialObject3 self, itkPointD3 point, double & value) -> bool
        """
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_ValueAtInObjectSpace(self, *args)


    def GetEllipsoid(self) -> "itkEllipseSpatialObject3_Pointer":
        """GetEllipsoid(itkGaussianSpatialObject3 self) -> itkEllipseSpatialObject3_Pointer"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_GetEllipsoid(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGaussianSpatialObject3 self, double sigma)"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkGaussianSpatialObject3 self) -> double"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_GetSigma(self)

    __swig_destroy__ = _itkGaussianSpatialObjectPython.delete_itkGaussianSpatialObject3

    def cast(obj: 'itkLightObject') -> "itkGaussianSpatialObject3 *":
        """cast(itkLightObject obj) -> itkGaussianSpatialObject3"""
        return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGaussianSpatialObject3

        Create a new object of the class itkGaussianSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianSpatialObject3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGaussianSpatialObject3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGaussianSpatialObject3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGaussianSpatialObject3.Clone = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_Clone, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.SetRadiusInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SetRadiusInObjectSpace, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.GetRadiusInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_GetRadiusInObjectSpace, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.SetSigmaInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SetSigmaInObjectSpace, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.GetSigmaInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_GetSigmaInObjectSpace, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.SetCenterInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SetCenterInObjectSpace, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.GetCenterInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_GetCenterInObjectSpace, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.SetMaximum = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SetMaximum, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.GetMaximum = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_GetMaximum, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.SquaredZScoreInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SquaredZScoreInObjectSpace, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.SquaredZScoreInWorldSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SquaredZScoreInWorldSpace, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.ValueAtInObjectSpace = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_ValueAtInObjectSpace, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.GetEllipsoid = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_GetEllipsoid, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.SetSigma = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_SetSigma, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3.GetSigma = new_instancemethod(_itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_GetSigma, None, itkGaussianSpatialObject3)
itkGaussianSpatialObject3_swigregister = _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_swigregister
itkGaussianSpatialObject3_swigregister(itkGaussianSpatialObject3)

def itkGaussianSpatialObject3___New_orig__() -> "itkGaussianSpatialObject3_Pointer":
    """itkGaussianSpatialObject3___New_orig__() -> itkGaussianSpatialObject3_Pointer"""
    return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3___New_orig__()

def itkGaussianSpatialObject3_cast(obj: 'itkLightObject') -> "itkGaussianSpatialObject3 *":
    """itkGaussianSpatialObject3_cast(itkLightObject obj) -> itkGaussianSpatialObject3"""
    return _itkGaussianSpatialObjectPython.itkGaussianSpatialObject3_cast(obj)



