# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkKittlerIllingworthThresholdCalculatorPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkKittlerIllingworthThresholdCalculatorPython', [dirname(__file__)])
        except ImportError:
            import _itkKittlerIllingworthThresholdCalculatorPython
            return _itkKittlerIllingworthThresholdCalculatorPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkKittlerIllingworthThresholdCalculatorPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkKittlerIllingworthThresholdCalculatorPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkKittlerIllingworthThresholdCalculatorPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramThresholdCalculatorPython
import itkHistogramPython
import itkSamplePython
import ITKCommonBasePython
import pyBasePython
import itkArrayPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkSimpleDataObjectDecoratorPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkCovariantVectorPython

def itkKittlerIllingworthThresholdCalculatorHFF_New():
  return itkKittlerIllingworthThresholdCalculatorHFF.New()


def itkKittlerIllingworthThresholdCalculatorHDF_New():
  return itkKittlerIllingworthThresholdCalculatorHDF.New()


def itkKittlerIllingworthThresholdCalculatorHFUS_New():
  return itkKittlerIllingworthThresholdCalculatorHFUS.New()


def itkKittlerIllingworthThresholdCalculatorHDUS_New():
  return itkKittlerIllingworthThresholdCalculatorHDUS.New()


def itkKittlerIllingworthThresholdCalculatorHFUC_New():
  return itkKittlerIllingworthThresholdCalculatorHFUC.New()


def itkKittlerIllingworthThresholdCalculatorHDUC_New():
  return itkKittlerIllingworthThresholdCalculatorHDUC.New()


def itkKittlerIllingworthThresholdCalculatorHFSS_New():
  return itkKittlerIllingworthThresholdCalculatorHFSS.New()


def itkKittlerIllingworthThresholdCalculatorHDSS_New():
  return itkKittlerIllingworthThresholdCalculatorHDSS.New()

class itkKittlerIllingworthThresholdCalculatorHDF(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDF):
    """Proxy of C++ itkKittlerIllingworthThresholdCalculatorHDF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHDF_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdCalculatorHDF_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdCalculatorHDF_Pointer":
        """Clone(itkKittlerIllingworthThresholdCalculatorHDF self) -> itkKittlerIllingworthThresholdCalculatorHDF_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDF_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdCalculatorPython.delete_itkKittlerIllingworthThresholdCalculatorHDF

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHDF *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHDF"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdCalculatorHDF

        Create a new object of the class itkKittlerIllingworthThresholdCalculatorHDF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdCalculatorHDF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdCalculatorHDF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdCalculatorHDF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdCalculatorHDF.Clone = new_instancemethod(_itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDF_Clone, None, itkKittlerIllingworthThresholdCalculatorHDF)
itkKittlerIllingworthThresholdCalculatorHDF_swigregister = _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDF_swigregister
itkKittlerIllingworthThresholdCalculatorHDF_swigregister(itkKittlerIllingworthThresholdCalculatorHDF)

def itkKittlerIllingworthThresholdCalculatorHDF___New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHDF_Pointer":
    """itkKittlerIllingworthThresholdCalculatorHDF___New_orig__() -> itkKittlerIllingworthThresholdCalculatorHDF_Pointer"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDF___New_orig__()

def itkKittlerIllingworthThresholdCalculatorHDF_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHDF *":
    """itkKittlerIllingworthThresholdCalculatorHDF_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHDF"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDF_cast(obj)

class itkKittlerIllingworthThresholdCalculatorHDSS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDSS):
    """Proxy of C++ itkKittlerIllingworthThresholdCalculatorHDSS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHDSS_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdCalculatorHDSS_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDSS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdCalculatorHDSS_Pointer":
        """Clone(itkKittlerIllingworthThresholdCalculatorHDSS self) -> itkKittlerIllingworthThresholdCalculatorHDSS_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDSS_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdCalculatorPython.delete_itkKittlerIllingworthThresholdCalculatorHDSS

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHDSS *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHDSS"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDSS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdCalculatorHDSS

        Create a new object of the class itkKittlerIllingworthThresholdCalculatorHDSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdCalculatorHDSS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdCalculatorHDSS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdCalculatorHDSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdCalculatorHDSS.Clone = new_instancemethod(_itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDSS_Clone, None, itkKittlerIllingworthThresholdCalculatorHDSS)
itkKittlerIllingworthThresholdCalculatorHDSS_swigregister = _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDSS_swigregister
itkKittlerIllingworthThresholdCalculatorHDSS_swigregister(itkKittlerIllingworthThresholdCalculatorHDSS)

def itkKittlerIllingworthThresholdCalculatorHDSS___New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHDSS_Pointer":
    """itkKittlerIllingworthThresholdCalculatorHDSS___New_orig__() -> itkKittlerIllingworthThresholdCalculatorHDSS_Pointer"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDSS___New_orig__()

def itkKittlerIllingworthThresholdCalculatorHDSS_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHDSS *":
    """itkKittlerIllingworthThresholdCalculatorHDSS_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHDSS"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDSS_cast(obj)

class itkKittlerIllingworthThresholdCalculatorHDUC(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUC):
    """Proxy of C++ itkKittlerIllingworthThresholdCalculatorHDUC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHDUC_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdCalculatorHDUC_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdCalculatorHDUC_Pointer":
        """Clone(itkKittlerIllingworthThresholdCalculatorHDUC self) -> itkKittlerIllingworthThresholdCalculatorHDUC_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUC_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdCalculatorPython.delete_itkKittlerIllingworthThresholdCalculatorHDUC

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHDUC *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHDUC"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdCalculatorHDUC

        Create a new object of the class itkKittlerIllingworthThresholdCalculatorHDUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdCalculatorHDUC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdCalculatorHDUC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdCalculatorHDUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdCalculatorHDUC.Clone = new_instancemethod(_itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUC_Clone, None, itkKittlerIllingworthThresholdCalculatorHDUC)
itkKittlerIllingworthThresholdCalculatorHDUC_swigregister = _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUC_swigregister
itkKittlerIllingworthThresholdCalculatorHDUC_swigregister(itkKittlerIllingworthThresholdCalculatorHDUC)

def itkKittlerIllingworthThresholdCalculatorHDUC___New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHDUC_Pointer":
    """itkKittlerIllingworthThresholdCalculatorHDUC___New_orig__() -> itkKittlerIllingworthThresholdCalculatorHDUC_Pointer"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUC___New_orig__()

def itkKittlerIllingworthThresholdCalculatorHDUC_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHDUC *":
    """itkKittlerIllingworthThresholdCalculatorHDUC_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHDUC"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUC_cast(obj)

class itkKittlerIllingworthThresholdCalculatorHDUS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUS):
    """Proxy of C++ itkKittlerIllingworthThresholdCalculatorHDUS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHDUS_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdCalculatorHDUS_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdCalculatorHDUS_Pointer":
        """Clone(itkKittlerIllingworthThresholdCalculatorHDUS self) -> itkKittlerIllingworthThresholdCalculatorHDUS_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUS_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdCalculatorPython.delete_itkKittlerIllingworthThresholdCalculatorHDUS

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHDUS *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHDUS"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdCalculatorHDUS

        Create a new object of the class itkKittlerIllingworthThresholdCalculatorHDUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdCalculatorHDUS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdCalculatorHDUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdCalculatorHDUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdCalculatorHDUS.Clone = new_instancemethod(_itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUS_Clone, None, itkKittlerIllingworthThresholdCalculatorHDUS)
itkKittlerIllingworthThresholdCalculatorHDUS_swigregister = _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUS_swigregister
itkKittlerIllingworthThresholdCalculatorHDUS_swigregister(itkKittlerIllingworthThresholdCalculatorHDUS)

def itkKittlerIllingworthThresholdCalculatorHDUS___New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHDUS_Pointer":
    """itkKittlerIllingworthThresholdCalculatorHDUS___New_orig__() -> itkKittlerIllingworthThresholdCalculatorHDUS_Pointer"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUS___New_orig__()

def itkKittlerIllingworthThresholdCalculatorHDUS_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHDUS *":
    """itkKittlerIllingworthThresholdCalculatorHDUS_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHDUS"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHDUS_cast(obj)

class itkKittlerIllingworthThresholdCalculatorHFF(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFF):
    """Proxy of C++ itkKittlerIllingworthThresholdCalculatorHFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHFF_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdCalculatorHFF_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdCalculatorHFF_Pointer":
        """Clone(itkKittlerIllingworthThresholdCalculatorHFF self) -> itkKittlerIllingworthThresholdCalculatorHFF_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFF_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdCalculatorPython.delete_itkKittlerIllingworthThresholdCalculatorHFF

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHFF *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHFF"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdCalculatorHFF

        Create a new object of the class itkKittlerIllingworthThresholdCalculatorHFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdCalculatorHFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdCalculatorHFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdCalculatorHFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdCalculatorHFF.Clone = new_instancemethod(_itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFF_Clone, None, itkKittlerIllingworthThresholdCalculatorHFF)
itkKittlerIllingworthThresholdCalculatorHFF_swigregister = _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFF_swigregister
itkKittlerIllingworthThresholdCalculatorHFF_swigregister(itkKittlerIllingworthThresholdCalculatorHFF)

def itkKittlerIllingworthThresholdCalculatorHFF___New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHFF_Pointer":
    """itkKittlerIllingworthThresholdCalculatorHFF___New_orig__() -> itkKittlerIllingworthThresholdCalculatorHFF_Pointer"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFF___New_orig__()

def itkKittlerIllingworthThresholdCalculatorHFF_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHFF *":
    """itkKittlerIllingworthThresholdCalculatorHFF_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHFF"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFF_cast(obj)

class itkKittlerIllingworthThresholdCalculatorHFSS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFSS):
    """Proxy of C++ itkKittlerIllingworthThresholdCalculatorHFSS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHFSS_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdCalculatorHFSS_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFSS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdCalculatorHFSS_Pointer":
        """Clone(itkKittlerIllingworthThresholdCalculatorHFSS self) -> itkKittlerIllingworthThresholdCalculatorHFSS_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFSS_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdCalculatorPython.delete_itkKittlerIllingworthThresholdCalculatorHFSS

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHFSS *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHFSS"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFSS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdCalculatorHFSS

        Create a new object of the class itkKittlerIllingworthThresholdCalculatorHFSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdCalculatorHFSS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdCalculatorHFSS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdCalculatorHFSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdCalculatorHFSS.Clone = new_instancemethod(_itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFSS_Clone, None, itkKittlerIllingworthThresholdCalculatorHFSS)
itkKittlerIllingworthThresholdCalculatorHFSS_swigregister = _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFSS_swigregister
itkKittlerIllingworthThresholdCalculatorHFSS_swigregister(itkKittlerIllingworthThresholdCalculatorHFSS)

def itkKittlerIllingworthThresholdCalculatorHFSS___New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHFSS_Pointer":
    """itkKittlerIllingworthThresholdCalculatorHFSS___New_orig__() -> itkKittlerIllingworthThresholdCalculatorHFSS_Pointer"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFSS___New_orig__()

def itkKittlerIllingworthThresholdCalculatorHFSS_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHFSS *":
    """itkKittlerIllingworthThresholdCalculatorHFSS_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHFSS"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFSS_cast(obj)

class itkKittlerIllingworthThresholdCalculatorHFUC(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUC):
    """Proxy of C++ itkKittlerIllingworthThresholdCalculatorHFUC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHFUC_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdCalculatorHFUC_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdCalculatorHFUC_Pointer":
        """Clone(itkKittlerIllingworthThresholdCalculatorHFUC self) -> itkKittlerIllingworthThresholdCalculatorHFUC_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUC_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdCalculatorPython.delete_itkKittlerIllingworthThresholdCalculatorHFUC

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHFUC *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHFUC"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdCalculatorHFUC

        Create a new object of the class itkKittlerIllingworthThresholdCalculatorHFUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdCalculatorHFUC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdCalculatorHFUC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdCalculatorHFUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdCalculatorHFUC.Clone = new_instancemethod(_itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUC_Clone, None, itkKittlerIllingworthThresholdCalculatorHFUC)
itkKittlerIllingworthThresholdCalculatorHFUC_swigregister = _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUC_swigregister
itkKittlerIllingworthThresholdCalculatorHFUC_swigregister(itkKittlerIllingworthThresholdCalculatorHFUC)

def itkKittlerIllingworthThresholdCalculatorHFUC___New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHFUC_Pointer":
    """itkKittlerIllingworthThresholdCalculatorHFUC___New_orig__() -> itkKittlerIllingworthThresholdCalculatorHFUC_Pointer"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUC___New_orig__()

def itkKittlerIllingworthThresholdCalculatorHFUC_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHFUC *":
    """itkKittlerIllingworthThresholdCalculatorHFUC_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHFUC"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUC_cast(obj)

class itkKittlerIllingworthThresholdCalculatorHFUS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUS):
    """Proxy of C++ itkKittlerIllingworthThresholdCalculatorHFUS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHFUS_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdCalculatorHFUS_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdCalculatorHFUS_Pointer":
        """Clone(itkKittlerIllingworthThresholdCalculatorHFUS self) -> itkKittlerIllingworthThresholdCalculatorHFUS_Pointer"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUS_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdCalculatorPython.delete_itkKittlerIllingworthThresholdCalculatorHFUS

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHFUS *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHFUS"""
        return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdCalculatorHFUS

        Create a new object of the class itkKittlerIllingworthThresholdCalculatorHFUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdCalculatorHFUS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdCalculatorHFUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdCalculatorHFUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdCalculatorHFUS.Clone = new_instancemethod(_itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUS_Clone, None, itkKittlerIllingworthThresholdCalculatorHFUS)
itkKittlerIllingworthThresholdCalculatorHFUS_swigregister = _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUS_swigregister
itkKittlerIllingworthThresholdCalculatorHFUS_swigregister(itkKittlerIllingworthThresholdCalculatorHFUS)

def itkKittlerIllingworthThresholdCalculatorHFUS___New_orig__() -> "itkKittlerIllingworthThresholdCalculatorHFUS_Pointer":
    """itkKittlerIllingworthThresholdCalculatorHFUS___New_orig__() -> itkKittlerIllingworthThresholdCalculatorHFUS_Pointer"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUS___New_orig__()

def itkKittlerIllingworthThresholdCalculatorHFUS_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdCalculatorHFUS *":
    """itkKittlerIllingworthThresholdCalculatorHFUS_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdCalculatorHFUS"""
    return _itkKittlerIllingworthThresholdCalculatorPython.itkKittlerIllingworthThresholdCalculatorHFUS_cast(obj)


def kittler_illingworth_threshold_calculator(*args, **kwargs):
    """Procedural interface for KittlerIllingworthThresholdCalculator"""
    import itk
    instance = itk.KittlerIllingworthThresholdCalculator.New(*args, **kwargs)
    return instance.__internal_call__()

def kittler_illingworth_threshold_calculator_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.KittlerIllingworthThresholdCalculator, itkTemplate.itkTemplate):
        kittler_illingworth_threshold_calculator.__doc__ = itk.KittlerIllingworthThresholdCalculator.values()[0].__doc__
    else:
        kittler_illingworth_threshold_calculator.__doc__ = itk.KittlerIllingworthThresholdCalculator.__doc__




