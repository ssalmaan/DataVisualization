# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkTriangleThresholdCalculatorPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkTriangleThresholdCalculatorPython', [dirname(__file__)])
        except ImportError:
            import _itkTriangleThresholdCalculatorPython
            return _itkTriangleThresholdCalculatorPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkTriangleThresholdCalculatorPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkTriangleThresholdCalculatorPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkTriangleThresholdCalculatorPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramThresholdCalculatorPython
import itkHistogramPython
import itkSamplePython
import ITKCommonBasePython
import pyBasePython
import itkArrayPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkSimpleDataObjectDecoratorPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkCovariantVectorPython

def itkTriangleThresholdCalculatorHFF_New():
  return itkTriangleThresholdCalculatorHFF.New()


def itkTriangleThresholdCalculatorHDF_New():
  return itkTriangleThresholdCalculatorHDF.New()


def itkTriangleThresholdCalculatorHFUS_New():
  return itkTriangleThresholdCalculatorHFUS.New()


def itkTriangleThresholdCalculatorHDUS_New():
  return itkTriangleThresholdCalculatorHDUS.New()


def itkTriangleThresholdCalculatorHFUC_New():
  return itkTriangleThresholdCalculatorHFUC.New()


def itkTriangleThresholdCalculatorHDUC_New():
  return itkTriangleThresholdCalculatorHDUC.New()


def itkTriangleThresholdCalculatorHFSS_New():
  return itkTriangleThresholdCalculatorHFSS.New()


def itkTriangleThresholdCalculatorHDSS_New():
  return itkTriangleThresholdCalculatorHDSS.New()

class itkTriangleThresholdCalculatorHDF(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDF):
    """Proxy of C++ itkTriangleThresholdCalculatorHDF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdCalculatorHDF_Pointer":
        """__New_orig__() -> itkTriangleThresholdCalculatorHDF_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdCalculatorHDF_Pointer":
        """Clone(itkTriangleThresholdCalculatorHDF self) -> itkTriangleThresholdCalculatorHDF_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDF_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdCalculatorPython.delete_itkTriangleThresholdCalculatorHDF

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHDF *":
        """cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHDF"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdCalculatorHDF

        Create a new object of the class itkTriangleThresholdCalculatorHDF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdCalculatorHDF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdCalculatorHDF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdCalculatorHDF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdCalculatorHDF.Clone = new_instancemethod(_itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDF_Clone, None, itkTriangleThresholdCalculatorHDF)
itkTriangleThresholdCalculatorHDF_swigregister = _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDF_swigregister
itkTriangleThresholdCalculatorHDF_swigregister(itkTriangleThresholdCalculatorHDF)

def itkTriangleThresholdCalculatorHDF___New_orig__() -> "itkTriangleThresholdCalculatorHDF_Pointer":
    """itkTriangleThresholdCalculatorHDF___New_orig__() -> itkTriangleThresholdCalculatorHDF_Pointer"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDF___New_orig__()

def itkTriangleThresholdCalculatorHDF_cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHDF *":
    """itkTriangleThresholdCalculatorHDF_cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHDF"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDF_cast(obj)

class itkTriangleThresholdCalculatorHDSS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDSS):
    """Proxy of C++ itkTriangleThresholdCalculatorHDSS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdCalculatorHDSS_Pointer":
        """__New_orig__() -> itkTriangleThresholdCalculatorHDSS_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDSS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdCalculatorHDSS_Pointer":
        """Clone(itkTriangleThresholdCalculatorHDSS self) -> itkTriangleThresholdCalculatorHDSS_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDSS_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdCalculatorPython.delete_itkTriangleThresholdCalculatorHDSS

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHDSS *":
        """cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHDSS"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDSS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdCalculatorHDSS

        Create a new object of the class itkTriangleThresholdCalculatorHDSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdCalculatorHDSS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdCalculatorHDSS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdCalculatorHDSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdCalculatorHDSS.Clone = new_instancemethod(_itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDSS_Clone, None, itkTriangleThresholdCalculatorHDSS)
itkTriangleThresholdCalculatorHDSS_swigregister = _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDSS_swigregister
itkTriangleThresholdCalculatorHDSS_swigregister(itkTriangleThresholdCalculatorHDSS)

def itkTriangleThresholdCalculatorHDSS___New_orig__() -> "itkTriangleThresholdCalculatorHDSS_Pointer":
    """itkTriangleThresholdCalculatorHDSS___New_orig__() -> itkTriangleThresholdCalculatorHDSS_Pointer"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDSS___New_orig__()

def itkTriangleThresholdCalculatorHDSS_cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHDSS *":
    """itkTriangleThresholdCalculatorHDSS_cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHDSS"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDSS_cast(obj)

class itkTriangleThresholdCalculatorHDUC(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUC):
    """Proxy of C++ itkTriangleThresholdCalculatorHDUC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdCalculatorHDUC_Pointer":
        """__New_orig__() -> itkTriangleThresholdCalculatorHDUC_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdCalculatorHDUC_Pointer":
        """Clone(itkTriangleThresholdCalculatorHDUC self) -> itkTriangleThresholdCalculatorHDUC_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUC_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdCalculatorPython.delete_itkTriangleThresholdCalculatorHDUC

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHDUC *":
        """cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHDUC"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdCalculatorHDUC

        Create a new object of the class itkTriangleThresholdCalculatorHDUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdCalculatorHDUC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdCalculatorHDUC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdCalculatorHDUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdCalculatorHDUC.Clone = new_instancemethod(_itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUC_Clone, None, itkTriangleThresholdCalculatorHDUC)
itkTriangleThresholdCalculatorHDUC_swigregister = _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUC_swigregister
itkTriangleThresholdCalculatorHDUC_swigregister(itkTriangleThresholdCalculatorHDUC)

def itkTriangleThresholdCalculatorHDUC___New_orig__() -> "itkTriangleThresholdCalculatorHDUC_Pointer":
    """itkTriangleThresholdCalculatorHDUC___New_orig__() -> itkTriangleThresholdCalculatorHDUC_Pointer"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUC___New_orig__()

def itkTriangleThresholdCalculatorHDUC_cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHDUC *":
    """itkTriangleThresholdCalculatorHDUC_cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHDUC"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUC_cast(obj)

class itkTriangleThresholdCalculatorHDUS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUS):
    """Proxy of C++ itkTriangleThresholdCalculatorHDUS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdCalculatorHDUS_Pointer":
        """__New_orig__() -> itkTriangleThresholdCalculatorHDUS_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdCalculatorHDUS_Pointer":
        """Clone(itkTriangleThresholdCalculatorHDUS self) -> itkTriangleThresholdCalculatorHDUS_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUS_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdCalculatorPython.delete_itkTriangleThresholdCalculatorHDUS

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHDUS *":
        """cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHDUS"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdCalculatorHDUS

        Create a new object of the class itkTriangleThresholdCalculatorHDUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdCalculatorHDUS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdCalculatorHDUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdCalculatorHDUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdCalculatorHDUS.Clone = new_instancemethod(_itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUS_Clone, None, itkTriangleThresholdCalculatorHDUS)
itkTriangleThresholdCalculatorHDUS_swigregister = _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUS_swigregister
itkTriangleThresholdCalculatorHDUS_swigregister(itkTriangleThresholdCalculatorHDUS)

def itkTriangleThresholdCalculatorHDUS___New_orig__() -> "itkTriangleThresholdCalculatorHDUS_Pointer":
    """itkTriangleThresholdCalculatorHDUS___New_orig__() -> itkTriangleThresholdCalculatorHDUS_Pointer"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUS___New_orig__()

def itkTriangleThresholdCalculatorHDUS_cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHDUS *":
    """itkTriangleThresholdCalculatorHDUS_cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHDUS"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHDUS_cast(obj)

class itkTriangleThresholdCalculatorHFF(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFF):
    """Proxy of C++ itkTriangleThresholdCalculatorHFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdCalculatorHFF_Pointer":
        """__New_orig__() -> itkTriangleThresholdCalculatorHFF_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdCalculatorHFF_Pointer":
        """Clone(itkTriangleThresholdCalculatorHFF self) -> itkTriangleThresholdCalculatorHFF_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFF_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdCalculatorPython.delete_itkTriangleThresholdCalculatorHFF

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHFF *":
        """cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHFF"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdCalculatorHFF

        Create a new object of the class itkTriangleThresholdCalculatorHFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdCalculatorHFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdCalculatorHFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdCalculatorHFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdCalculatorHFF.Clone = new_instancemethod(_itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFF_Clone, None, itkTriangleThresholdCalculatorHFF)
itkTriangleThresholdCalculatorHFF_swigregister = _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFF_swigregister
itkTriangleThresholdCalculatorHFF_swigregister(itkTriangleThresholdCalculatorHFF)

def itkTriangleThresholdCalculatorHFF___New_orig__() -> "itkTriangleThresholdCalculatorHFF_Pointer":
    """itkTriangleThresholdCalculatorHFF___New_orig__() -> itkTriangleThresholdCalculatorHFF_Pointer"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFF___New_orig__()

def itkTriangleThresholdCalculatorHFF_cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHFF *":
    """itkTriangleThresholdCalculatorHFF_cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHFF"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFF_cast(obj)

class itkTriangleThresholdCalculatorHFSS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFSS):
    """Proxy of C++ itkTriangleThresholdCalculatorHFSS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdCalculatorHFSS_Pointer":
        """__New_orig__() -> itkTriangleThresholdCalculatorHFSS_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFSS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdCalculatorHFSS_Pointer":
        """Clone(itkTriangleThresholdCalculatorHFSS self) -> itkTriangleThresholdCalculatorHFSS_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFSS_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdCalculatorPython.delete_itkTriangleThresholdCalculatorHFSS

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHFSS *":
        """cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHFSS"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFSS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdCalculatorHFSS

        Create a new object of the class itkTriangleThresholdCalculatorHFSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdCalculatorHFSS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdCalculatorHFSS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdCalculatorHFSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdCalculatorHFSS.Clone = new_instancemethod(_itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFSS_Clone, None, itkTriangleThresholdCalculatorHFSS)
itkTriangleThresholdCalculatorHFSS_swigregister = _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFSS_swigregister
itkTriangleThresholdCalculatorHFSS_swigregister(itkTriangleThresholdCalculatorHFSS)

def itkTriangleThresholdCalculatorHFSS___New_orig__() -> "itkTriangleThresholdCalculatorHFSS_Pointer":
    """itkTriangleThresholdCalculatorHFSS___New_orig__() -> itkTriangleThresholdCalculatorHFSS_Pointer"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFSS___New_orig__()

def itkTriangleThresholdCalculatorHFSS_cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHFSS *":
    """itkTriangleThresholdCalculatorHFSS_cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHFSS"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFSS_cast(obj)

class itkTriangleThresholdCalculatorHFUC(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUC):
    """Proxy of C++ itkTriangleThresholdCalculatorHFUC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdCalculatorHFUC_Pointer":
        """__New_orig__() -> itkTriangleThresholdCalculatorHFUC_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdCalculatorHFUC_Pointer":
        """Clone(itkTriangleThresholdCalculatorHFUC self) -> itkTriangleThresholdCalculatorHFUC_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUC_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdCalculatorPython.delete_itkTriangleThresholdCalculatorHFUC

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHFUC *":
        """cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHFUC"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdCalculatorHFUC

        Create a new object of the class itkTriangleThresholdCalculatorHFUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdCalculatorHFUC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdCalculatorHFUC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdCalculatorHFUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdCalculatorHFUC.Clone = new_instancemethod(_itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUC_Clone, None, itkTriangleThresholdCalculatorHFUC)
itkTriangleThresholdCalculatorHFUC_swigregister = _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUC_swigregister
itkTriangleThresholdCalculatorHFUC_swigregister(itkTriangleThresholdCalculatorHFUC)

def itkTriangleThresholdCalculatorHFUC___New_orig__() -> "itkTriangleThresholdCalculatorHFUC_Pointer":
    """itkTriangleThresholdCalculatorHFUC___New_orig__() -> itkTriangleThresholdCalculatorHFUC_Pointer"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUC___New_orig__()

def itkTriangleThresholdCalculatorHFUC_cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHFUC *":
    """itkTriangleThresholdCalculatorHFUC_cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHFUC"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUC_cast(obj)

class itkTriangleThresholdCalculatorHFUS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUS):
    """Proxy of C++ itkTriangleThresholdCalculatorHFUS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdCalculatorHFUS_Pointer":
        """__New_orig__() -> itkTriangleThresholdCalculatorHFUS_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdCalculatorHFUS_Pointer":
        """Clone(itkTriangleThresholdCalculatorHFUS self) -> itkTriangleThresholdCalculatorHFUS_Pointer"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUS_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdCalculatorPython.delete_itkTriangleThresholdCalculatorHFUS

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHFUS *":
        """cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHFUS"""
        return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdCalculatorHFUS

        Create a new object of the class itkTriangleThresholdCalculatorHFUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdCalculatorHFUS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdCalculatorHFUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdCalculatorHFUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdCalculatorHFUS.Clone = new_instancemethod(_itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUS_Clone, None, itkTriangleThresholdCalculatorHFUS)
itkTriangleThresholdCalculatorHFUS_swigregister = _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUS_swigregister
itkTriangleThresholdCalculatorHFUS_swigregister(itkTriangleThresholdCalculatorHFUS)

def itkTriangleThresholdCalculatorHFUS___New_orig__() -> "itkTriangleThresholdCalculatorHFUS_Pointer":
    """itkTriangleThresholdCalculatorHFUS___New_orig__() -> itkTriangleThresholdCalculatorHFUS_Pointer"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUS___New_orig__()

def itkTriangleThresholdCalculatorHFUS_cast(obj: 'itkLightObject') -> "itkTriangleThresholdCalculatorHFUS *":
    """itkTriangleThresholdCalculatorHFUS_cast(itkLightObject obj) -> itkTriangleThresholdCalculatorHFUS"""
    return _itkTriangleThresholdCalculatorPython.itkTriangleThresholdCalculatorHFUS_cast(obj)


def triangle_threshold_calculator(*args, **kwargs):
    """Procedural interface for TriangleThresholdCalculator"""
    import itk
    instance = itk.TriangleThresholdCalculator.New(*args, **kwargs)
    return instance.__internal_call__()

def triangle_threshold_calculator_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.TriangleThresholdCalculator, itkTemplate.itkTemplate):
        triangle_threshold_calculator.__doc__ = itk.TriangleThresholdCalculator.values()[0].__doc__
    else:
        triangle_threshold_calculator.__doc__ = itk.TriangleThresholdCalculator.__doc__




