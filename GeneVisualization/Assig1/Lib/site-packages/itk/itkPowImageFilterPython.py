# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkPowImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkPowImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkPowImageFilterPython
            return _itkPowImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkPowImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkPowImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkPowImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkBinaryGeneratorImageFilterPython
import itkInPlaceImageFilterBPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkSimpleDataObjectDecoratorPython
import itkArrayPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython

def itkPowImageFilterIF3IF3IF3_New():
  return itkPowImageFilterIF3IF3IF3.New()


def itkPowImageFilterIF2IF2IF2_New():
  return itkPowImageFilterIF2IF2IF2.New()


def itkPowImageFilterIUS3IUS3IUS3_New():
  return itkPowImageFilterIUS3IUS3IUS3.New()


def itkPowImageFilterIUS2IUS2IUS2_New():
  return itkPowImageFilterIUS2IUS2IUS2.New()


def itkPowImageFilterIUC3IUC3IUC3_New():
  return itkPowImageFilterIUC3IUC3IUC3.New()


def itkPowImageFilterIUC2IUC2IUC2_New():
  return itkPowImageFilterIUC2IUC2IUC2.New()


def itkPowImageFilterISS3ISS3ISS3_New():
  return itkPowImageFilterISS3ISS3ISS3.New()


def itkPowImageFilterISS2ISS2ISS2_New():
  return itkPowImageFilterISS2ISS2ISS2.New()

class itkPowImageFilterIF2IF2IF2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2):
    """Proxy of C++ itkPowImageFilterIF2IF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPowImageFilterIF2IF2IF2_Pointer":
        """__New_orig__() -> itkPowImageFilterIF2IF2IF2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIF2IF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPowImageFilterIF2IF2IF2_Pointer":
        """Clone(itkPowImageFilterIF2IF2IF2 self) -> itkPowImageFilterIF2IF2IF2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIF2IF2IF2_Clone(self)

    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIF2IF2IF2

    def cast(obj: 'itkLightObject') -> "itkPowImageFilterIF2IF2IF2 *":
        """cast(itkLightObject obj) -> itkPowImageFilterIF2IF2IF2"""
        return _itkPowImageFilterPython.itkPowImageFilterIF2IF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIF2IF2IF2

        Create a new object of the class itkPowImageFilterIF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIF2IF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIF2IF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPowImageFilterIF2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPowImageFilterIF2IF2IF2.Clone = new_instancemethod(_itkPowImageFilterPython.itkPowImageFilterIF2IF2IF2_Clone, None, itkPowImageFilterIF2IF2IF2)
itkPowImageFilterIF2IF2IF2_swigregister = _itkPowImageFilterPython.itkPowImageFilterIF2IF2IF2_swigregister
itkPowImageFilterIF2IF2IF2_swigregister(itkPowImageFilterIF2IF2IF2)

def itkPowImageFilterIF2IF2IF2___New_orig__() -> "itkPowImageFilterIF2IF2IF2_Pointer":
    """itkPowImageFilterIF2IF2IF2___New_orig__() -> itkPowImageFilterIF2IF2IF2_Pointer"""
    return _itkPowImageFilterPython.itkPowImageFilterIF2IF2IF2___New_orig__()

def itkPowImageFilterIF2IF2IF2_cast(obj: 'itkLightObject') -> "itkPowImageFilterIF2IF2IF2 *":
    """itkPowImageFilterIF2IF2IF2_cast(itkLightObject obj) -> itkPowImageFilterIF2IF2IF2"""
    return _itkPowImageFilterPython.itkPowImageFilterIF2IF2IF2_cast(obj)

class itkPowImageFilterIF3IF3IF3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3):
    """Proxy of C++ itkPowImageFilterIF3IF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPowImageFilterIF3IF3IF3_Pointer":
        """__New_orig__() -> itkPowImageFilterIF3IF3IF3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIF3IF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPowImageFilterIF3IF3IF3_Pointer":
        """Clone(itkPowImageFilterIF3IF3IF3 self) -> itkPowImageFilterIF3IF3IF3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIF3IF3IF3_Clone(self)

    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIF3IF3IF3

    def cast(obj: 'itkLightObject') -> "itkPowImageFilterIF3IF3IF3 *":
        """cast(itkLightObject obj) -> itkPowImageFilterIF3IF3IF3"""
        return _itkPowImageFilterPython.itkPowImageFilterIF3IF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIF3IF3IF3

        Create a new object of the class itkPowImageFilterIF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIF3IF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIF3IF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPowImageFilterIF3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPowImageFilterIF3IF3IF3.Clone = new_instancemethod(_itkPowImageFilterPython.itkPowImageFilterIF3IF3IF3_Clone, None, itkPowImageFilterIF3IF3IF3)
itkPowImageFilterIF3IF3IF3_swigregister = _itkPowImageFilterPython.itkPowImageFilterIF3IF3IF3_swigregister
itkPowImageFilterIF3IF3IF3_swigregister(itkPowImageFilterIF3IF3IF3)

def itkPowImageFilterIF3IF3IF3___New_orig__() -> "itkPowImageFilterIF3IF3IF3_Pointer":
    """itkPowImageFilterIF3IF3IF3___New_orig__() -> itkPowImageFilterIF3IF3IF3_Pointer"""
    return _itkPowImageFilterPython.itkPowImageFilterIF3IF3IF3___New_orig__()

def itkPowImageFilterIF3IF3IF3_cast(obj: 'itkLightObject') -> "itkPowImageFilterIF3IF3IF3 *":
    """itkPowImageFilterIF3IF3IF3_cast(itkLightObject obj) -> itkPowImageFilterIF3IF3IF3"""
    return _itkPowImageFilterPython.itkPowImageFilterIF3IF3IF3_cast(obj)

class itkPowImageFilterISS2ISS2ISS2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2):
    """Proxy of C++ itkPowImageFilterISS2ISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPowImageFilterISS2ISS2ISS2_Pointer":
        """__New_orig__() -> itkPowImageFilterISS2ISS2ISS2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterISS2ISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPowImageFilterISS2ISS2ISS2_Pointer":
        """Clone(itkPowImageFilterISS2ISS2ISS2 self) -> itkPowImageFilterISS2ISS2ISS2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterISS2ISS2ISS2_Clone(self)

    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterISS2ISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkPowImageFilterISS2ISS2ISS2 *":
        """cast(itkLightObject obj) -> itkPowImageFilterISS2ISS2ISS2"""
        return _itkPowImageFilterPython.itkPowImageFilterISS2ISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterISS2ISS2ISS2

        Create a new object of the class itkPowImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterISS2ISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPowImageFilterISS2ISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPowImageFilterISS2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPowImageFilterISS2ISS2ISS2.Clone = new_instancemethod(_itkPowImageFilterPython.itkPowImageFilterISS2ISS2ISS2_Clone, None, itkPowImageFilterISS2ISS2ISS2)
itkPowImageFilterISS2ISS2ISS2_swigregister = _itkPowImageFilterPython.itkPowImageFilterISS2ISS2ISS2_swigregister
itkPowImageFilterISS2ISS2ISS2_swigregister(itkPowImageFilterISS2ISS2ISS2)

def itkPowImageFilterISS2ISS2ISS2___New_orig__() -> "itkPowImageFilterISS2ISS2ISS2_Pointer":
    """itkPowImageFilterISS2ISS2ISS2___New_orig__() -> itkPowImageFilterISS2ISS2ISS2_Pointer"""
    return _itkPowImageFilterPython.itkPowImageFilterISS2ISS2ISS2___New_orig__()

def itkPowImageFilterISS2ISS2ISS2_cast(obj: 'itkLightObject') -> "itkPowImageFilterISS2ISS2ISS2 *":
    """itkPowImageFilterISS2ISS2ISS2_cast(itkLightObject obj) -> itkPowImageFilterISS2ISS2ISS2"""
    return _itkPowImageFilterPython.itkPowImageFilterISS2ISS2ISS2_cast(obj)

class itkPowImageFilterISS3ISS3ISS3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3):
    """Proxy of C++ itkPowImageFilterISS3ISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPowImageFilterISS3ISS3ISS3_Pointer":
        """__New_orig__() -> itkPowImageFilterISS3ISS3ISS3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterISS3ISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPowImageFilterISS3ISS3ISS3_Pointer":
        """Clone(itkPowImageFilterISS3ISS3ISS3 self) -> itkPowImageFilterISS3ISS3ISS3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterISS3ISS3ISS3_Clone(self)

    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterISS3ISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkPowImageFilterISS3ISS3ISS3 *":
        """cast(itkLightObject obj) -> itkPowImageFilterISS3ISS3ISS3"""
        return _itkPowImageFilterPython.itkPowImageFilterISS3ISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterISS3ISS3ISS3

        Create a new object of the class itkPowImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterISS3ISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPowImageFilterISS3ISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPowImageFilterISS3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPowImageFilterISS3ISS3ISS3.Clone = new_instancemethod(_itkPowImageFilterPython.itkPowImageFilterISS3ISS3ISS3_Clone, None, itkPowImageFilterISS3ISS3ISS3)
itkPowImageFilterISS3ISS3ISS3_swigregister = _itkPowImageFilterPython.itkPowImageFilterISS3ISS3ISS3_swigregister
itkPowImageFilterISS3ISS3ISS3_swigregister(itkPowImageFilterISS3ISS3ISS3)

def itkPowImageFilterISS3ISS3ISS3___New_orig__() -> "itkPowImageFilterISS3ISS3ISS3_Pointer":
    """itkPowImageFilterISS3ISS3ISS3___New_orig__() -> itkPowImageFilterISS3ISS3ISS3_Pointer"""
    return _itkPowImageFilterPython.itkPowImageFilterISS3ISS3ISS3___New_orig__()

def itkPowImageFilterISS3ISS3ISS3_cast(obj: 'itkLightObject') -> "itkPowImageFilterISS3ISS3ISS3 *":
    """itkPowImageFilterISS3ISS3ISS3_cast(itkLightObject obj) -> itkPowImageFilterISS3ISS3ISS3"""
    return _itkPowImageFilterPython.itkPowImageFilterISS3ISS3ISS3_cast(obj)

class itkPowImageFilterIUC2IUC2IUC2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2):
    """Proxy of C++ itkPowImageFilterIUC2IUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPowImageFilterIUC2IUC2IUC2_Pointer":
        """__New_orig__() -> itkPowImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUC2IUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPowImageFilterIUC2IUC2IUC2_Pointer":
        """Clone(itkPowImageFilterIUC2IUC2IUC2 self) -> itkPowImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUC2IUC2IUC2_Clone(self)

    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIUC2IUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkPowImageFilterIUC2IUC2IUC2 *":
        """cast(itkLightObject obj) -> itkPowImageFilterIUC2IUC2IUC2"""
        return _itkPowImageFilterPython.itkPowImageFilterIUC2IUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIUC2IUC2IUC2

        Create a new object of the class itkPowImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIUC2IUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIUC2IUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPowImageFilterIUC2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPowImageFilterIUC2IUC2IUC2.Clone = new_instancemethod(_itkPowImageFilterPython.itkPowImageFilterIUC2IUC2IUC2_Clone, None, itkPowImageFilterIUC2IUC2IUC2)
itkPowImageFilterIUC2IUC2IUC2_swigregister = _itkPowImageFilterPython.itkPowImageFilterIUC2IUC2IUC2_swigregister
itkPowImageFilterIUC2IUC2IUC2_swigregister(itkPowImageFilterIUC2IUC2IUC2)

def itkPowImageFilterIUC2IUC2IUC2___New_orig__() -> "itkPowImageFilterIUC2IUC2IUC2_Pointer":
    """itkPowImageFilterIUC2IUC2IUC2___New_orig__() -> itkPowImageFilterIUC2IUC2IUC2_Pointer"""
    return _itkPowImageFilterPython.itkPowImageFilterIUC2IUC2IUC2___New_orig__()

def itkPowImageFilterIUC2IUC2IUC2_cast(obj: 'itkLightObject') -> "itkPowImageFilterIUC2IUC2IUC2 *":
    """itkPowImageFilterIUC2IUC2IUC2_cast(itkLightObject obj) -> itkPowImageFilterIUC2IUC2IUC2"""
    return _itkPowImageFilterPython.itkPowImageFilterIUC2IUC2IUC2_cast(obj)

class itkPowImageFilterIUC3IUC3IUC3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3):
    """Proxy of C++ itkPowImageFilterIUC3IUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPowImageFilterIUC3IUC3IUC3_Pointer":
        """__New_orig__() -> itkPowImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUC3IUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPowImageFilterIUC3IUC3IUC3_Pointer":
        """Clone(itkPowImageFilterIUC3IUC3IUC3 self) -> itkPowImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUC3IUC3IUC3_Clone(self)

    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIUC3IUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkPowImageFilterIUC3IUC3IUC3 *":
        """cast(itkLightObject obj) -> itkPowImageFilterIUC3IUC3IUC3"""
        return _itkPowImageFilterPython.itkPowImageFilterIUC3IUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIUC3IUC3IUC3

        Create a new object of the class itkPowImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIUC3IUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIUC3IUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPowImageFilterIUC3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPowImageFilterIUC3IUC3IUC3.Clone = new_instancemethod(_itkPowImageFilterPython.itkPowImageFilterIUC3IUC3IUC3_Clone, None, itkPowImageFilterIUC3IUC3IUC3)
itkPowImageFilterIUC3IUC3IUC3_swigregister = _itkPowImageFilterPython.itkPowImageFilterIUC3IUC3IUC3_swigregister
itkPowImageFilterIUC3IUC3IUC3_swigregister(itkPowImageFilterIUC3IUC3IUC3)

def itkPowImageFilterIUC3IUC3IUC3___New_orig__() -> "itkPowImageFilterIUC3IUC3IUC3_Pointer":
    """itkPowImageFilterIUC3IUC3IUC3___New_orig__() -> itkPowImageFilterIUC3IUC3IUC3_Pointer"""
    return _itkPowImageFilterPython.itkPowImageFilterIUC3IUC3IUC3___New_orig__()

def itkPowImageFilterIUC3IUC3IUC3_cast(obj: 'itkLightObject') -> "itkPowImageFilterIUC3IUC3IUC3 *":
    """itkPowImageFilterIUC3IUC3IUC3_cast(itkLightObject obj) -> itkPowImageFilterIUC3IUC3IUC3"""
    return _itkPowImageFilterPython.itkPowImageFilterIUC3IUC3IUC3_cast(obj)

class itkPowImageFilterIUS2IUS2IUS2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2):
    """Proxy of C++ itkPowImageFilterIUS2IUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPowImageFilterIUS2IUS2IUS2_Pointer":
        """__New_orig__() -> itkPowImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUS2IUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPowImageFilterIUS2IUS2IUS2_Pointer":
        """Clone(itkPowImageFilterIUS2IUS2IUS2 self) -> itkPowImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUS2IUS2IUS2_Clone(self)

    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIUS2IUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkPowImageFilterIUS2IUS2IUS2 *":
        """cast(itkLightObject obj) -> itkPowImageFilterIUS2IUS2IUS2"""
        return _itkPowImageFilterPython.itkPowImageFilterIUS2IUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIUS2IUS2IUS2

        Create a new object of the class itkPowImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIUS2IUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIUS2IUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPowImageFilterIUS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPowImageFilterIUS2IUS2IUS2.Clone = new_instancemethod(_itkPowImageFilterPython.itkPowImageFilterIUS2IUS2IUS2_Clone, None, itkPowImageFilterIUS2IUS2IUS2)
itkPowImageFilterIUS2IUS2IUS2_swigregister = _itkPowImageFilterPython.itkPowImageFilterIUS2IUS2IUS2_swigregister
itkPowImageFilterIUS2IUS2IUS2_swigregister(itkPowImageFilterIUS2IUS2IUS2)

def itkPowImageFilterIUS2IUS2IUS2___New_orig__() -> "itkPowImageFilterIUS2IUS2IUS2_Pointer":
    """itkPowImageFilterIUS2IUS2IUS2___New_orig__() -> itkPowImageFilterIUS2IUS2IUS2_Pointer"""
    return _itkPowImageFilterPython.itkPowImageFilterIUS2IUS2IUS2___New_orig__()

def itkPowImageFilterIUS2IUS2IUS2_cast(obj: 'itkLightObject') -> "itkPowImageFilterIUS2IUS2IUS2 *":
    """itkPowImageFilterIUS2IUS2IUS2_cast(itkLightObject obj) -> itkPowImageFilterIUS2IUS2IUS2"""
    return _itkPowImageFilterPython.itkPowImageFilterIUS2IUS2IUS2_cast(obj)

class itkPowImageFilterIUS3IUS3IUS3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3):
    """Proxy of C++ itkPowImageFilterIUS3IUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPowImageFilterIUS3IUS3IUS3_Pointer":
        """__New_orig__() -> itkPowImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUS3IUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPowImageFilterIUS3IUS3IUS3_Pointer":
        """Clone(itkPowImageFilterIUS3IUS3IUS3 self) -> itkPowImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUS3IUS3IUS3_Clone(self)

    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIUS3IUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkPowImageFilterIUS3IUS3IUS3 *":
        """cast(itkLightObject obj) -> itkPowImageFilterIUS3IUS3IUS3"""
        return _itkPowImageFilterPython.itkPowImageFilterIUS3IUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIUS3IUS3IUS3

        Create a new object of the class itkPowImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIUS3IUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIUS3IUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPowImageFilterIUS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPowImageFilterIUS3IUS3IUS3.Clone = new_instancemethod(_itkPowImageFilterPython.itkPowImageFilterIUS3IUS3IUS3_Clone, None, itkPowImageFilterIUS3IUS3IUS3)
itkPowImageFilterIUS3IUS3IUS3_swigregister = _itkPowImageFilterPython.itkPowImageFilterIUS3IUS3IUS3_swigregister
itkPowImageFilterIUS3IUS3IUS3_swigregister(itkPowImageFilterIUS3IUS3IUS3)

def itkPowImageFilterIUS3IUS3IUS3___New_orig__() -> "itkPowImageFilterIUS3IUS3IUS3_Pointer":
    """itkPowImageFilterIUS3IUS3IUS3___New_orig__() -> itkPowImageFilterIUS3IUS3IUS3_Pointer"""
    return _itkPowImageFilterPython.itkPowImageFilterIUS3IUS3IUS3___New_orig__()

def itkPowImageFilterIUS3IUS3IUS3_cast(obj: 'itkLightObject') -> "itkPowImageFilterIUS3IUS3IUS3 *":
    """itkPowImageFilterIUS3IUS3IUS3_cast(itkLightObject obj) -> itkPowImageFilterIUS3IUS3IUS3"""
    return _itkPowImageFilterPython.itkPowImageFilterIUS3IUS3IUS3_cast(obj)


def pow_image_filter(*args, **kwargs):
    """Procedural interface for PowImageFilter"""
    import itk
    instance = itk.PowImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def pow_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.PowImageFilter, itkTemplate.itkTemplate):
        pow_image_filter.__doc__ = itk.PowImageFilter.values()[0].__doc__
    else:
        pow_image_filter.__doc__ = itk.PowImageFilter.__doc__




