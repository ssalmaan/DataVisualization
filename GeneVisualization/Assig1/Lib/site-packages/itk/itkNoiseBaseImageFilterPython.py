# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkNoiseBaseImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkNoiseBaseImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkNoiseBaseImageFilterPython
            return _itkNoiseBaseImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkNoiseBaseImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkNoiseBaseImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkNoiseBaseImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython

def itkNoiseBaseImageFilterIF3IF3_New():
  return itkNoiseBaseImageFilterIF3IF3.New()


def itkNoiseBaseImageFilterIF2IF2_New():
  return itkNoiseBaseImageFilterIF2IF2.New()


def itkNoiseBaseImageFilterIUS3IUS3_New():
  return itkNoiseBaseImageFilterIUS3IUS3.New()


def itkNoiseBaseImageFilterIUS2IUS2_New():
  return itkNoiseBaseImageFilterIUS2IUS2.New()


def itkNoiseBaseImageFilterIUC3IUC3_New():
  return itkNoiseBaseImageFilterIUC3IUC3.New()


def itkNoiseBaseImageFilterIUC2IUC2_New():
  return itkNoiseBaseImageFilterIUC2IUC2.New()


def itkNoiseBaseImageFilterISS3ISS3_New():
  return itkNoiseBaseImageFilterISS3ISS3.New()


def itkNoiseBaseImageFilterISS2ISS2_New():
  return itkNoiseBaseImageFilterISS2ISS2.New()

class itkNoiseBaseImageFilterIF2IF2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkNoiseBaseImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self) -> "unsigned int":
        """GetSeed(itkNoiseBaseImageFilterIF2IF2 self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF2IF2_GetSeed(self)


    def SetSeed(self, *args) -> "void":
        """
        SetSeed(itkNoiseBaseImageFilterIF2IF2 self, unsigned int const _arg)
        SetSeed(itkNoiseBaseImageFilterIF2IF2 self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF2IF2_SetSeed(self, *args)

    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkNoiseBaseImageFilterIF2IF2"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNoiseBaseImageFilterIF2IF2

        Create a new object of the class itkNoiseBaseImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseBaseImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNoiseBaseImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNoiseBaseImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNoiseBaseImageFilterIF2IF2.GetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF2IF2_GetSeed, None, itkNoiseBaseImageFilterIF2IF2)
itkNoiseBaseImageFilterIF2IF2.SetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF2IF2_SetSeed, None, itkNoiseBaseImageFilterIF2IF2)
itkNoiseBaseImageFilterIF2IF2_swigregister = _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF2IF2_swigregister
itkNoiseBaseImageFilterIF2IF2_swigregister(itkNoiseBaseImageFilterIF2IF2)

def itkNoiseBaseImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterIF2IF2 *":
    """itkNoiseBaseImageFilterIF2IF2_cast(itkLightObject obj) -> itkNoiseBaseImageFilterIF2IF2"""
    return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF2IF2_cast(obj)

class itkNoiseBaseImageFilterIF3IF3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkNoiseBaseImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self) -> "unsigned int":
        """GetSeed(itkNoiseBaseImageFilterIF3IF3 self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF3IF3_GetSeed(self)


    def SetSeed(self, *args) -> "void":
        """
        SetSeed(itkNoiseBaseImageFilterIF3IF3 self, unsigned int const _arg)
        SetSeed(itkNoiseBaseImageFilterIF3IF3 self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF3IF3_SetSeed(self, *args)

    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkNoiseBaseImageFilterIF3IF3"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNoiseBaseImageFilterIF3IF3

        Create a new object of the class itkNoiseBaseImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseBaseImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNoiseBaseImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNoiseBaseImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNoiseBaseImageFilterIF3IF3.GetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF3IF3_GetSeed, None, itkNoiseBaseImageFilterIF3IF3)
itkNoiseBaseImageFilterIF3IF3.SetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF3IF3_SetSeed, None, itkNoiseBaseImageFilterIF3IF3)
itkNoiseBaseImageFilterIF3IF3_swigregister = _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF3IF3_swigregister
itkNoiseBaseImageFilterIF3IF3_swigregister(itkNoiseBaseImageFilterIF3IF3)

def itkNoiseBaseImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterIF3IF3 *":
    """itkNoiseBaseImageFilterIF3IF3_cast(itkLightObject obj) -> itkNoiseBaseImageFilterIF3IF3"""
    return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF3IF3_cast(obj)

class itkNoiseBaseImageFilterISS2ISS2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    """Proxy of C++ itkNoiseBaseImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self) -> "unsigned int":
        """GetSeed(itkNoiseBaseImageFilterISS2ISS2 self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS2ISS2_GetSeed(self)


    def SetSeed(self, *args) -> "void":
        """
        SetSeed(itkNoiseBaseImageFilterISS2ISS2 self, unsigned int const _arg)
        SetSeed(itkNoiseBaseImageFilterISS2ISS2 self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS2ISS2_SetSeed(self, *args)

    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkNoiseBaseImageFilterISS2ISS2"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNoiseBaseImageFilterISS2ISS2

        Create a new object of the class itkNoiseBaseImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseBaseImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNoiseBaseImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNoiseBaseImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNoiseBaseImageFilterISS2ISS2.GetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS2ISS2_GetSeed, None, itkNoiseBaseImageFilterISS2ISS2)
itkNoiseBaseImageFilterISS2ISS2.SetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS2ISS2_SetSeed, None, itkNoiseBaseImageFilterISS2ISS2)
itkNoiseBaseImageFilterISS2ISS2_swigregister = _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS2ISS2_swigregister
itkNoiseBaseImageFilterISS2ISS2_swigregister(itkNoiseBaseImageFilterISS2ISS2)

def itkNoiseBaseImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterISS2ISS2 *":
    """itkNoiseBaseImageFilterISS2ISS2_cast(itkLightObject obj) -> itkNoiseBaseImageFilterISS2ISS2"""
    return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS2ISS2_cast(obj)

class itkNoiseBaseImageFilterISS3ISS3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    """Proxy of C++ itkNoiseBaseImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self) -> "unsigned int":
        """GetSeed(itkNoiseBaseImageFilterISS3ISS3 self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS3ISS3_GetSeed(self)


    def SetSeed(self, *args) -> "void":
        """
        SetSeed(itkNoiseBaseImageFilterISS3ISS3 self, unsigned int const _arg)
        SetSeed(itkNoiseBaseImageFilterISS3ISS3 self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS3ISS3_SetSeed(self, *args)

    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkNoiseBaseImageFilterISS3ISS3"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNoiseBaseImageFilterISS3ISS3

        Create a new object of the class itkNoiseBaseImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseBaseImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNoiseBaseImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNoiseBaseImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNoiseBaseImageFilterISS3ISS3.GetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS3ISS3_GetSeed, None, itkNoiseBaseImageFilterISS3ISS3)
itkNoiseBaseImageFilterISS3ISS3.SetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS3ISS3_SetSeed, None, itkNoiseBaseImageFilterISS3ISS3)
itkNoiseBaseImageFilterISS3ISS3_swigregister = _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS3ISS3_swigregister
itkNoiseBaseImageFilterISS3ISS3_swigregister(itkNoiseBaseImageFilterISS3ISS3)

def itkNoiseBaseImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterISS3ISS3 *":
    """itkNoiseBaseImageFilterISS3ISS3_cast(itkLightObject obj) -> itkNoiseBaseImageFilterISS3ISS3"""
    return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS3ISS3_cast(obj)

class itkNoiseBaseImageFilterIUC2IUC2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkNoiseBaseImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self) -> "unsigned int":
        """GetSeed(itkNoiseBaseImageFilterIUC2IUC2 self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC2IUC2_GetSeed(self)


    def SetSeed(self, *args) -> "void":
        """
        SetSeed(itkNoiseBaseImageFilterIUC2IUC2 self, unsigned int const _arg)
        SetSeed(itkNoiseBaseImageFilterIUC2IUC2 self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC2IUC2_SetSeed(self, *args)

    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkNoiseBaseImageFilterIUC2IUC2"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNoiseBaseImageFilterIUC2IUC2

        Create a new object of the class itkNoiseBaseImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseBaseImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNoiseBaseImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNoiseBaseImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNoiseBaseImageFilterIUC2IUC2.GetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC2IUC2_GetSeed, None, itkNoiseBaseImageFilterIUC2IUC2)
itkNoiseBaseImageFilterIUC2IUC2.SetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC2IUC2_SetSeed, None, itkNoiseBaseImageFilterIUC2IUC2)
itkNoiseBaseImageFilterIUC2IUC2_swigregister = _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC2IUC2_swigregister
itkNoiseBaseImageFilterIUC2IUC2_swigregister(itkNoiseBaseImageFilterIUC2IUC2)

def itkNoiseBaseImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterIUC2IUC2 *":
    """itkNoiseBaseImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkNoiseBaseImageFilterIUC2IUC2"""
    return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC2IUC2_cast(obj)

class itkNoiseBaseImageFilterIUC3IUC3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkNoiseBaseImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self) -> "unsigned int":
        """GetSeed(itkNoiseBaseImageFilterIUC3IUC3 self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC3IUC3_GetSeed(self)


    def SetSeed(self, *args) -> "void":
        """
        SetSeed(itkNoiseBaseImageFilterIUC3IUC3 self, unsigned int const _arg)
        SetSeed(itkNoiseBaseImageFilterIUC3IUC3 self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC3IUC3_SetSeed(self, *args)

    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkNoiseBaseImageFilterIUC3IUC3"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNoiseBaseImageFilterIUC3IUC3

        Create a new object of the class itkNoiseBaseImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseBaseImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNoiseBaseImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNoiseBaseImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNoiseBaseImageFilterIUC3IUC3.GetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC3IUC3_GetSeed, None, itkNoiseBaseImageFilterIUC3IUC3)
itkNoiseBaseImageFilterIUC3IUC3.SetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC3IUC3_SetSeed, None, itkNoiseBaseImageFilterIUC3IUC3)
itkNoiseBaseImageFilterIUC3IUC3_swigregister = _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC3IUC3_swigregister
itkNoiseBaseImageFilterIUC3IUC3_swigregister(itkNoiseBaseImageFilterIUC3IUC3)

def itkNoiseBaseImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterIUC3IUC3 *":
    """itkNoiseBaseImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkNoiseBaseImageFilterIUC3IUC3"""
    return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC3IUC3_cast(obj)

class itkNoiseBaseImageFilterIUS2IUS2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkNoiseBaseImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self) -> "unsigned int":
        """GetSeed(itkNoiseBaseImageFilterIUS2IUS2 self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS2IUS2_GetSeed(self)


    def SetSeed(self, *args) -> "void":
        """
        SetSeed(itkNoiseBaseImageFilterIUS2IUS2 self, unsigned int const _arg)
        SetSeed(itkNoiseBaseImageFilterIUS2IUS2 self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS2IUS2_SetSeed(self, *args)

    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkNoiseBaseImageFilterIUS2IUS2"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNoiseBaseImageFilterIUS2IUS2

        Create a new object of the class itkNoiseBaseImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseBaseImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNoiseBaseImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNoiseBaseImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNoiseBaseImageFilterIUS2IUS2.GetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS2IUS2_GetSeed, None, itkNoiseBaseImageFilterIUS2IUS2)
itkNoiseBaseImageFilterIUS2IUS2.SetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS2IUS2_SetSeed, None, itkNoiseBaseImageFilterIUS2IUS2)
itkNoiseBaseImageFilterIUS2IUS2_swigregister = _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS2IUS2_swigregister
itkNoiseBaseImageFilterIUS2IUS2_swigregister(itkNoiseBaseImageFilterIUS2IUS2)

def itkNoiseBaseImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterIUS2IUS2 *":
    """itkNoiseBaseImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkNoiseBaseImageFilterIUS2IUS2"""
    return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS2IUS2_cast(obj)

class itkNoiseBaseImageFilterIUS3IUS3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkNoiseBaseImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self) -> "unsigned int":
        """GetSeed(itkNoiseBaseImageFilterIUS3IUS3 self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS3IUS3_GetSeed(self)


    def SetSeed(self, *args) -> "void":
        """
        SetSeed(itkNoiseBaseImageFilterIUS3IUS3 self, unsigned int const _arg)
        SetSeed(itkNoiseBaseImageFilterIUS3IUS3 self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS3IUS3_SetSeed(self, *args)

    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkNoiseBaseImageFilterIUS3IUS3"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNoiseBaseImageFilterIUS3IUS3

        Create a new object of the class itkNoiseBaseImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseBaseImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNoiseBaseImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNoiseBaseImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNoiseBaseImageFilterIUS3IUS3.GetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS3IUS3_GetSeed, None, itkNoiseBaseImageFilterIUS3IUS3)
itkNoiseBaseImageFilterIUS3IUS3.SetSeed = new_instancemethod(_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS3IUS3_SetSeed, None, itkNoiseBaseImageFilterIUS3IUS3)
itkNoiseBaseImageFilterIUS3IUS3_swigregister = _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS3IUS3_swigregister
itkNoiseBaseImageFilterIUS3IUS3_swigregister(itkNoiseBaseImageFilterIUS3IUS3)

def itkNoiseBaseImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkNoiseBaseImageFilterIUS3IUS3 *":
    """itkNoiseBaseImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkNoiseBaseImageFilterIUS3IUS3"""
    return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS3IUS3_cast(obj)


def noise_base_image_filter(*args, **kwargs):
    """Procedural interface for NoiseBaseImageFilter"""
    import itk
    instance = itk.NoiseBaseImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def noise_base_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.NoiseBaseImageFilter, itkTemplate.itkTemplate):
        noise_base_image_filter.__doc__ = itk.NoiseBaseImageFilter.values()[0].__doc__
    else:
        noise_base_image_filter.__doc__ = itk.NoiseBaseImageFilter.__doc__




