# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkNearestNeighborInterpolateImageFunctionPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkNearestNeighborInterpolateImageFunctionPython', [dirname(__file__)])
        except ImportError:
            import _itkNearestNeighborInterpolateImageFunctionPython
            return _itkNearestNeighborInterpolateImageFunctionPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkNearestNeighborInterpolateImageFunctionPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkNearestNeighborInterpolateImageFunctionPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkNearestNeighborInterpolateImageFunctionPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSizePython
import pyBasePython
import ITKCommonBasePython
import itkContinuousIndexPython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkInterpolateImageFunctionPython
import itkImageFunctionBasePython
import itkFunctionBasePython
import itkArrayPython
import itkImagePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkRGBPixelPython
import itkRGBAPixelPython

def itkNearestNeighborInterpolateImageFunctionIF3D_New():
  return itkNearestNeighborInterpolateImageFunctionIF3D.New()


def itkNearestNeighborInterpolateImageFunctionIUS3D_New():
  return itkNearestNeighborInterpolateImageFunctionIUS3D.New()


def itkNearestNeighborInterpolateImageFunctionIUC3D_New():
  return itkNearestNeighborInterpolateImageFunctionIUC3D.New()


def itkNearestNeighborInterpolateImageFunctionISS3D_New():
  return itkNearestNeighborInterpolateImageFunctionISS3D.New()


def itkNearestNeighborInterpolateImageFunctionIF2D_New():
  return itkNearestNeighborInterpolateImageFunctionIF2D.New()


def itkNearestNeighborInterpolateImageFunctionIUS2D_New():
  return itkNearestNeighborInterpolateImageFunctionIUS2D.New()


def itkNearestNeighborInterpolateImageFunctionIUC2D_New():
  return itkNearestNeighborInterpolateImageFunctionIUC2D.New()


def itkNearestNeighborInterpolateImageFunctionISS2D_New():
  return itkNearestNeighborInterpolateImageFunctionISS2D.New()

class itkNearestNeighborInterpolateImageFunctionIF2D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIF2D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNearestNeighborInterpolateImageFunctionIF2D_Pointer":
        """__New_orig__() -> itkNearestNeighborInterpolateImageFunctionIF2D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNearestNeighborInterpolateImageFunctionIF2D_Pointer":
        """Clone(itkNearestNeighborInterpolateImageFunctionIF2D self) -> itkNearestNeighborInterpolateImageFunctionIF2D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D_Clone(self)

    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIF2D

    def cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionIF2D *":
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIF2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIF2D

        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIF2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNearestNeighborInterpolateImageFunctionIF2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNearestNeighborInterpolateImageFunctionIF2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIF2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIF2D.Clone = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D_Clone, None, itkNearestNeighborInterpolateImageFunctionIF2D)
itkNearestNeighborInterpolateImageFunctionIF2D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D_swigregister
itkNearestNeighborInterpolateImageFunctionIF2D_swigregister(itkNearestNeighborInterpolateImageFunctionIF2D)

def itkNearestNeighborInterpolateImageFunctionIF2D___New_orig__() -> "itkNearestNeighborInterpolateImageFunctionIF2D_Pointer":
    """itkNearestNeighborInterpolateImageFunctionIF2D___New_orig__() -> itkNearestNeighborInterpolateImageFunctionIF2D_Pointer"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIF2D_cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionIF2D *":
    """itkNearestNeighborInterpolateImageFunctionIF2D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIF2D"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D_cast(obj)

class itkNearestNeighborInterpolateImageFunctionIF3D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIF3D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNearestNeighborInterpolateImageFunctionIF3D_Pointer":
        """__New_orig__() -> itkNearestNeighborInterpolateImageFunctionIF3D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNearestNeighborInterpolateImageFunctionIF3D_Pointer":
        """Clone(itkNearestNeighborInterpolateImageFunctionIF3D self) -> itkNearestNeighborInterpolateImageFunctionIF3D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D_Clone(self)

    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIF3D

    def cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionIF3D *":
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIF3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIF3D

        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIF3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNearestNeighborInterpolateImageFunctionIF3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNearestNeighborInterpolateImageFunctionIF3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIF3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIF3D.Clone = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D_Clone, None, itkNearestNeighborInterpolateImageFunctionIF3D)
itkNearestNeighborInterpolateImageFunctionIF3D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D_swigregister
itkNearestNeighborInterpolateImageFunctionIF3D_swigregister(itkNearestNeighborInterpolateImageFunctionIF3D)

def itkNearestNeighborInterpolateImageFunctionIF3D___New_orig__() -> "itkNearestNeighborInterpolateImageFunctionIF3D_Pointer":
    """itkNearestNeighborInterpolateImageFunctionIF3D___New_orig__() -> itkNearestNeighborInterpolateImageFunctionIF3D_Pointer"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIF3D_cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionIF3D *":
    """itkNearestNeighborInterpolateImageFunctionIF3D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIF3D"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D_cast(obj)

class itkNearestNeighborInterpolateImageFunctionISS2D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionISS2D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNearestNeighborInterpolateImageFunctionISS2D_Pointer":
        """__New_orig__() -> itkNearestNeighborInterpolateImageFunctionISS2D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS2D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNearestNeighborInterpolateImageFunctionISS2D_Pointer":
        """Clone(itkNearestNeighborInterpolateImageFunctionISS2D self) -> itkNearestNeighborInterpolateImageFunctionISS2D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS2D_Clone(self)

    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionISS2D

    def cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionISS2D *":
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionISS2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS2D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionISS2D

        Create a new object of the class itkNearestNeighborInterpolateImageFunctionISS2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNearestNeighborInterpolateImageFunctionISS2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNearestNeighborInterpolateImageFunctionISS2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionISS2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionISS2D.Clone = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS2D_Clone, None, itkNearestNeighborInterpolateImageFunctionISS2D)
itkNearestNeighborInterpolateImageFunctionISS2D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS2D_swigregister
itkNearestNeighborInterpolateImageFunctionISS2D_swigregister(itkNearestNeighborInterpolateImageFunctionISS2D)

def itkNearestNeighborInterpolateImageFunctionISS2D___New_orig__() -> "itkNearestNeighborInterpolateImageFunctionISS2D_Pointer":
    """itkNearestNeighborInterpolateImageFunctionISS2D___New_orig__() -> itkNearestNeighborInterpolateImageFunctionISS2D_Pointer"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS2D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionISS2D_cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionISS2D *":
    """itkNearestNeighborInterpolateImageFunctionISS2D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionISS2D"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS2D_cast(obj)

class itkNearestNeighborInterpolateImageFunctionISS3D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionISS3D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNearestNeighborInterpolateImageFunctionISS3D_Pointer":
        """__New_orig__() -> itkNearestNeighborInterpolateImageFunctionISS3D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNearestNeighborInterpolateImageFunctionISS3D_Pointer":
        """Clone(itkNearestNeighborInterpolateImageFunctionISS3D self) -> itkNearestNeighborInterpolateImageFunctionISS3D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS3D_Clone(self)

    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionISS3D

    def cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionISS3D *":
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionISS3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS3D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionISS3D

        Create a new object of the class itkNearestNeighborInterpolateImageFunctionISS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNearestNeighborInterpolateImageFunctionISS3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNearestNeighborInterpolateImageFunctionISS3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionISS3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionISS3D.Clone = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS3D_Clone, None, itkNearestNeighborInterpolateImageFunctionISS3D)
itkNearestNeighborInterpolateImageFunctionISS3D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS3D_swigregister
itkNearestNeighborInterpolateImageFunctionISS3D_swigregister(itkNearestNeighborInterpolateImageFunctionISS3D)

def itkNearestNeighborInterpolateImageFunctionISS3D___New_orig__() -> "itkNearestNeighborInterpolateImageFunctionISS3D_Pointer":
    """itkNearestNeighborInterpolateImageFunctionISS3D___New_orig__() -> itkNearestNeighborInterpolateImageFunctionISS3D_Pointer"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS3D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionISS3D_cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionISS3D *":
    """itkNearestNeighborInterpolateImageFunctionISS3D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionISS3D"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionISS3D_cast(obj)

class itkNearestNeighborInterpolateImageFunctionIUC2D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIUC2D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNearestNeighborInterpolateImageFunctionIUC2D_Pointer":
        """__New_orig__() -> itkNearestNeighborInterpolateImageFunctionIUC2D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNearestNeighborInterpolateImageFunctionIUC2D_Pointer":
        """Clone(itkNearestNeighborInterpolateImageFunctionIUC2D self) -> itkNearestNeighborInterpolateImageFunctionIUC2D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D_Clone(self)

    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIUC2D

    def cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionIUC2D *":
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUC2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIUC2D

        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIUC2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNearestNeighborInterpolateImageFunctionIUC2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNearestNeighborInterpolateImageFunctionIUC2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIUC2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIUC2D.Clone = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D_Clone, None, itkNearestNeighborInterpolateImageFunctionIUC2D)
itkNearestNeighborInterpolateImageFunctionIUC2D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D_swigregister
itkNearestNeighborInterpolateImageFunctionIUC2D_swigregister(itkNearestNeighborInterpolateImageFunctionIUC2D)

def itkNearestNeighborInterpolateImageFunctionIUC2D___New_orig__() -> "itkNearestNeighborInterpolateImageFunctionIUC2D_Pointer":
    """itkNearestNeighborInterpolateImageFunctionIUC2D___New_orig__() -> itkNearestNeighborInterpolateImageFunctionIUC2D_Pointer"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIUC2D_cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionIUC2D *":
    """itkNearestNeighborInterpolateImageFunctionIUC2D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUC2D"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D_cast(obj)

class itkNearestNeighborInterpolateImageFunctionIUC3D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIUC3D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNearestNeighborInterpolateImageFunctionIUC3D_Pointer":
        """__New_orig__() -> itkNearestNeighborInterpolateImageFunctionIUC3D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNearestNeighborInterpolateImageFunctionIUC3D_Pointer":
        """Clone(itkNearestNeighborInterpolateImageFunctionIUC3D self) -> itkNearestNeighborInterpolateImageFunctionIUC3D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D_Clone(self)

    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIUC3D

    def cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionIUC3D *":
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUC3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIUC3D

        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIUC3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNearestNeighborInterpolateImageFunctionIUC3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNearestNeighborInterpolateImageFunctionIUC3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIUC3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIUC3D.Clone = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D_Clone, None, itkNearestNeighborInterpolateImageFunctionIUC3D)
itkNearestNeighborInterpolateImageFunctionIUC3D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D_swigregister
itkNearestNeighborInterpolateImageFunctionIUC3D_swigregister(itkNearestNeighborInterpolateImageFunctionIUC3D)

def itkNearestNeighborInterpolateImageFunctionIUC3D___New_orig__() -> "itkNearestNeighborInterpolateImageFunctionIUC3D_Pointer":
    """itkNearestNeighborInterpolateImageFunctionIUC3D___New_orig__() -> itkNearestNeighborInterpolateImageFunctionIUC3D_Pointer"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIUC3D_cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionIUC3D *":
    """itkNearestNeighborInterpolateImageFunctionIUC3D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUC3D"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D_cast(obj)

class itkNearestNeighborInterpolateImageFunctionIUS2D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIUS2D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNearestNeighborInterpolateImageFunctionIUS2D_Pointer":
        """__New_orig__() -> itkNearestNeighborInterpolateImageFunctionIUS2D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNearestNeighborInterpolateImageFunctionIUS2D_Pointer":
        """Clone(itkNearestNeighborInterpolateImageFunctionIUS2D self) -> itkNearestNeighborInterpolateImageFunctionIUS2D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D_Clone(self)

    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIUS2D

    def cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionIUS2D *":
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUS2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIUS2D

        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIUS2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNearestNeighborInterpolateImageFunctionIUS2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNearestNeighborInterpolateImageFunctionIUS2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIUS2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIUS2D.Clone = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D_Clone, None, itkNearestNeighborInterpolateImageFunctionIUS2D)
itkNearestNeighborInterpolateImageFunctionIUS2D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D_swigregister
itkNearestNeighborInterpolateImageFunctionIUS2D_swigregister(itkNearestNeighborInterpolateImageFunctionIUS2D)

def itkNearestNeighborInterpolateImageFunctionIUS2D___New_orig__() -> "itkNearestNeighborInterpolateImageFunctionIUS2D_Pointer":
    """itkNearestNeighborInterpolateImageFunctionIUS2D___New_orig__() -> itkNearestNeighborInterpolateImageFunctionIUS2D_Pointer"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIUS2D_cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionIUS2D *":
    """itkNearestNeighborInterpolateImageFunctionIUS2D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUS2D"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D_cast(obj)

class itkNearestNeighborInterpolateImageFunctionIUS3D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIUS3D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNearestNeighborInterpolateImageFunctionIUS3D_Pointer":
        """__New_orig__() -> itkNearestNeighborInterpolateImageFunctionIUS3D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNearestNeighborInterpolateImageFunctionIUS3D_Pointer":
        """Clone(itkNearestNeighborInterpolateImageFunctionIUS3D self) -> itkNearestNeighborInterpolateImageFunctionIUS3D_Pointer"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D_Clone(self)

    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIUS3D

    def cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionIUS3D *":
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUS3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIUS3D

        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIUS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNearestNeighborInterpolateImageFunctionIUS3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNearestNeighborInterpolateImageFunctionIUS3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIUS3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIUS3D.Clone = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D_Clone, None, itkNearestNeighborInterpolateImageFunctionIUS3D)
itkNearestNeighborInterpolateImageFunctionIUS3D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D_swigregister
itkNearestNeighborInterpolateImageFunctionIUS3D_swigregister(itkNearestNeighborInterpolateImageFunctionIUS3D)

def itkNearestNeighborInterpolateImageFunctionIUS3D___New_orig__() -> "itkNearestNeighborInterpolateImageFunctionIUS3D_Pointer":
    """itkNearestNeighborInterpolateImageFunctionIUS3D___New_orig__() -> itkNearestNeighborInterpolateImageFunctionIUS3D_Pointer"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIUS3D_cast(obj: 'itkLightObject') -> "itkNearestNeighborInterpolateImageFunctionIUS3D *":
    """itkNearestNeighborInterpolateImageFunctionIUS3D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUS3D"""
    return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D_cast(obj)



