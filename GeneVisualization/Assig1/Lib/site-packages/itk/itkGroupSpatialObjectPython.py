# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkGroupSpatialObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkGroupSpatialObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkGroupSpatialObjectPython
            return _itkGroupSpatialObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkGroupSpatialObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkGroupSpatialObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkGroupSpatialObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSpatialObjectBasePython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import vnl_vector_refPython
import itkFixedArrayPython
import itkCovariantVectorPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import ITKCommonBasePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkPointPython
import itkVectorContainerPython
import itkOffsetPython
import itkSizePython
import itkContinuousIndexPython
import itkIndexPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkImageRegionPython
import itkAffineTransformPython
import itkTransformBasePython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkSymmetricSecondRankTensorPython
import itkDiffusionTensor3DPython
import itkMatrixOffsetTransformBasePython

def itkGroupSpatialObject3_New():
  return itkGroupSpatialObject3.New()


def itkGroupSpatialObject2_New():
  return itkGroupSpatialObject2.New()

class itkGroupSpatialObject2(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkGroupSpatialObject2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGroupSpatialObject2_Pointer":
        """__New_orig__() -> itkGroupSpatialObject2_Pointer"""
        return _itkGroupSpatialObjectPython.itkGroupSpatialObject2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGroupSpatialObject2_Pointer":
        """Clone(itkGroupSpatialObject2 self) -> itkGroupSpatialObject2_Pointer"""
        return _itkGroupSpatialObjectPython.itkGroupSpatialObject2_Clone(self)

    __swig_destroy__ = _itkGroupSpatialObjectPython.delete_itkGroupSpatialObject2

    def cast(obj: 'itkLightObject') -> "itkGroupSpatialObject2 *":
        """cast(itkLightObject obj) -> itkGroupSpatialObject2"""
        return _itkGroupSpatialObjectPython.itkGroupSpatialObject2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGroupSpatialObject2

        Create a new object of the class itkGroupSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGroupSpatialObject2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGroupSpatialObject2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGroupSpatialObject2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGroupSpatialObject2.Clone = new_instancemethod(_itkGroupSpatialObjectPython.itkGroupSpatialObject2_Clone, None, itkGroupSpatialObject2)
itkGroupSpatialObject2_swigregister = _itkGroupSpatialObjectPython.itkGroupSpatialObject2_swigregister
itkGroupSpatialObject2_swigregister(itkGroupSpatialObject2)

def itkGroupSpatialObject2___New_orig__() -> "itkGroupSpatialObject2_Pointer":
    """itkGroupSpatialObject2___New_orig__() -> itkGroupSpatialObject2_Pointer"""
    return _itkGroupSpatialObjectPython.itkGroupSpatialObject2___New_orig__()

def itkGroupSpatialObject2_cast(obj: 'itkLightObject') -> "itkGroupSpatialObject2 *":
    """itkGroupSpatialObject2_cast(itkLightObject obj) -> itkGroupSpatialObject2"""
    return _itkGroupSpatialObjectPython.itkGroupSpatialObject2_cast(obj)

class itkGroupSpatialObject3(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkGroupSpatialObject3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGroupSpatialObject3_Pointer":
        """__New_orig__() -> itkGroupSpatialObject3_Pointer"""
        return _itkGroupSpatialObjectPython.itkGroupSpatialObject3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGroupSpatialObject3_Pointer":
        """Clone(itkGroupSpatialObject3 self) -> itkGroupSpatialObject3_Pointer"""
        return _itkGroupSpatialObjectPython.itkGroupSpatialObject3_Clone(self)

    __swig_destroy__ = _itkGroupSpatialObjectPython.delete_itkGroupSpatialObject3

    def cast(obj: 'itkLightObject') -> "itkGroupSpatialObject3 *":
        """cast(itkLightObject obj) -> itkGroupSpatialObject3"""
        return _itkGroupSpatialObjectPython.itkGroupSpatialObject3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGroupSpatialObject3

        Create a new object of the class itkGroupSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGroupSpatialObject3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGroupSpatialObject3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGroupSpatialObject3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGroupSpatialObject3.Clone = new_instancemethod(_itkGroupSpatialObjectPython.itkGroupSpatialObject3_Clone, None, itkGroupSpatialObject3)
itkGroupSpatialObject3_swigregister = _itkGroupSpatialObjectPython.itkGroupSpatialObject3_swigregister
itkGroupSpatialObject3_swigregister(itkGroupSpatialObject3)

def itkGroupSpatialObject3___New_orig__() -> "itkGroupSpatialObject3_Pointer":
    """itkGroupSpatialObject3___New_orig__() -> itkGroupSpatialObject3_Pointer"""
    return _itkGroupSpatialObjectPython.itkGroupSpatialObject3___New_orig__()

def itkGroupSpatialObject3_cast(obj: 'itkLightObject') -> "itkGroupSpatialObject3 *":
    """itkGroupSpatialObject3_cast(itkLightObject obj) -> itkGroupSpatialObject3"""
    return _itkGroupSpatialObjectPython.itkGroupSpatialObject3_cast(obj)



