# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _ITKIOImageBaseBasePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ITKIOImageBaseBasePython', [dirname(__file__)])
        except ImportError:
            import _ITKIOImageBaseBasePython
            return _ITKIOImageBaseBasePython
        if fp is not None:
            try:
                _mod = imp.load_module('_ITKIOImageBaseBasePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ITKIOImageBaseBasePython = swig_import_helper()
    del swig_import_helper
else:
    import _ITKIOImageBaseBasePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import ITKCommonBasePython

def itkRegularExpressionSeriesFileNames_New():
  return itkRegularExpressionSeriesFileNames.New()


def itkNumericSeriesFileNames_New():
  return itkNumericSeriesFileNames.New()


def itkArchetypeSeriesFileNames_New():
  return itkArchetypeSeriesFileNames.New()


def itkStreamingImageIOBase_New():
  return itkStreamingImageIOBase.New()


def itkImageIOBase_New():
  return itkImageIOBase.New()

class itkArchetypeSeriesFileNames(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkArchetypeSeriesFileNames class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkArchetypeSeriesFileNames_Pointer":
        """__New_orig__() -> itkArchetypeSeriesFileNames_Pointer"""
        return _ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkArchetypeSeriesFileNames_Pointer":
        """Clone(itkArchetypeSeriesFileNames self) -> itkArchetypeSeriesFileNames_Pointer"""
        return _ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames_Clone(self)


    def SetArchetype(self, archetype: 'std::string const &') -> "void":
        """SetArchetype(itkArchetypeSeriesFileNames self, std::string const & archetype)"""
        return _ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames_SetArchetype(self, archetype)


    def GetArchetype(self) -> "char const *":
        """GetArchetype(itkArchetypeSeriesFileNames self) -> char const *"""
        return _ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames_GetArchetype(self)


    def GetNumberOfGroupings(self) -> "unsigned long long":
        """GetNumberOfGroupings(itkArchetypeSeriesFileNames self) -> unsigned long long"""
        return _ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames_GetNumberOfGroupings(self)


    def GetFileNames(self, group: 'unsigned long long'=0) -> "std::vector< std::string,std::allocator< std::string > > const &":
        """
        GetFileNames(itkArchetypeSeriesFileNames self, unsigned long long group=0) -> vectorstring
        GetFileNames(itkArchetypeSeriesFileNames self) -> vectorstring
        """
        return _ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames_GetFileNames(self, group)

    __swig_destroy__ = _ITKIOImageBaseBasePython.delete_itkArchetypeSeriesFileNames

    def cast(obj: 'itkLightObject') -> "itkArchetypeSeriesFileNames *":
        """cast(itkLightObject obj) -> itkArchetypeSeriesFileNames"""
        return _ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkArchetypeSeriesFileNames

        Create a new object of the class itkArchetypeSeriesFileNames and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArchetypeSeriesFileNames.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkArchetypeSeriesFileNames.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkArchetypeSeriesFileNames.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkArchetypeSeriesFileNames.Clone = new_instancemethod(_ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames_Clone, None, itkArchetypeSeriesFileNames)
itkArchetypeSeriesFileNames.SetArchetype = new_instancemethod(_ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames_SetArchetype, None, itkArchetypeSeriesFileNames)
itkArchetypeSeriesFileNames.GetArchetype = new_instancemethod(_ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames_GetArchetype, None, itkArchetypeSeriesFileNames)
itkArchetypeSeriesFileNames.GetNumberOfGroupings = new_instancemethod(_ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames_GetNumberOfGroupings, None, itkArchetypeSeriesFileNames)
itkArchetypeSeriesFileNames.GetFileNames = new_instancemethod(_ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames_GetFileNames, None, itkArchetypeSeriesFileNames)
itkArchetypeSeriesFileNames_swigregister = _ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames_swigregister
itkArchetypeSeriesFileNames_swigregister(itkArchetypeSeriesFileNames)

def itkArchetypeSeriesFileNames___New_orig__() -> "itkArchetypeSeriesFileNames_Pointer":
    """itkArchetypeSeriesFileNames___New_orig__() -> itkArchetypeSeriesFileNames_Pointer"""
    return _ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames___New_orig__()

def itkArchetypeSeriesFileNames_cast(obj: 'itkLightObject') -> "itkArchetypeSeriesFileNames *":
    """itkArchetypeSeriesFileNames_cast(itkLightObject obj) -> itkArchetypeSeriesFileNames"""
    return _ITKIOImageBaseBasePython.itkArchetypeSeriesFileNames_cast(obj)

class itkImageIOBase(ITKCommonBasePython.itkLightProcessObject):
    """Proxy of C++ itkImageIOBase class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFileName(self, *args) -> "void":
        """
        SetFileName(itkImageIOBase self, char const * _arg)
        SetFileName(itkImageIOBase self, std::string const & _arg)
        """
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetFileName(self, *args)


    def GetFileName(self) -> "char const *":
        """GetFileName(itkImageIOBase self) -> char const *"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetFileName(self)

    UNKNOWNPIXELTYPE = _ITKIOImageBaseBasePython.itkImageIOBase_UNKNOWNPIXELTYPE
    SCALAR = _ITKIOImageBaseBasePython.itkImageIOBase_SCALAR
    RGB = _ITKIOImageBaseBasePython.itkImageIOBase_RGB
    RGBA = _ITKIOImageBaseBasePython.itkImageIOBase_RGBA
    OFFSET = _ITKIOImageBaseBasePython.itkImageIOBase_OFFSET
    VECTOR = _ITKIOImageBaseBasePython.itkImageIOBase_VECTOR
    POINT = _ITKIOImageBaseBasePython.itkImageIOBase_POINT
    COVARIANTVECTOR = _ITKIOImageBaseBasePython.itkImageIOBase_COVARIANTVECTOR
    SYMMETRICSECONDRANKTENSOR = _ITKIOImageBaseBasePython.itkImageIOBase_SYMMETRICSECONDRANKTENSOR
    DIFFUSIONTENSOR3D = _ITKIOImageBaseBasePython.itkImageIOBase_DIFFUSIONTENSOR3D
    COMPLEX = _ITKIOImageBaseBasePython.itkImageIOBase_COMPLEX
    FIXEDARRAY = _ITKIOImageBaseBasePython.itkImageIOBase_FIXEDARRAY
    MATRIX = _ITKIOImageBaseBasePython.itkImageIOBase_MATRIX
    UNKNOWNCOMPONENTTYPE = _ITKIOImageBaseBasePython.itkImageIOBase_UNKNOWNCOMPONENTTYPE
    UCHAR = _ITKIOImageBaseBasePython.itkImageIOBase_UCHAR
    CHAR = _ITKIOImageBaseBasePython.itkImageIOBase_CHAR
    USHORT = _ITKIOImageBaseBasePython.itkImageIOBase_USHORT
    SHORT = _ITKIOImageBaseBasePython.itkImageIOBase_SHORT
    UINT = _ITKIOImageBaseBasePython.itkImageIOBase_UINT
    INT = _ITKIOImageBaseBasePython.itkImageIOBase_INT
    ULONG = _ITKIOImageBaseBasePython.itkImageIOBase_ULONG
    LONG = _ITKIOImageBaseBasePython.itkImageIOBase_LONG
    ULONGLONG = _ITKIOImageBaseBasePython.itkImageIOBase_ULONGLONG
    LONGLONG = _ITKIOImageBaseBasePython.itkImageIOBase_LONGLONG
    FLOAT = _ITKIOImageBaseBasePython.itkImageIOBase_FLOAT
    DOUBLE = _ITKIOImageBaseBasePython.itkImageIOBase_DOUBLE

    def SetNumberOfDimensions(self, arg0: 'unsigned int') -> "void":
        """SetNumberOfDimensions(itkImageIOBase self, unsigned int arg0)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetNumberOfDimensions(self, arg0)


    def GetNumberOfDimensions(self) -> "unsigned int":
        """GetNumberOfDimensions(itkImageIOBase self) -> unsigned int"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetNumberOfDimensions(self)


    def SetDimensions(self, i: 'unsigned int', dim: 'unsigned long long') -> "void":
        """SetDimensions(itkImageIOBase self, unsigned int i, unsigned long long dim)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetDimensions(self, i, dim)


    def GetDimensions(self, i: 'unsigned int') -> "unsigned long long":
        """GetDimensions(itkImageIOBase self, unsigned int i) -> unsigned long long"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetDimensions(self, i)


    def SetOrigin(self, i: 'unsigned int', origin: 'double') -> "void":
        """SetOrigin(itkImageIOBase self, unsigned int i, double origin)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetOrigin(self, i, origin)


    def GetOrigin(self, i: 'unsigned int') -> "double":
        """GetOrigin(itkImageIOBase self, unsigned int i) -> double"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetOrigin(self, i)


    def SetSpacing(self, i: 'unsigned int', spacing: 'double') -> "void":
        """SetSpacing(itkImageIOBase self, unsigned int i, double spacing)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetSpacing(self, i, spacing)


    def GetSpacing(self, i: 'unsigned int') -> "double":
        """GetSpacing(itkImageIOBase self, unsigned int i) -> double"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetSpacing(self, i)


    def SetDirection(self, *args) -> "void":
        """
        SetDirection(itkImageIOBase self, unsigned int i, vectorD direction)
        SetDirection(itkImageIOBase self, unsigned int i, vnl_vectorD direction)
        """
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetDirection(self, *args)


    def GetDirection(self, i: 'unsigned int') -> "std::vector< double,std::allocator< double > >":
        """GetDirection(itkImageIOBase self, unsigned int i) -> vectorD"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetDirection(self, i)


    def GetDefaultDirection(self, i: 'unsigned int') -> "std::vector< double,std::allocator< double > >":
        """GetDefaultDirection(itkImageIOBase self, unsigned int i) -> vectorD"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetDefaultDirection(self, i)


    def SetIORegion(self, _arg: 'itkImageIORegion') -> "void":
        """SetIORegion(itkImageIOBase self, itkImageIORegion _arg)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetIORegion(self, _arg)


    def GetIORegion(self) -> "itkImageIORegion const &":
        """GetIORegion(itkImageIOBase self) -> itkImageIORegion"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetIORegion(self)


    def SetPixelType(self, _arg: 'itkImageIOBase::IOPixelType const') -> "void":
        """SetPixelType(itkImageIOBase self, itkImageIOBase::IOPixelType const _arg)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetPixelType(self, _arg)


    def GetPixelType(self) -> "itkImageIOBase::IOPixelType":
        """GetPixelType(itkImageIOBase self) -> itkImageIOBase::IOPixelType"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetPixelType(self)


    def SetComponentType(self, _arg: 'itkImageIOBase::IOComponentType const') -> "void":
        """SetComponentType(itkImageIOBase self, itkImageIOBase::IOComponentType const _arg)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetComponentType(self, _arg)


    def GetComponentType(self) -> "itkImageIOBase::IOComponentType":
        """GetComponentType(itkImageIOBase self) -> itkImageIOBase::IOComponentType"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetComponentType(self)


    def GetComponentTypeInfo(self) -> "type_info const &":
        """GetComponentTypeInfo(itkImageIOBase self) -> type_info const &"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetComponentTypeInfo(self)


    def SetNumberOfComponents(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfComponents(itkImageIOBase self, unsigned int const _arg)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetNumberOfComponents(self, _arg)


    def GetNumberOfComponents(self) -> "unsigned int const &":
        """GetNumberOfComponents(itkImageIOBase self) -> unsigned int const &"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetNumberOfComponents(self)


    def SetUseCompression(self, _arg: 'bool const') -> "void":
        """SetUseCompression(itkImageIOBase self, bool const _arg)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetUseCompression(self, _arg)


    def GetUseCompression(self) -> "bool":
        """GetUseCompression(itkImageIOBase self) -> bool"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetUseCompression(self)


    def UseCompressionOn(self) -> "void":
        """UseCompressionOn(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_UseCompressionOn(self)


    def UseCompressionOff(self) -> "void":
        """UseCompressionOff(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_UseCompressionOff(self)


    def SetCompressionLevel(self, _arg: 'int') -> "void":
        """SetCompressionLevel(itkImageIOBase self, int _arg)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetCompressionLevel(self, _arg)


    def GetCompressionLevel(self) -> "int":
        """GetCompressionLevel(itkImageIOBase self) -> int"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetCompressionLevel(self)


    def SetCompressor(self, _c: 'std::string') -> "void":
        """SetCompressor(itkImageIOBase self, std::string _c)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetCompressor(self, _c)


    def GetCompressor(self) -> "std::string const &":
        """GetCompressor(itkImageIOBase self) -> std::string const &"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetCompressor(self)


    def SetUseStreamedReading(self, _arg: 'bool const') -> "void":
        """SetUseStreamedReading(itkImageIOBase self, bool const _arg)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetUseStreamedReading(self, _arg)


    def GetUseStreamedReading(self) -> "bool":
        """GetUseStreamedReading(itkImageIOBase self) -> bool"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetUseStreamedReading(self)


    def UseStreamedReadingOn(self) -> "void":
        """UseStreamedReadingOn(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_UseStreamedReadingOn(self)


    def UseStreamedReadingOff(self) -> "void":
        """UseStreamedReadingOff(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_UseStreamedReadingOff(self)


    def SetUseStreamedWriting(self, _arg: 'bool const') -> "void":
        """SetUseStreamedWriting(itkImageIOBase self, bool const _arg)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetUseStreamedWriting(self, _arg)


    def GetUseStreamedWriting(self) -> "bool":
        """GetUseStreamedWriting(itkImageIOBase self) -> bool"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetUseStreamedWriting(self)


    def UseStreamedWritingOn(self) -> "void":
        """UseStreamedWritingOn(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_UseStreamedWritingOn(self)


    def UseStreamedWritingOff(self) -> "void":
        """UseStreamedWritingOff(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_UseStreamedWritingOff(self)


    def SetExpandRGBPalette(self, _arg: 'bool const') -> "void":
        """SetExpandRGBPalette(itkImageIOBase self, bool const _arg)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetExpandRGBPalette(self, _arg)


    def GetExpandRGBPalette(self) -> "bool":
        """GetExpandRGBPalette(itkImageIOBase self) -> bool"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetExpandRGBPalette(self)


    def ExpandRGBPaletteOn(self) -> "void":
        """ExpandRGBPaletteOn(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_ExpandRGBPaletteOn(self)


    def ExpandRGBPaletteOff(self) -> "void":
        """ExpandRGBPaletteOff(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_ExpandRGBPaletteOff(self)


    def GetIsReadAsScalarPlusPalette(self) -> "bool":
        """GetIsReadAsScalarPlusPalette(itkImageIOBase self) -> bool"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetIsReadAsScalarPlusPalette(self)


    def GetComponentTypeAsString(arg0: 'itkImageIOBase::IOComponentType') -> "std::string":
        """GetComponentTypeAsString(itkImageIOBase::IOComponentType arg0) -> std::string"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetComponentTypeAsString(arg0)

    GetComponentTypeAsString = staticmethod(GetComponentTypeAsString)

    def GetComponentTypeFromString(typeString: 'std::string const &') -> "itkImageIOBase::IOComponentType":
        """GetComponentTypeFromString(std::string const & typeString) -> itkImageIOBase::IOComponentType"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetComponentTypeFromString(typeString)

    GetComponentTypeFromString = staticmethod(GetComponentTypeFromString)

    def GetPixelTypeAsString(arg0: 'itkImageIOBase::IOPixelType') -> "std::string":
        """GetPixelTypeAsString(itkImageIOBase::IOPixelType arg0) -> std::string"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetPixelTypeAsString(arg0)

    GetPixelTypeAsString = staticmethod(GetPixelTypeAsString)

    def GetPixelTypeFromString(pixelString: 'std::string const &') -> "itkImageIOBase::IOPixelType":
        """GetPixelTypeFromString(std::string const & pixelString) -> itkImageIOBase::IOPixelType"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetPixelTypeFromString(pixelString)

    GetPixelTypeFromString = staticmethod(GetPixelTypeFromString)
    ASCII = _ITKIOImageBaseBasePython.itkImageIOBase_ASCII
    Binary = _ITKIOImageBaseBasePython.itkImageIOBase_Binary
    TypeNotApplicable = _ITKIOImageBaseBasePython.itkImageIOBase_TypeNotApplicable
    BigEndian = _ITKIOImageBaseBasePython.itkImageIOBase_BigEndian
    LittleEndian = _ITKIOImageBaseBasePython.itkImageIOBase_LittleEndian
    OrderNotApplicable = _ITKIOImageBaseBasePython.itkImageIOBase_OrderNotApplicable

    def SetFileType(self, _arg: 'itkImageIOBase::FileType const') -> "void":
        """SetFileType(itkImageIOBase self, itkImageIOBase::FileType const _arg)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetFileType(self, _arg)


    def GetFileType(self) -> "itkImageIOBase::FileType":
        """GetFileType(itkImageIOBase self) -> itkImageIOBase::FileType"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetFileType(self)


    def SetFileTypeToASCII(self) -> "void":
        """SetFileTypeToASCII(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetFileTypeToASCII(self)


    def SetFileTypeToBinary(self) -> "void":
        """SetFileTypeToBinary(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetFileTypeToBinary(self)


    def SetByteOrder(self, _arg: 'itkImageIOBase::ByteOrder const') -> "void":
        """SetByteOrder(itkImageIOBase self, itkImageIOBase::ByteOrder const _arg)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetByteOrder(self, _arg)


    def GetByteOrder(self) -> "itkImageIOBase::ByteOrder":
        """GetByteOrder(itkImageIOBase self) -> itkImageIOBase::ByteOrder"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetByteOrder(self)


    def SetByteOrderToBigEndian(self) -> "void":
        """SetByteOrderToBigEndian(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetByteOrderToBigEndian(self)


    def SetByteOrderToLittleEndian(self) -> "void":
        """SetByteOrderToLittleEndian(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SetByteOrderToLittleEndian(self)


    def GetFileTypeAsString(self, arg0: 'itkImageIOBase::FileType') -> "std::string":
        """GetFileTypeAsString(itkImageIOBase self, itkImageIOBase::FileType arg0) -> std::string"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetFileTypeAsString(self, arg0)


    def GetByteOrderAsString(self, arg0: 'itkImageIOBase::ByteOrder') -> "std::string":
        """GetByteOrderAsString(itkImageIOBase self, itkImageIOBase::ByteOrder arg0) -> std::string"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetByteOrderAsString(self, arg0)


    def GetPixelStride(self) -> "long long":
        """GetPixelStride(itkImageIOBase self) -> long long"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetPixelStride(self)


    def GetImageSizeInPixels(self) -> "long long":
        """GetImageSizeInPixels(itkImageIOBase self) -> long long"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetImageSizeInPixels(self)


    def GetImageSizeInBytes(self) -> "long long":
        """GetImageSizeInBytes(itkImageIOBase self) -> long long"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetImageSizeInBytes(self)


    def GetImageSizeInComponents(self) -> "long long":
        """GetImageSizeInComponents(itkImageIOBase self) -> long long"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetImageSizeInComponents(self)


    def GetComponentSize(self) -> "unsigned int":
        """GetComponentSize(itkImageIOBase self) -> unsigned int"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetComponentSize(self)


    def CanReadFile(self, arg0: 'char const *') -> "bool":
        """CanReadFile(itkImageIOBase self, char const * arg0) -> bool"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_CanReadFile(self, arg0)


    def CanStreamRead(self) -> "bool":
        """CanStreamRead(itkImageIOBase self) -> bool"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_CanStreamRead(self)


    def ReadImageInformation(self) -> "void":
        """ReadImageInformation(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_ReadImageInformation(self)


    def Read(self, buffer: 'void *') -> "void":
        """Read(itkImageIOBase self, void * buffer)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_Read(self, buffer)


    def CanWriteFile(self, arg0: 'char const *') -> "bool":
        """CanWriteFile(itkImageIOBase self, char const * arg0) -> bool"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_CanWriteFile(self, arg0)


    def CanStreamWrite(self) -> "bool":
        """CanStreamWrite(itkImageIOBase self) -> bool"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_CanStreamWrite(self)


    def WriteImageInformation(self) -> "void":
        """WriteImageInformation(itkImageIOBase self)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_WriteImageInformation(self)


    def Write(self, buffer: 'void const *') -> "void":
        """Write(itkImageIOBase self, void const * buffer)"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_Write(self, buffer)


    def SupportsDimension(self, dim: 'unsigned long') -> "bool":
        """SupportsDimension(itkImageIOBase self, unsigned long dim) -> bool"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_SupportsDimension(self, dim)


    def GenerateStreamableReadRegionFromRequestedRegion(self, requested: 'itkImageIORegion') -> "itkImageIORegion":
        """GenerateStreamableReadRegionFromRequestedRegion(itkImageIOBase self, itkImageIORegion requested) -> itkImageIORegion"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GenerateStreamableReadRegionFromRequestedRegion(self, requested)


    def GetActualNumberOfSplitsForWriting(self, numberOfRequestedSplits: 'unsigned int', pasteRegion: 'itkImageIORegion', largestPossibleRegion: 'itkImageIORegion') -> "unsigned int":
        """GetActualNumberOfSplitsForWriting(itkImageIOBase self, unsigned int numberOfRequestedSplits, itkImageIORegion pasteRegion, itkImageIORegion largestPossibleRegion) -> unsigned int"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetActualNumberOfSplitsForWriting(self, numberOfRequestedSplits, pasteRegion, largestPossibleRegion)


    def GetSplitRegionForWriting(self, ithPiece: 'unsigned int', numberOfActualSplits: 'unsigned int', pasteRegion: 'itkImageIORegion', largestPossibleRegion: 'itkImageIORegion') -> "itkImageIORegion":
        """GetSplitRegionForWriting(itkImageIOBase self, unsigned int ithPiece, unsigned int numberOfActualSplits, itkImageIORegion pasteRegion, itkImageIORegion largestPossibleRegion) -> itkImageIORegion"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetSplitRegionForWriting(self, ithPiece, numberOfActualSplits, pasteRegion, largestPossibleRegion)


    def GetSupportedReadExtensions(self) -> "std::vector< std::string,std::allocator< std::string > > const &":
        """GetSupportedReadExtensions(itkImageIOBase self) -> vectorstring"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetSupportedReadExtensions(self)


    def GetSupportedWriteExtensions(self) -> "std::vector< std::string,std::allocator< std::string > > const &":
        """GetSupportedWriteExtensions(itkImageIOBase self) -> vectorstring"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_GetSupportedWriteExtensions(self)

    __swig_destroy__ = _ITKIOImageBaseBasePython.delete_itkImageIOBase

    def cast(obj: 'itkLightObject') -> "itkImageIOBase *":
        """cast(itkLightObject obj) -> itkImageIOBase"""
        return _ITKIOImageBaseBasePython.itkImageIOBase_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageIOBase

        Create a new object of the class itkImageIOBase and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageIOBase.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageIOBase.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageIOBase.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageIOBase.SetFileName = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetFileName, None, itkImageIOBase)
itkImageIOBase.GetFileName = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetFileName, None, itkImageIOBase)
itkImageIOBase.SetNumberOfDimensions = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetNumberOfDimensions, None, itkImageIOBase)
itkImageIOBase.GetNumberOfDimensions = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetNumberOfDimensions, None, itkImageIOBase)
itkImageIOBase.SetDimensions = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetDimensions, None, itkImageIOBase)
itkImageIOBase.GetDimensions = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetDimensions, None, itkImageIOBase)
itkImageIOBase.SetOrigin = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetOrigin, None, itkImageIOBase)
itkImageIOBase.GetOrigin = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetOrigin, None, itkImageIOBase)
itkImageIOBase.SetSpacing = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetSpacing, None, itkImageIOBase)
itkImageIOBase.GetSpacing = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetSpacing, None, itkImageIOBase)
itkImageIOBase.SetDirection = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetDirection, None, itkImageIOBase)
itkImageIOBase.GetDirection = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetDirection, None, itkImageIOBase)
itkImageIOBase.GetDefaultDirection = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetDefaultDirection, None, itkImageIOBase)
itkImageIOBase.SetIORegion = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetIORegion, None, itkImageIOBase)
itkImageIOBase.GetIORegion = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetIORegion, None, itkImageIOBase)
itkImageIOBase.SetPixelType = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetPixelType, None, itkImageIOBase)
itkImageIOBase.GetPixelType = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetPixelType, None, itkImageIOBase)
itkImageIOBase.SetComponentType = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetComponentType, None, itkImageIOBase)
itkImageIOBase.GetComponentType = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetComponentType, None, itkImageIOBase)
itkImageIOBase.GetComponentTypeInfo = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetComponentTypeInfo, None, itkImageIOBase)
itkImageIOBase.SetNumberOfComponents = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetNumberOfComponents, None, itkImageIOBase)
itkImageIOBase.GetNumberOfComponents = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetNumberOfComponents, None, itkImageIOBase)
itkImageIOBase.SetUseCompression = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetUseCompression, None, itkImageIOBase)
itkImageIOBase.GetUseCompression = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetUseCompression, None, itkImageIOBase)
itkImageIOBase.UseCompressionOn = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_UseCompressionOn, None, itkImageIOBase)
itkImageIOBase.UseCompressionOff = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_UseCompressionOff, None, itkImageIOBase)
itkImageIOBase.SetCompressionLevel = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetCompressionLevel, None, itkImageIOBase)
itkImageIOBase.GetCompressionLevel = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetCompressionLevel, None, itkImageIOBase)
itkImageIOBase.SetCompressor = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetCompressor, None, itkImageIOBase)
itkImageIOBase.GetCompressor = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetCompressor, None, itkImageIOBase)
itkImageIOBase.SetUseStreamedReading = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetUseStreamedReading, None, itkImageIOBase)
itkImageIOBase.GetUseStreamedReading = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetUseStreamedReading, None, itkImageIOBase)
itkImageIOBase.UseStreamedReadingOn = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_UseStreamedReadingOn, None, itkImageIOBase)
itkImageIOBase.UseStreamedReadingOff = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_UseStreamedReadingOff, None, itkImageIOBase)
itkImageIOBase.SetUseStreamedWriting = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetUseStreamedWriting, None, itkImageIOBase)
itkImageIOBase.GetUseStreamedWriting = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetUseStreamedWriting, None, itkImageIOBase)
itkImageIOBase.UseStreamedWritingOn = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_UseStreamedWritingOn, None, itkImageIOBase)
itkImageIOBase.UseStreamedWritingOff = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_UseStreamedWritingOff, None, itkImageIOBase)
itkImageIOBase.SetExpandRGBPalette = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetExpandRGBPalette, None, itkImageIOBase)
itkImageIOBase.GetExpandRGBPalette = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetExpandRGBPalette, None, itkImageIOBase)
itkImageIOBase.ExpandRGBPaletteOn = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_ExpandRGBPaletteOn, None, itkImageIOBase)
itkImageIOBase.ExpandRGBPaletteOff = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_ExpandRGBPaletteOff, None, itkImageIOBase)
itkImageIOBase.GetIsReadAsScalarPlusPalette = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetIsReadAsScalarPlusPalette, None, itkImageIOBase)
itkImageIOBase.SetFileType = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetFileType, None, itkImageIOBase)
itkImageIOBase.GetFileType = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetFileType, None, itkImageIOBase)
itkImageIOBase.SetFileTypeToASCII = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetFileTypeToASCII, None, itkImageIOBase)
itkImageIOBase.SetFileTypeToBinary = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetFileTypeToBinary, None, itkImageIOBase)
itkImageIOBase.SetByteOrder = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetByteOrder, None, itkImageIOBase)
itkImageIOBase.GetByteOrder = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetByteOrder, None, itkImageIOBase)
itkImageIOBase.SetByteOrderToBigEndian = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetByteOrderToBigEndian, None, itkImageIOBase)
itkImageIOBase.SetByteOrderToLittleEndian = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SetByteOrderToLittleEndian, None, itkImageIOBase)
itkImageIOBase.GetFileTypeAsString = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetFileTypeAsString, None, itkImageIOBase)
itkImageIOBase.GetByteOrderAsString = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetByteOrderAsString, None, itkImageIOBase)
itkImageIOBase.GetPixelStride = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetPixelStride, None, itkImageIOBase)
itkImageIOBase.GetImageSizeInPixels = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetImageSizeInPixels, None, itkImageIOBase)
itkImageIOBase.GetImageSizeInBytes = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetImageSizeInBytes, None, itkImageIOBase)
itkImageIOBase.GetImageSizeInComponents = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetImageSizeInComponents, None, itkImageIOBase)
itkImageIOBase.GetComponentSize = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetComponentSize, None, itkImageIOBase)
itkImageIOBase.CanReadFile = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_CanReadFile, None, itkImageIOBase)
itkImageIOBase.CanStreamRead = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_CanStreamRead, None, itkImageIOBase)
itkImageIOBase.ReadImageInformation = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_ReadImageInformation, None, itkImageIOBase)
itkImageIOBase.Read = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_Read, None, itkImageIOBase)
itkImageIOBase.CanWriteFile = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_CanWriteFile, None, itkImageIOBase)
itkImageIOBase.CanStreamWrite = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_CanStreamWrite, None, itkImageIOBase)
itkImageIOBase.WriteImageInformation = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_WriteImageInformation, None, itkImageIOBase)
itkImageIOBase.Write = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_Write, None, itkImageIOBase)
itkImageIOBase.SupportsDimension = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_SupportsDimension, None, itkImageIOBase)
itkImageIOBase.GenerateStreamableReadRegionFromRequestedRegion = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GenerateStreamableReadRegionFromRequestedRegion, None, itkImageIOBase)
itkImageIOBase.GetActualNumberOfSplitsForWriting = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetActualNumberOfSplitsForWriting, None, itkImageIOBase)
itkImageIOBase.GetSplitRegionForWriting = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetSplitRegionForWriting, None, itkImageIOBase)
itkImageIOBase.GetSupportedReadExtensions = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetSupportedReadExtensions, None, itkImageIOBase)
itkImageIOBase.GetSupportedWriteExtensions = new_instancemethod(_ITKIOImageBaseBasePython.itkImageIOBase_GetSupportedWriteExtensions, None, itkImageIOBase)
itkImageIOBase_swigregister = _ITKIOImageBaseBasePython.itkImageIOBase_swigregister
itkImageIOBase_swigregister(itkImageIOBase)

def itkImageIOBase_GetComponentTypeAsString(arg0: 'itkImageIOBase::IOComponentType') -> "std::string":
    """itkImageIOBase_GetComponentTypeAsString(itkImageIOBase::IOComponentType arg0) -> std::string"""
    return _ITKIOImageBaseBasePython.itkImageIOBase_GetComponentTypeAsString(arg0)

def itkImageIOBase_GetComponentTypeFromString(typeString: 'std::string const &') -> "itkImageIOBase::IOComponentType":
    """itkImageIOBase_GetComponentTypeFromString(std::string const & typeString) -> itkImageIOBase::IOComponentType"""
    return _ITKIOImageBaseBasePython.itkImageIOBase_GetComponentTypeFromString(typeString)

def itkImageIOBase_GetPixelTypeAsString(arg0: 'itkImageIOBase::IOPixelType') -> "std::string":
    """itkImageIOBase_GetPixelTypeAsString(itkImageIOBase::IOPixelType arg0) -> std::string"""
    return _ITKIOImageBaseBasePython.itkImageIOBase_GetPixelTypeAsString(arg0)

def itkImageIOBase_GetPixelTypeFromString(pixelString: 'std::string const &') -> "itkImageIOBase::IOPixelType":
    """itkImageIOBase_GetPixelTypeFromString(std::string const & pixelString) -> itkImageIOBase::IOPixelType"""
    return _ITKIOImageBaseBasePython.itkImageIOBase_GetPixelTypeFromString(pixelString)

def itkImageIOBase_cast(obj: 'itkLightObject') -> "itkImageIOBase *":
    """itkImageIOBase_cast(itkLightObject obj) -> itkImageIOBase"""
    return _ITKIOImageBaseBasePython.itkImageIOBase_cast(obj)

class itkImageIOFactory(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageIOFactory class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ReadMode = _ITKIOImageBaseBasePython.itkImageIOFactory_ReadMode
    WriteMode = _ITKIOImageBaseBasePython.itkImageIOFactory_WriteMode

    def CreateImageIO(path: 'char const *', mode: 'itkImageIOFactory::FileModeType') -> "itkImageIOBase_Pointer":
        """CreateImageIO(char const * path, itkImageIOFactory::FileModeType mode) -> itkImageIOBase_Pointer"""
        return _ITKIOImageBaseBasePython.itkImageIOFactory_CreateImageIO(path, mode)

    CreateImageIO = staticmethod(CreateImageIO)
itkImageIOFactory_swigregister = _ITKIOImageBaseBasePython.itkImageIOFactory_swigregister
itkImageIOFactory_swigregister(itkImageIOFactory)

def itkImageIOFactory_CreateImageIO(path: 'char const *', mode: 'itkImageIOFactory::FileModeType') -> "itkImageIOBase_Pointer":
    """itkImageIOFactory_CreateImageIO(char const * path, itkImageIOFactory::FileModeType mode) -> itkImageIOBase_Pointer"""
    return _ITKIOImageBaseBasePython.itkImageIOFactory_CreateImageIO(path, mode)

class itkNumericSeriesFileNames(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkNumericSeriesFileNames class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNumericSeriesFileNames_Pointer":
        """__New_orig__() -> itkNumericSeriesFileNames_Pointer"""
        return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNumericSeriesFileNames_Pointer":
        """Clone(itkNumericSeriesFileNames self) -> itkNumericSeriesFileNames_Pointer"""
        return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames_Clone(self)


    def SetStartIndex(self, _arg: 'unsigned long long const') -> "void":
        """SetStartIndex(itkNumericSeriesFileNames self, unsigned long long const _arg)"""
        return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames_SetStartIndex(self, _arg)


    def GetStartIndex(self) -> "unsigned long long":
        """GetStartIndex(itkNumericSeriesFileNames self) -> unsigned long long"""
        return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames_GetStartIndex(self)


    def SetEndIndex(self, _arg: 'unsigned long long const') -> "void":
        """SetEndIndex(itkNumericSeriesFileNames self, unsigned long long const _arg)"""
        return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames_SetEndIndex(self, _arg)


    def GetEndIndex(self) -> "unsigned long long":
        """GetEndIndex(itkNumericSeriesFileNames self) -> unsigned long long"""
        return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames_GetEndIndex(self)


    def SetIncrementIndex(self, _arg: 'unsigned long long const') -> "void":
        """SetIncrementIndex(itkNumericSeriesFileNames self, unsigned long long const _arg)"""
        return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames_SetIncrementIndex(self, _arg)


    def GetIncrementIndex(self) -> "unsigned long long":
        """GetIncrementIndex(itkNumericSeriesFileNames self) -> unsigned long long"""
        return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames_GetIncrementIndex(self)


    def SetSeriesFormat(self, *args) -> "void":
        """
        SetSeriesFormat(itkNumericSeriesFileNames self, char const * _arg)
        SetSeriesFormat(itkNumericSeriesFileNames self, std::string const & _arg)
        """
        return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames_SetSeriesFormat(self, *args)


    def GetSeriesFormat(self) -> "char const *":
        """GetSeriesFormat(itkNumericSeriesFileNames self) -> char const *"""
        return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames_GetSeriesFormat(self)


    def GetFileNames(self) -> "std::vector< std::string,std::allocator< std::string > > const &":
        """GetFileNames(itkNumericSeriesFileNames self) -> vectorstring"""
        return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames_GetFileNames(self)

    __swig_destroy__ = _ITKIOImageBaseBasePython.delete_itkNumericSeriesFileNames

    def cast(obj: 'itkLightObject') -> "itkNumericSeriesFileNames *":
        """cast(itkLightObject obj) -> itkNumericSeriesFileNames"""
        return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNumericSeriesFileNames

        Create a new object of the class itkNumericSeriesFileNames and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNumericSeriesFileNames.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNumericSeriesFileNames.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNumericSeriesFileNames.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNumericSeriesFileNames.Clone = new_instancemethod(_ITKIOImageBaseBasePython.itkNumericSeriesFileNames_Clone, None, itkNumericSeriesFileNames)
itkNumericSeriesFileNames.SetStartIndex = new_instancemethod(_ITKIOImageBaseBasePython.itkNumericSeriesFileNames_SetStartIndex, None, itkNumericSeriesFileNames)
itkNumericSeriesFileNames.GetStartIndex = new_instancemethod(_ITKIOImageBaseBasePython.itkNumericSeriesFileNames_GetStartIndex, None, itkNumericSeriesFileNames)
itkNumericSeriesFileNames.SetEndIndex = new_instancemethod(_ITKIOImageBaseBasePython.itkNumericSeriesFileNames_SetEndIndex, None, itkNumericSeriesFileNames)
itkNumericSeriesFileNames.GetEndIndex = new_instancemethod(_ITKIOImageBaseBasePython.itkNumericSeriesFileNames_GetEndIndex, None, itkNumericSeriesFileNames)
itkNumericSeriesFileNames.SetIncrementIndex = new_instancemethod(_ITKIOImageBaseBasePython.itkNumericSeriesFileNames_SetIncrementIndex, None, itkNumericSeriesFileNames)
itkNumericSeriesFileNames.GetIncrementIndex = new_instancemethod(_ITKIOImageBaseBasePython.itkNumericSeriesFileNames_GetIncrementIndex, None, itkNumericSeriesFileNames)
itkNumericSeriesFileNames.SetSeriesFormat = new_instancemethod(_ITKIOImageBaseBasePython.itkNumericSeriesFileNames_SetSeriesFormat, None, itkNumericSeriesFileNames)
itkNumericSeriesFileNames.GetSeriesFormat = new_instancemethod(_ITKIOImageBaseBasePython.itkNumericSeriesFileNames_GetSeriesFormat, None, itkNumericSeriesFileNames)
itkNumericSeriesFileNames.GetFileNames = new_instancemethod(_ITKIOImageBaseBasePython.itkNumericSeriesFileNames_GetFileNames, None, itkNumericSeriesFileNames)
itkNumericSeriesFileNames_swigregister = _ITKIOImageBaseBasePython.itkNumericSeriesFileNames_swigregister
itkNumericSeriesFileNames_swigregister(itkNumericSeriesFileNames)

def itkNumericSeriesFileNames___New_orig__() -> "itkNumericSeriesFileNames_Pointer":
    """itkNumericSeriesFileNames___New_orig__() -> itkNumericSeriesFileNames_Pointer"""
    return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames___New_orig__()

def itkNumericSeriesFileNames_cast(obj: 'itkLightObject') -> "itkNumericSeriesFileNames *":
    """itkNumericSeriesFileNames_cast(itkLightObject obj) -> itkNumericSeriesFileNames"""
    return _ITKIOImageBaseBasePython.itkNumericSeriesFileNames_cast(obj)

class itkRegularExpressionSeriesFileNames(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkRegularExpressionSeriesFileNames class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRegularExpressionSeriesFileNames_Pointer":
        """__New_orig__() -> itkRegularExpressionSeriesFileNames_Pointer"""
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRegularExpressionSeriesFileNames_Pointer":
        """Clone(itkRegularExpressionSeriesFileNames self) -> itkRegularExpressionSeriesFileNames_Pointer"""
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_Clone(self)


    def SetDirectory(self, *args) -> "void":
        """
        SetDirectory(itkRegularExpressionSeriesFileNames self, char const * _arg)
        SetDirectory(itkRegularExpressionSeriesFileNames self, std::string const & _arg)
        """
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_SetDirectory(self, *args)


    def GetDirectory(self) -> "char const *":
        """GetDirectory(itkRegularExpressionSeriesFileNames self) -> char const *"""
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_GetDirectory(self)


    def SetRegularExpression(self, *args) -> "void":
        """
        SetRegularExpression(itkRegularExpressionSeriesFileNames self, char const * _arg)
        SetRegularExpression(itkRegularExpressionSeriesFileNames self, std::string const & _arg)
        """
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_SetRegularExpression(self, *args)


    def GetRegularExpression(self) -> "char const *":
        """GetRegularExpression(itkRegularExpressionSeriesFileNames self) -> char const *"""
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_GetRegularExpression(self)


    def SetSubMatch(self, _arg: 'unsigned int const') -> "void":
        """SetSubMatch(itkRegularExpressionSeriesFileNames self, unsigned int const _arg)"""
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_SetSubMatch(self, _arg)


    def GetSubMatch(self) -> "unsigned int":
        """GetSubMatch(itkRegularExpressionSeriesFileNames self) -> unsigned int"""
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_GetSubMatch(self)


    def SetNumericSort(self, _arg: 'bool const') -> "void":
        """SetNumericSort(itkRegularExpressionSeriesFileNames self, bool const _arg)"""
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_SetNumericSort(self, _arg)


    def GetNumericSort(self) -> "bool":
        """GetNumericSort(itkRegularExpressionSeriesFileNames self) -> bool"""
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_GetNumericSort(self)


    def NumericSortOn(self) -> "void":
        """NumericSortOn(itkRegularExpressionSeriesFileNames self)"""
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_NumericSortOn(self)


    def NumericSortOff(self) -> "void":
        """NumericSortOff(itkRegularExpressionSeriesFileNames self)"""
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_NumericSortOff(self)


    def GetFileNames(self) -> "std::vector< std::string,std::allocator< std::string > > const &":
        """GetFileNames(itkRegularExpressionSeriesFileNames self) -> vectorstring"""
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_GetFileNames(self)

    __swig_destroy__ = _ITKIOImageBaseBasePython.delete_itkRegularExpressionSeriesFileNames

    def cast(obj: 'itkLightObject') -> "itkRegularExpressionSeriesFileNames *":
        """cast(itkLightObject obj) -> itkRegularExpressionSeriesFileNames"""
        return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkRegularExpressionSeriesFileNames

        Create a new object of the class itkRegularExpressionSeriesFileNames and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegularExpressionSeriesFileNames.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegularExpressionSeriesFileNames.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegularExpressionSeriesFileNames.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRegularExpressionSeriesFileNames.Clone = new_instancemethod(_ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_Clone, None, itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.SetDirectory = new_instancemethod(_ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_SetDirectory, None, itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.GetDirectory = new_instancemethod(_ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_GetDirectory, None, itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.SetRegularExpression = new_instancemethod(_ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_SetRegularExpression, None, itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.GetRegularExpression = new_instancemethod(_ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_GetRegularExpression, None, itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.SetSubMatch = new_instancemethod(_ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_SetSubMatch, None, itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.GetSubMatch = new_instancemethod(_ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_GetSubMatch, None, itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.SetNumericSort = new_instancemethod(_ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_SetNumericSort, None, itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.GetNumericSort = new_instancemethod(_ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_GetNumericSort, None, itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.NumericSortOn = new_instancemethod(_ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_NumericSortOn, None, itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.NumericSortOff = new_instancemethod(_ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_NumericSortOff, None, itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.GetFileNames = new_instancemethod(_ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_GetFileNames, None, itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames_swigregister = _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_swigregister
itkRegularExpressionSeriesFileNames_swigregister(itkRegularExpressionSeriesFileNames)

def itkRegularExpressionSeriesFileNames___New_orig__() -> "itkRegularExpressionSeriesFileNames_Pointer":
    """itkRegularExpressionSeriesFileNames___New_orig__() -> itkRegularExpressionSeriesFileNames_Pointer"""
    return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames___New_orig__()

def itkRegularExpressionSeriesFileNames_cast(obj: 'itkLightObject') -> "itkRegularExpressionSeriesFileNames *":
    """itkRegularExpressionSeriesFileNames_cast(itkLightObject obj) -> itkRegularExpressionSeriesFileNames"""
    return _ITKIOImageBaseBasePython.itkRegularExpressionSeriesFileNames_cast(obj)

class itkStreamingImageIOBase(itkImageIOBase):
    """Proxy of C++ itkStreamingImageIOBase class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _ITKIOImageBaseBasePython.delete_itkStreamingImageIOBase

    def cast(obj: 'itkLightObject') -> "itkStreamingImageIOBase *":
        """cast(itkLightObject obj) -> itkStreamingImageIOBase"""
        return _ITKIOImageBaseBasePython.itkStreamingImageIOBase_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStreamingImageIOBase

        Create a new object of the class itkStreamingImageIOBase and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStreamingImageIOBase.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStreamingImageIOBase.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStreamingImageIOBase.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStreamingImageIOBase_swigregister = _ITKIOImageBaseBasePython.itkStreamingImageIOBase_swigregister
itkStreamingImageIOBase_swigregister(itkStreamingImageIOBase)

def itkStreamingImageIOBase_cast(obj: 'itkLightObject') -> "itkStreamingImageIOBase *":
    """itkStreamingImageIOBase_cast(itkLightObject obj) -> itkStreamingImageIOBase"""
    return _ITKIOImageBaseBasePython.itkStreamingImageIOBase_cast(obj)



