# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkImageToImageMetricv4Python.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageToImageMetricv4Python', [dirname(__file__)])
        except ImportError:
            import _itkImageToImageMetricv4Python
            return _itkImageToImageMetricv4Python
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageToImageMetricv4Python', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageToImageMetricv4Python = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageToImageMetricv4Python
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageRegionPython
import itkIndexPython
import itkSizePython
import pyBasePython
import itkOffsetPython
import ITKCommonBasePython
import itkTransformBasePython
import itkCovariantVectorPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkPointPython
import itkOptimizerParametersPython
import itkArrayPython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkDiffusionTensor3DPython
import itkInterpolateImageFunctionPython
import itkImageFunctionBasePython
import itkFunctionBasePython
import itkContinuousIndexPython
import itkImagePython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkSpatialObjectBasePython
import itkSpatialObjectPropertyPython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkAffineTransformPython
import itkMatrixOffsetTransformBasePython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkImageToImageFilterCommonPython
import itkDisplacementFieldTransformPython
import itkPointSetPython
import itkObjectToObjectMetricBasePython
import itkSingleValuedCostFunctionv4Python
import itkCostFunctionPython

def itkImageToImageMetricv4F3F3_New():
  return itkImageToImageMetricv4F3F3.New()


def itkImageToImageMetricv4F3F3_Superclass_New():
  return itkImageToImageMetricv4F3F3_Superclass.New()


def itkImageToImageMetricv4F2F2_New():
  return itkImageToImageMetricv4F2F2.New()


def itkImageToImageMetricv4F2F2_Superclass_New():
  return itkImageToImageMetricv4F2F2_Superclass.New()

class itkImageToImageMetricv4F2F2_Superclass(itkObjectToObjectMetricBasePython.itkObjectToObjectMetricBaseTemplateD):
    """Proxy of C++ itkImageToImageMetricv4F2F2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedTransform(self, _arg: 'itkTransformD22') -> "void":
        """SetFixedTransform(itkImageToImageMetricv4F2F2_Superclass self, itkTransformD22 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetFixedTransform(self, _arg)


    def GetModifiableFixedTransform(self) -> "itkTransformD22 *":
        """GetModifiableFixedTransform(itkImageToImageMetricv4F2F2_Superclass self) -> itkTransformD22"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetModifiableFixedTransform(self)


    def GetFixedTransform(self, *args) -> "itkTransformD22 *":
        """
        GetFixedTransform(itkImageToImageMetricv4F2F2_Superclass self) -> itkTransformD22
        GetFixedTransform(itkImageToImageMetricv4F2F2_Superclass self) -> itkTransformD22
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetFixedTransform(self, *args)


    def SetMovingTransform(self, _arg: 'itkTransformD22') -> "void":
        """SetMovingTransform(itkImageToImageMetricv4F2F2_Superclass self, itkTransformD22 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetMovingTransform(self, _arg)


    def GetModifiableMovingTransform(self) -> "itkTransformD22 *":
        """GetModifiableMovingTransform(itkImageToImageMetricv4F2F2_Superclass self) -> itkTransformD22"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetModifiableMovingTransform(self)


    def GetMovingTransform(self, *args) -> "itkTransformD22 *":
        """
        GetMovingTransform(itkImageToImageMetricv4F2F2_Superclass self) -> itkTransformD22
        GetMovingTransform(itkImageToImageMetricv4F2F2_Superclass self) -> itkTransformD22
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetMovingTransform(self, *args)


    def SetTransform(self, transform: 'itkTransformD22') -> "void":
        """SetTransform(itkImageToImageMetricv4F2F2_Superclass self, itkTransformD22 transform)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetTransform(self, transform)


    def GetTransform(self) -> "itkTransformD22 const *":
        """GetTransform(itkImageToImageMetricv4F2F2_Superclass self) -> itkTransformD22"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetTransform(self)


    def GetNumberOfValidPoints(self) -> "unsigned long long":
        """GetNumberOfValidPoints(itkImageToImageMetricv4F2F2_Superclass self) -> unsigned long long"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetNumberOfValidPoints(self)


    def SetVirtualDomain(self, spacing: 'itkVectorD2', origin: 'itkPointD2', direction: 'itkMatrixD22', region: 'itkImageRegion2') -> "void":
        """SetVirtualDomain(itkImageToImageMetricv4F2F2_Superclass self, itkVectorD2 spacing, itkPointD2 origin, itkMatrixD22 direction, itkImageRegion2 region)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetVirtualDomain(self, spacing, origin, direction, region)


    def SetVirtualDomainFromImage(self, virtualImage: 'itkImageF2') -> "void":
        """SetVirtualDomainFromImage(itkImageToImageMetricv4F2F2_Superclass self, itkImageF2 virtualImage)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetVirtualDomainFromImage(self, virtualImage)


    def SupportsArbitraryVirtualDomainSamples(self) -> "bool":
        """SupportsArbitraryVirtualDomainSamples(itkImageToImageMetricv4F2F2_Superclass self) -> bool"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SupportsArbitraryVirtualDomainSamples(self)


    def GetVirtualDomainTimeStamp(self) -> "itkTimeStamp const &":
        """GetVirtualDomainTimeStamp(itkImageToImageMetricv4F2F2_Superclass self) -> itkTimeStamp"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualDomainTimeStamp(self)


    def GetVirtualSpacing(self) -> "itkVectorD2":
        """GetVirtualSpacing(itkImageToImageMetricv4F2F2_Superclass self) -> itkVectorD2"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualSpacing(self)


    def GetVirtualOrigin(self) -> "itkPointD2":
        """GetVirtualOrigin(itkImageToImageMetricv4F2F2_Superclass self) -> itkPointD2"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualOrigin(self)


    def GetVirtualDirection(self) -> "itkMatrixD22":
        """GetVirtualDirection(itkImageToImageMetricv4F2F2_Superclass self) -> itkMatrixD22"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualDirection(self)


    def GetVirtualRegion(self) -> "itkImageRegion2 const &":
        """GetVirtualRegion(itkImageToImageMetricv4F2F2_Superclass self) -> itkImageRegion2"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualRegion(self)


    def GetModifiableVirtualImage(self) -> "itkImageF2 *":
        """GetModifiableVirtualImage(itkImageToImageMetricv4F2F2_Superclass self) -> itkImageF2"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetModifiableVirtualImage(self)


    def GetVirtualImage(self, *args) -> "itkImageF2 *":
        """
        GetVirtualImage(itkImageToImageMetricv4F2F2_Superclass self) -> itkImageF2
        GetVirtualImage(itkImageToImageMetricv4F2F2_Superclass self) -> itkImageF2
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualImage(self, *args)


    def ComputeParameterOffsetFromVirtualIndex(self, index: 'itkIndex2', numberOfLocalParameters: 'unsigned int const &') -> "long long":
        """ComputeParameterOffsetFromVirtualIndex(itkImageToImageMetricv4F2F2_Superclass self, itkIndex2 index, unsigned int const & numberOfLocalParameters) -> long long"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_ComputeParameterOffsetFromVirtualIndex(self, index, numberOfLocalParameters)


    def ComputeParameterOffsetFromVirtualPoint(self, point: 'itkPointD2', numberOfLocalParameters: 'unsigned int const &') -> "long long":
        """ComputeParameterOffsetFromVirtualPoint(itkImageToImageMetricv4F2F2_Superclass self, itkPointD2 point, unsigned int const & numberOfLocalParameters) -> long long"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_ComputeParameterOffsetFromVirtualPoint(self, point, numberOfLocalParameters)


    def IsInsideVirtualDomain(self, *args) -> "bool":
        """
        IsInsideVirtualDomain(itkImageToImageMetricv4F2F2_Superclass self, itkPointD2 point) -> bool
        IsInsideVirtualDomain(itkImageToImageMetricv4F2F2_Superclass self, itkIndex2 index) -> bool
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_IsInsideVirtualDomain(self, *args)

    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4F2F2_Superclass

    def cast(obj: 'itkLightObject') -> "itkImageToImageMetricv4F2F2_Superclass *":
        """cast(itkLightObject obj) -> itkImageToImageMetricv4F2F2_Superclass"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToImageMetricv4F2F2_Superclass

        Create a new object of the class itkImageToImageMetricv4F2F2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToImageMetricv4F2F2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToImageMetricv4F2F2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageMetricv4F2F2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageMetricv4F2F2_Superclass.SetFixedTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetFixedTransform, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.GetModifiableFixedTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetModifiableFixedTransform, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.GetFixedTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetFixedTransform, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.SetMovingTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetMovingTransform, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.GetModifiableMovingTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetModifiableMovingTransform, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.GetMovingTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetMovingTransform, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.SetTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetTransform, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.GetTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetTransform, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.GetNumberOfValidPoints = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetNumberOfValidPoints, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.SetVirtualDomain = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetVirtualDomain, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.SetVirtualDomainFromImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetVirtualDomainFromImage, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.SupportsArbitraryVirtualDomainSamples = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SupportsArbitraryVirtualDomainSamples, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.GetVirtualDomainTimeStamp = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualDomainTimeStamp, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.GetVirtualSpacing = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualSpacing, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.GetVirtualOrigin = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualOrigin, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.GetVirtualDirection = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualDirection, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.GetVirtualRegion = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualRegion, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.GetModifiableVirtualImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetModifiableVirtualImage, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.GetVirtualImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualImage, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.ComputeParameterOffsetFromVirtualIndex = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_ComputeParameterOffsetFromVirtualIndex, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.ComputeParameterOffsetFromVirtualPoint = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_ComputeParameterOffsetFromVirtualPoint, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass.IsInsideVirtualDomain = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_IsInsideVirtualDomain, None, itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass_swigregister = _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_swigregister
itkImageToImageMetricv4F2F2_Superclass_swigregister(itkImageToImageMetricv4F2F2_Superclass)

def itkImageToImageMetricv4F2F2_Superclass_cast(obj: 'itkLightObject') -> "itkImageToImageMetricv4F2F2_Superclass *":
    """itkImageToImageMetricv4F2F2_Superclass_cast(itkLightObject obj) -> itkImageToImageMetricv4F2F2_Superclass"""
    return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_cast(obj)

class itkImageToImageMetricv4F3F3_Superclass(itkObjectToObjectMetricBasePython.itkObjectToObjectMetricBaseTemplateD):
    """Proxy of C++ itkImageToImageMetricv4F3F3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedTransform(self, _arg: 'itkTransformD33') -> "void":
        """SetFixedTransform(itkImageToImageMetricv4F3F3_Superclass self, itkTransformD33 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetFixedTransform(self, _arg)


    def GetModifiableFixedTransform(self) -> "itkTransformD33 *":
        """GetModifiableFixedTransform(itkImageToImageMetricv4F3F3_Superclass self) -> itkTransformD33"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetModifiableFixedTransform(self)


    def GetFixedTransform(self, *args) -> "itkTransformD33 *":
        """
        GetFixedTransform(itkImageToImageMetricv4F3F3_Superclass self) -> itkTransformD33
        GetFixedTransform(itkImageToImageMetricv4F3F3_Superclass self) -> itkTransformD33
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetFixedTransform(self, *args)


    def SetMovingTransform(self, _arg: 'itkTransformD33') -> "void":
        """SetMovingTransform(itkImageToImageMetricv4F3F3_Superclass self, itkTransformD33 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetMovingTransform(self, _arg)


    def GetModifiableMovingTransform(self) -> "itkTransformD33 *":
        """GetModifiableMovingTransform(itkImageToImageMetricv4F3F3_Superclass self) -> itkTransformD33"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetModifiableMovingTransform(self)


    def GetMovingTransform(self, *args) -> "itkTransformD33 *":
        """
        GetMovingTransform(itkImageToImageMetricv4F3F3_Superclass self) -> itkTransformD33
        GetMovingTransform(itkImageToImageMetricv4F3F3_Superclass self) -> itkTransformD33
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetMovingTransform(self, *args)


    def SetTransform(self, transform: 'itkTransformD33') -> "void":
        """SetTransform(itkImageToImageMetricv4F3F3_Superclass self, itkTransformD33 transform)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetTransform(self, transform)


    def GetTransform(self) -> "itkTransformD33 const *":
        """GetTransform(itkImageToImageMetricv4F3F3_Superclass self) -> itkTransformD33"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetTransform(self)


    def GetNumberOfValidPoints(self) -> "unsigned long long":
        """GetNumberOfValidPoints(itkImageToImageMetricv4F3F3_Superclass self) -> unsigned long long"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetNumberOfValidPoints(self)


    def SetVirtualDomain(self, spacing: 'itkVectorD3', origin: 'itkPointD3', direction: 'itkMatrixD33', region: 'itkImageRegion3') -> "void":
        """SetVirtualDomain(itkImageToImageMetricv4F3F3_Superclass self, itkVectorD3 spacing, itkPointD3 origin, itkMatrixD33 direction, itkImageRegion3 region)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetVirtualDomain(self, spacing, origin, direction, region)


    def SetVirtualDomainFromImage(self, virtualImage: 'itkImageF3') -> "void":
        """SetVirtualDomainFromImage(itkImageToImageMetricv4F3F3_Superclass self, itkImageF3 virtualImage)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetVirtualDomainFromImage(self, virtualImage)


    def SupportsArbitraryVirtualDomainSamples(self) -> "bool":
        """SupportsArbitraryVirtualDomainSamples(itkImageToImageMetricv4F3F3_Superclass self) -> bool"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SupportsArbitraryVirtualDomainSamples(self)


    def GetVirtualDomainTimeStamp(self) -> "itkTimeStamp const &":
        """GetVirtualDomainTimeStamp(itkImageToImageMetricv4F3F3_Superclass self) -> itkTimeStamp"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualDomainTimeStamp(self)


    def GetVirtualSpacing(self) -> "itkVectorD3":
        """GetVirtualSpacing(itkImageToImageMetricv4F3F3_Superclass self) -> itkVectorD3"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualSpacing(self)


    def GetVirtualOrigin(self) -> "itkPointD3":
        """GetVirtualOrigin(itkImageToImageMetricv4F3F3_Superclass self) -> itkPointD3"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualOrigin(self)


    def GetVirtualDirection(self) -> "itkMatrixD33":
        """GetVirtualDirection(itkImageToImageMetricv4F3F3_Superclass self) -> itkMatrixD33"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualDirection(self)


    def GetVirtualRegion(self) -> "itkImageRegion3 const &":
        """GetVirtualRegion(itkImageToImageMetricv4F3F3_Superclass self) -> itkImageRegion3"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualRegion(self)


    def GetModifiableVirtualImage(self) -> "itkImageF3 *":
        """GetModifiableVirtualImage(itkImageToImageMetricv4F3F3_Superclass self) -> itkImageF3"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetModifiableVirtualImage(self)


    def GetVirtualImage(self, *args) -> "itkImageF3 *":
        """
        GetVirtualImage(itkImageToImageMetricv4F3F3_Superclass self) -> itkImageF3
        GetVirtualImage(itkImageToImageMetricv4F3F3_Superclass self) -> itkImageF3
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualImage(self, *args)


    def ComputeParameterOffsetFromVirtualIndex(self, index: 'itkIndex3', numberOfLocalParameters: 'unsigned int const &') -> "long long":
        """ComputeParameterOffsetFromVirtualIndex(itkImageToImageMetricv4F3F3_Superclass self, itkIndex3 index, unsigned int const & numberOfLocalParameters) -> long long"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_ComputeParameterOffsetFromVirtualIndex(self, index, numberOfLocalParameters)


    def ComputeParameterOffsetFromVirtualPoint(self, point: 'itkPointD3', numberOfLocalParameters: 'unsigned int const &') -> "long long":
        """ComputeParameterOffsetFromVirtualPoint(itkImageToImageMetricv4F3F3_Superclass self, itkPointD3 point, unsigned int const & numberOfLocalParameters) -> long long"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_ComputeParameterOffsetFromVirtualPoint(self, point, numberOfLocalParameters)


    def IsInsideVirtualDomain(self, *args) -> "bool":
        """
        IsInsideVirtualDomain(itkImageToImageMetricv4F3F3_Superclass self, itkPointD3 point) -> bool
        IsInsideVirtualDomain(itkImageToImageMetricv4F3F3_Superclass self, itkIndex3 index) -> bool
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_IsInsideVirtualDomain(self, *args)

    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4F3F3_Superclass

    def cast(obj: 'itkLightObject') -> "itkImageToImageMetricv4F3F3_Superclass *":
        """cast(itkLightObject obj) -> itkImageToImageMetricv4F3F3_Superclass"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToImageMetricv4F3F3_Superclass

        Create a new object of the class itkImageToImageMetricv4F3F3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToImageMetricv4F3F3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToImageMetricv4F3F3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageMetricv4F3F3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageMetricv4F3F3_Superclass.SetFixedTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetFixedTransform, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.GetModifiableFixedTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetModifiableFixedTransform, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.GetFixedTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetFixedTransform, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.SetMovingTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetMovingTransform, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.GetModifiableMovingTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetModifiableMovingTransform, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.GetMovingTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetMovingTransform, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.SetTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetTransform, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.GetTransform = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetTransform, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.GetNumberOfValidPoints = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetNumberOfValidPoints, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.SetVirtualDomain = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetVirtualDomain, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.SetVirtualDomainFromImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetVirtualDomainFromImage, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.SupportsArbitraryVirtualDomainSamples = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SupportsArbitraryVirtualDomainSamples, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.GetVirtualDomainTimeStamp = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualDomainTimeStamp, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.GetVirtualSpacing = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualSpacing, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.GetVirtualOrigin = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualOrigin, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.GetVirtualDirection = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualDirection, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.GetVirtualRegion = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualRegion, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.GetModifiableVirtualImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetModifiableVirtualImage, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.GetVirtualImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualImage, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.ComputeParameterOffsetFromVirtualIndex = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_ComputeParameterOffsetFromVirtualIndex, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.ComputeParameterOffsetFromVirtualPoint = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_ComputeParameterOffsetFromVirtualPoint, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass.IsInsideVirtualDomain = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_IsInsideVirtualDomain, None, itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass_swigregister = _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_swigregister
itkImageToImageMetricv4F3F3_Superclass_swigregister(itkImageToImageMetricv4F3F3_Superclass)

def itkImageToImageMetricv4F3F3_Superclass_cast(obj: 'itkLightObject') -> "itkImageToImageMetricv4F3F3_Superclass *":
    """itkImageToImageMetricv4F3F3_Superclass_cast(itkLightObject obj) -> itkImageToImageMetricv4F3F3_Superclass"""
    return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_cast(obj)

class itkImageToImageMetricv4F2F2(itkImageToImageMetricv4F2F2_Superclass):
    """Proxy of C++ itkImageToImageMetricv4F2F2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg: 'itkImageF2') -> "void":
        """SetFixedImage(itkImageToImageMetricv4F2F2 self, itkImageF2 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedImage(self, _arg)


    def GetFixedImage(self) -> "itkImageF2 const *":
        """GetFixedImage(itkImageToImageMetricv4F2F2 self) -> itkImageF2"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImage(self)


    def SetMovingImage(self, _arg: 'itkImageF2') -> "void":
        """SetMovingImage(itkImageToImageMetricv4F2F2 self, itkImageF2 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingImage(self, _arg)


    def GetMovingImage(self) -> "itkImageF2 const *":
        """GetMovingImage(itkImageToImageMetricv4F2F2 self) -> itkImageF2"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImage(self)


    def SetFixedInterpolator(self, _arg: 'itkInterpolateImageFunctionIF2D') -> "void":
        """SetFixedInterpolator(itkImageToImageMetricv4F2F2 self, itkInterpolateImageFunctionIF2D _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedInterpolator(self, _arg)


    def GetModifiableFixedInterpolator(self) -> "itkInterpolateImageFunctionIF2D *":
        """GetModifiableFixedInterpolator(itkImageToImageMetricv4F2F2 self) -> itkInterpolateImageFunctionIF2D"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableFixedInterpolator(self)


    def GetFixedInterpolator(self, *args) -> "itkInterpolateImageFunctionIF2D *":
        """
        GetFixedInterpolator(itkImageToImageMetricv4F2F2 self) -> itkInterpolateImageFunctionIF2D
        GetFixedInterpolator(itkImageToImageMetricv4F2F2 self) -> itkInterpolateImageFunctionIF2D
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedInterpolator(self, *args)


    def SetMovingInterpolator(self, _arg: 'itkInterpolateImageFunctionIF2D') -> "void":
        """SetMovingInterpolator(itkImageToImageMetricv4F2F2 self, itkInterpolateImageFunctionIF2D _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingInterpolator(self, _arg)


    def GetModifiableMovingInterpolator(self) -> "itkInterpolateImageFunctionIF2D *":
        """GetModifiableMovingInterpolator(itkImageToImageMetricv4F2F2 self) -> itkInterpolateImageFunctionIF2D"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableMovingInterpolator(self)


    def GetMovingInterpolator(self, *args) -> "itkInterpolateImageFunctionIF2D *":
        """
        GetMovingInterpolator(itkImageToImageMetricv4F2F2 self) -> itkInterpolateImageFunctionIF2D
        GetMovingInterpolator(itkImageToImageMetricv4F2F2 self) -> itkInterpolateImageFunctionIF2D
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingInterpolator(self, *args)


    def SetMovingImageMask(self, *args) -> "void":
        """
        SetMovingImageMask(itkImageToImageMetricv4F2F2 self, itkSpatialObject2 _arg)
        SetMovingImageMask(itkImageToImageMetricv4F2F2 self, itkSpatialObject2 _arg)
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingImageMask(self, *args)


    def GetMovingImageMask(self) -> "itkSpatialObject2 const *":
        """GetMovingImageMask(itkImageToImageMetricv4F2F2 self) -> itkSpatialObject2"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImageMask(self)


    def SetFixedImageMask(self, *args) -> "void":
        """
        SetFixedImageMask(itkImageToImageMetricv4F2F2 self, itkSpatialObject2 _arg)
        SetFixedImageMask(itkImageToImageMetricv4F2F2 self, itkSpatialObject2 _arg)
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedImageMask(self, *args)


    def GetFixedImageMask(self) -> "itkSpatialObject2 const *":
        """GetFixedImageMask(itkImageToImageMetricv4F2F2 self) -> itkSpatialObject2"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImageMask(self)


    def SetFixedSampledPointSet(self, *args) -> "void":
        """
        SetFixedSampledPointSet(itkImageToImageMetricv4F2F2 self, itkPointSetF2 _arg)
        SetFixedSampledPointSet(itkImageToImageMetricv4F2F2 self, itkPointSetF2 _arg)
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedSampledPointSet(self, *args)


    def GetFixedSampledPointSet(self) -> "itkPointSetF2 const *":
        """GetFixedSampledPointSet(itkImageToImageMetricv4F2F2 self) -> itkPointSetF2"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedSampledPointSet(self)


    def SetVirtualSampledPointSet(self, _arg: 'itkPointSetF2') -> "void":
        """SetVirtualSampledPointSet(itkImageToImageMetricv4F2F2 self, itkPointSetF2 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetVirtualSampledPointSet(self, _arg)


    def GetVirtualSampledPointSet(self) -> "itkPointSetF2 const *":
        """GetVirtualSampledPointSet(itkImageToImageMetricv4F2F2 self) -> itkPointSetF2"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetVirtualSampledPointSet(self)


    def SetUseSampledPointSet(self, _arg: 'bool const') -> "void":
        """SetUseSampledPointSet(itkImageToImageMetricv4F2F2 self, bool const _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseSampledPointSet(self, _arg)


    def GetUseSampledPointSet(self) -> "bool const &":
        """GetUseSampledPointSet(itkImageToImageMetricv4F2F2 self) -> bool const &"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseSampledPointSet(self)


    def UseSampledPointSetOn(self) -> "void":
        """UseSampledPointSetOn(itkImageToImageMetricv4F2F2 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseSampledPointSetOn(self)


    def UseSampledPointSetOff(self) -> "void":
        """UseSampledPointSetOff(itkImageToImageMetricv4F2F2 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseSampledPointSetOff(self)


    def SetUseVirtualSampledPointSet(self, _arg: 'bool const') -> "void":
        """SetUseVirtualSampledPointSet(itkImageToImageMetricv4F2F2 self, bool const _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseVirtualSampledPointSet(self, _arg)


    def GetUseVirtualSampledPointSet(self) -> "bool const &":
        """GetUseVirtualSampledPointSet(itkImageToImageMetricv4F2F2 self) -> bool const &"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseVirtualSampledPointSet(self)


    def UseVirtualSampledPointSetOn(self) -> "void":
        """UseVirtualSampledPointSetOn(itkImageToImageMetricv4F2F2 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseVirtualSampledPointSetOn(self)


    def UseVirtualSampledPointSetOff(self) -> "void":
        """UseVirtualSampledPointSetOff(itkImageToImageMetricv4F2F2 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseVirtualSampledPointSetOff(self)


    def SetUseFixedSampledPointSet(self, v: 'bool') -> "void":
        """SetUseFixedSampledPointSet(itkImageToImageMetricv4F2F2 self, bool v)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseFixedSampledPointSet(self, v)


    def GetUseFixedSampledPointSet(self) -> "bool":
        """GetUseFixedSampledPointSet(itkImageToImageMetricv4F2F2 self) -> bool"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseFixedSampledPointSet(self)


    def UseFixedSampledPointSetOn(self) -> "void":
        """UseFixedSampledPointSetOn(itkImageToImageMetricv4F2F2 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFixedSampledPointSetOn(self)


    def UseFixedSampledPointSetOff(self) -> "void":
        """UseFixedSampledPointSetOff(itkImageToImageMetricv4F2F2 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFixedSampledPointSetOff(self)


    def SetFixedImageGradientFilter(self, _arg: 'itkImageToImageFilterIF2ICVD22') -> "void":
        """SetFixedImageGradientFilter(itkImageToImageMetricv4F2F2 self, itkImageToImageFilterIF2ICVD22 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedImageGradientFilter(self, _arg)


    def GetModifiableFixedImageGradientFilter(self) -> "itkImageToImageFilterIF2ICVD22 *":
        """GetModifiableFixedImageGradientFilter(itkImageToImageMetricv4F2F2 self) -> itkImageToImageFilterIF2ICVD22"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableFixedImageGradientFilter(self)


    def GetFixedImageGradientFilter(self, *args) -> "itkImageToImageFilterIF2ICVD22 *":
        """
        GetFixedImageGradientFilter(itkImageToImageMetricv4F2F2 self) -> itkImageToImageFilterIF2ICVD22
        GetFixedImageGradientFilter(itkImageToImageMetricv4F2F2 self) -> itkImageToImageFilterIF2ICVD22
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImageGradientFilter(self, *args)


    def SetMovingImageGradientFilter(self, _arg: 'itkImageToImageFilterIF2ICVD22') -> "void":
        """SetMovingImageGradientFilter(itkImageToImageMetricv4F2F2 self, itkImageToImageFilterIF2ICVD22 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingImageGradientFilter(self, _arg)


    def GetModifiableMovingImageGradientFilter(self) -> "itkImageToImageFilterIF2ICVD22 *":
        """GetModifiableMovingImageGradientFilter(itkImageToImageMetricv4F2F2 self) -> itkImageToImageFilterIF2ICVD22"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableMovingImageGradientFilter(self)


    def GetMovingImageGradientFilter(self, *args) -> "itkImageToImageFilterIF2ICVD22 *":
        """
        GetMovingImageGradientFilter(itkImageToImageMetricv4F2F2 self) -> itkImageToImageFilterIF2ICVD22
        GetMovingImageGradientFilter(itkImageToImageMetricv4F2F2 self) -> itkImageToImageFilterIF2ICVD22
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImageGradientFilter(self, *args)


    def SetFixedImageGradientCalculator(self, _arg: 'itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > *') -> "void":
        """SetFixedImageGradientCalculator(itkImageToImageMetricv4F2F2 self, itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > * _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedImageGradientCalculator(self, _arg)


    def GetModifiableFixedImageGradientCalculator(self) -> "itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > *":
        """GetModifiableFixedImageGradientCalculator(itkImageToImageMetricv4F2F2 self) -> itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > *"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableFixedImageGradientCalculator(self)


    def GetFixedImageGradientCalculator(self, *args) -> "itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > *":
        """
        GetFixedImageGradientCalculator(itkImageToImageMetricv4F2F2 self) -> itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > const
        GetFixedImageGradientCalculator(itkImageToImageMetricv4F2F2 self) -> itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > *
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImageGradientCalculator(self, *args)


    def SetMovingImageGradientCalculator(self, _arg: 'itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > *') -> "void":
        """SetMovingImageGradientCalculator(itkImageToImageMetricv4F2F2 self, itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > * _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingImageGradientCalculator(self, _arg)


    def GetModifiableMovingImageGradientCalculator(self) -> "itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > *":
        """GetModifiableMovingImageGradientCalculator(itkImageToImageMetricv4F2F2 self) -> itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > *"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableMovingImageGradientCalculator(self)


    def GetMovingImageGradientCalculator(self, *args) -> "itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > *":
        """
        GetMovingImageGradientCalculator(itkImageToImageMetricv4F2F2 self) -> itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > const
        GetMovingImageGradientCalculator(itkImageToImageMetricv4F2F2 self) -> itk::ImageFunction< itk::Image< float,2 >,itk::CovariantVector< double,2 >,double > *
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImageGradientCalculator(self, *args)


    def SetUseFixedImageGradientFilter(self, _arg: 'bool const') -> "void":
        """SetUseFixedImageGradientFilter(itkImageToImageMetricv4F2F2 self, bool const _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseFixedImageGradientFilter(self, _arg)


    def GetUseFixedImageGradientFilter(self) -> "bool const &":
        """GetUseFixedImageGradientFilter(itkImageToImageMetricv4F2F2 self) -> bool const &"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseFixedImageGradientFilter(self)


    def UseFixedImageGradientFilterOn(self) -> "void":
        """UseFixedImageGradientFilterOn(itkImageToImageMetricv4F2F2 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFixedImageGradientFilterOn(self)


    def UseFixedImageGradientFilterOff(self) -> "void":
        """UseFixedImageGradientFilterOff(itkImageToImageMetricv4F2F2 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFixedImageGradientFilterOff(self)


    def SetUseMovingImageGradientFilter(self, _arg: 'bool const') -> "void":
        """SetUseMovingImageGradientFilter(itkImageToImageMetricv4F2F2 self, bool const _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseMovingImageGradientFilter(self, _arg)


    def GetUseMovingImageGradientFilter(self) -> "bool const &":
        """GetUseMovingImageGradientFilter(itkImageToImageMetricv4F2F2 self) -> bool const &"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseMovingImageGradientFilter(self)


    def UseMovingImageGradientFilterOn(self) -> "void":
        """UseMovingImageGradientFilterOn(itkImageToImageMetricv4F2F2 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseMovingImageGradientFilterOn(self)


    def UseMovingImageGradientFilterOff(self) -> "void":
        """UseMovingImageGradientFilterOff(itkImageToImageMetricv4F2F2 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseMovingImageGradientFilterOff(self)


    def GetNumberOfWorkUnitsUsed(self) -> "unsigned int":
        """GetNumberOfWorkUnitsUsed(itkImageToImageMetricv4F2F2 self) -> unsigned int"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetNumberOfWorkUnitsUsed(self)


    def SetMaximumNumberOfWorkUnits(self, workUnits: 'unsigned int const') -> "void":
        """SetMaximumNumberOfWorkUnits(itkImageToImageMetricv4F2F2 self, unsigned int const workUnits)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMaximumNumberOfWorkUnits(self, workUnits)


    def GetMaximumNumberOfWorkUnits(self) -> "unsigned int":
        """GetMaximumNumberOfWorkUnits(itkImageToImageMetricv4F2F2 self) -> unsigned int"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMaximumNumberOfWorkUnits(self)


    def GetNumberOfThreadsUsed(self) -> "unsigned int":
        """GetNumberOfThreadsUsed(itkImageToImageMetricv4F2F2 self) -> unsigned int"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetNumberOfThreadsUsed(self)


    def SetMaximumNumberOfThreads(self, count: 'unsigned int const') -> "void":
        """SetMaximumNumberOfThreads(itkImageToImageMetricv4F2F2 self, unsigned int const count)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMaximumNumberOfThreads(self, count)


    def GetMaximumNumberOfThreads(self) -> "unsigned int":
        """GetMaximumNumberOfThreads(itkImageToImageMetricv4F2F2 self) -> unsigned int"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMaximumNumberOfThreads(self)


    def FinalizeThread(self, arg0: 'unsigned int const') -> "void":
        """FinalizeThread(itkImageToImageMetricv4F2F2 self, unsigned int const arg0)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_FinalizeThread(self, arg0)


    def GetModifiableFixedImageGradientImage(self) -> "itkImageCVD22 *":
        """GetModifiableFixedImageGradientImage(itkImageToImageMetricv4F2F2 self) -> itkImageCVD22"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableFixedImageGradientImage(self)


    def GetFixedImageGradientImage(self, *args) -> "itkImageCVD22 *":
        """
        GetFixedImageGradientImage(itkImageToImageMetricv4F2F2 self) -> itkImageCVD22
        GetFixedImageGradientImage(itkImageToImageMetricv4F2F2 self) -> itkImageCVD22
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImageGradientImage(self, *args)


    def GetModifiableMovingImageGradientImage(self) -> "itkImageCVD22 *":
        """GetModifiableMovingImageGradientImage(itkImageToImageMetricv4F2F2 self) -> itkImageCVD22"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableMovingImageGradientImage(self)


    def GetMovingImageGradientImage(self, *args) -> "itkImageCVD22 *":
        """
        GetMovingImageGradientImage(itkImageToImageMetricv4F2F2 self) -> itkImageCVD22
        GetMovingImageGradientImage(itkImageToImageMetricv4F2F2 self) -> itkImageCVD22
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImageGradientImage(self, *args)


    def GetNumberOfDomainPoints(self) -> "unsigned long long":
        """GetNumberOfDomainPoints(itkImageToImageMetricv4F2F2 self) -> unsigned long long"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetNumberOfDomainPoints(self)


    def SetUseFloatingPointCorrection(self, _arg: 'bool const') -> "void":
        """SetUseFloatingPointCorrection(itkImageToImageMetricv4F2F2 self, bool const _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseFloatingPointCorrection(self, _arg)


    def GetUseFloatingPointCorrection(self) -> "bool const &":
        """GetUseFloatingPointCorrection(itkImageToImageMetricv4F2F2 self) -> bool const &"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseFloatingPointCorrection(self)


    def UseFloatingPointCorrectionOn(self) -> "void":
        """UseFloatingPointCorrectionOn(itkImageToImageMetricv4F2F2 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFloatingPointCorrectionOn(self)


    def UseFloatingPointCorrectionOff(self) -> "void":
        """UseFloatingPointCorrectionOff(itkImageToImageMetricv4F2F2 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFloatingPointCorrectionOff(self)


    def SetFloatingPointCorrectionResolution(self, _arg: 'double const') -> "void":
        """SetFloatingPointCorrectionResolution(itkImageToImageMetricv4F2F2 self, double const _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFloatingPointCorrectionResolution(self, _arg)


    def GetFloatingPointCorrectionResolution(self) -> "double":
        """GetFloatingPointCorrectionResolution(itkImageToImageMetricv4F2F2 self) -> double"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFloatingPointCorrectionResolution(self)


    def GetNumberOfSkippedFixedSampledPoints(self) -> "unsigned long long const &":
        """GetNumberOfSkippedFixedSampledPoints(itkImageToImageMetricv4F2F2 self) -> unsigned long long const &"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetNumberOfSkippedFixedSampledPoints(self)

    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4F2F2

    def cast(obj: 'itkLightObject') -> "itkImageToImageMetricv4F2F2 *":
        """cast(itkLightObject obj) -> itkImageToImageMetricv4F2F2"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToImageMetricv4F2F2

        Create a new object of the class itkImageToImageMetricv4F2F2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToImageMetricv4F2F2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToImageMetricv4F2F2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageMetricv4F2F2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageMetricv4F2F2.SetFixedImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedImage, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetFixedImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImage, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetMovingImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingImage, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetMovingImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImage, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetFixedInterpolator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedInterpolator, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetModifiableFixedInterpolator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableFixedInterpolator, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetFixedInterpolator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedInterpolator, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetMovingInterpolator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingInterpolator, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetModifiableMovingInterpolator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableMovingInterpolator, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetMovingInterpolator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingInterpolator, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetMovingImageMask = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingImageMask, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetMovingImageMask = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImageMask, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetFixedImageMask = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedImageMask, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetFixedImageMask = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImageMask, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetFixedSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedSampledPointSet, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetFixedSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedSampledPointSet, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetVirtualSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetVirtualSampledPointSet, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetVirtualSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetVirtualSampledPointSet, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetUseSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseSampledPointSet, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetUseSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseSampledPointSet, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.UseSampledPointSetOn = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseSampledPointSetOn, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.UseSampledPointSetOff = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseSampledPointSetOff, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetUseVirtualSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseVirtualSampledPointSet, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetUseVirtualSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseVirtualSampledPointSet, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.UseVirtualSampledPointSetOn = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseVirtualSampledPointSetOn, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.UseVirtualSampledPointSetOff = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseVirtualSampledPointSetOff, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetUseFixedSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseFixedSampledPointSet, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetUseFixedSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseFixedSampledPointSet, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.UseFixedSampledPointSetOn = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFixedSampledPointSetOn, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.UseFixedSampledPointSetOff = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFixedSampledPointSetOff, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetFixedImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedImageGradientFilter, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetModifiableFixedImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableFixedImageGradientFilter, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetFixedImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImageGradientFilter, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetMovingImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingImageGradientFilter, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetModifiableMovingImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableMovingImageGradientFilter, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetMovingImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImageGradientFilter, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetFixedImageGradientCalculator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedImageGradientCalculator, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetModifiableFixedImageGradientCalculator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableFixedImageGradientCalculator, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetFixedImageGradientCalculator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImageGradientCalculator, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetMovingImageGradientCalculator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingImageGradientCalculator, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetModifiableMovingImageGradientCalculator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableMovingImageGradientCalculator, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetMovingImageGradientCalculator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImageGradientCalculator, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetUseFixedImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseFixedImageGradientFilter, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetUseFixedImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseFixedImageGradientFilter, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.UseFixedImageGradientFilterOn = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFixedImageGradientFilterOn, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.UseFixedImageGradientFilterOff = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFixedImageGradientFilterOff, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetUseMovingImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseMovingImageGradientFilter, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetUseMovingImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseMovingImageGradientFilter, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.UseMovingImageGradientFilterOn = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseMovingImageGradientFilterOn, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.UseMovingImageGradientFilterOff = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseMovingImageGradientFilterOff, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetNumberOfWorkUnitsUsed = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetNumberOfWorkUnitsUsed, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetMaximumNumberOfWorkUnits = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMaximumNumberOfWorkUnits, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetMaximumNumberOfWorkUnits = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMaximumNumberOfWorkUnits, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetNumberOfThreadsUsed = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetNumberOfThreadsUsed, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetMaximumNumberOfThreads = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMaximumNumberOfThreads, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetMaximumNumberOfThreads = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMaximumNumberOfThreads, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.FinalizeThread = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_FinalizeThread, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetModifiableFixedImageGradientImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableFixedImageGradientImage, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetFixedImageGradientImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImageGradientImage, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetModifiableMovingImageGradientImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableMovingImageGradientImage, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetMovingImageGradientImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImageGradientImage, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetNumberOfDomainPoints = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetNumberOfDomainPoints, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetUseFloatingPointCorrection = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseFloatingPointCorrection, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetUseFloatingPointCorrection = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseFloatingPointCorrection, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.UseFloatingPointCorrectionOn = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFloatingPointCorrectionOn, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.UseFloatingPointCorrectionOff = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFloatingPointCorrectionOff, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.SetFloatingPointCorrectionResolution = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFloatingPointCorrectionResolution, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetFloatingPointCorrectionResolution = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFloatingPointCorrectionResolution, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2.GetNumberOfSkippedFixedSampledPoints = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetNumberOfSkippedFixedSampledPoints, None, itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2_swigregister = _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_swigregister
itkImageToImageMetricv4F2F2_swigregister(itkImageToImageMetricv4F2F2)

def itkImageToImageMetricv4F2F2_cast(obj: 'itkLightObject') -> "itkImageToImageMetricv4F2F2 *":
    """itkImageToImageMetricv4F2F2_cast(itkLightObject obj) -> itkImageToImageMetricv4F2F2"""
    return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_cast(obj)

class itkImageToImageMetricv4F3F3(itkImageToImageMetricv4F3F3_Superclass):
    """Proxy of C++ itkImageToImageMetricv4F3F3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg: 'itkImageF3') -> "void":
        """SetFixedImage(itkImageToImageMetricv4F3F3 self, itkImageF3 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedImage(self, _arg)


    def GetFixedImage(self) -> "itkImageF3 const *":
        """GetFixedImage(itkImageToImageMetricv4F3F3 self) -> itkImageF3"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImage(self)


    def SetMovingImage(self, _arg: 'itkImageF3') -> "void":
        """SetMovingImage(itkImageToImageMetricv4F3F3 self, itkImageF3 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingImage(self, _arg)


    def GetMovingImage(self) -> "itkImageF3 const *":
        """GetMovingImage(itkImageToImageMetricv4F3F3 self) -> itkImageF3"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImage(self)


    def SetFixedInterpolator(self, _arg: 'itkInterpolateImageFunctionIF3D') -> "void":
        """SetFixedInterpolator(itkImageToImageMetricv4F3F3 self, itkInterpolateImageFunctionIF3D _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedInterpolator(self, _arg)


    def GetModifiableFixedInterpolator(self) -> "itkInterpolateImageFunctionIF3D *":
        """GetModifiableFixedInterpolator(itkImageToImageMetricv4F3F3 self) -> itkInterpolateImageFunctionIF3D"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableFixedInterpolator(self)


    def GetFixedInterpolator(self, *args) -> "itkInterpolateImageFunctionIF3D *":
        """
        GetFixedInterpolator(itkImageToImageMetricv4F3F3 self) -> itkInterpolateImageFunctionIF3D
        GetFixedInterpolator(itkImageToImageMetricv4F3F3 self) -> itkInterpolateImageFunctionIF3D
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedInterpolator(self, *args)


    def SetMovingInterpolator(self, _arg: 'itkInterpolateImageFunctionIF3D') -> "void":
        """SetMovingInterpolator(itkImageToImageMetricv4F3F3 self, itkInterpolateImageFunctionIF3D _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingInterpolator(self, _arg)


    def GetModifiableMovingInterpolator(self) -> "itkInterpolateImageFunctionIF3D *":
        """GetModifiableMovingInterpolator(itkImageToImageMetricv4F3F3 self) -> itkInterpolateImageFunctionIF3D"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableMovingInterpolator(self)


    def GetMovingInterpolator(self, *args) -> "itkInterpolateImageFunctionIF3D *":
        """
        GetMovingInterpolator(itkImageToImageMetricv4F3F3 self) -> itkInterpolateImageFunctionIF3D
        GetMovingInterpolator(itkImageToImageMetricv4F3F3 self) -> itkInterpolateImageFunctionIF3D
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingInterpolator(self, *args)


    def SetMovingImageMask(self, *args) -> "void":
        """
        SetMovingImageMask(itkImageToImageMetricv4F3F3 self, itkSpatialObject3 _arg)
        SetMovingImageMask(itkImageToImageMetricv4F3F3 self, itkSpatialObject3 _arg)
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingImageMask(self, *args)


    def GetMovingImageMask(self) -> "itkSpatialObject3 const *":
        """GetMovingImageMask(itkImageToImageMetricv4F3F3 self) -> itkSpatialObject3"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImageMask(self)


    def SetFixedImageMask(self, *args) -> "void":
        """
        SetFixedImageMask(itkImageToImageMetricv4F3F3 self, itkSpatialObject3 _arg)
        SetFixedImageMask(itkImageToImageMetricv4F3F3 self, itkSpatialObject3 _arg)
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedImageMask(self, *args)


    def GetFixedImageMask(self) -> "itkSpatialObject3 const *":
        """GetFixedImageMask(itkImageToImageMetricv4F3F3 self) -> itkSpatialObject3"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImageMask(self)


    def SetFixedSampledPointSet(self, *args) -> "void":
        """
        SetFixedSampledPointSet(itkImageToImageMetricv4F3F3 self, itkPointSetF3 _arg)
        SetFixedSampledPointSet(itkImageToImageMetricv4F3F3 self, itkPointSetF3 _arg)
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedSampledPointSet(self, *args)


    def GetFixedSampledPointSet(self) -> "itkPointSetF3 const *":
        """GetFixedSampledPointSet(itkImageToImageMetricv4F3F3 self) -> itkPointSetF3"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedSampledPointSet(self)


    def SetVirtualSampledPointSet(self, _arg: 'itkPointSetF3') -> "void":
        """SetVirtualSampledPointSet(itkImageToImageMetricv4F3F3 self, itkPointSetF3 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetVirtualSampledPointSet(self, _arg)


    def GetVirtualSampledPointSet(self) -> "itkPointSetF3 const *":
        """GetVirtualSampledPointSet(itkImageToImageMetricv4F3F3 self) -> itkPointSetF3"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetVirtualSampledPointSet(self)


    def SetUseSampledPointSet(self, _arg: 'bool const') -> "void":
        """SetUseSampledPointSet(itkImageToImageMetricv4F3F3 self, bool const _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseSampledPointSet(self, _arg)


    def GetUseSampledPointSet(self) -> "bool const &":
        """GetUseSampledPointSet(itkImageToImageMetricv4F3F3 self) -> bool const &"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseSampledPointSet(self)


    def UseSampledPointSetOn(self) -> "void":
        """UseSampledPointSetOn(itkImageToImageMetricv4F3F3 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseSampledPointSetOn(self)


    def UseSampledPointSetOff(self) -> "void":
        """UseSampledPointSetOff(itkImageToImageMetricv4F3F3 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseSampledPointSetOff(self)


    def SetUseVirtualSampledPointSet(self, _arg: 'bool const') -> "void":
        """SetUseVirtualSampledPointSet(itkImageToImageMetricv4F3F3 self, bool const _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseVirtualSampledPointSet(self, _arg)


    def GetUseVirtualSampledPointSet(self) -> "bool const &":
        """GetUseVirtualSampledPointSet(itkImageToImageMetricv4F3F3 self) -> bool const &"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseVirtualSampledPointSet(self)


    def UseVirtualSampledPointSetOn(self) -> "void":
        """UseVirtualSampledPointSetOn(itkImageToImageMetricv4F3F3 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseVirtualSampledPointSetOn(self)


    def UseVirtualSampledPointSetOff(self) -> "void":
        """UseVirtualSampledPointSetOff(itkImageToImageMetricv4F3F3 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseVirtualSampledPointSetOff(self)


    def SetUseFixedSampledPointSet(self, v: 'bool') -> "void":
        """SetUseFixedSampledPointSet(itkImageToImageMetricv4F3F3 self, bool v)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseFixedSampledPointSet(self, v)


    def GetUseFixedSampledPointSet(self) -> "bool":
        """GetUseFixedSampledPointSet(itkImageToImageMetricv4F3F3 self) -> bool"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseFixedSampledPointSet(self)


    def UseFixedSampledPointSetOn(self) -> "void":
        """UseFixedSampledPointSetOn(itkImageToImageMetricv4F3F3 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFixedSampledPointSetOn(self)


    def UseFixedSampledPointSetOff(self) -> "void":
        """UseFixedSampledPointSetOff(itkImageToImageMetricv4F3F3 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFixedSampledPointSetOff(self)


    def SetFixedImageGradientFilter(self, _arg: 'itkImageToImageFilterIF3ICVD33') -> "void":
        """SetFixedImageGradientFilter(itkImageToImageMetricv4F3F3 self, itkImageToImageFilterIF3ICVD33 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedImageGradientFilter(self, _arg)


    def GetModifiableFixedImageGradientFilter(self) -> "itkImageToImageFilterIF3ICVD33 *":
        """GetModifiableFixedImageGradientFilter(itkImageToImageMetricv4F3F3 self) -> itkImageToImageFilterIF3ICVD33"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableFixedImageGradientFilter(self)


    def GetFixedImageGradientFilter(self, *args) -> "itkImageToImageFilterIF3ICVD33 *":
        """
        GetFixedImageGradientFilter(itkImageToImageMetricv4F3F3 self) -> itkImageToImageFilterIF3ICVD33
        GetFixedImageGradientFilter(itkImageToImageMetricv4F3F3 self) -> itkImageToImageFilterIF3ICVD33
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImageGradientFilter(self, *args)


    def SetMovingImageGradientFilter(self, _arg: 'itkImageToImageFilterIF3ICVD33') -> "void":
        """SetMovingImageGradientFilter(itkImageToImageMetricv4F3F3 self, itkImageToImageFilterIF3ICVD33 _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingImageGradientFilter(self, _arg)


    def GetModifiableMovingImageGradientFilter(self) -> "itkImageToImageFilterIF3ICVD33 *":
        """GetModifiableMovingImageGradientFilter(itkImageToImageMetricv4F3F3 self) -> itkImageToImageFilterIF3ICVD33"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableMovingImageGradientFilter(self)


    def GetMovingImageGradientFilter(self, *args) -> "itkImageToImageFilterIF3ICVD33 *":
        """
        GetMovingImageGradientFilter(itkImageToImageMetricv4F3F3 self) -> itkImageToImageFilterIF3ICVD33
        GetMovingImageGradientFilter(itkImageToImageMetricv4F3F3 self) -> itkImageToImageFilterIF3ICVD33
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImageGradientFilter(self, *args)


    def SetFixedImageGradientCalculator(self, _arg: 'itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > *') -> "void":
        """SetFixedImageGradientCalculator(itkImageToImageMetricv4F3F3 self, itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > * _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedImageGradientCalculator(self, _arg)


    def GetModifiableFixedImageGradientCalculator(self) -> "itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > *":
        """GetModifiableFixedImageGradientCalculator(itkImageToImageMetricv4F3F3 self) -> itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > *"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableFixedImageGradientCalculator(self)


    def GetFixedImageGradientCalculator(self, *args) -> "itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > *":
        """
        GetFixedImageGradientCalculator(itkImageToImageMetricv4F3F3 self) -> itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > const
        GetFixedImageGradientCalculator(itkImageToImageMetricv4F3F3 self) -> itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > *
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImageGradientCalculator(self, *args)


    def SetMovingImageGradientCalculator(self, _arg: 'itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > *') -> "void":
        """SetMovingImageGradientCalculator(itkImageToImageMetricv4F3F3 self, itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > * _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingImageGradientCalculator(self, _arg)


    def GetModifiableMovingImageGradientCalculator(self) -> "itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > *":
        """GetModifiableMovingImageGradientCalculator(itkImageToImageMetricv4F3F3 self) -> itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > *"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableMovingImageGradientCalculator(self)


    def GetMovingImageGradientCalculator(self, *args) -> "itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > *":
        """
        GetMovingImageGradientCalculator(itkImageToImageMetricv4F3F3 self) -> itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > const
        GetMovingImageGradientCalculator(itkImageToImageMetricv4F3F3 self) -> itk::ImageFunction< itk::Image< float,3 >,itk::CovariantVector< double,3 >,double > *
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImageGradientCalculator(self, *args)


    def SetUseFixedImageGradientFilter(self, _arg: 'bool const') -> "void":
        """SetUseFixedImageGradientFilter(itkImageToImageMetricv4F3F3 self, bool const _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseFixedImageGradientFilter(self, _arg)


    def GetUseFixedImageGradientFilter(self) -> "bool const &":
        """GetUseFixedImageGradientFilter(itkImageToImageMetricv4F3F3 self) -> bool const &"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseFixedImageGradientFilter(self)


    def UseFixedImageGradientFilterOn(self) -> "void":
        """UseFixedImageGradientFilterOn(itkImageToImageMetricv4F3F3 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFixedImageGradientFilterOn(self)


    def UseFixedImageGradientFilterOff(self) -> "void":
        """UseFixedImageGradientFilterOff(itkImageToImageMetricv4F3F3 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFixedImageGradientFilterOff(self)


    def SetUseMovingImageGradientFilter(self, _arg: 'bool const') -> "void":
        """SetUseMovingImageGradientFilter(itkImageToImageMetricv4F3F3 self, bool const _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseMovingImageGradientFilter(self, _arg)


    def GetUseMovingImageGradientFilter(self) -> "bool const &":
        """GetUseMovingImageGradientFilter(itkImageToImageMetricv4F3F3 self) -> bool const &"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseMovingImageGradientFilter(self)


    def UseMovingImageGradientFilterOn(self) -> "void":
        """UseMovingImageGradientFilterOn(itkImageToImageMetricv4F3F3 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseMovingImageGradientFilterOn(self)


    def UseMovingImageGradientFilterOff(self) -> "void":
        """UseMovingImageGradientFilterOff(itkImageToImageMetricv4F3F3 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseMovingImageGradientFilterOff(self)


    def GetNumberOfWorkUnitsUsed(self) -> "unsigned int":
        """GetNumberOfWorkUnitsUsed(itkImageToImageMetricv4F3F3 self) -> unsigned int"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetNumberOfWorkUnitsUsed(self)


    def SetMaximumNumberOfWorkUnits(self, workUnits: 'unsigned int const') -> "void":
        """SetMaximumNumberOfWorkUnits(itkImageToImageMetricv4F3F3 self, unsigned int const workUnits)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMaximumNumberOfWorkUnits(self, workUnits)


    def GetMaximumNumberOfWorkUnits(self) -> "unsigned int":
        """GetMaximumNumberOfWorkUnits(itkImageToImageMetricv4F3F3 self) -> unsigned int"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMaximumNumberOfWorkUnits(self)


    def GetNumberOfThreadsUsed(self) -> "unsigned int":
        """GetNumberOfThreadsUsed(itkImageToImageMetricv4F3F3 self) -> unsigned int"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetNumberOfThreadsUsed(self)


    def SetMaximumNumberOfThreads(self, count: 'unsigned int const') -> "void":
        """SetMaximumNumberOfThreads(itkImageToImageMetricv4F3F3 self, unsigned int const count)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMaximumNumberOfThreads(self, count)


    def GetMaximumNumberOfThreads(self) -> "unsigned int":
        """GetMaximumNumberOfThreads(itkImageToImageMetricv4F3F3 self) -> unsigned int"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMaximumNumberOfThreads(self)


    def FinalizeThread(self, arg0: 'unsigned int const') -> "void":
        """FinalizeThread(itkImageToImageMetricv4F3F3 self, unsigned int const arg0)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_FinalizeThread(self, arg0)


    def GetModifiableFixedImageGradientImage(self) -> "itkImageCVD33 *":
        """GetModifiableFixedImageGradientImage(itkImageToImageMetricv4F3F3 self) -> itkImageCVD33"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableFixedImageGradientImage(self)


    def GetFixedImageGradientImage(self, *args) -> "itkImageCVD33 *":
        """
        GetFixedImageGradientImage(itkImageToImageMetricv4F3F3 self) -> itkImageCVD33
        GetFixedImageGradientImage(itkImageToImageMetricv4F3F3 self) -> itkImageCVD33
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImageGradientImage(self, *args)


    def GetModifiableMovingImageGradientImage(self) -> "itkImageCVD33 *":
        """GetModifiableMovingImageGradientImage(itkImageToImageMetricv4F3F3 self) -> itkImageCVD33"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableMovingImageGradientImage(self)


    def GetMovingImageGradientImage(self, *args) -> "itkImageCVD33 *":
        """
        GetMovingImageGradientImage(itkImageToImageMetricv4F3F3 self) -> itkImageCVD33
        GetMovingImageGradientImage(itkImageToImageMetricv4F3F3 self) -> itkImageCVD33
        """
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImageGradientImage(self, *args)


    def GetNumberOfDomainPoints(self) -> "unsigned long long":
        """GetNumberOfDomainPoints(itkImageToImageMetricv4F3F3 self) -> unsigned long long"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetNumberOfDomainPoints(self)


    def SetUseFloatingPointCorrection(self, _arg: 'bool const') -> "void":
        """SetUseFloatingPointCorrection(itkImageToImageMetricv4F3F3 self, bool const _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseFloatingPointCorrection(self, _arg)


    def GetUseFloatingPointCorrection(self) -> "bool const &":
        """GetUseFloatingPointCorrection(itkImageToImageMetricv4F3F3 self) -> bool const &"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseFloatingPointCorrection(self)


    def UseFloatingPointCorrectionOn(self) -> "void":
        """UseFloatingPointCorrectionOn(itkImageToImageMetricv4F3F3 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFloatingPointCorrectionOn(self)


    def UseFloatingPointCorrectionOff(self) -> "void":
        """UseFloatingPointCorrectionOff(itkImageToImageMetricv4F3F3 self)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFloatingPointCorrectionOff(self)


    def SetFloatingPointCorrectionResolution(self, _arg: 'double const') -> "void":
        """SetFloatingPointCorrectionResolution(itkImageToImageMetricv4F3F3 self, double const _arg)"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFloatingPointCorrectionResolution(self, _arg)


    def GetFloatingPointCorrectionResolution(self) -> "double":
        """GetFloatingPointCorrectionResolution(itkImageToImageMetricv4F3F3 self) -> double"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFloatingPointCorrectionResolution(self)


    def GetNumberOfSkippedFixedSampledPoints(self) -> "unsigned long long const &":
        """GetNumberOfSkippedFixedSampledPoints(itkImageToImageMetricv4F3F3 self) -> unsigned long long const &"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetNumberOfSkippedFixedSampledPoints(self)

    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4F3F3

    def cast(obj: 'itkLightObject') -> "itkImageToImageMetricv4F3F3 *":
        """cast(itkLightObject obj) -> itkImageToImageMetricv4F3F3"""
        return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToImageMetricv4F3F3

        Create a new object of the class itkImageToImageMetricv4F3F3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToImageMetricv4F3F3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToImageMetricv4F3F3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageMetricv4F3F3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageMetricv4F3F3.SetFixedImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedImage, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetFixedImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImage, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetMovingImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingImage, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetMovingImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImage, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetFixedInterpolator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedInterpolator, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetModifiableFixedInterpolator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableFixedInterpolator, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetFixedInterpolator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedInterpolator, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetMovingInterpolator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingInterpolator, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetModifiableMovingInterpolator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableMovingInterpolator, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetMovingInterpolator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingInterpolator, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetMovingImageMask = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingImageMask, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetMovingImageMask = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImageMask, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetFixedImageMask = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedImageMask, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetFixedImageMask = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImageMask, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetFixedSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedSampledPointSet, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetFixedSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedSampledPointSet, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetVirtualSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetVirtualSampledPointSet, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetVirtualSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetVirtualSampledPointSet, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetUseSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseSampledPointSet, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetUseSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseSampledPointSet, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.UseSampledPointSetOn = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseSampledPointSetOn, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.UseSampledPointSetOff = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseSampledPointSetOff, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetUseVirtualSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseVirtualSampledPointSet, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetUseVirtualSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseVirtualSampledPointSet, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.UseVirtualSampledPointSetOn = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseVirtualSampledPointSetOn, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.UseVirtualSampledPointSetOff = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseVirtualSampledPointSetOff, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetUseFixedSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseFixedSampledPointSet, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetUseFixedSampledPointSet = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseFixedSampledPointSet, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.UseFixedSampledPointSetOn = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFixedSampledPointSetOn, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.UseFixedSampledPointSetOff = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFixedSampledPointSetOff, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetFixedImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedImageGradientFilter, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetModifiableFixedImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableFixedImageGradientFilter, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetFixedImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImageGradientFilter, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetMovingImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingImageGradientFilter, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetModifiableMovingImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableMovingImageGradientFilter, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetMovingImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImageGradientFilter, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetFixedImageGradientCalculator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedImageGradientCalculator, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetModifiableFixedImageGradientCalculator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableFixedImageGradientCalculator, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetFixedImageGradientCalculator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImageGradientCalculator, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetMovingImageGradientCalculator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingImageGradientCalculator, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetModifiableMovingImageGradientCalculator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableMovingImageGradientCalculator, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetMovingImageGradientCalculator = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImageGradientCalculator, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetUseFixedImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseFixedImageGradientFilter, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetUseFixedImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseFixedImageGradientFilter, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.UseFixedImageGradientFilterOn = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFixedImageGradientFilterOn, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.UseFixedImageGradientFilterOff = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFixedImageGradientFilterOff, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetUseMovingImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseMovingImageGradientFilter, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetUseMovingImageGradientFilter = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseMovingImageGradientFilter, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.UseMovingImageGradientFilterOn = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseMovingImageGradientFilterOn, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.UseMovingImageGradientFilterOff = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseMovingImageGradientFilterOff, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetNumberOfWorkUnitsUsed = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetNumberOfWorkUnitsUsed, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetMaximumNumberOfWorkUnits = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMaximumNumberOfWorkUnits, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetMaximumNumberOfWorkUnits = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMaximumNumberOfWorkUnits, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetNumberOfThreadsUsed = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetNumberOfThreadsUsed, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetMaximumNumberOfThreads = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMaximumNumberOfThreads, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetMaximumNumberOfThreads = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMaximumNumberOfThreads, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.FinalizeThread = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_FinalizeThread, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetModifiableFixedImageGradientImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableFixedImageGradientImage, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetFixedImageGradientImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImageGradientImage, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetModifiableMovingImageGradientImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableMovingImageGradientImage, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetMovingImageGradientImage = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImageGradientImage, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetNumberOfDomainPoints = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetNumberOfDomainPoints, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetUseFloatingPointCorrection = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseFloatingPointCorrection, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetUseFloatingPointCorrection = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseFloatingPointCorrection, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.UseFloatingPointCorrectionOn = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFloatingPointCorrectionOn, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.UseFloatingPointCorrectionOff = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFloatingPointCorrectionOff, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.SetFloatingPointCorrectionResolution = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFloatingPointCorrectionResolution, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetFloatingPointCorrectionResolution = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFloatingPointCorrectionResolution, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3.GetNumberOfSkippedFixedSampledPoints = new_instancemethod(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetNumberOfSkippedFixedSampledPoints, None, itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3_swigregister = _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_swigregister
itkImageToImageMetricv4F3F3_swigregister(itkImageToImageMetricv4F3F3)

def itkImageToImageMetricv4F3F3_cast(obj: 'itkLightObject') -> "itkImageToImageMetricv4F3F3 *":
    """itkImageToImageMetricv4F3F3_cast(itkLightObject obj) -> itkImageToImageMetricv4F3F3"""
    return _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_cast(obj)



