# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkBoundedReciprocalImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkBoundedReciprocalImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkBoundedReciprocalImageFilterPython
            return _itkBoundedReciprocalImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkBoundedReciprocalImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkBoundedReciprocalImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkBoundedReciprocalImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkUnaryGeneratorImageFilterPython
import itkInPlaceImageFilterBPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython

def itkBoundedReciprocalImageFilterIF3IF3_New():
  return itkBoundedReciprocalImageFilterIF3IF3.New()


def itkBoundedReciprocalImageFilterIF2IF2_New():
  return itkBoundedReciprocalImageFilterIF2IF2.New()


def itkBoundedReciprocalImageFilterIUS3IUS3_New():
  return itkBoundedReciprocalImageFilterIUS3IUS3.New()


def itkBoundedReciprocalImageFilterIUS2IUS2_New():
  return itkBoundedReciprocalImageFilterIUS2IUS2.New()


def itkBoundedReciprocalImageFilterIUC3IUC3_New():
  return itkBoundedReciprocalImageFilterIUC3IUC3.New()


def itkBoundedReciprocalImageFilterIUC2IUC2_New():
  return itkBoundedReciprocalImageFilterIUC2IUC2.New()


def itkBoundedReciprocalImageFilterISS3ISS3_New():
  return itkBoundedReciprocalImageFilterISS3ISS3.New()


def itkBoundedReciprocalImageFilterISS2ISS2_New():
  return itkBoundedReciprocalImageFilterISS2ISS2.New()

class itkBoundedReciprocalImageFilterIF2IF2(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IF2):
    """Proxy of C++ itkBoundedReciprocalImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBoundedReciprocalImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkBoundedReciprocalImageFilterIF2IF2_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBoundedReciprocalImageFilterIF2IF2_Pointer":
        """Clone(itkBoundedReciprocalImageFilterIF2IF2 self) -> itkBoundedReciprocalImageFilterIF2IF2_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF2IF2_Clone(self)

    InputConvertibleToDoubleCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF2IF2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBoundedReciprocalImageFilterPython.delete_itkBoundedReciprocalImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterIF2IF2"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBoundedReciprocalImageFilterIF2IF2

        Create a new object of the class itkBoundedReciprocalImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundedReciprocalImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBoundedReciprocalImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBoundedReciprocalImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBoundedReciprocalImageFilterIF2IF2.Clone = new_instancemethod(_itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF2IF2_Clone, None, itkBoundedReciprocalImageFilterIF2IF2)
itkBoundedReciprocalImageFilterIF2IF2_swigregister = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF2IF2_swigregister
itkBoundedReciprocalImageFilterIF2IF2_swigregister(itkBoundedReciprocalImageFilterIF2IF2)

def itkBoundedReciprocalImageFilterIF2IF2___New_orig__() -> "itkBoundedReciprocalImageFilterIF2IF2_Pointer":
    """itkBoundedReciprocalImageFilterIF2IF2___New_orig__() -> itkBoundedReciprocalImageFilterIF2IF2_Pointer"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF2IF2___New_orig__()

def itkBoundedReciprocalImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterIF2IF2 *":
    """itkBoundedReciprocalImageFilterIF2IF2_cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterIF2IF2"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF2IF2_cast(obj)

class itkBoundedReciprocalImageFilterIF3IF3(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IF3):
    """Proxy of C++ itkBoundedReciprocalImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBoundedReciprocalImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkBoundedReciprocalImageFilterIF3IF3_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBoundedReciprocalImageFilterIF3IF3_Pointer":
        """Clone(itkBoundedReciprocalImageFilterIF3IF3 self) -> itkBoundedReciprocalImageFilterIF3IF3_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF3IF3_Clone(self)

    InputConvertibleToDoubleCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF3IF3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBoundedReciprocalImageFilterPython.delete_itkBoundedReciprocalImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterIF3IF3"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBoundedReciprocalImageFilterIF3IF3

        Create a new object of the class itkBoundedReciprocalImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundedReciprocalImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBoundedReciprocalImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBoundedReciprocalImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBoundedReciprocalImageFilterIF3IF3.Clone = new_instancemethod(_itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF3IF3_Clone, None, itkBoundedReciprocalImageFilterIF3IF3)
itkBoundedReciprocalImageFilterIF3IF3_swigregister = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF3IF3_swigregister
itkBoundedReciprocalImageFilterIF3IF3_swigregister(itkBoundedReciprocalImageFilterIF3IF3)

def itkBoundedReciprocalImageFilterIF3IF3___New_orig__() -> "itkBoundedReciprocalImageFilterIF3IF3_Pointer":
    """itkBoundedReciprocalImageFilterIF3IF3___New_orig__() -> itkBoundedReciprocalImageFilterIF3IF3_Pointer"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF3IF3___New_orig__()

def itkBoundedReciprocalImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterIF3IF3 *":
    """itkBoundedReciprocalImageFilterIF3IF3_cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterIF3IF3"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIF3IF3_cast(obj)

class itkBoundedReciprocalImageFilterISS2ISS2(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ISS2):
    """Proxy of C++ itkBoundedReciprocalImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBoundedReciprocalImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkBoundedReciprocalImageFilterISS2ISS2_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBoundedReciprocalImageFilterISS2ISS2_Pointer":
        """Clone(itkBoundedReciprocalImageFilterISS2ISS2 self) -> itkBoundedReciprocalImageFilterISS2ISS2_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS2ISS2_Clone(self)

    InputConvertibleToDoubleCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS2ISS2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS2ISS2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBoundedReciprocalImageFilterPython.delete_itkBoundedReciprocalImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterISS2ISS2"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBoundedReciprocalImageFilterISS2ISS2

        Create a new object of the class itkBoundedReciprocalImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundedReciprocalImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBoundedReciprocalImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBoundedReciprocalImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBoundedReciprocalImageFilterISS2ISS2.Clone = new_instancemethod(_itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS2ISS2_Clone, None, itkBoundedReciprocalImageFilterISS2ISS2)
itkBoundedReciprocalImageFilterISS2ISS2_swigregister = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS2ISS2_swigregister
itkBoundedReciprocalImageFilterISS2ISS2_swigregister(itkBoundedReciprocalImageFilterISS2ISS2)

def itkBoundedReciprocalImageFilterISS2ISS2___New_orig__() -> "itkBoundedReciprocalImageFilterISS2ISS2_Pointer":
    """itkBoundedReciprocalImageFilterISS2ISS2___New_orig__() -> itkBoundedReciprocalImageFilterISS2ISS2_Pointer"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS2ISS2___New_orig__()

def itkBoundedReciprocalImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterISS2ISS2 *":
    """itkBoundedReciprocalImageFilterISS2ISS2_cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterISS2ISS2"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS2ISS2_cast(obj)

class itkBoundedReciprocalImageFilterISS3ISS3(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ISS3):
    """Proxy of C++ itkBoundedReciprocalImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBoundedReciprocalImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkBoundedReciprocalImageFilterISS3ISS3_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBoundedReciprocalImageFilterISS3ISS3_Pointer":
        """Clone(itkBoundedReciprocalImageFilterISS3ISS3 self) -> itkBoundedReciprocalImageFilterISS3ISS3_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS3ISS3_Clone(self)

    InputConvertibleToDoubleCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS3ISS3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS3ISS3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBoundedReciprocalImageFilterPython.delete_itkBoundedReciprocalImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterISS3ISS3"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBoundedReciprocalImageFilterISS3ISS3

        Create a new object of the class itkBoundedReciprocalImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundedReciprocalImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBoundedReciprocalImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBoundedReciprocalImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBoundedReciprocalImageFilterISS3ISS3.Clone = new_instancemethod(_itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS3ISS3_Clone, None, itkBoundedReciprocalImageFilterISS3ISS3)
itkBoundedReciprocalImageFilterISS3ISS3_swigregister = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS3ISS3_swigregister
itkBoundedReciprocalImageFilterISS3ISS3_swigregister(itkBoundedReciprocalImageFilterISS3ISS3)

def itkBoundedReciprocalImageFilterISS3ISS3___New_orig__() -> "itkBoundedReciprocalImageFilterISS3ISS3_Pointer":
    """itkBoundedReciprocalImageFilterISS3ISS3___New_orig__() -> itkBoundedReciprocalImageFilterISS3ISS3_Pointer"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS3ISS3___New_orig__()

def itkBoundedReciprocalImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterISS3ISS3 *":
    """itkBoundedReciprocalImageFilterISS3ISS3_cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterISS3ISS3"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterISS3ISS3_cast(obj)

class itkBoundedReciprocalImageFilterIUC2IUC2(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUC2):
    """Proxy of C++ itkBoundedReciprocalImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBoundedReciprocalImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkBoundedReciprocalImageFilterIUC2IUC2_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBoundedReciprocalImageFilterIUC2IUC2_Pointer":
        """Clone(itkBoundedReciprocalImageFilterIUC2IUC2 self) -> itkBoundedReciprocalImageFilterIUC2IUC2_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC2IUC2_Clone(self)

    InputConvertibleToDoubleCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC2IUC2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC2IUC2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBoundedReciprocalImageFilterPython.delete_itkBoundedReciprocalImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterIUC2IUC2"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBoundedReciprocalImageFilterIUC2IUC2

        Create a new object of the class itkBoundedReciprocalImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundedReciprocalImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBoundedReciprocalImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBoundedReciprocalImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBoundedReciprocalImageFilterIUC2IUC2.Clone = new_instancemethod(_itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC2IUC2_Clone, None, itkBoundedReciprocalImageFilterIUC2IUC2)
itkBoundedReciprocalImageFilterIUC2IUC2_swigregister = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC2IUC2_swigregister
itkBoundedReciprocalImageFilterIUC2IUC2_swigregister(itkBoundedReciprocalImageFilterIUC2IUC2)

def itkBoundedReciprocalImageFilterIUC2IUC2___New_orig__() -> "itkBoundedReciprocalImageFilterIUC2IUC2_Pointer":
    """itkBoundedReciprocalImageFilterIUC2IUC2___New_orig__() -> itkBoundedReciprocalImageFilterIUC2IUC2_Pointer"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC2IUC2___New_orig__()

def itkBoundedReciprocalImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterIUC2IUC2 *":
    """itkBoundedReciprocalImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterIUC2IUC2"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC2IUC2_cast(obj)

class itkBoundedReciprocalImageFilterIUC3IUC3(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUC3):
    """Proxy of C++ itkBoundedReciprocalImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBoundedReciprocalImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkBoundedReciprocalImageFilterIUC3IUC3_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBoundedReciprocalImageFilterIUC3IUC3_Pointer":
        """Clone(itkBoundedReciprocalImageFilterIUC3IUC3 self) -> itkBoundedReciprocalImageFilterIUC3IUC3_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC3IUC3_Clone(self)

    InputConvertibleToDoubleCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC3IUC3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC3IUC3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBoundedReciprocalImageFilterPython.delete_itkBoundedReciprocalImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterIUC3IUC3"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBoundedReciprocalImageFilterIUC3IUC3

        Create a new object of the class itkBoundedReciprocalImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundedReciprocalImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBoundedReciprocalImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBoundedReciprocalImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBoundedReciprocalImageFilterIUC3IUC3.Clone = new_instancemethod(_itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC3IUC3_Clone, None, itkBoundedReciprocalImageFilterIUC3IUC3)
itkBoundedReciprocalImageFilterIUC3IUC3_swigregister = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC3IUC3_swigregister
itkBoundedReciprocalImageFilterIUC3IUC3_swigregister(itkBoundedReciprocalImageFilterIUC3IUC3)

def itkBoundedReciprocalImageFilterIUC3IUC3___New_orig__() -> "itkBoundedReciprocalImageFilterIUC3IUC3_Pointer":
    """itkBoundedReciprocalImageFilterIUC3IUC3___New_orig__() -> itkBoundedReciprocalImageFilterIUC3IUC3_Pointer"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC3IUC3___New_orig__()

def itkBoundedReciprocalImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterIUC3IUC3 *":
    """itkBoundedReciprocalImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterIUC3IUC3"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUC3IUC3_cast(obj)

class itkBoundedReciprocalImageFilterIUS2IUS2(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUS2):
    """Proxy of C++ itkBoundedReciprocalImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBoundedReciprocalImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkBoundedReciprocalImageFilterIUS2IUS2_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBoundedReciprocalImageFilterIUS2IUS2_Pointer":
        """Clone(itkBoundedReciprocalImageFilterIUS2IUS2 self) -> itkBoundedReciprocalImageFilterIUS2IUS2_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS2IUS2_Clone(self)

    InputConvertibleToDoubleCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS2IUS2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS2IUS2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBoundedReciprocalImageFilterPython.delete_itkBoundedReciprocalImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterIUS2IUS2"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBoundedReciprocalImageFilterIUS2IUS2

        Create a new object of the class itkBoundedReciprocalImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundedReciprocalImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBoundedReciprocalImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBoundedReciprocalImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBoundedReciprocalImageFilterIUS2IUS2.Clone = new_instancemethod(_itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS2IUS2_Clone, None, itkBoundedReciprocalImageFilterIUS2IUS2)
itkBoundedReciprocalImageFilterIUS2IUS2_swigregister = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS2IUS2_swigregister
itkBoundedReciprocalImageFilterIUS2IUS2_swigregister(itkBoundedReciprocalImageFilterIUS2IUS2)

def itkBoundedReciprocalImageFilterIUS2IUS2___New_orig__() -> "itkBoundedReciprocalImageFilterIUS2IUS2_Pointer":
    """itkBoundedReciprocalImageFilterIUS2IUS2___New_orig__() -> itkBoundedReciprocalImageFilterIUS2IUS2_Pointer"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS2IUS2___New_orig__()

def itkBoundedReciprocalImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterIUS2IUS2 *":
    """itkBoundedReciprocalImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterIUS2IUS2"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS2IUS2_cast(obj)

class itkBoundedReciprocalImageFilterIUS3IUS3(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUS3):
    """Proxy of C++ itkBoundedReciprocalImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBoundedReciprocalImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkBoundedReciprocalImageFilterIUS3IUS3_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBoundedReciprocalImageFilterIUS3IUS3_Pointer":
        """Clone(itkBoundedReciprocalImageFilterIUS3IUS3 self) -> itkBoundedReciprocalImageFilterIUS3IUS3_Pointer"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS3IUS3_Clone(self)

    InputConvertibleToDoubleCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS3IUS3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS3IUS3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBoundedReciprocalImageFilterPython.delete_itkBoundedReciprocalImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterIUS3IUS3"""
        return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBoundedReciprocalImageFilterIUS3IUS3

        Create a new object of the class itkBoundedReciprocalImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundedReciprocalImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBoundedReciprocalImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBoundedReciprocalImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBoundedReciprocalImageFilterIUS3IUS3.Clone = new_instancemethod(_itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS3IUS3_Clone, None, itkBoundedReciprocalImageFilterIUS3IUS3)
itkBoundedReciprocalImageFilterIUS3IUS3_swigregister = _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS3IUS3_swigregister
itkBoundedReciprocalImageFilterIUS3IUS3_swigregister(itkBoundedReciprocalImageFilterIUS3IUS3)

def itkBoundedReciprocalImageFilterIUS3IUS3___New_orig__() -> "itkBoundedReciprocalImageFilterIUS3IUS3_Pointer":
    """itkBoundedReciprocalImageFilterIUS3IUS3___New_orig__() -> itkBoundedReciprocalImageFilterIUS3IUS3_Pointer"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS3IUS3___New_orig__()

def itkBoundedReciprocalImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkBoundedReciprocalImageFilterIUS3IUS3 *":
    """itkBoundedReciprocalImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkBoundedReciprocalImageFilterIUS3IUS3"""
    return _itkBoundedReciprocalImageFilterPython.itkBoundedReciprocalImageFilterIUS3IUS3_cast(obj)


def bounded_reciprocal_image_filter(*args, **kwargs):
    """Procedural interface for BoundedReciprocalImageFilter"""
    import itk
    instance = itk.BoundedReciprocalImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def bounded_reciprocal_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.BoundedReciprocalImageFilter, itkTemplate.itkTemplate):
        bounded_reciprocal_image_filter.__doc__ = itk.BoundedReciprocalImageFilter.values()[0].__doc__
    else:
        bounded_reciprocal_image_filter.__doc__ = itk.BoundedReciprocalImageFilter.__doc__




