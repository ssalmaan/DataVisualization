# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMomentsThresholdCalculatorPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMomentsThresholdCalculatorPython', [dirname(__file__)])
        except ImportError:
            import _itkMomentsThresholdCalculatorPython
            return _itkMomentsThresholdCalculatorPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMomentsThresholdCalculatorPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMomentsThresholdCalculatorPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMomentsThresholdCalculatorPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramThresholdCalculatorPython
import itkHistogramPython
import itkSamplePython
import ITKCommonBasePython
import pyBasePython
import itkArrayPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkSimpleDataObjectDecoratorPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkCovariantVectorPython

def itkMomentsThresholdCalculatorHFF_New():
  return itkMomentsThresholdCalculatorHFF.New()


def itkMomentsThresholdCalculatorHDF_New():
  return itkMomentsThresholdCalculatorHDF.New()


def itkMomentsThresholdCalculatorHFUS_New():
  return itkMomentsThresholdCalculatorHFUS.New()


def itkMomentsThresholdCalculatorHDUS_New():
  return itkMomentsThresholdCalculatorHDUS.New()


def itkMomentsThresholdCalculatorHFUC_New():
  return itkMomentsThresholdCalculatorHFUC.New()


def itkMomentsThresholdCalculatorHDUC_New():
  return itkMomentsThresholdCalculatorHDUC.New()


def itkMomentsThresholdCalculatorHFSS_New():
  return itkMomentsThresholdCalculatorHFSS.New()


def itkMomentsThresholdCalculatorHDSS_New():
  return itkMomentsThresholdCalculatorHDSS.New()

class itkMomentsThresholdCalculatorHDF(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDF):
    """Proxy of C++ itkMomentsThresholdCalculatorHDF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMomentsThresholdCalculatorHDF_Pointer":
        """__New_orig__() -> itkMomentsThresholdCalculatorHDF_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMomentsThresholdCalculatorHDF_Pointer":
        """Clone(itkMomentsThresholdCalculatorHDF self) -> itkMomentsThresholdCalculatorHDF_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDF_Clone(self)

    __swig_destroy__ = _itkMomentsThresholdCalculatorPython.delete_itkMomentsThresholdCalculatorHDF

    def cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHDF *":
        """cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHDF"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMomentsThresholdCalculatorHDF

        Create a new object of the class itkMomentsThresholdCalculatorHDF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMomentsThresholdCalculatorHDF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMomentsThresholdCalculatorHDF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMomentsThresholdCalculatorHDF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMomentsThresholdCalculatorHDF.Clone = new_instancemethod(_itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDF_Clone, None, itkMomentsThresholdCalculatorHDF)
itkMomentsThresholdCalculatorHDF_swigregister = _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDF_swigregister
itkMomentsThresholdCalculatorHDF_swigregister(itkMomentsThresholdCalculatorHDF)

def itkMomentsThresholdCalculatorHDF___New_orig__() -> "itkMomentsThresholdCalculatorHDF_Pointer":
    """itkMomentsThresholdCalculatorHDF___New_orig__() -> itkMomentsThresholdCalculatorHDF_Pointer"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDF___New_orig__()

def itkMomentsThresholdCalculatorHDF_cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHDF *":
    """itkMomentsThresholdCalculatorHDF_cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHDF"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDF_cast(obj)

class itkMomentsThresholdCalculatorHDSS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDSS):
    """Proxy of C++ itkMomentsThresholdCalculatorHDSS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMomentsThresholdCalculatorHDSS_Pointer":
        """__New_orig__() -> itkMomentsThresholdCalculatorHDSS_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDSS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMomentsThresholdCalculatorHDSS_Pointer":
        """Clone(itkMomentsThresholdCalculatorHDSS self) -> itkMomentsThresholdCalculatorHDSS_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDSS_Clone(self)

    __swig_destroy__ = _itkMomentsThresholdCalculatorPython.delete_itkMomentsThresholdCalculatorHDSS

    def cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHDSS *":
        """cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHDSS"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDSS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMomentsThresholdCalculatorHDSS

        Create a new object of the class itkMomentsThresholdCalculatorHDSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMomentsThresholdCalculatorHDSS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMomentsThresholdCalculatorHDSS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMomentsThresholdCalculatorHDSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMomentsThresholdCalculatorHDSS.Clone = new_instancemethod(_itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDSS_Clone, None, itkMomentsThresholdCalculatorHDSS)
itkMomentsThresholdCalculatorHDSS_swigregister = _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDSS_swigregister
itkMomentsThresholdCalculatorHDSS_swigregister(itkMomentsThresholdCalculatorHDSS)

def itkMomentsThresholdCalculatorHDSS___New_orig__() -> "itkMomentsThresholdCalculatorHDSS_Pointer":
    """itkMomentsThresholdCalculatorHDSS___New_orig__() -> itkMomentsThresholdCalculatorHDSS_Pointer"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDSS___New_orig__()

def itkMomentsThresholdCalculatorHDSS_cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHDSS *":
    """itkMomentsThresholdCalculatorHDSS_cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHDSS"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDSS_cast(obj)

class itkMomentsThresholdCalculatorHDUC(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUC):
    """Proxy of C++ itkMomentsThresholdCalculatorHDUC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMomentsThresholdCalculatorHDUC_Pointer":
        """__New_orig__() -> itkMomentsThresholdCalculatorHDUC_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMomentsThresholdCalculatorHDUC_Pointer":
        """Clone(itkMomentsThresholdCalculatorHDUC self) -> itkMomentsThresholdCalculatorHDUC_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUC_Clone(self)

    __swig_destroy__ = _itkMomentsThresholdCalculatorPython.delete_itkMomentsThresholdCalculatorHDUC

    def cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHDUC *":
        """cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHDUC"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMomentsThresholdCalculatorHDUC

        Create a new object of the class itkMomentsThresholdCalculatorHDUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMomentsThresholdCalculatorHDUC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMomentsThresholdCalculatorHDUC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMomentsThresholdCalculatorHDUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMomentsThresholdCalculatorHDUC.Clone = new_instancemethod(_itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUC_Clone, None, itkMomentsThresholdCalculatorHDUC)
itkMomentsThresholdCalculatorHDUC_swigregister = _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUC_swigregister
itkMomentsThresholdCalculatorHDUC_swigregister(itkMomentsThresholdCalculatorHDUC)

def itkMomentsThresholdCalculatorHDUC___New_orig__() -> "itkMomentsThresholdCalculatorHDUC_Pointer":
    """itkMomentsThresholdCalculatorHDUC___New_orig__() -> itkMomentsThresholdCalculatorHDUC_Pointer"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUC___New_orig__()

def itkMomentsThresholdCalculatorHDUC_cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHDUC *":
    """itkMomentsThresholdCalculatorHDUC_cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHDUC"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUC_cast(obj)

class itkMomentsThresholdCalculatorHDUS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUS):
    """Proxy of C++ itkMomentsThresholdCalculatorHDUS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMomentsThresholdCalculatorHDUS_Pointer":
        """__New_orig__() -> itkMomentsThresholdCalculatorHDUS_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMomentsThresholdCalculatorHDUS_Pointer":
        """Clone(itkMomentsThresholdCalculatorHDUS self) -> itkMomentsThresholdCalculatorHDUS_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUS_Clone(self)

    __swig_destroy__ = _itkMomentsThresholdCalculatorPython.delete_itkMomentsThresholdCalculatorHDUS

    def cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHDUS *":
        """cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHDUS"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMomentsThresholdCalculatorHDUS

        Create a new object of the class itkMomentsThresholdCalculatorHDUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMomentsThresholdCalculatorHDUS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMomentsThresholdCalculatorHDUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMomentsThresholdCalculatorHDUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMomentsThresholdCalculatorHDUS.Clone = new_instancemethod(_itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUS_Clone, None, itkMomentsThresholdCalculatorHDUS)
itkMomentsThresholdCalculatorHDUS_swigregister = _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUS_swigregister
itkMomentsThresholdCalculatorHDUS_swigregister(itkMomentsThresholdCalculatorHDUS)

def itkMomentsThresholdCalculatorHDUS___New_orig__() -> "itkMomentsThresholdCalculatorHDUS_Pointer":
    """itkMomentsThresholdCalculatorHDUS___New_orig__() -> itkMomentsThresholdCalculatorHDUS_Pointer"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUS___New_orig__()

def itkMomentsThresholdCalculatorHDUS_cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHDUS *":
    """itkMomentsThresholdCalculatorHDUS_cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHDUS"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHDUS_cast(obj)

class itkMomentsThresholdCalculatorHFF(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFF):
    """Proxy of C++ itkMomentsThresholdCalculatorHFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMomentsThresholdCalculatorHFF_Pointer":
        """__New_orig__() -> itkMomentsThresholdCalculatorHFF_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMomentsThresholdCalculatorHFF_Pointer":
        """Clone(itkMomentsThresholdCalculatorHFF self) -> itkMomentsThresholdCalculatorHFF_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFF_Clone(self)

    __swig_destroy__ = _itkMomentsThresholdCalculatorPython.delete_itkMomentsThresholdCalculatorHFF

    def cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHFF *":
        """cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHFF"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMomentsThresholdCalculatorHFF

        Create a new object of the class itkMomentsThresholdCalculatorHFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMomentsThresholdCalculatorHFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMomentsThresholdCalculatorHFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMomentsThresholdCalculatorHFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMomentsThresholdCalculatorHFF.Clone = new_instancemethod(_itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFF_Clone, None, itkMomentsThresholdCalculatorHFF)
itkMomentsThresholdCalculatorHFF_swigregister = _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFF_swigregister
itkMomentsThresholdCalculatorHFF_swigregister(itkMomentsThresholdCalculatorHFF)

def itkMomentsThresholdCalculatorHFF___New_orig__() -> "itkMomentsThresholdCalculatorHFF_Pointer":
    """itkMomentsThresholdCalculatorHFF___New_orig__() -> itkMomentsThresholdCalculatorHFF_Pointer"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFF___New_orig__()

def itkMomentsThresholdCalculatorHFF_cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHFF *":
    """itkMomentsThresholdCalculatorHFF_cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHFF"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFF_cast(obj)

class itkMomentsThresholdCalculatorHFSS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFSS):
    """Proxy of C++ itkMomentsThresholdCalculatorHFSS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMomentsThresholdCalculatorHFSS_Pointer":
        """__New_orig__() -> itkMomentsThresholdCalculatorHFSS_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFSS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMomentsThresholdCalculatorHFSS_Pointer":
        """Clone(itkMomentsThresholdCalculatorHFSS self) -> itkMomentsThresholdCalculatorHFSS_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFSS_Clone(self)

    __swig_destroy__ = _itkMomentsThresholdCalculatorPython.delete_itkMomentsThresholdCalculatorHFSS

    def cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHFSS *":
        """cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHFSS"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFSS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMomentsThresholdCalculatorHFSS

        Create a new object of the class itkMomentsThresholdCalculatorHFSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMomentsThresholdCalculatorHFSS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMomentsThresholdCalculatorHFSS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMomentsThresholdCalculatorHFSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMomentsThresholdCalculatorHFSS.Clone = new_instancemethod(_itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFSS_Clone, None, itkMomentsThresholdCalculatorHFSS)
itkMomentsThresholdCalculatorHFSS_swigregister = _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFSS_swigregister
itkMomentsThresholdCalculatorHFSS_swigregister(itkMomentsThresholdCalculatorHFSS)

def itkMomentsThresholdCalculatorHFSS___New_orig__() -> "itkMomentsThresholdCalculatorHFSS_Pointer":
    """itkMomentsThresholdCalculatorHFSS___New_orig__() -> itkMomentsThresholdCalculatorHFSS_Pointer"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFSS___New_orig__()

def itkMomentsThresholdCalculatorHFSS_cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHFSS *":
    """itkMomentsThresholdCalculatorHFSS_cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHFSS"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFSS_cast(obj)

class itkMomentsThresholdCalculatorHFUC(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUC):
    """Proxy of C++ itkMomentsThresholdCalculatorHFUC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMomentsThresholdCalculatorHFUC_Pointer":
        """__New_orig__() -> itkMomentsThresholdCalculatorHFUC_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMomentsThresholdCalculatorHFUC_Pointer":
        """Clone(itkMomentsThresholdCalculatorHFUC self) -> itkMomentsThresholdCalculatorHFUC_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUC_Clone(self)

    __swig_destroy__ = _itkMomentsThresholdCalculatorPython.delete_itkMomentsThresholdCalculatorHFUC

    def cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHFUC *":
        """cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHFUC"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMomentsThresholdCalculatorHFUC

        Create a new object of the class itkMomentsThresholdCalculatorHFUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMomentsThresholdCalculatorHFUC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMomentsThresholdCalculatorHFUC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMomentsThresholdCalculatorHFUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMomentsThresholdCalculatorHFUC.Clone = new_instancemethod(_itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUC_Clone, None, itkMomentsThresholdCalculatorHFUC)
itkMomentsThresholdCalculatorHFUC_swigregister = _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUC_swigregister
itkMomentsThresholdCalculatorHFUC_swigregister(itkMomentsThresholdCalculatorHFUC)

def itkMomentsThresholdCalculatorHFUC___New_orig__() -> "itkMomentsThresholdCalculatorHFUC_Pointer":
    """itkMomentsThresholdCalculatorHFUC___New_orig__() -> itkMomentsThresholdCalculatorHFUC_Pointer"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUC___New_orig__()

def itkMomentsThresholdCalculatorHFUC_cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHFUC *":
    """itkMomentsThresholdCalculatorHFUC_cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHFUC"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUC_cast(obj)

class itkMomentsThresholdCalculatorHFUS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUS):
    """Proxy of C++ itkMomentsThresholdCalculatorHFUS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMomentsThresholdCalculatorHFUS_Pointer":
        """__New_orig__() -> itkMomentsThresholdCalculatorHFUS_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMomentsThresholdCalculatorHFUS_Pointer":
        """Clone(itkMomentsThresholdCalculatorHFUS self) -> itkMomentsThresholdCalculatorHFUS_Pointer"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUS_Clone(self)

    __swig_destroy__ = _itkMomentsThresholdCalculatorPython.delete_itkMomentsThresholdCalculatorHFUS

    def cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHFUS *":
        """cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHFUS"""
        return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMomentsThresholdCalculatorHFUS

        Create a new object of the class itkMomentsThresholdCalculatorHFUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMomentsThresholdCalculatorHFUS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMomentsThresholdCalculatorHFUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMomentsThresholdCalculatorHFUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMomentsThresholdCalculatorHFUS.Clone = new_instancemethod(_itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUS_Clone, None, itkMomentsThresholdCalculatorHFUS)
itkMomentsThresholdCalculatorHFUS_swigregister = _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUS_swigregister
itkMomentsThresholdCalculatorHFUS_swigregister(itkMomentsThresholdCalculatorHFUS)

def itkMomentsThresholdCalculatorHFUS___New_orig__() -> "itkMomentsThresholdCalculatorHFUS_Pointer":
    """itkMomentsThresholdCalculatorHFUS___New_orig__() -> itkMomentsThresholdCalculatorHFUS_Pointer"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUS___New_orig__()

def itkMomentsThresholdCalculatorHFUS_cast(obj: 'itkLightObject') -> "itkMomentsThresholdCalculatorHFUS *":
    """itkMomentsThresholdCalculatorHFUS_cast(itkLightObject obj) -> itkMomentsThresholdCalculatorHFUS"""
    return _itkMomentsThresholdCalculatorPython.itkMomentsThresholdCalculatorHFUS_cast(obj)


def moments_threshold_calculator(*args, **kwargs):
    """Procedural interface for MomentsThresholdCalculator"""
    import itk
    instance = itk.MomentsThresholdCalculator.New(*args, **kwargs)
    return instance.__internal_call__()

def moments_threshold_calculator_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.MomentsThresholdCalculator, itkTemplate.itkTemplate):
        moments_threshold_calculator.__doc__ = itk.MomentsThresholdCalculator.values()[0].__doc__
    else:
        moments_threshold_calculator.__doc__ = itk.MomentsThresholdCalculator.__doc__




