# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkRGBAPixelPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkRGBAPixelPython', [dirname(__file__)])
        except ImportError:
            import _itkRGBAPixelPython
            return _itkRGBAPixelPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkRGBAPixelPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkRGBAPixelPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkRGBAPixelPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFixedArrayPython
import pyBasePython
class itkRGBAPixelD(itkFixedArrayPython.itkFixedArrayD4):
    """Proxy of C++ itkRGBAPixelD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __swig_destroy__ = _itkRGBAPixelPython.delete_itkRGBAPixelD

    def __init__(self, *args):
        """
        __init__(itkRGBAPixelD self) -> itkRGBAPixelD
        __init__(itkRGBAPixelD self, itkRGBAPixelD arg0) -> itkRGBAPixelD
        __init__(itkRGBAPixelD self, double const * r) -> itkRGBAPixelD
        __init__(itkRGBAPixelD self, double const & r) -> itkRGBAPixelD
        """
        _itkRGBAPixelPython.itkRGBAPixelD_swiginit(self, _itkRGBAPixelPython.new_itkRGBAPixelD(*args))

    def __add__(self, vec: 'itkRGBAPixelD') -> "itkRGBAPixelD":
        """__add__(itkRGBAPixelD self, itkRGBAPixelD vec) -> itkRGBAPixelD"""
        return _itkRGBAPixelPython.itkRGBAPixelD___add__(self, vec)


    def __sub__(self, vec: 'itkRGBAPixelD') -> "itkRGBAPixelD":
        """__sub__(itkRGBAPixelD self, itkRGBAPixelD vec) -> itkRGBAPixelD"""
        return _itkRGBAPixelPython.itkRGBAPixelD___sub__(self, vec)


    def __mul__(self, f: 'double const &') -> "itkRGBAPixelD":
        """__mul__(itkRGBAPixelD self, double const & f) -> itkRGBAPixelD"""
        return _itkRGBAPixelPython.itkRGBAPixelD___mul__(self, f)


    def __div__(self, f: 'double const &') -> "itkRGBAPixelD":
        """__div__(itkRGBAPixelD self, double const & f) -> itkRGBAPixelD"""
        return _itkRGBAPixelPython.itkRGBAPixelD___div__(self, f)


    def __iadd__(self, vec: 'itkRGBAPixelD') -> "itkRGBAPixelD const &":
        """__iadd__(itkRGBAPixelD self, itkRGBAPixelD vec) -> itkRGBAPixelD"""
        return _itkRGBAPixelPython.itkRGBAPixelD___iadd__(self, vec)


    def __isub__(self, vec: 'itkRGBAPixelD') -> "itkRGBAPixelD const &":
        """__isub__(itkRGBAPixelD self, itkRGBAPixelD vec) -> itkRGBAPixelD"""
        return _itkRGBAPixelPython.itkRGBAPixelD___isub__(self, vec)


    def __imul__(self, f: 'double const &') -> "itkRGBAPixelD const &":
        """__imul__(itkRGBAPixelD self, double const & f) -> itkRGBAPixelD"""
        return _itkRGBAPixelPython.itkRGBAPixelD___imul__(self, f)


    def __idiv__(self, f: 'double const &') -> "itkRGBAPixelD const &":
        """__idiv__(itkRGBAPixelD self, double const & f) -> itkRGBAPixelD"""
        return _itkRGBAPixelPython.itkRGBAPixelD___idiv__(self, f)


    def __lt__(self, vec: 'itkRGBAPixelD') -> "bool":
        """__lt__(itkRGBAPixelD self, itkRGBAPixelD vec) -> bool"""
        return _itkRGBAPixelPython.itkRGBAPixelD___lt__(self, vec)


    def __eq__(self, vec: 'itkRGBAPixelD') -> "bool":
        """__eq__(itkRGBAPixelD self, itkRGBAPixelD vec) -> bool"""
        return _itkRGBAPixelPython.itkRGBAPixelD___eq__(self, vec)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkRGBAPixelPython.itkRGBAPixelD_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def GetNthComponent(self, c: 'int') -> "double":
        """GetNthComponent(itkRGBAPixelD self, int c) -> double"""
        return _itkRGBAPixelPython.itkRGBAPixelD_GetNthComponent(self, c)


    def GetScalarValue(self) -> "double":
        """GetScalarValue(itkRGBAPixelD self) -> double"""
        return _itkRGBAPixelPython.itkRGBAPixelD_GetScalarValue(self)


    def SetNthComponent(self, c: 'int', v: 'double const &') -> "void":
        """SetNthComponent(itkRGBAPixelD self, int c, double const & v)"""
        return _itkRGBAPixelPython.itkRGBAPixelD_SetNthComponent(self, c, v)


    def SetRed(self, red: 'double') -> "void":
        """SetRed(itkRGBAPixelD self, double red)"""
        return _itkRGBAPixelPython.itkRGBAPixelD_SetRed(self, red)


    def SetGreen(self, green: 'double') -> "void":
        """SetGreen(itkRGBAPixelD self, double green)"""
        return _itkRGBAPixelPython.itkRGBAPixelD_SetGreen(self, green)


    def SetBlue(self, blue: 'double') -> "void":
        """SetBlue(itkRGBAPixelD self, double blue)"""
        return _itkRGBAPixelPython.itkRGBAPixelD_SetBlue(self, blue)


    def SetAlpha(self, alpha: 'double') -> "void":
        """SetAlpha(itkRGBAPixelD self, double alpha)"""
        return _itkRGBAPixelPython.itkRGBAPixelD_SetAlpha(self, alpha)


    def Set(self, red: 'double', green: 'double', blue: 'double', alpha: 'double') -> "void":
        """Set(itkRGBAPixelD self, double red, double green, double blue, double alpha)"""
        return _itkRGBAPixelPython.itkRGBAPixelD_Set(self, red, green, blue, alpha)


    def GetRed(self) -> "double const &":
        """GetRed(itkRGBAPixelD self) -> double const &"""
        return _itkRGBAPixelPython.itkRGBAPixelD_GetRed(self)


    def GetGreen(self) -> "double const &":
        """GetGreen(itkRGBAPixelD self) -> double const &"""
        return _itkRGBAPixelPython.itkRGBAPixelD_GetGreen(self)


    def GetBlue(self) -> "double const &":
        """GetBlue(itkRGBAPixelD self) -> double const &"""
        return _itkRGBAPixelPython.itkRGBAPixelD_GetBlue(self)


    def GetAlpha(self) -> "double const &":
        """GetAlpha(itkRGBAPixelD self) -> double const &"""
        return _itkRGBAPixelPython.itkRGBAPixelD_GetAlpha(self)


    def GetLuminance(self) -> "double":
        """GetLuminance(itkRGBAPixelD self) -> double"""
        return _itkRGBAPixelPython.itkRGBAPixelD_GetLuminance(self)


    def __getitem__(self, dim: 'unsigned long') -> "double":
        """__getitem__(itkRGBAPixelD self, unsigned long dim) -> double"""
        return _itkRGBAPixelPython.itkRGBAPixelD___getitem__(self, dim)


    def __setitem__(self, dim: 'unsigned long', v: 'double') -> "void":
        """__setitem__(itkRGBAPixelD self, unsigned long dim, double v)"""
        return _itkRGBAPixelPython.itkRGBAPixelD___setitem__(self, dim, v)


    def __len__(self) -> "unsigned int":
        """__len__(itkRGBAPixelD self) -> unsigned int"""
        return _itkRGBAPixelPython.itkRGBAPixelD___len__(self)


    def __repr__(self) -> "std::string":
        """__repr__(itkRGBAPixelD self) -> std::string"""
        return _itkRGBAPixelPython.itkRGBAPixelD___repr__(self)

itkRGBAPixelD.__add__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___add__, None, itkRGBAPixelD)
itkRGBAPixelD.__sub__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___sub__, None, itkRGBAPixelD)
itkRGBAPixelD.__mul__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___mul__, None, itkRGBAPixelD)
itkRGBAPixelD.__div__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___div__, None, itkRGBAPixelD)
itkRGBAPixelD.__iadd__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___iadd__, None, itkRGBAPixelD)
itkRGBAPixelD.__isub__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___isub__, None, itkRGBAPixelD)
itkRGBAPixelD.__imul__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___imul__, None, itkRGBAPixelD)
itkRGBAPixelD.__idiv__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___idiv__, None, itkRGBAPixelD)
itkRGBAPixelD.__lt__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___lt__, None, itkRGBAPixelD)
itkRGBAPixelD.__eq__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___eq__, None, itkRGBAPixelD)
itkRGBAPixelD.GetNthComponent = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD_GetNthComponent, None, itkRGBAPixelD)
itkRGBAPixelD.GetScalarValue = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD_GetScalarValue, None, itkRGBAPixelD)
itkRGBAPixelD.SetNthComponent = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD_SetNthComponent, None, itkRGBAPixelD)
itkRGBAPixelD.SetRed = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD_SetRed, None, itkRGBAPixelD)
itkRGBAPixelD.SetGreen = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD_SetGreen, None, itkRGBAPixelD)
itkRGBAPixelD.SetBlue = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD_SetBlue, None, itkRGBAPixelD)
itkRGBAPixelD.SetAlpha = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD_SetAlpha, None, itkRGBAPixelD)
itkRGBAPixelD.Set = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD_Set, None, itkRGBAPixelD)
itkRGBAPixelD.GetRed = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD_GetRed, None, itkRGBAPixelD)
itkRGBAPixelD.GetGreen = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD_GetGreen, None, itkRGBAPixelD)
itkRGBAPixelD.GetBlue = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD_GetBlue, None, itkRGBAPixelD)
itkRGBAPixelD.GetAlpha = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD_GetAlpha, None, itkRGBAPixelD)
itkRGBAPixelD.GetLuminance = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD_GetLuminance, None, itkRGBAPixelD)
itkRGBAPixelD.__getitem__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___getitem__, None, itkRGBAPixelD)
itkRGBAPixelD.__setitem__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___setitem__, None, itkRGBAPixelD)
itkRGBAPixelD.__len__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___len__, None, itkRGBAPixelD)
itkRGBAPixelD.__repr__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelD___repr__, None, itkRGBAPixelD)
itkRGBAPixelD_swigregister = _itkRGBAPixelPython.itkRGBAPixelD_swigregister
itkRGBAPixelD_swigregister(itkRGBAPixelD)

def itkRGBAPixelD_GetNumberOfComponents() -> "unsigned int":
    """itkRGBAPixelD_GetNumberOfComponents() -> unsigned int"""
    return _itkRGBAPixelPython.itkRGBAPixelD_GetNumberOfComponents()

class itkRGBAPixelF(itkFixedArrayPython.itkFixedArrayF4):
    """Proxy of C++ itkRGBAPixelF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __swig_destroy__ = _itkRGBAPixelPython.delete_itkRGBAPixelF

    def __init__(self, *args):
        """
        __init__(itkRGBAPixelF self) -> itkRGBAPixelF
        __init__(itkRGBAPixelF self, itkRGBAPixelF arg0) -> itkRGBAPixelF
        __init__(itkRGBAPixelF self, float const * r) -> itkRGBAPixelF
        __init__(itkRGBAPixelF self, float const & r) -> itkRGBAPixelF
        """
        _itkRGBAPixelPython.itkRGBAPixelF_swiginit(self, _itkRGBAPixelPython.new_itkRGBAPixelF(*args))

    def __add__(self, vec: 'itkRGBAPixelF') -> "itkRGBAPixelF":
        """__add__(itkRGBAPixelF self, itkRGBAPixelF vec) -> itkRGBAPixelF"""
        return _itkRGBAPixelPython.itkRGBAPixelF___add__(self, vec)


    def __sub__(self, vec: 'itkRGBAPixelF') -> "itkRGBAPixelF":
        """__sub__(itkRGBAPixelF self, itkRGBAPixelF vec) -> itkRGBAPixelF"""
        return _itkRGBAPixelPython.itkRGBAPixelF___sub__(self, vec)


    def __mul__(self, f: 'float const &') -> "itkRGBAPixelF":
        """__mul__(itkRGBAPixelF self, float const & f) -> itkRGBAPixelF"""
        return _itkRGBAPixelPython.itkRGBAPixelF___mul__(self, f)


    def __div__(self, f: 'float const &') -> "itkRGBAPixelF":
        """__div__(itkRGBAPixelF self, float const & f) -> itkRGBAPixelF"""
        return _itkRGBAPixelPython.itkRGBAPixelF___div__(self, f)


    def __iadd__(self, vec: 'itkRGBAPixelF') -> "itkRGBAPixelF const &":
        """__iadd__(itkRGBAPixelF self, itkRGBAPixelF vec) -> itkRGBAPixelF"""
        return _itkRGBAPixelPython.itkRGBAPixelF___iadd__(self, vec)


    def __isub__(self, vec: 'itkRGBAPixelF') -> "itkRGBAPixelF const &":
        """__isub__(itkRGBAPixelF self, itkRGBAPixelF vec) -> itkRGBAPixelF"""
        return _itkRGBAPixelPython.itkRGBAPixelF___isub__(self, vec)


    def __imul__(self, f: 'float const &') -> "itkRGBAPixelF const &":
        """__imul__(itkRGBAPixelF self, float const & f) -> itkRGBAPixelF"""
        return _itkRGBAPixelPython.itkRGBAPixelF___imul__(self, f)


    def __idiv__(self, f: 'float const &') -> "itkRGBAPixelF const &":
        """__idiv__(itkRGBAPixelF self, float const & f) -> itkRGBAPixelF"""
        return _itkRGBAPixelPython.itkRGBAPixelF___idiv__(self, f)


    def __lt__(self, vec: 'itkRGBAPixelF') -> "bool":
        """__lt__(itkRGBAPixelF self, itkRGBAPixelF vec) -> bool"""
        return _itkRGBAPixelPython.itkRGBAPixelF___lt__(self, vec)


    def __eq__(self, vec: 'itkRGBAPixelF') -> "bool":
        """__eq__(itkRGBAPixelF self, itkRGBAPixelF vec) -> bool"""
        return _itkRGBAPixelPython.itkRGBAPixelF___eq__(self, vec)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkRGBAPixelPython.itkRGBAPixelF_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def GetNthComponent(self, c: 'int') -> "float":
        """GetNthComponent(itkRGBAPixelF self, int c) -> float"""
        return _itkRGBAPixelPython.itkRGBAPixelF_GetNthComponent(self, c)


    def GetScalarValue(self) -> "float":
        """GetScalarValue(itkRGBAPixelF self) -> float"""
        return _itkRGBAPixelPython.itkRGBAPixelF_GetScalarValue(self)


    def SetNthComponent(self, c: 'int', v: 'float const &') -> "void":
        """SetNthComponent(itkRGBAPixelF self, int c, float const & v)"""
        return _itkRGBAPixelPython.itkRGBAPixelF_SetNthComponent(self, c, v)


    def SetRed(self, red: 'float') -> "void":
        """SetRed(itkRGBAPixelF self, float red)"""
        return _itkRGBAPixelPython.itkRGBAPixelF_SetRed(self, red)


    def SetGreen(self, green: 'float') -> "void":
        """SetGreen(itkRGBAPixelF self, float green)"""
        return _itkRGBAPixelPython.itkRGBAPixelF_SetGreen(self, green)


    def SetBlue(self, blue: 'float') -> "void":
        """SetBlue(itkRGBAPixelF self, float blue)"""
        return _itkRGBAPixelPython.itkRGBAPixelF_SetBlue(self, blue)


    def SetAlpha(self, alpha: 'float') -> "void":
        """SetAlpha(itkRGBAPixelF self, float alpha)"""
        return _itkRGBAPixelPython.itkRGBAPixelF_SetAlpha(self, alpha)


    def Set(self, red: 'float', green: 'float', blue: 'float', alpha: 'float') -> "void":
        """Set(itkRGBAPixelF self, float red, float green, float blue, float alpha)"""
        return _itkRGBAPixelPython.itkRGBAPixelF_Set(self, red, green, blue, alpha)


    def GetRed(self) -> "float const &":
        """GetRed(itkRGBAPixelF self) -> float const &"""
        return _itkRGBAPixelPython.itkRGBAPixelF_GetRed(self)


    def GetGreen(self) -> "float const &":
        """GetGreen(itkRGBAPixelF self) -> float const &"""
        return _itkRGBAPixelPython.itkRGBAPixelF_GetGreen(self)


    def GetBlue(self) -> "float const &":
        """GetBlue(itkRGBAPixelF self) -> float const &"""
        return _itkRGBAPixelPython.itkRGBAPixelF_GetBlue(self)


    def GetAlpha(self) -> "float const &":
        """GetAlpha(itkRGBAPixelF self) -> float const &"""
        return _itkRGBAPixelPython.itkRGBAPixelF_GetAlpha(self)


    def GetLuminance(self) -> "double":
        """GetLuminance(itkRGBAPixelF self) -> double"""
        return _itkRGBAPixelPython.itkRGBAPixelF_GetLuminance(self)


    def __getitem__(self, dim: 'unsigned long') -> "float":
        """__getitem__(itkRGBAPixelF self, unsigned long dim) -> float"""
        return _itkRGBAPixelPython.itkRGBAPixelF___getitem__(self, dim)


    def __setitem__(self, dim: 'unsigned long', v: 'float') -> "void":
        """__setitem__(itkRGBAPixelF self, unsigned long dim, float v)"""
        return _itkRGBAPixelPython.itkRGBAPixelF___setitem__(self, dim, v)


    def __len__(self) -> "unsigned int":
        """__len__(itkRGBAPixelF self) -> unsigned int"""
        return _itkRGBAPixelPython.itkRGBAPixelF___len__(self)


    def __repr__(self) -> "std::string":
        """__repr__(itkRGBAPixelF self) -> std::string"""
        return _itkRGBAPixelPython.itkRGBAPixelF___repr__(self)

itkRGBAPixelF.__add__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___add__, None, itkRGBAPixelF)
itkRGBAPixelF.__sub__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___sub__, None, itkRGBAPixelF)
itkRGBAPixelF.__mul__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___mul__, None, itkRGBAPixelF)
itkRGBAPixelF.__div__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___div__, None, itkRGBAPixelF)
itkRGBAPixelF.__iadd__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___iadd__, None, itkRGBAPixelF)
itkRGBAPixelF.__isub__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___isub__, None, itkRGBAPixelF)
itkRGBAPixelF.__imul__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___imul__, None, itkRGBAPixelF)
itkRGBAPixelF.__idiv__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___idiv__, None, itkRGBAPixelF)
itkRGBAPixelF.__lt__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___lt__, None, itkRGBAPixelF)
itkRGBAPixelF.__eq__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___eq__, None, itkRGBAPixelF)
itkRGBAPixelF.GetNthComponent = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF_GetNthComponent, None, itkRGBAPixelF)
itkRGBAPixelF.GetScalarValue = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF_GetScalarValue, None, itkRGBAPixelF)
itkRGBAPixelF.SetNthComponent = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF_SetNthComponent, None, itkRGBAPixelF)
itkRGBAPixelF.SetRed = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF_SetRed, None, itkRGBAPixelF)
itkRGBAPixelF.SetGreen = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF_SetGreen, None, itkRGBAPixelF)
itkRGBAPixelF.SetBlue = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF_SetBlue, None, itkRGBAPixelF)
itkRGBAPixelF.SetAlpha = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF_SetAlpha, None, itkRGBAPixelF)
itkRGBAPixelF.Set = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF_Set, None, itkRGBAPixelF)
itkRGBAPixelF.GetRed = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF_GetRed, None, itkRGBAPixelF)
itkRGBAPixelF.GetGreen = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF_GetGreen, None, itkRGBAPixelF)
itkRGBAPixelF.GetBlue = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF_GetBlue, None, itkRGBAPixelF)
itkRGBAPixelF.GetAlpha = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF_GetAlpha, None, itkRGBAPixelF)
itkRGBAPixelF.GetLuminance = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF_GetLuminance, None, itkRGBAPixelF)
itkRGBAPixelF.__getitem__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___getitem__, None, itkRGBAPixelF)
itkRGBAPixelF.__setitem__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___setitem__, None, itkRGBAPixelF)
itkRGBAPixelF.__len__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___len__, None, itkRGBAPixelF)
itkRGBAPixelF.__repr__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelF___repr__, None, itkRGBAPixelF)
itkRGBAPixelF_swigregister = _itkRGBAPixelPython.itkRGBAPixelF_swigregister
itkRGBAPixelF_swigregister(itkRGBAPixelF)

def itkRGBAPixelF_GetNumberOfComponents() -> "unsigned int":
    """itkRGBAPixelF_GetNumberOfComponents() -> unsigned int"""
    return _itkRGBAPixelPython.itkRGBAPixelF_GetNumberOfComponents()

class itkRGBAPixelUC(itkFixedArrayPython.itkFixedArrayUC4):
    """Proxy of C++ itkRGBAPixelUC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __swig_destroy__ = _itkRGBAPixelPython.delete_itkRGBAPixelUC

    def __init__(self, *args):
        """
        __init__(itkRGBAPixelUC self) -> itkRGBAPixelUC
        __init__(itkRGBAPixelUC self, itkRGBAPixelUC arg0) -> itkRGBAPixelUC
        __init__(itkRGBAPixelUC self, unsigned char const * r) -> itkRGBAPixelUC
        __init__(itkRGBAPixelUC self, unsigned char const & r) -> itkRGBAPixelUC
        """
        _itkRGBAPixelPython.itkRGBAPixelUC_swiginit(self, _itkRGBAPixelPython.new_itkRGBAPixelUC(*args))

    def __add__(self, vec: 'itkRGBAPixelUC') -> "itkRGBAPixelUC":
        """__add__(itkRGBAPixelUC self, itkRGBAPixelUC vec) -> itkRGBAPixelUC"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___add__(self, vec)


    def __sub__(self, vec: 'itkRGBAPixelUC') -> "itkRGBAPixelUC":
        """__sub__(itkRGBAPixelUC self, itkRGBAPixelUC vec) -> itkRGBAPixelUC"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___sub__(self, vec)


    def __mul__(self, f: 'unsigned char const &') -> "itkRGBAPixelUC":
        """__mul__(itkRGBAPixelUC self, unsigned char const & f) -> itkRGBAPixelUC"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___mul__(self, f)


    def __div__(self, f: 'unsigned char const &') -> "itkRGBAPixelUC":
        """__div__(itkRGBAPixelUC self, unsigned char const & f) -> itkRGBAPixelUC"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___div__(self, f)


    def __iadd__(self, vec: 'itkRGBAPixelUC') -> "itkRGBAPixelUC const &":
        """__iadd__(itkRGBAPixelUC self, itkRGBAPixelUC vec) -> itkRGBAPixelUC"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___iadd__(self, vec)


    def __isub__(self, vec: 'itkRGBAPixelUC') -> "itkRGBAPixelUC const &":
        """__isub__(itkRGBAPixelUC self, itkRGBAPixelUC vec) -> itkRGBAPixelUC"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___isub__(self, vec)


    def __imul__(self, f: 'unsigned char const &') -> "itkRGBAPixelUC const &":
        """__imul__(itkRGBAPixelUC self, unsigned char const & f) -> itkRGBAPixelUC"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___imul__(self, f)


    def __idiv__(self, f: 'unsigned char const &') -> "itkRGBAPixelUC const &":
        """__idiv__(itkRGBAPixelUC self, unsigned char const & f) -> itkRGBAPixelUC"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___idiv__(self, f)


    def __lt__(self, vec: 'itkRGBAPixelUC') -> "bool":
        """__lt__(itkRGBAPixelUC self, itkRGBAPixelUC vec) -> bool"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___lt__(self, vec)


    def __eq__(self, vec: 'itkRGBAPixelUC') -> "bool":
        """__eq__(itkRGBAPixelUC self, itkRGBAPixelUC vec) -> bool"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___eq__(self, vec)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def GetNthComponent(self, c: 'int') -> "unsigned char":
        """GetNthComponent(itkRGBAPixelUC self, int c) -> unsigned char"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_GetNthComponent(self, c)


    def GetScalarValue(self) -> "unsigned char":
        """GetScalarValue(itkRGBAPixelUC self) -> unsigned char"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_GetScalarValue(self)


    def SetNthComponent(self, c: 'int', v: 'unsigned char const &') -> "void":
        """SetNthComponent(itkRGBAPixelUC self, int c, unsigned char const & v)"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_SetNthComponent(self, c, v)


    def SetRed(self, red: 'unsigned char') -> "void":
        """SetRed(itkRGBAPixelUC self, unsigned char red)"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_SetRed(self, red)


    def SetGreen(self, green: 'unsigned char') -> "void":
        """SetGreen(itkRGBAPixelUC self, unsigned char green)"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_SetGreen(self, green)


    def SetBlue(self, blue: 'unsigned char') -> "void":
        """SetBlue(itkRGBAPixelUC self, unsigned char blue)"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_SetBlue(self, blue)


    def SetAlpha(self, alpha: 'unsigned char') -> "void":
        """SetAlpha(itkRGBAPixelUC self, unsigned char alpha)"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_SetAlpha(self, alpha)


    def Set(self, red: 'unsigned char', green: 'unsigned char', blue: 'unsigned char', alpha: 'unsigned char') -> "void":
        """Set(itkRGBAPixelUC self, unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha)"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_Set(self, red, green, blue, alpha)


    def GetRed(self) -> "unsigned char const &":
        """GetRed(itkRGBAPixelUC self) -> unsigned char const &"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_GetRed(self)


    def GetGreen(self) -> "unsigned char const &":
        """GetGreen(itkRGBAPixelUC self) -> unsigned char const &"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_GetGreen(self)


    def GetBlue(self) -> "unsigned char const &":
        """GetBlue(itkRGBAPixelUC self) -> unsigned char const &"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_GetBlue(self)


    def GetAlpha(self) -> "unsigned char const &":
        """GetAlpha(itkRGBAPixelUC self) -> unsigned char const &"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_GetAlpha(self)


    def GetLuminance(self) -> "double":
        """GetLuminance(itkRGBAPixelUC self) -> double"""
        return _itkRGBAPixelPython.itkRGBAPixelUC_GetLuminance(self)


    def __getitem__(self, dim: 'unsigned long') -> "unsigned char":
        """__getitem__(itkRGBAPixelUC self, unsigned long dim) -> unsigned char"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___getitem__(self, dim)


    def __setitem__(self, dim: 'unsigned long', v: 'unsigned char') -> "void":
        """__setitem__(itkRGBAPixelUC self, unsigned long dim, unsigned char v)"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___setitem__(self, dim, v)


    def __len__(self) -> "unsigned int":
        """__len__(itkRGBAPixelUC self) -> unsigned int"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___len__(self)


    def __repr__(self) -> "std::string":
        """__repr__(itkRGBAPixelUC self) -> std::string"""
        return _itkRGBAPixelPython.itkRGBAPixelUC___repr__(self)

itkRGBAPixelUC.__add__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___add__, None, itkRGBAPixelUC)
itkRGBAPixelUC.__sub__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___sub__, None, itkRGBAPixelUC)
itkRGBAPixelUC.__mul__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___mul__, None, itkRGBAPixelUC)
itkRGBAPixelUC.__div__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___div__, None, itkRGBAPixelUC)
itkRGBAPixelUC.__iadd__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___iadd__, None, itkRGBAPixelUC)
itkRGBAPixelUC.__isub__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___isub__, None, itkRGBAPixelUC)
itkRGBAPixelUC.__imul__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___imul__, None, itkRGBAPixelUC)
itkRGBAPixelUC.__idiv__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___idiv__, None, itkRGBAPixelUC)
itkRGBAPixelUC.__lt__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___lt__, None, itkRGBAPixelUC)
itkRGBAPixelUC.__eq__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___eq__, None, itkRGBAPixelUC)
itkRGBAPixelUC.GetNthComponent = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC_GetNthComponent, None, itkRGBAPixelUC)
itkRGBAPixelUC.GetScalarValue = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC_GetScalarValue, None, itkRGBAPixelUC)
itkRGBAPixelUC.SetNthComponent = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC_SetNthComponent, None, itkRGBAPixelUC)
itkRGBAPixelUC.SetRed = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC_SetRed, None, itkRGBAPixelUC)
itkRGBAPixelUC.SetGreen = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC_SetGreen, None, itkRGBAPixelUC)
itkRGBAPixelUC.SetBlue = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC_SetBlue, None, itkRGBAPixelUC)
itkRGBAPixelUC.SetAlpha = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC_SetAlpha, None, itkRGBAPixelUC)
itkRGBAPixelUC.Set = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC_Set, None, itkRGBAPixelUC)
itkRGBAPixelUC.GetRed = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC_GetRed, None, itkRGBAPixelUC)
itkRGBAPixelUC.GetGreen = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC_GetGreen, None, itkRGBAPixelUC)
itkRGBAPixelUC.GetBlue = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC_GetBlue, None, itkRGBAPixelUC)
itkRGBAPixelUC.GetAlpha = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC_GetAlpha, None, itkRGBAPixelUC)
itkRGBAPixelUC.GetLuminance = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC_GetLuminance, None, itkRGBAPixelUC)
itkRGBAPixelUC.__getitem__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___getitem__, None, itkRGBAPixelUC)
itkRGBAPixelUC.__setitem__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___setitem__, None, itkRGBAPixelUC)
itkRGBAPixelUC.__len__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___len__, None, itkRGBAPixelUC)
itkRGBAPixelUC.__repr__ = new_instancemethod(_itkRGBAPixelPython.itkRGBAPixelUC___repr__, None, itkRGBAPixelUC)
itkRGBAPixelUC_swigregister = _itkRGBAPixelPython.itkRGBAPixelUC_swigregister
itkRGBAPixelUC_swigregister(itkRGBAPixelUC)

def itkRGBAPixelUC_GetNumberOfComponents() -> "unsigned int":
    """itkRGBAPixelUC_GetNumberOfComponents() -> unsigned int"""
    return _itkRGBAPixelPython.itkRGBAPixelUC_GetNumberOfComponents()



