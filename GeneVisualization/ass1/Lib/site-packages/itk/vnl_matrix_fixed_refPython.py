# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _vnl_matrix_fixed_refPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_vnl_matrix_fixed_refPython', [dirname(__file__)])
        except ImportError:
            import _vnl_matrix_fixed_refPython
            return _vnl_matrix_fixed_refPython
        if fp is not None:
            try:
                _mod = imp.load_module('_vnl_matrix_fixed_refPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _vnl_matrix_fixed_refPython = swig_import_helper()
    del swig_import_helper
else:
    import _vnl_matrix_fixed_refPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import vnl_matrixPython
import vnl_vectorPython
import stdcomplexPython
import pyBasePython
import vnl_matrix_fixedPython
class vnl_matrix_fixed_ref_constF_3_3(object):
    """Proxy of C++ vnl_matrix_fixed_ref_constF_3_3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(vnl_matrix_fixed_ref_constF_3_3 self, vnl_matrix_fixedF_3_3 rhs) -> vnl_matrix_fixed_ref_constF_3_3
        __init__(vnl_matrix_fixed_ref_constF_3_3 self, float const * dataptr) -> vnl_matrix_fixed_ref_constF_3_3
        __init__(vnl_matrix_fixed_ref_constF_3_3 self, vnl_matrix_fixed_ref_constF_3_3 rhs) -> vnl_matrix_fixed_ref_constF_3_3
        """
        _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_swiginit(self, _vnl_matrix_fixed_refPython.new_vnl_matrix_fixed_ref_constF_3_3(*args))

    def get_row(self, row_index: 'unsigned int') -> "vnl_vector_fixed< float,3 >":
        """get_row(vnl_matrix_fixed_ref_constF_3_3 self, unsigned int row_index) -> vnl_vector_fixed< float,3 >"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_row(self, row_index)


    def get_column(self, column_index: 'unsigned int') -> "vnl_vector_fixed< float,3 >":
        """get_column(vnl_matrix_fixed_ref_constF_3_3 self, unsigned int column_index) -> vnl_vector_fixed< float,3 >"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_column(self, column_index)


    def get_diagonal(self) -> "vnl_vectorF":
        """get_diagonal(vnl_matrix_fixed_ref_constF_3_3 self) -> vnl_vectorF"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_diagonal(self)


    def data_block(self) -> "float const *":
        """data_block(vnl_matrix_fixed_ref_constF_3_3 self) -> float const *"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_data_block(self)


    def begin(self) -> "float const *":
        """begin(vnl_matrix_fixed_ref_constF_3_3 self) -> float const *"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_begin(self)


    def end(self) -> "float const *":
        """end(vnl_matrix_fixed_ref_constF_3_3 self) -> float const *"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_end(self)


    def __call__(self, r: 'unsigned int', c: 'unsigned int') -> "float const &":
        """__call__(vnl_matrix_fixed_ref_constF_3_3 self, unsigned int r, unsigned int c) -> float const &"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3___call__(self, r, c)


    def rows(self) -> "unsigned int":
        """rows(vnl_matrix_fixed_ref_constF_3_3 self) -> unsigned int"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_rows(self)


    def columns(self) -> "unsigned int":
        """columns(vnl_matrix_fixed_ref_constF_3_3 self) -> unsigned int"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_columns(self)


    def cols(self) -> "unsigned int":
        """cols(vnl_matrix_fixed_ref_constF_3_3 self) -> unsigned int"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_cols(self)


    def size(self) -> "unsigned int":
        """size(vnl_matrix_fixed_ref_constF_3_3 self) -> unsigned int"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_size(self)


    def _print(self, os: 'ostream') -> "void":
        """_print(vnl_matrix_fixed_ref_constF_3_3 self, ostream os)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3__print(self, os)


    def copy_out(self, arg0: 'float *') -> "void":
        """copy_out(vnl_matrix_fixed_ref_constF_3_3 self, float * arg0)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_copy_out(self, arg0)


    def transpose(self) -> "vnl_matrix_fixedF_3_3":
        """transpose(vnl_matrix_fixed_ref_constF_3_3 self) -> vnl_matrix_fixedF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_transpose(self)


    def conjugate_transpose(self) -> "vnl_matrix_fixedF_3_3":
        """conjugate_transpose(vnl_matrix_fixed_ref_constF_3_3 self) -> vnl_matrix_fixedF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_conjugate_transpose(self)


    def extract(self, rowz: 'unsigned int', colz: 'unsigned int', top: 'unsigned int'=0, left: 'unsigned int'=0) -> "vnl_matrixF":
        """
        extract(vnl_matrix_fixed_ref_constF_3_3 self, unsigned int rowz, unsigned int colz, unsigned int top=0, unsigned int left=0) -> vnl_matrixF
        extract(vnl_matrix_fixed_ref_constF_3_3 self, unsigned int rowz, unsigned int colz, unsigned int top=0) -> vnl_matrixF
        extract(vnl_matrix_fixed_ref_constF_3_3 self, unsigned int rowz, unsigned int colz) -> vnl_matrixF
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_extract(self, rowz, colz, top, left)


    def get_n_rows(self, rowstart: 'unsigned int', n: 'unsigned int') -> "vnl_matrixF":
        """get_n_rows(vnl_matrix_fixed_ref_constF_3_3 self, unsigned int rowstart, unsigned int n) -> vnl_matrixF"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_n_rows(self, rowstart, n)


    def get_n_columns(self, colstart: 'unsigned int', n: 'unsigned int') -> "vnl_matrixF":
        """get_n_columns(vnl_matrix_fixed_ref_constF_3_3 self, unsigned int colstart, unsigned int n) -> vnl_matrixF"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_n_columns(self, colstart, n)


    def array_one_norm(self) -> "float":
        """array_one_norm(vnl_matrix_fixed_ref_constF_3_3 self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_array_one_norm(self)


    def array_two_norm(self) -> "float":
        """array_two_norm(vnl_matrix_fixed_ref_constF_3_3 self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_array_two_norm(self)


    def array_inf_norm(self) -> "float":
        """array_inf_norm(vnl_matrix_fixed_ref_constF_3_3 self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_array_inf_norm(self)


    def absolute_value_sum(self) -> "float":
        """absolute_value_sum(vnl_matrix_fixed_ref_constF_3_3 self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_absolute_value_sum(self)


    def absolute_value_max(self) -> "float":
        """absolute_value_max(vnl_matrix_fixed_ref_constF_3_3 self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_absolute_value_max(self)


    def operator_one_norm(self) -> "float":
        """operator_one_norm(vnl_matrix_fixed_ref_constF_3_3 self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_operator_one_norm(self)


    def operator_inf_norm(self) -> "float":
        """operator_inf_norm(vnl_matrix_fixed_ref_constF_3_3 self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_operator_inf_norm(self)


    def frobenius_norm(self) -> "float":
        """frobenius_norm(vnl_matrix_fixed_ref_constF_3_3 self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_frobenius_norm(self)


    def fro_norm(self) -> "float":
        """fro_norm(vnl_matrix_fixed_ref_constF_3_3 self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_fro_norm(self)


    def rms(self) -> "float":
        """rms(vnl_matrix_fixed_ref_constF_3_3 self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_rms(self)


    def min_value(self) -> "float":
        """min_value(vnl_matrix_fixed_ref_constF_3_3 self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_min_value(self)


    def max_value(self) -> "float":
        """max_value(vnl_matrix_fixed_ref_constF_3_3 self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_max_value(self)


    def arg_min(self) -> "unsigned int":
        """arg_min(vnl_matrix_fixed_ref_constF_3_3 self) -> unsigned int"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_arg_min(self)


    def arg_max(self) -> "unsigned int":
        """arg_max(vnl_matrix_fixed_ref_constF_3_3 self) -> unsigned int"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_arg_max(self)


    def mean(self) -> "float":
        """mean(vnl_matrix_fixed_ref_constF_3_3 self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_mean(self)


    def empty(self) -> "bool":
        """empty(vnl_matrix_fixed_ref_constF_3_3 self) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_empty(self)


    def is_identity(self, *args) -> "bool":
        """
        is_identity(vnl_matrix_fixed_ref_constF_3_3 self) -> bool
        is_identity(vnl_matrix_fixed_ref_constF_3_3 self, double tol) -> bool
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_is_identity(self, *args)


    def is_zero(self, *args) -> "bool":
        """
        is_zero(vnl_matrix_fixed_ref_constF_3_3 self) -> bool
        is_zero(vnl_matrix_fixed_ref_constF_3_3 self, double tol) -> bool
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_is_zero(self, *args)


    def is_finite(self) -> "bool":
        """is_finite(vnl_matrix_fixed_ref_constF_3_3 self) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_is_finite(self)


    def has_nans(self) -> "bool":
        """has_nans(vnl_matrix_fixed_ref_constF_3_3 self) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_has_nans(self)


    def assert_size(self, rowz: 'unsigned int', colz: 'unsigned int') -> "void":
        """assert_size(vnl_matrix_fixed_ref_constF_3_3 self, unsigned int rowz, unsigned int colz)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_assert_size(self, rowz, colz)


    def assert_finite(self) -> "void":
        """assert_finite(vnl_matrix_fixed_ref_constF_3_3 self)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_assert_finite(self)


    def add(*args) -> "void":
        """
        add(float const * a, float const * b, float * r)
        add(float const * a, float b, float * r)
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_add(*args)

    add = staticmethod(add)

    def sub(*args) -> "void":
        """
        sub(float const * a, float const * b, float * r)
        sub(float const * a, float b, float * r)
        sub(float a, float const * b, float * r)
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_sub(*args)

    sub = staticmethod(sub)

    def mul(*args) -> "void":
        """
        mul(float const * a, float const * b, float * r)
        mul(float const * a, float b, float * r)
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_mul(*args)

    mul = staticmethod(mul)

    def div(*args) -> "void":
        """
        div(float const * a, float const * b, float * r)
        div(float const * a, float b, float * r)
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_div(*args)

    div = staticmethod(div)

    def equal(a: 'float const *', b: 'float const *') -> "bool":
        """equal(float const * a, float const * b) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_equal(a, b)

    equal = staticmethod(equal)
    __swig_destroy__ = _vnl_matrix_fixed_refPython.delete_vnl_matrix_fixed_ref_constF_3_3
vnl_matrix_fixed_ref_constF_3_3.get_row = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_row, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.get_column = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_column, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.get_diagonal = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_diagonal, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.data_block = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_data_block, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.begin = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_begin, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.end = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_end, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.__call__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3___call__, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.rows = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_rows, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.columns = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_columns, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.cols = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_cols, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.size = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_size, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3._print = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3__print, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.copy_out = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_copy_out, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.transpose = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_transpose, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.conjugate_transpose = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_conjugate_transpose, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.extract = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_extract, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.get_n_rows = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_n_rows, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.get_n_columns = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_n_columns, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.array_one_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_array_one_norm, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.array_two_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_array_two_norm, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.array_inf_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_array_inf_norm, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.absolute_value_sum = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_absolute_value_sum, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.absolute_value_max = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_absolute_value_max, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.operator_one_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_operator_one_norm, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.operator_inf_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_operator_inf_norm, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.frobenius_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_frobenius_norm, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.fro_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_fro_norm, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.rms = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_rms, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.min_value = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_min_value, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.max_value = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_max_value, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.arg_min = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_arg_min, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.arg_max = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_arg_max, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.mean = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_mean, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.empty = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_empty, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.is_identity = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_is_identity, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.is_zero = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_is_zero, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.is_finite = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_is_finite, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.has_nans = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_has_nans, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.assert_size = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_assert_size, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.assert_finite = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_assert_finite, None, vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3_swigregister = _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_swigregister
vnl_matrix_fixed_ref_constF_3_3_swigregister(vnl_matrix_fixed_ref_constF_3_3)

def vnl_matrix_fixed_ref_constF_3_3_add(*args) -> "void":
    """
    add(float const * a, float const * b, float * r)
    vnl_matrix_fixed_ref_constF_3_3_add(float const * a, float b, float * r)
    """
    return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_add(*args)

def vnl_matrix_fixed_ref_constF_3_3_sub(*args) -> "void":
    """
    sub(float const * a, float const * b, float * r)
    sub(float const * a, float b, float * r)
    vnl_matrix_fixed_ref_constF_3_3_sub(float a, float const * b, float * r)
    """
    return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_sub(*args)

def vnl_matrix_fixed_ref_constF_3_3_mul(*args) -> "void":
    """
    mul(float const * a, float const * b, float * r)
    vnl_matrix_fixed_ref_constF_3_3_mul(float const * a, float b, float * r)
    """
    return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_mul(*args)

def vnl_matrix_fixed_ref_constF_3_3_div(*args) -> "void":
    """
    div(float const * a, float const * b, float * r)
    vnl_matrix_fixed_ref_constF_3_3_div(float const * a, float b, float * r)
    """
    return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_div(*args)

def vnl_matrix_fixed_ref_constF_3_3_equal(a: 'float const *', b: 'float const *') -> "bool":
    """vnl_matrix_fixed_ref_constF_3_3_equal(float const * a, float const * b) -> bool"""
    return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_equal(a, b)

class vnl_matrix_fixed_refF_3_3(vnl_matrix_fixed_ref_constF_3_3):
    """Proxy of C++ vnl_matrix_fixed_refF_3_3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def data_block(self) -> "float *":
        """data_block(vnl_matrix_fixed_refF_3_3 self) -> float *"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_data_block(self)


    def put(self, r: 'unsigned int', c: 'unsigned int', v: 'float const &') -> "void":
        """put(vnl_matrix_fixed_refF_3_3 self, unsigned int r, unsigned int c, float const & v)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_put(self, r, c, v)


    def get(self, r: 'unsigned int', c: 'unsigned int') -> "float":
        """get(vnl_matrix_fixed_refF_3_3 self, unsigned int r, unsigned int c) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_get(self, r, c)


    def __call__(self, r: 'unsigned int', c: 'unsigned int') -> "float &":
        """__call__(vnl_matrix_fixed_refF_3_3 self, unsigned int r, unsigned int c) -> float &"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___call__(self, r, c)


    def fill(self, arg0: 'float') -> "vnl_matrix_fixed_refF_3_3 const &":
        """fill(vnl_matrix_fixed_refF_3_3 self, float arg0) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_fill(self, arg0)


    def fill_diagonal(self, arg0: 'float') -> "vnl_matrix_fixed_refF_3_3 const &":
        """fill_diagonal(vnl_matrix_fixed_refF_3_3 self, float arg0) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_fill_diagonal(self, arg0)


    def set_diagonal(self, arg0: 'vnl_vectorF') -> "vnl_matrix_fixed_refF_3_3 const &":
        """set_diagonal(vnl_matrix_fixed_refF_3_3 self, vnl_vectorF arg0) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_diagonal(self, arg0)


    def copy_in(self, arg0: 'float const *') -> "vnl_matrix_fixed_refF_3_3 const &":
        """copy_in(vnl_matrix_fixed_refF_3_3 self, float const * arg0) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_copy_in(self, arg0)


    def set(self, d: 'float const *') -> "vnl_matrix_fixed_refF_3_3 const &":
        """set(vnl_matrix_fixed_refF_3_3 self, float const * d) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set(self, d)


    def inplace_transpose(self) -> "vnl_matrix_fixed_refF_3_3 const &":
        """inplace_transpose(vnl_matrix_fixed_refF_3_3 self) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_inplace_transpose(self)


    def __idiv__(self, s: 'float') -> "vnl_matrix_fixed_refF_3_3 const &":
        """__idiv__(vnl_matrix_fixed_refF_3_3 self, float s) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___idiv__(self, s)


    def __iadd__(self, *args) -> "vnl_matrix_fixed_refF_3_3 const &":
        """
        __iadd__(vnl_matrix_fixed_refF_3_3 self, float s) -> vnl_matrix_fixed_refF_3_3
        __iadd__(vnl_matrix_fixed_refF_3_3 self, vnl_matrix_fixed_ref_constF_3_3 m) -> vnl_matrix_fixed_refF_3_3
        __iadd__(vnl_matrix_fixed_refF_3_3 self, vnl_matrixF m) -> vnl_matrix_fixed_refF_3_3
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___iadd__(self, *args)


    def __isub__(self, *args) -> "vnl_matrix_fixed_refF_3_3 const &":
        """
        __isub__(vnl_matrix_fixed_refF_3_3 self, float s) -> vnl_matrix_fixed_refF_3_3
        __isub__(vnl_matrix_fixed_refF_3_3 self, vnl_matrix_fixed_ref_constF_3_3 m) -> vnl_matrix_fixed_refF_3_3
        __isub__(vnl_matrix_fixed_refF_3_3 self, vnl_matrixF m) -> vnl_matrix_fixed_refF_3_3
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___isub__(self, *args)


    def __neg__(self) -> "vnl_matrix_fixedF_3_3":
        """__neg__(vnl_matrix_fixed_refF_3_3 self) -> vnl_matrix_fixedF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___neg__(self)


    def __imul__(self, *args) -> "vnl_matrix_fixed_refF_3_3 const &":
        """
        __imul__(vnl_matrix_fixed_refF_3_3 self, float s) -> vnl_matrix_fixed_refF_3_3
        __imul__(vnl_matrix_fixed_refF_3_3 self, vnl_matrix_fixed_ref_constF_3_3 s) -> vnl_matrix_fixed_refF_3_3
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___imul__(self, *args)


    def update(self, arg0: 'vnl_matrixF', top: 'unsigned int'=0, left: 'unsigned int'=0) -> "vnl_matrix_fixed_refF_3_3 const &":
        """
        update(vnl_matrix_fixed_refF_3_3 self, vnl_matrixF arg0, unsigned int top=0, unsigned int left=0) -> vnl_matrix_fixed_refF_3_3
        update(vnl_matrix_fixed_refF_3_3 self, vnl_matrixF arg0, unsigned int top=0) -> vnl_matrix_fixed_refF_3_3
        update(vnl_matrix_fixed_refF_3_3 self, vnl_matrixF arg0) -> vnl_matrix_fixed_refF_3_3
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_update(self, arg0, top, left)


    def set_column(self, *args) -> "vnl_matrix_fixed_refF_3_3 const &":
        """
        set_column(vnl_matrix_fixed_refF_3_3 self, unsigned int i, float const * v) -> vnl_matrix_fixed_refF_3_3
        set_column(vnl_matrix_fixed_refF_3_3 self, unsigned int i, float value) -> vnl_matrix_fixed_refF_3_3
        set_column(vnl_matrix_fixed_refF_3_3 self, unsigned int j, vnl_vectorF v) -> vnl_matrix_fixed_refF_3_3
        set_column(vnl_matrix_fixed_refF_3_3 self, unsigned int j, vnl_vector_fixed< float,3 > const & v) -> vnl_matrix_fixed_refF_3_3
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_column(self, *args)


    def set_columns(self, starting_column: 'unsigned int', M: 'vnl_matrixF') -> "vnl_matrix_fixed_refF_3_3 const &":
        """set_columns(vnl_matrix_fixed_refF_3_3 self, unsigned int starting_column, vnl_matrixF M) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_columns(self, starting_column, M)


    def set_row(self, *args) -> "vnl_matrix_fixed_refF_3_3 const &":
        """
        set_row(vnl_matrix_fixed_refF_3_3 self, unsigned int i, float const * v) -> vnl_matrix_fixed_refF_3_3
        set_row(vnl_matrix_fixed_refF_3_3 self, unsigned int i, float value) -> vnl_matrix_fixed_refF_3_3
        set_row(vnl_matrix_fixed_refF_3_3 self, unsigned int i, vnl_vectorF v) -> vnl_matrix_fixed_refF_3_3
        set_row(vnl_matrix_fixed_refF_3_3 self, unsigned int i, vnl_vector_fixed< float,3 > const & v) -> vnl_matrix_fixed_refF_3_3
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_row(self, *args)


    def set_identity(self) -> "vnl_matrix_fixed_refF_3_3 const &":
        """set_identity(vnl_matrix_fixed_refF_3_3 self) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_identity(self)


    def flipud(self) -> "vnl_matrix_fixed_refF_3_3 &":
        """flipud(vnl_matrix_fixed_refF_3_3 self) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_flipud(self)


    def fliplr(self) -> "vnl_matrix_fixed_refF_3_3 &":
        """fliplr(vnl_matrix_fixed_refF_3_3 self) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_fliplr(self)


    def normalize_rows(self) -> "vnl_matrix_fixed_refF_3_3 const &":
        """normalize_rows(vnl_matrix_fixed_refF_3_3 self) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_normalize_rows(self)


    def normalize_columns(self) -> "vnl_matrix_fixed_refF_3_3 const &":
        """normalize_columns(vnl_matrix_fixed_refF_3_3 self) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_normalize_columns(self)


    def scale_row(self, row: 'unsigned int', value: 'float') -> "vnl_matrix_fixed_refF_3_3 const &":
        """scale_row(vnl_matrix_fixed_refF_3_3 self, unsigned int row, float value) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_scale_row(self, row, value)


    def scale_column(self, col: 'unsigned int', value: 'float') -> "vnl_matrix_fixed_refF_3_3 const &":
        """scale_column(vnl_matrix_fixed_refF_3_3 self, unsigned int col, float value) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_scale_column(self, col, value)


    def read_ascii(self, s: 'istream') -> "bool":
        """read_ascii(vnl_matrix_fixed_refF_3_3 self, istream s) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_read_ascii(self, s)


    def as_matrix(self) -> "vnl_matrixF const":
        """as_matrix(vnl_matrix_fixed_refF_3_3 self) -> vnl_matrixF"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_as_matrix(self)


    def begin(self) -> "float *":
        """begin(vnl_matrix_fixed_refF_3_3 self) -> float *"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_begin(self)


    def end(self) -> "float *":
        """end(vnl_matrix_fixed_refF_3_3 self) -> float *"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_end(self)


    def operator_eq(self, rhs: 'vnl_matrix_fixed_ref_constF_3_3') -> "bool":
        """operator_eq(vnl_matrix_fixed_refF_3_3 self, vnl_matrix_fixed_ref_constF_3_3 rhs) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_operator_eq(self, rhs)


    def __eq__(self, that: 'vnl_matrix_fixed_ref_constF_3_3') -> "bool":
        """__eq__(vnl_matrix_fixed_refF_3_3 self, vnl_matrix_fixed_ref_constF_3_3 that) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___eq__(self, that)


    def __ne__(self, that: 'vnl_matrix_fixed_ref_constF_3_3') -> "bool":
        """__ne__(vnl_matrix_fixed_refF_3_3 self, vnl_matrix_fixed_ref_constF_3_3 that) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___ne__(self, that)


    def __init__(self, *args):
        """
        __init__(vnl_matrix_fixed_refF_3_3 self, vnl_matrix_fixedF_3_3 rhs) -> vnl_matrix_fixed_refF_3_3
        __init__(vnl_matrix_fixed_refF_3_3 self, float * dataptr) -> vnl_matrix_fixed_refF_3_3
        __init__(vnl_matrix_fixed_refF_3_3 self, vnl_matrix_fixed_refF_3_3 arg0) -> vnl_matrix_fixed_refF_3_3
        """
        _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_swiginit(self, _vnl_matrix_fixed_refPython.new_vnl_matrix_fixed_refF_3_3(*args))
    __swig_destroy__ = _vnl_matrix_fixed_refPython.delete_vnl_matrix_fixed_refF_3_3
vnl_matrix_fixed_refF_3_3.data_block = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_data_block, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.put = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_put, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.get = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_get, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__call__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___call__, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.fill = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_fill, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.fill_diagonal = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_fill_diagonal, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.set_diagonal = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_diagonal, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.copy_in = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_copy_in, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.set = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.inplace_transpose = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_inplace_transpose, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__idiv__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___idiv__, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__iadd__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___iadd__, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__isub__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___isub__, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__neg__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___neg__, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__imul__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___imul__, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.update = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_update, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.set_column = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_column, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.set_columns = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_columns, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.set_row = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_row, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.set_identity = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_identity, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.flipud = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_flipud, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.fliplr = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_fliplr, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.normalize_rows = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_normalize_rows, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.normalize_columns = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_normalize_columns, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.scale_row = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_scale_row, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.scale_column = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_scale_column, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.read_ascii = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_read_ascii, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.as_matrix = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_as_matrix, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.begin = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_begin, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.end = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_end, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.operator_eq = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_operator_eq, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__eq__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___eq__, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__ne__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___ne__, None, vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3_swigregister = _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_swigregister
vnl_matrix_fixed_refF_3_3_swigregister(vnl_matrix_fixed_refF_3_3)



