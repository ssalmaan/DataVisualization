# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMinimumProjectionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMinimumProjectionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkMinimumProjectionImageFilterPython
            return _itkMinimumProjectionImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMinimumProjectionImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMinimumProjectionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMinimumProjectionImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterBPython

def itkMinimumProjectionImageFilterIF3IF2_New():
  return itkMinimumProjectionImageFilterIF3IF2.New()


def itkMinimumProjectionImageFilterIF3IF2_Superclass_New():
  return itkMinimumProjectionImageFilterIF3IF2_Superclass.New()


def itkMinimumProjectionImageFilterIUS3IUS2_New():
  return itkMinimumProjectionImageFilterIUS3IUS2.New()


def itkMinimumProjectionImageFilterIUS3IUS2_Superclass_New():
  return itkMinimumProjectionImageFilterIUS3IUS2_Superclass.New()


def itkMinimumProjectionImageFilterIUC3IUC2_New():
  return itkMinimumProjectionImageFilterIUC3IUC2.New()


def itkMinimumProjectionImageFilterIUC3IUC2_Superclass_New():
  return itkMinimumProjectionImageFilterIUC3IUC2_Superclass.New()


def itkMinimumProjectionImageFilterISS3ISS2_New():
  return itkMinimumProjectionImageFilterISS3ISS2.New()


def itkMinimumProjectionImageFilterISS3ISS2_Superclass_New():
  return itkMinimumProjectionImageFilterISS3ISS2_Superclass.New()


def itkMinimumProjectionImageFilterIF3IF3_New():
  return itkMinimumProjectionImageFilterIF3IF3.New()


def itkMinimumProjectionImageFilterIF3IF3_Superclass_New():
  return itkMinimumProjectionImageFilterIF3IF3_Superclass.New()


def itkMinimumProjectionImageFilterIF2IF2_New():
  return itkMinimumProjectionImageFilterIF2IF2.New()


def itkMinimumProjectionImageFilterIF2IF2_Superclass_New():
  return itkMinimumProjectionImageFilterIF2IF2_Superclass.New()


def itkMinimumProjectionImageFilterIUS3IUS3_New():
  return itkMinimumProjectionImageFilterIUS3IUS3.New()


def itkMinimumProjectionImageFilterIUS3IUS3_Superclass_New():
  return itkMinimumProjectionImageFilterIUS3IUS3_Superclass.New()


def itkMinimumProjectionImageFilterIUS2IUS2_New():
  return itkMinimumProjectionImageFilterIUS2IUS2.New()


def itkMinimumProjectionImageFilterIUS2IUS2_Superclass_New():
  return itkMinimumProjectionImageFilterIUS2IUS2_Superclass.New()


def itkMinimumProjectionImageFilterIUC3IUC3_New():
  return itkMinimumProjectionImageFilterIUC3IUC3.New()


def itkMinimumProjectionImageFilterIUC3IUC3_Superclass_New():
  return itkMinimumProjectionImageFilterIUC3IUC3_Superclass.New()


def itkMinimumProjectionImageFilterIUC2IUC2_New():
  return itkMinimumProjectionImageFilterIUC2IUC2.New()


def itkMinimumProjectionImageFilterIUC2IUC2_Superclass_New():
  return itkMinimumProjectionImageFilterIUC2IUC2_Superclass.New()


def itkMinimumProjectionImageFilterISS3ISS3_New():
  return itkMinimumProjectionImageFilterISS3ISS3.New()


def itkMinimumProjectionImageFilterISS3ISS3_Superclass_New():
  return itkMinimumProjectionImageFilterISS3ISS3_Superclass.New()


def itkMinimumProjectionImageFilterISS2ISS2_New():
  return itkMinimumProjectionImageFilterISS2ISS2.New()


def itkMinimumProjectionImageFilterISS2ISS2_Superclass_New():
  return itkMinimumProjectionImageFilterISS2ISS2_Superclass.New()

class itkMinimumProjectionImageFilterIF2IF2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkMinimumProjectionImageFilterIF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIF2IF2_Superclass_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIF2IF2_Superclass_Pointer":
        """Clone(itkMinimumProjectionImageFilterIF2IF2_Superclass self) -> itkMinimumProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_Clone(self)

    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkMinimumProjectionImageFilterIF2IF2_Superclass self, unsigned int const _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkMinimumProjectionImageFilterIF2IF2_Superclass self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIF2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF2IF2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIF2IF2_Superclass.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_Clone, None, itkMinimumProjectionImageFilterIF2IF2_Superclass)
itkMinimumProjectionImageFilterIF2IF2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension, None, itkMinimumProjectionImageFilterIF2IF2_Superclass)
itkMinimumProjectionImageFilterIF2IF2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension, None, itkMinimumProjectionImageFilterIF2IF2_Superclass)
itkMinimumProjectionImageFilterIF2IF2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_swigregister
itkMinimumProjectionImageFilterIF2IF2_Superclass_swigregister(itkMinimumProjectionImageFilterIF2IF2_Superclass)

def itkMinimumProjectionImageFilterIF2IF2_Superclass___New_orig__() -> "itkMinimumProjectionImageFilterIF2IF2_Superclass_Pointer":
    """itkMinimumProjectionImageFilterIF2IF2_Superclass___New_orig__() -> itkMinimumProjectionImageFilterIF2IF2_Superclass_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIF2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIF2IF2_Superclass *":
    """itkMinimumProjectionImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF2IF2_Superclass"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_cast(obj)

class itkMinimumProjectionImageFilterIF3IF2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2):
    """Proxy of C++ itkMinimumProjectionImageFilterIF3IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIF3IF2_Superclass_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIF3IF2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIF3IF2_Superclass_Pointer":
        """Clone(itkMinimumProjectionImageFilterIF3IF2_Superclass self) -> itkMinimumProjectionImageFilterIF3IF2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_Clone(self)

    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkMinimumProjectionImageFilterIF3IF2_Superclass self, unsigned int const _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkMinimumProjectionImageFilterIF3IF2_Superclass self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIF3IF2_Superclass *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIF3IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF3IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF3IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIF3IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIF3IF2_Superclass.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_Clone, None, itkMinimumProjectionImageFilterIF3IF2_Superclass)
itkMinimumProjectionImageFilterIF3IF2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension, None, itkMinimumProjectionImageFilterIF3IF2_Superclass)
itkMinimumProjectionImageFilterIF3IF2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension, None, itkMinimumProjectionImageFilterIF3IF2_Superclass)
itkMinimumProjectionImageFilterIF3IF2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_swigregister
itkMinimumProjectionImageFilterIF3IF2_Superclass_swigregister(itkMinimumProjectionImageFilterIF3IF2_Superclass)

def itkMinimumProjectionImageFilterIF3IF2_Superclass___New_orig__() -> "itkMinimumProjectionImageFilterIF3IF2_Superclass_Pointer":
    """itkMinimumProjectionImageFilterIF3IF2_Superclass___New_orig__() -> itkMinimumProjectionImageFilterIF3IF2_Superclass_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIF3IF2_Superclass_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIF3IF2_Superclass *":
    """itkMinimumProjectionImageFilterIF3IF2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF2_Superclass"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_cast(obj)

class itkMinimumProjectionImageFilterIF3IF3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkMinimumProjectionImageFilterIF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIF3IF3_Superclass_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIF3IF3_Superclass_Pointer":
        """Clone(itkMinimumProjectionImageFilterIF3IF3_Superclass self) -> itkMinimumProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_Clone(self)

    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkMinimumProjectionImageFilterIF3IF3_Superclass self, unsigned int const _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkMinimumProjectionImageFilterIF3IF3_Superclass self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIF3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIF3IF3_Superclass.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_Clone, None, itkMinimumProjectionImageFilterIF3IF3_Superclass)
itkMinimumProjectionImageFilterIF3IF3_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension, None, itkMinimumProjectionImageFilterIF3IF3_Superclass)
itkMinimumProjectionImageFilterIF3IF3_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension, None, itkMinimumProjectionImageFilterIF3IF3_Superclass)
itkMinimumProjectionImageFilterIF3IF3_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_swigregister
itkMinimumProjectionImageFilterIF3IF3_Superclass_swigregister(itkMinimumProjectionImageFilterIF3IF3_Superclass)

def itkMinimumProjectionImageFilterIF3IF3_Superclass___New_orig__() -> "itkMinimumProjectionImageFilterIF3IF3_Superclass_Pointer":
    """itkMinimumProjectionImageFilterIF3IF3_Superclass___New_orig__() -> itkMinimumProjectionImageFilterIF3IF3_Superclass_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIF3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIF3IF3_Superclass *":
    """itkMinimumProjectionImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF3_Superclass"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_cast(obj)

class itkMinimumProjectionImageFilterISS2ISS2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkMinimumProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterISS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterISS2ISS2_Superclass_Pointer":
        """Clone(itkMinimumProjectionImageFilterISS2ISS2_Superclass self) -> itkMinimumProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_Clone(self)

    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkMinimumProjectionImageFilterISS2ISS2_Superclass self, unsigned int const _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkMinimumProjectionImageFilterISS2ISS2_Superclass self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterISS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterISS2ISS2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterISS2ISS2_Superclass.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_Clone, None, itkMinimumProjectionImageFilterISS2ISS2_Superclass)
itkMinimumProjectionImageFilterISS2ISS2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension, None, itkMinimumProjectionImageFilterISS2ISS2_Superclass)
itkMinimumProjectionImageFilterISS2ISS2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension, None, itkMinimumProjectionImageFilterISS2ISS2_Superclass)
itkMinimumProjectionImageFilterISS2ISS2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_swigregister
itkMinimumProjectionImageFilterISS2ISS2_Superclass_swigregister(itkMinimumProjectionImageFilterISS2ISS2_Superclass)

def itkMinimumProjectionImageFilterISS2ISS2_Superclass___New_orig__() -> "itkMinimumProjectionImageFilterISS2ISS2_Superclass_Pointer":
    """itkMinimumProjectionImageFilterISS2ISS2_Superclass___New_orig__() -> itkMinimumProjectionImageFilterISS2ISS2_Superclass_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterISS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterISS2ISS2_Superclass *":
    """itkMinimumProjectionImageFilterISS2ISS2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterISS2ISS2_Superclass"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_cast(obj)

class itkMinimumProjectionImageFilterISS3ISS2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    """Proxy of C++ itkMinimumProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterISS3ISS2_Superclass_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterISS3ISS2_Superclass_Pointer":
        """Clone(itkMinimumProjectionImageFilterISS3ISS2_Superclass self) -> itkMinimumProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_Clone(self)

    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkMinimumProjectionImageFilterISS3ISS2_Superclass self, unsigned int const _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkMinimumProjectionImageFilterISS3ISS2_Superclass self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS3ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterISS3ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterISS3ISS2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS3ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterISS3ISS2_Superclass.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_Clone, None, itkMinimumProjectionImageFilterISS3ISS2_Superclass)
itkMinimumProjectionImageFilterISS3ISS2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension, None, itkMinimumProjectionImageFilterISS3ISS2_Superclass)
itkMinimumProjectionImageFilterISS3ISS2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension, None, itkMinimumProjectionImageFilterISS3ISS2_Superclass)
itkMinimumProjectionImageFilterISS3ISS2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_swigregister
itkMinimumProjectionImageFilterISS3ISS2_Superclass_swigregister(itkMinimumProjectionImageFilterISS3ISS2_Superclass)

def itkMinimumProjectionImageFilterISS3ISS2_Superclass___New_orig__() -> "itkMinimumProjectionImageFilterISS3ISS2_Superclass_Pointer":
    """itkMinimumProjectionImageFilterISS3ISS2_Superclass___New_orig__() -> itkMinimumProjectionImageFilterISS3ISS2_Superclass_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterISS3ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterISS3ISS2_Superclass *":
    """itkMinimumProjectionImageFilterISS3ISS2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterISS3ISS2_Superclass"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_cast(obj)

class itkMinimumProjectionImageFilterISS3ISS3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkMinimumProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterISS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterISS3ISS3_Superclass_Pointer":
        """Clone(itkMinimumProjectionImageFilterISS3ISS3_Superclass self) -> itkMinimumProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_Clone(self)

    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkMinimumProjectionImageFilterISS3ISS3_Superclass self, unsigned int const _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkMinimumProjectionImageFilterISS3ISS3_Superclass self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterISS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterISS3ISS3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterISS3ISS3_Superclass.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_Clone, None, itkMinimumProjectionImageFilterISS3ISS3_Superclass)
itkMinimumProjectionImageFilterISS3ISS3_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension, None, itkMinimumProjectionImageFilterISS3ISS3_Superclass)
itkMinimumProjectionImageFilterISS3ISS3_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension, None, itkMinimumProjectionImageFilterISS3ISS3_Superclass)
itkMinimumProjectionImageFilterISS3ISS3_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_swigregister
itkMinimumProjectionImageFilterISS3ISS3_Superclass_swigregister(itkMinimumProjectionImageFilterISS3ISS3_Superclass)

def itkMinimumProjectionImageFilterISS3ISS3_Superclass___New_orig__() -> "itkMinimumProjectionImageFilterISS3ISS3_Superclass_Pointer":
    """itkMinimumProjectionImageFilterISS3ISS3_Superclass___New_orig__() -> itkMinimumProjectionImageFilterISS3ISS3_Superclass_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass___New_orig__()

def itkMinimumProjectionImageFilterISS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterISS3ISS3_Superclass *":
    """itkMinimumProjectionImageFilterISS3ISS3_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterISS3ISS3_Superclass"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_cast(obj)

class itkMinimumProjectionImageFilterIUC2IUC2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkMinimumProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIUC2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIUC2IUC2_Superclass_Pointer":
        """Clone(itkMinimumProjectionImageFilterIUC2IUC2_Superclass self) -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_Clone(self)

    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkMinimumProjectionImageFilterIUC2IUC2_Superclass self, unsigned int const _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkMinimumProjectionImageFilterIUC2IUC2_Superclass self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUC2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUC2IUC2_Superclass.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_Clone, None, itkMinimumProjectionImageFilterIUC2IUC2_Superclass)
itkMinimumProjectionImageFilterIUC2IUC2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension, None, itkMinimumProjectionImageFilterIUC2IUC2_Superclass)
itkMinimumProjectionImageFilterIUC2IUC2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension, None, itkMinimumProjectionImageFilterIUC2IUC2_Superclass)
itkMinimumProjectionImageFilterIUC2IUC2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_swigregister
itkMinimumProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkMinimumProjectionImageFilterIUC2IUC2_Superclass)

def itkMinimumProjectionImageFilterIUC2IUC2_Superclass___New_orig__() -> "itkMinimumProjectionImageFilterIUC2IUC2_Superclass_Pointer":
    """itkMinimumProjectionImageFilterIUC2IUC2_Superclass___New_orig__() -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUC2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUC2IUC2_Superclass *":
    """itkMinimumProjectionImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_cast(obj)

class itkMinimumProjectionImageFilterIUC3IUC2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    """Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIUC3IUC2_Superclass_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIUC3IUC2_Superclass_Pointer":
        """Clone(itkMinimumProjectionImageFilterIUC3IUC2_Superclass self) -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_Clone(self)

    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkMinimumProjectionImageFilterIUC3IUC2_Superclass self, unsigned int const _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkMinimumProjectionImageFilterIUC3IUC2_Superclass self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUC3IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC3IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUC3IUC2_Superclass.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_Clone, None, itkMinimumProjectionImageFilterIUC3IUC2_Superclass)
itkMinimumProjectionImageFilterIUC3IUC2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension, None, itkMinimumProjectionImageFilterIUC3IUC2_Superclass)
itkMinimumProjectionImageFilterIUC3IUC2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension, None, itkMinimumProjectionImageFilterIUC3IUC2_Superclass)
itkMinimumProjectionImageFilterIUC3IUC2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_swigregister
itkMinimumProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkMinimumProjectionImageFilterIUC3IUC2_Superclass)

def itkMinimumProjectionImageFilterIUC3IUC2_Superclass___New_orig__() -> "itkMinimumProjectionImageFilterIUC3IUC2_Superclass_Pointer":
    """itkMinimumProjectionImageFilterIUC3IUC2_Superclass___New_orig__() -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUC3IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUC3IUC2_Superclass *":
    """itkMinimumProjectionImageFilterIUC3IUC2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_cast(obj)

class itkMinimumProjectionImageFilterIUC3IUC3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIUC3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIUC3IUC3_Superclass_Pointer":
        """Clone(itkMinimumProjectionImageFilterIUC3IUC3_Superclass self) -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_Clone(self)

    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkMinimumProjectionImageFilterIUC3IUC3_Superclass self, unsigned int const _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkMinimumProjectionImageFilterIUC3IUC3_Superclass self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUC3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUC3IUC3_Superclass.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_Clone, None, itkMinimumProjectionImageFilterIUC3IUC3_Superclass)
itkMinimumProjectionImageFilterIUC3IUC3_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension, None, itkMinimumProjectionImageFilterIUC3IUC3_Superclass)
itkMinimumProjectionImageFilterIUC3IUC3_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension, None, itkMinimumProjectionImageFilterIUC3IUC3_Superclass)
itkMinimumProjectionImageFilterIUC3IUC3_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_swigregister
itkMinimumProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkMinimumProjectionImageFilterIUC3IUC3_Superclass)

def itkMinimumProjectionImageFilterIUC3IUC3_Superclass___New_orig__() -> "itkMinimumProjectionImageFilterIUC3IUC3_Superclass_Pointer":
    """itkMinimumProjectionImageFilterIUC3IUC3_Superclass___New_orig__() -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUC3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUC3IUC3_Superclass *":
    """itkMinimumProjectionImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_cast(obj)

class itkMinimumProjectionImageFilterIUS2IUS2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkMinimumProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIUS2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIUS2IUS2_Superclass_Pointer":
        """Clone(itkMinimumProjectionImageFilterIUS2IUS2_Superclass self) -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_Clone(self)

    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkMinimumProjectionImageFilterIUS2IUS2_Superclass self, unsigned int const _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkMinimumProjectionImageFilterIUS2IUS2_Superclass self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUS2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUS2IUS2_Superclass.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_Clone, None, itkMinimumProjectionImageFilterIUS2IUS2_Superclass)
itkMinimumProjectionImageFilterIUS2IUS2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension, None, itkMinimumProjectionImageFilterIUS2IUS2_Superclass)
itkMinimumProjectionImageFilterIUS2IUS2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension, None, itkMinimumProjectionImageFilterIUS2IUS2_Superclass)
itkMinimumProjectionImageFilterIUS2IUS2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_swigregister
itkMinimumProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkMinimumProjectionImageFilterIUS2IUS2_Superclass)

def itkMinimumProjectionImageFilterIUS2IUS2_Superclass___New_orig__() -> "itkMinimumProjectionImageFilterIUS2IUS2_Superclass_Pointer":
    """itkMinimumProjectionImageFilterIUS2IUS2_Superclass___New_orig__() -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUS2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUS2IUS2_Superclass *":
    """itkMinimumProjectionImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_cast(obj)

class itkMinimumProjectionImageFilterIUS3IUS2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    """Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIUS3IUS2_Superclass_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIUS3IUS2_Superclass_Pointer":
        """Clone(itkMinimumProjectionImageFilterIUS3IUS2_Superclass self) -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_Clone(self)

    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkMinimumProjectionImageFilterIUS3IUS2_Superclass self, unsigned int const _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkMinimumProjectionImageFilterIUS3IUS2_Superclass self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUS3IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS3IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUS3IUS2_Superclass.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_Clone, None, itkMinimumProjectionImageFilterIUS3IUS2_Superclass)
itkMinimumProjectionImageFilterIUS3IUS2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension, None, itkMinimumProjectionImageFilterIUS3IUS2_Superclass)
itkMinimumProjectionImageFilterIUS3IUS2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension, None, itkMinimumProjectionImageFilterIUS3IUS2_Superclass)
itkMinimumProjectionImageFilterIUS3IUS2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_swigregister
itkMinimumProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkMinimumProjectionImageFilterIUS3IUS2_Superclass)

def itkMinimumProjectionImageFilterIUS3IUS2_Superclass___New_orig__() -> "itkMinimumProjectionImageFilterIUS3IUS2_Superclass_Pointer":
    """itkMinimumProjectionImageFilterIUS3IUS2_Superclass___New_orig__() -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUS3IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUS3IUS2_Superclass *":
    """itkMinimumProjectionImageFilterIUS3IUS2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_cast(obj)

class itkMinimumProjectionImageFilterIUS3IUS3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIUS3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIUS3IUS3_Superclass_Pointer":
        """Clone(itkMinimumProjectionImageFilterIUS3IUS3_Superclass self) -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_Clone(self)

    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkMinimumProjectionImageFilterIUS3IUS3_Superclass self, unsigned int const _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkMinimumProjectionImageFilterIUS3IUS3_Superclass self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUS3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUS3IUS3_Superclass.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_Clone, None, itkMinimumProjectionImageFilterIUS3IUS3_Superclass)
itkMinimumProjectionImageFilterIUS3IUS3_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension, None, itkMinimumProjectionImageFilterIUS3IUS3_Superclass)
itkMinimumProjectionImageFilterIUS3IUS3_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension, None, itkMinimumProjectionImageFilterIUS3IUS3_Superclass)
itkMinimumProjectionImageFilterIUS3IUS3_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_swigregister
itkMinimumProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkMinimumProjectionImageFilterIUS3IUS3_Superclass)

def itkMinimumProjectionImageFilterIUS3IUS3_Superclass___New_orig__() -> "itkMinimumProjectionImageFilterIUS3IUS3_Superclass_Pointer":
    """itkMinimumProjectionImageFilterIUS3IUS3_Superclass___New_orig__() -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUS3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUS3IUS3_Superclass *":
    """itkMinimumProjectionImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_cast(obj)

class itkMinimumProjectionImageFilterIF2IF2(itkMinimumProjectionImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIF2IF2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIF2IF2_Pointer":
        """Clone(itkMinimumProjectionImageFilterIF2IF2 self) -> itkMinimumProjectionImageFilterIF2IF2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Clone(self)

    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF2IF2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF2IF2

        Create a new object of the class itkMinimumProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIF2IF2.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Clone, None, itkMinimumProjectionImageFilterIF2IF2)
itkMinimumProjectionImageFilterIF2IF2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_swigregister
itkMinimumProjectionImageFilterIF2IF2_swigregister(itkMinimumProjectionImageFilterIF2IF2)

def itkMinimumProjectionImageFilterIF2IF2___New_orig__() -> "itkMinimumProjectionImageFilterIF2IF2_Pointer":
    """itkMinimumProjectionImageFilterIF2IF2___New_orig__() -> itkMinimumProjectionImageFilterIF2IF2_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2___New_orig__()

def itkMinimumProjectionImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIF2IF2 *":
    """itkMinimumProjectionImageFilterIF2IF2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF2IF2"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_cast(obj)

class itkMinimumProjectionImageFilterIF3IF2(itkMinimumProjectionImageFilterIF3IF2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIF3IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIF3IF2_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIF3IF2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIF3IF2_Pointer":
        """Clone(itkMinimumProjectionImageFilterIF3IF2 self) -> itkMinimumProjectionImageFilterIF3IF2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Clone(self)

    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF2

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIF3IF2 *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF2

        Create a new object of the class itkMinimumProjectionImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF3IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF3IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIF3IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIF3IF2.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Clone, None, itkMinimumProjectionImageFilterIF3IF2)
itkMinimumProjectionImageFilterIF3IF2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_swigregister
itkMinimumProjectionImageFilterIF3IF2_swigregister(itkMinimumProjectionImageFilterIF3IF2)

def itkMinimumProjectionImageFilterIF3IF2___New_orig__() -> "itkMinimumProjectionImageFilterIF3IF2_Pointer":
    """itkMinimumProjectionImageFilterIF3IF2___New_orig__() -> itkMinimumProjectionImageFilterIF3IF2_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2___New_orig__()

def itkMinimumProjectionImageFilterIF3IF2_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIF3IF2 *":
    """itkMinimumProjectionImageFilterIF3IF2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF2"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_cast(obj)

class itkMinimumProjectionImageFilterIF3IF3(itkMinimumProjectionImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIF3IF3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIF3IF3_Pointer":
        """Clone(itkMinimumProjectionImageFilterIF3IF3 self) -> itkMinimumProjectionImageFilterIF3IF3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Clone(self)

    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF3

        Create a new object of the class itkMinimumProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIF3IF3.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Clone, None, itkMinimumProjectionImageFilterIF3IF3)
itkMinimumProjectionImageFilterIF3IF3_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_swigregister
itkMinimumProjectionImageFilterIF3IF3_swigregister(itkMinimumProjectionImageFilterIF3IF3)

def itkMinimumProjectionImageFilterIF3IF3___New_orig__() -> "itkMinimumProjectionImageFilterIF3IF3_Pointer":
    """itkMinimumProjectionImageFilterIF3IF3___New_orig__() -> itkMinimumProjectionImageFilterIF3IF3_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3___New_orig__()

def itkMinimumProjectionImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIF3IF3 *":
    """itkMinimumProjectionImageFilterIF3IF3_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF3"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_cast(obj)

class itkMinimumProjectionImageFilterISS2ISS2(itkMinimumProjectionImageFilterISS2ISS2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterISS2ISS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterISS2ISS2_Pointer":
        """Clone(itkMinimumProjectionImageFilterISS2ISS2 self) -> itkMinimumProjectionImageFilterISS2ISS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Clone(self)

    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterISS2ISS2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS2ISS2

        Create a new object of the class itkMinimumProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterISS2ISS2.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Clone, None, itkMinimumProjectionImageFilterISS2ISS2)
itkMinimumProjectionImageFilterISS2ISS2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_swigregister
itkMinimumProjectionImageFilterISS2ISS2_swigregister(itkMinimumProjectionImageFilterISS2ISS2)

def itkMinimumProjectionImageFilterISS2ISS2___New_orig__() -> "itkMinimumProjectionImageFilterISS2ISS2_Pointer":
    """itkMinimumProjectionImageFilterISS2ISS2___New_orig__() -> itkMinimumProjectionImageFilterISS2ISS2_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2___New_orig__()

def itkMinimumProjectionImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterISS2ISS2 *":
    """itkMinimumProjectionImageFilterISS2ISS2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterISS2ISS2"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_cast(obj)

class itkMinimumProjectionImageFilterISS3ISS2(itkMinimumProjectionImageFilterISS3ISS2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterISS3ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterISS3ISS2_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterISS3ISS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterISS3ISS2_Pointer":
        """Clone(itkMinimumProjectionImageFilterISS3ISS2 self) -> itkMinimumProjectionImageFilterISS3ISS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Clone(self)

    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS3ISS2

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterISS3ISS2 *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterISS3ISS2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS3ISS2

        Create a new object of the class itkMinimumProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS3ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS3ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterISS3ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterISS3ISS2.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Clone, None, itkMinimumProjectionImageFilterISS3ISS2)
itkMinimumProjectionImageFilterISS3ISS2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_swigregister
itkMinimumProjectionImageFilterISS3ISS2_swigregister(itkMinimumProjectionImageFilterISS3ISS2)

def itkMinimumProjectionImageFilterISS3ISS2___New_orig__() -> "itkMinimumProjectionImageFilterISS3ISS2_Pointer":
    """itkMinimumProjectionImageFilterISS3ISS2___New_orig__() -> itkMinimumProjectionImageFilterISS3ISS2_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2___New_orig__()

def itkMinimumProjectionImageFilterISS3ISS2_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterISS3ISS2 *":
    """itkMinimumProjectionImageFilterISS3ISS2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterISS3ISS2"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_cast(obj)

class itkMinimumProjectionImageFilterISS3ISS3(itkMinimumProjectionImageFilterISS3ISS3_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterISS3ISS3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterISS3ISS3_Pointer":
        """Clone(itkMinimumProjectionImageFilterISS3ISS3 self) -> itkMinimumProjectionImageFilterISS3ISS3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Clone(self)

    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterISS3ISS3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS3ISS3

        Create a new object of the class itkMinimumProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterISS3ISS3.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Clone, None, itkMinimumProjectionImageFilterISS3ISS3)
itkMinimumProjectionImageFilterISS3ISS3_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_swigregister
itkMinimumProjectionImageFilterISS3ISS3_swigregister(itkMinimumProjectionImageFilterISS3ISS3)

def itkMinimumProjectionImageFilterISS3ISS3___New_orig__() -> "itkMinimumProjectionImageFilterISS3ISS3_Pointer":
    """itkMinimumProjectionImageFilterISS3ISS3___New_orig__() -> itkMinimumProjectionImageFilterISS3ISS3_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3___New_orig__()

def itkMinimumProjectionImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterISS3ISS3 *":
    """itkMinimumProjectionImageFilterISS3ISS3_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterISS3ISS3"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_cast(obj)

class itkMinimumProjectionImageFilterIUC2IUC2(itkMinimumProjectionImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIUC2IUC2_Pointer":
        """Clone(itkMinimumProjectionImageFilterIUC2IUC2 self) -> itkMinimumProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Clone(self)

    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC2IUC2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC2IUC2

        Create a new object of the class itkMinimumProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUC2IUC2.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Clone, None, itkMinimumProjectionImageFilterIUC2IUC2)
itkMinimumProjectionImageFilterIUC2IUC2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_swigregister
itkMinimumProjectionImageFilterIUC2IUC2_swigregister(itkMinimumProjectionImageFilterIUC2IUC2)

def itkMinimumProjectionImageFilterIUC2IUC2___New_orig__() -> "itkMinimumProjectionImageFilterIUC2IUC2_Pointer":
    """itkMinimumProjectionImageFilterIUC2IUC2___New_orig__() -> itkMinimumProjectionImageFilterIUC2IUC2_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2___New_orig__()

def itkMinimumProjectionImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUC2IUC2 *":
    """itkMinimumProjectionImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC2IUC2"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_cast(obj)

class itkMinimumProjectionImageFilterIUC3IUC2(itkMinimumProjectionImageFilterIUC3IUC2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIUC3IUC2_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIUC3IUC2_Pointer":
        """Clone(itkMinimumProjectionImageFilterIUC3IUC2 self) -> itkMinimumProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Clone(self)

    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC2

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUC3IUC2 *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC2

        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC3IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC3IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUC3IUC2.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Clone, None, itkMinimumProjectionImageFilterIUC3IUC2)
itkMinimumProjectionImageFilterIUC3IUC2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_swigregister
itkMinimumProjectionImageFilterIUC3IUC2_swigregister(itkMinimumProjectionImageFilterIUC3IUC2)

def itkMinimumProjectionImageFilterIUC3IUC2___New_orig__() -> "itkMinimumProjectionImageFilterIUC3IUC2_Pointer":
    """itkMinimumProjectionImageFilterIUC3IUC2___New_orig__() -> itkMinimumProjectionImageFilterIUC3IUC2_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2___New_orig__()

def itkMinimumProjectionImageFilterIUC3IUC2_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUC3IUC2 *":
    """itkMinimumProjectionImageFilterIUC3IUC2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC2"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_cast(obj)

class itkMinimumProjectionImageFilterIUC3IUC3(itkMinimumProjectionImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIUC3IUC3_Pointer":
        """Clone(itkMinimumProjectionImageFilterIUC3IUC3 self) -> itkMinimumProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Clone(self)

    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC3

        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUC3IUC3.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Clone, None, itkMinimumProjectionImageFilterIUC3IUC3)
itkMinimumProjectionImageFilterIUC3IUC3_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_swigregister
itkMinimumProjectionImageFilterIUC3IUC3_swigregister(itkMinimumProjectionImageFilterIUC3IUC3)

def itkMinimumProjectionImageFilterIUC3IUC3___New_orig__() -> "itkMinimumProjectionImageFilterIUC3IUC3_Pointer":
    """itkMinimumProjectionImageFilterIUC3IUC3___New_orig__() -> itkMinimumProjectionImageFilterIUC3IUC3_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3___New_orig__()

def itkMinimumProjectionImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUC3IUC3 *":
    """itkMinimumProjectionImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC3"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_cast(obj)

class itkMinimumProjectionImageFilterIUS2IUS2(itkMinimumProjectionImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIUS2IUS2_Pointer":
        """Clone(itkMinimumProjectionImageFilterIUS2IUS2 self) -> itkMinimumProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Clone(self)

    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS2IUS2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS2IUS2

        Create a new object of the class itkMinimumProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUS2IUS2.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Clone, None, itkMinimumProjectionImageFilterIUS2IUS2)
itkMinimumProjectionImageFilterIUS2IUS2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_swigregister
itkMinimumProjectionImageFilterIUS2IUS2_swigregister(itkMinimumProjectionImageFilterIUS2IUS2)

def itkMinimumProjectionImageFilterIUS2IUS2___New_orig__() -> "itkMinimumProjectionImageFilterIUS2IUS2_Pointer":
    """itkMinimumProjectionImageFilterIUS2IUS2___New_orig__() -> itkMinimumProjectionImageFilterIUS2IUS2_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2___New_orig__()

def itkMinimumProjectionImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUS2IUS2 *":
    """itkMinimumProjectionImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS2IUS2"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_cast(obj)

class itkMinimumProjectionImageFilterIUS3IUS2(itkMinimumProjectionImageFilterIUS3IUS2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIUS3IUS2_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIUS3IUS2_Pointer":
        """Clone(itkMinimumProjectionImageFilterIUS3IUS2 self) -> itkMinimumProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Clone(self)

    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS2

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUS3IUS2 *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS2

        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS3IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS3IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUS3IUS2.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Clone, None, itkMinimumProjectionImageFilterIUS3IUS2)
itkMinimumProjectionImageFilterIUS3IUS2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_swigregister
itkMinimumProjectionImageFilterIUS3IUS2_swigregister(itkMinimumProjectionImageFilterIUS3IUS2)

def itkMinimumProjectionImageFilterIUS3IUS2___New_orig__() -> "itkMinimumProjectionImageFilterIUS3IUS2_Pointer":
    """itkMinimumProjectionImageFilterIUS3IUS2___New_orig__() -> itkMinimumProjectionImageFilterIUS3IUS2_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2___New_orig__()

def itkMinimumProjectionImageFilterIUS3IUS2_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUS3IUS2 *":
    """itkMinimumProjectionImageFilterIUS3IUS2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS2"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_cast(obj)

class itkMinimumProjectionImageFilterIUS3IUS3(itkMinimumProjectionImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumProjectionImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkMinimumProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumProjectionImageFilterIUS3IUS3_Pointer":
        """Clone(itkMinimumProjectionImageFilterIUS3IUS3 self) -> itkMinimumProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Clone(self)

    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS3

        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUS3IUS3.Clone = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Clone, None, itkMinimumProjectionImageFilterIUS3IUS3)
itkMinimumProjectionImageFilterIUS3IUS3_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_swigregister
itkMinimumProjectionImageFilterIUS3IUS3_swigregister(itkMinimumProjectionImageFilterIUS3IUS3)

def itkMinimumProjectionImageFilterIUS3IUS3___New_orig__() -> "itkMinimumProjectionImageFilterIUS3IUS3_Pointer":
    """itkMinimumProjectionImageFilterIUS3IUS3___New_orig__() -> itkMinimumProjectionImageFilterIUS3IUS3_Pointer"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3___New_orig__()

def itkMinimumProjectionImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkMinimumProjectionImageFilterIUS3IUS3 *":
    """itkMinimumProjectionImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS3"""
    return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_cast(obj)


def projection_image_filter(*args, **kwargs):
    """Procedural interface for ProjectionImageFilter"""
    import itk
    instance = itk.ProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        projection_image_filter.__doc__ = itk.ProjectionImageFilter.values()[0].__doc__
    else:
        projection_image_filter.__doc__ = itk.ProjectionImageFilter.__doc__

def minimum_projection_image_filter(*args, **kwargs):
    """Procedural interface for MinimumProjectionImageFilter"""
    import itk
    instance = itk.MinimumProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def minimum_projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.MinimumProjectionImageFilter, itkTemplate.itkTemplate):
        minimum_projection_image_filter.__doc__ = itk.MinimumProjectionImageFilter.values()[0].__doc__
    else:
        minimum_projection_image_filter.__doc__ = itk.MinimumProjectionImageFilter.__doc__




