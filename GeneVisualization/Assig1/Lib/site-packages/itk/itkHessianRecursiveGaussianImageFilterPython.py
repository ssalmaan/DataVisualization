# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkHessianRecursiveGaussianImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkHessianRecursiveGaussianImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkHessianRecursiveGaussianImageFilterPython
            return _itkHessianRecursiveGaussianImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkHessianRecursiveGaussianImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkHessianRecursiveGaussianImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkHessianRecursiveGaussianImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkHessianRecursiveGaussianImageFilterIF3_New():
  return itkHessianRecursiveGaussianImageFilterIF3.New()


def itkHessianRecursiveGaussianImageFilterIF2_New():
  return itkHessianRecursiveGaussianImageFilterIF2.New()


def itkHessianRecursiveGaussianImageFilterIUS3_New():
  return itkHessianRecursiveGaussianImageFilterIUS3.New()


def itkHessianRecursiveGaussianImageFilterIUS2_New():
  return itkHessianRecursiveGaussianImageFilterIUS2.New()


def itkHessianRecursiveGaussianImageFilterIUC3_New():
  return itkHessianRecursiveGaussianImageFilterIUC3.New()


def itkHessianRecursiveGaussianImageFilterIUC2_New():
  return itkHessianRecursiveGaussianImageFilterIUC2.New()


def itkHessianRecursiveGaussianImageFilterISS3_New():
  return itkHessianRecursiveGaussianImageFilterISS3.New()


def itkHessianRecursiveGaussianImageFilterISS2_New():
  return itkHessianRecursiveGaussianImageFilterISS2.New()

class itkHessianRecursiveGaussianImageFilterIF2(itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHessianRecursiveGaussianImageFilterIF2_Pointer":
        """__New_orig__() -> itkHessianRecursiveGaussianImageFilterIF2_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHessianRecursiveGaussianImageFilterIF2_Pointer":
        """Clone(itkHessianRecursiveGaussianImageFilterIF2 self) -> itkHessianRecursiveGaussianImageFilterIF2_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkHessianRecursiveGaussianImageFilterIF2 self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkHessianRecursiveGaussianImageFilterIF2 self) -> double"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterIF2 self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterIF2 self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkHessianRecursiveGaussianImageFilterIF2 self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_GenerateInputRequestedRegion(self)

    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_OutputHasPixelTraitsCheck
    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIF2

    def cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterIF2 *":
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIF2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIF2

        Create a new object of the class itkHessianRecursiveGaussianImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianRecursiveGaussianImageFilterIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHessianRecursiveGaussianImageFilterIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIF2.Clone = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_Clone, None, itkHessianRecursiveGaussianImageFilterIF2)
itkHessianRecursiveGaussianImageFilterIF2.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_SetSigma, None, itkHessianRecursiveGaussianImageFilterIF2)
itkHessianRecursiveGaussianImageFilterIF2.GetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_GetSigma, None, itkHessianRecursiveGaussianImageFilterIF2)
itkHessianRecursiveGaussianImageFilterIF2.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_SetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterIF2)
itkHessianRecursiveGaussianImageFilterIF2.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_GetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterIF2)
itkHessianRecursiveGaussianImageFilterIF2.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_GenerateInputRequestedRegion, None, itkHessianRecursiveGaussianImageFilterIF2)
itkHessianRecursiveGaussianImageFilterIF2_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_swigregister
itkHessianRecursiveGaussianImageFilterIF2_swigregister(itkHessianRecursiveGaussianImageFilterIF2)

def itkHessianRecursiveGaussianImageFilterIF2___New_orig__() -> "itkHessianRecursiveGaussianImageFilterIF2_Pointer":
    """itkHessianRecursiveGaussianImageFilterIF2___New_orig__() -> itkHessianRecursiveGaussianImageFilterIF2_Pointer"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2___New_orig__()

def itkHessianRecursiveGaussianImageFilterIF2_cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterIF2 *":
    """itkHessianRecursiveGaussianImageFilterIF2_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIF2"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_cast(obj)

class itkHessianRecursiveGaussianImageFilterIF3(itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHessianRecursiveGaussianImageFilterIF3_Pointer":
        """__New_orig__() -> itkHessianRecursiveGaussianImageFilterIF3_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHessianRecursiveGaussianImageFilterIF3_Pointer":
        """Clone(itkHessianRecursiveGaussianImageFilterIF3 self) -> itkHessianRecursiveGaussianImageFilterIF3_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkHessianRecursiveGaussianImageFilterIF3 self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkHessianRecursiveGaussianImageFilterIF3 self) -> double"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterIF3 self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterIF3 self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkHessianRecursiveGaussianImageFilterIF3 self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_GenerateInputRequestedRegion(self)

    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_OutputHasPixelTraitsCheck
    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIF3

    def cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterIF3 *":
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIF3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIF3

        Create a new object of the class itkHessianRecursiveGaussianImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianRecursiveGaussianImageFilterIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHessianRecursiveGaussianImageFilterIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIF3.Clone = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_Clone, None, itkHessianRecursiveGaussianImageFilterIF3)
itkHessianRecursiveGaussianImageFilterIF3.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_SetSigma, None, itkHessianRecursiveGaussianImageFilterIF3)
itkHessianRecursiveGaussianImageFilterIF3.GetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_GetSigma, None, itkHessianRecursiveGaussianImageFilterIF3)
itkHessianRecursiveGaussianImageFilterIF3.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_SetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterIF3)
itkHessianRecursiveGaussianImageFilterIF3.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_GetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterIF3)
itkHessianRecursiveGaussianImageFilterIF3.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_GenerateInputRequestedRegion, None, itkHessianRecursiveGaussianImageFilterIF3)
itkHessianRecursiveGaussianImageFilterIF3_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_swigregister
itkHessianRecursiveGaussianImageFilterIF3_swigregister(itkHessianRecursiveGaussianImageFilterIF3)

def itkHessianRecursiveGaussianImageFilterIF3___New_orig__() -> "itkHessianRecursiveGaussianImageFilterIF3_Pointer":
    """itkHessianRecursiveGaussianImageFilterIF3___New_orig__() -> itkHessianRecursiveGaussianImageFilterIF3_Pointer"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3___New_orig__()

def itkHessianRecursiveGaussianImageFilterIF3_cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterIF3 *":
    """itkHessianRecursiveGaussianImageFilterIF3_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIF3"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_cast(obj)

class itkHessianRecursiveGaussianImageFilterISS2(itkImageToImageFilterBPython.itkImageToImageFilterISS2ISSRTD22):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHessianRecursiveGaussianImageFilterISS2_Pointer":
        """__New_orig__() -> itkHessianRecursiveGaussianImageFilterISS2_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHessianRecursiveGaussianImageFilterISS2_Pointer":
        """Clone(itkHessianRecursiveGaussianImageFilterISS2 self) -> itkHessianRecursiveGaussianImageFilterISS2_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkHessianRecursiveGaussianImageFilterISS2 self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkHessianRecursiveGaussianImageFilterISS2 self) -> double"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterISS2 self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterISS2 self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkHessianRecursiveGaussianImageFilterISS2 self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_GenerateInputRequestedRegion(self)

    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_OutputHasPixelTraitsCheck
    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterISS2

    def cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterISS2 *":
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterISS2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterISS2

        Create a new object of the class itkHessianRecursiveGaussianImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianRecursiveGaussianImageFilterISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHessianRecursiveGaussianImageFilterISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterISS2.Clone = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_Clone, None, itkHessianRecursiveGaussianImageFilterISS2)
itkHessianRecursiveGaussianImageFilterISS2.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_SetSigma, None, itkHessianRecursiveGaussianImageFilterISS2)
itkHessianRecursiveGaussianImageFilterISS2.GetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_GetSigma, None, itkHessianRecursiveGaussianImageFilterISS2)
itkHessianRecursiveGaussianImageFilterISS2.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_SetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterISS2)
itkHessianRecursiveGaussianImageFilterISS2.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_GetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterISS2)
itkHessianRecursiveGaussianImageFilterISS2.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_GenerateInputRequestedRegion, None, itkHessianRecursiveGaussianImageFilterISS2)
itkHessianRecursiveGaussianImageFilterISS2_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_swigregister
itkHessianRecursiveGaussianImageFilterISS2_swigregister(itkHessianRecursiveGaussianImageFilterISS2)

def itkHessianRecursiveGaussianImageFilterISS2___New_orig__() -> "itkHessianRecursiveGaussianImageFilterISS2_Pointer":
    """itkHessianRecursiveGaussianImageFilterISS2___New_orig__() -> itkHessianRecursiveGaussianImageFilterISS2_Pointer"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2___New_orig__()

def itkHessianRecursiveGaussianImageFilterISS2_cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterISS2 *":
    """itkHessianRecursiveGaussianImageFilterISS2_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterISS2"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS2_cast(obj)

class itkHessianRecursiveGaussianImageFilterISS3(itkImageToImageFilterBPython.itkImageToImageFilterISS3ISSRTD33):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHessianRecursiveGaussianImageFilterISS3_Pointer":
        """__New_orig__() -> itkHessianRecursiveGaussianImageFilterISS3_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHessianRecursiveGaussianImageFilterISS3_Pointer":
        """Clone(itkHessianRecursiveGaussianImageFilterISS3 self) -> itkHessianRecursiveGaussianImageFilterISS3_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkHessianRecursiveGaussianImageFilterISS3 self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkHessianRecursiveGaussianImageFilterISS3 self) -> double"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterISS3 self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterISS3 self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkHessianRecursiveGaussianImageFilterISS3 self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_GenerateInputRequestedRegion(self)

    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_OutputHasPixelTraitsCheck
    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterISS3

    def cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterISS3 *":
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterISS3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterISS3

        Create a new object of the class itkHessianRecursiveGaussianImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianRecursiveGaussianImageFilterISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHessianRecursiveGaussianImageFilterISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterISS3.Clone = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_Clone, None, itkHessianRecursiveGaussianImageFilterISS3)
itkHessianRecursiveGaussianImageFilterISS3.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_SetSigma, None, itkHessianRecursiveGaussianImageFilterISS3)
itkHessianRecursiveGaussianImageFilterISS3.GetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_GetSigma, None, itkHessianRecursiveGaussianImageFilterISS3)
itkHessianRecursiveGaussianImageFilterISS3.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_SetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterISS3)
itkHessianRecursiveGaussianImageFilterISS3.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_GetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterISS3)
itkHessianRecursiveGaussianImageFilterISS3.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_GenerateInputRequestedRegion, None, itkHessianRecursiveGaussianImageFilterISS3)
itkHessianRecursiveGaussianImageFilterISS3_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_swigregister
itkHessianRecursiveGaussianImageFilterISS3_swigregister(itkHessianRecursiveGaussianImageFilterISS3)

def itkHessianRecursiveGaussianImageFilterISS3___New_orig__() -> "itkHessianRecursiveGaussianImageFilterISS3_Pointer":
    """itkHessianRecursiveGaussianImageFilterISS3___New_orig__() -> itkHessianRecursiveGaussianImageFilterISS3_Pointer"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3___New_orig__()

def itkHessianRecursiveGaussianImageFilterISS3_cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterISS3 *":
    """itkHessianRecursiveGaussianImageFilterISS3_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterISS3"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterISS3_cast(obj)

class itkHessianRecursiveGaussianImageFilterIUC2(itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHessianRecursiveGaussianImageFilterIUC2_Pointer":
        """__New_orig__() -> itkHessianRecursiveGaussianImageFilterIUC2_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHessianRecursiveGaussianImageFilterIUC2_Pointer":
        """Clone(itkHessianRecursiveGaussianImageFilterIUC2 self) -> itkHessianRecursiveGaussianImageFilterIUC2_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkHessianRecursiveGaussianImageFilterIUC2 self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkHessianRecursiveGaussianImageFilterIUC2 self) -> double"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterIUC2 self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterIUC2 self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkHessianRecursiveGaussianImageFilterIUC2 self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_GenerateInputRequestedRegion(self)

    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_OutputHasPixelTraitsCheck
    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIUC2

    def cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterIUC2 *":
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUC2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIUC2

        Create a new object of the class itkHessianRecursiveGaussianImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianRecursiveGaussianImageFilterIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHessianRecursiveGaussianImageFilterIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIUC2.Clone = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_Clone, None, itkHessianRecursiveGaussianImageFilterIUC2)
itkHessianRecursiveGaussianImageFilterIUC2.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_SetSigma, None, itkHessianRecursiveGaussianImageFilterIUC2)
itkHessianRecursiveGaussianImageFilterIUC2.GetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_GetSigma, None, itkHessianRecursiveGaussianImageFilterIUC2)
itkHessianRecursiveGaussianImageFilterIUC2.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_SetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterIUC2)
itkHessianRecursiveGaussianImageFilterIUC2.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_GetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterIUC2)
itkHessianRecursiveGaussianImageFilterIUC2.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_GenerateInputRequestedRegion, None, itkHessianRecursiveGaussianImageFilterIUC2)
itkHessianRecursiveGaussianImageFilterIUC2_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_swigregister
itkHessianRecursiveGaussianImageFilterIUC2_swigregister(itkHessianRecursiveGaussianImageFilterIUC2)

def itkHessianRecursiveGaussianImageFilterIUC2___New_orig__() -> "itkHessianRecursiveGaussianImageFilterIUC2_Pointer":
    """itkHessianRecursiveGaussianImageFilterIUC2___New_orig__() -> itkHessianRecursiveGaussianImageFilterIUC2_Pointer"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2___New_orig__()

def itkHessianRecursiveGaussianImageFilterIUC2_cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterIUC2 *":
    """itkHessianRecursiveGaussianImageFilterIUC2_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUC2"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_cast(obj)

class itkHessianRecursiveGaussianImageFilterIUC3(itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHessianRecursiveGaussianImageFilterIUC3_Pointer":
        """__New_orig__() -> itkHessianRecursiveGaussianImageFilterIUC3_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHessianRecursiveGaussianImageFilterIUC3_Pointer":
        """Clone(itkHessianRecursiveGaussianImageFilterIUC3 self) -> itkHessianRecursiveGaussianImageFilterIUC3_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkHessianRecursiveGaussianImageFilterIUC3 self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkHessianRecursiveGaussianImageFilterIUC3 self) -> double"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterIUC3 self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterIUC3 self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkHessianRecursiveGaussianImageFilterIUC3 self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_GenerateInputRequestedRegion(self)

    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_OutputHasPixelTraitsCheck
    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIUC3

    def cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterIUC3 *":
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUC3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIUC3

        Create a new object of the class itkHessianRecursiveGaussianImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianRecursiveGaussianImageFilterIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHessianRecursiveGaussianImageFilterIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIUC3.Clone = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_Clone, None, itkHessianRecursiveGaussianImageFilterIUC3)
itkHessianRecursiveGaussianImageFilterIUC3.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_SetSigma, None, itkHessianRecursiveGaussianImageFilterIUC3)
itkHessianRecursiveGaussianImageFilterIUC3.GetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_GetSigma, None, itkHessianRecursiveGaussianImageFilterIUC3)
itkHessianRecursiveGaussianImageFilterIUC3.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_SetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterIUC3)
itkHessianRecursiveGaussianImageFilterIUC3.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_GetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterIUC3)
itkHessianRecursiveGaussianImageFilterIUC3.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_GenerateInputRequestedRegion, None, itkHessianRecursiveGaussianImageFilterIUC3)
itkHessianRecursiveGaussianImageFilterIUC3_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_swigregister
itkHessianRecursiveGaussianImageFilterIUC3_swigregister(itkHessianRecursiveGaussianImageFilterIUC3)

def itkHessianRecursiveGaussianImageFilterIUC3___New_orig__() -> "itkHessianRecursiveGaussianImageFilterIUC3_Pointer":
    """itkHessianRecursiveGaussianImageFilterIUC3___New_orig__() -> itkHessianRecursiveGaussianImageFilterIUC3_Pointer"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3___New_orig__()

def itkHessianRecursiveGaussianImageFilterIUC3_cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterIUC3 *":
    """itkHessianRecursiveGaussianImageFilterIUC3_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUC3"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_cast(obj)

class itkHessianRecursiveGaussianImageFilterIUS2(itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHessianRecursiveGaussianImageFilterIUS2_Pointer":
        """__New_orig__() -> itkHessianRecursiveGaussianImageFilterIUS2_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHessianRecursiveGaussianImageFilterIUS2_Pointer":
        """Clone(itkHessianRecursiveGaussianImageFilterIUS2 self) -> itkHessianRecursiveGaussianImageFilterIUS2_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkHessianRecursiveGaussianImageFilterIUS2 self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkHessianRecursiveGaussianImageFilterIUS2 self) -> double"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterIUS2 self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterIUS2 self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkHessianRecursiveGaussianImageFilterIUS2 self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_GenerateInputRequestedRegion(self)

    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_OutputHasPixelTraitsCheck
    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIUS2

    def cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterIUS2 *":
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUS2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIUS2

        Create a new object of the class itkHessianRecursiveGaussianImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianRecursiveGaussianImageFilterIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHessianRecursiveGaussianImageFilterIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIUS2.Clone = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_Clone, None, itkHessianRecursiveGaussianImageFilterIUS2)
itkHessianRecursiveGaussianImageFilterIUS2.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_SetSigma, None, itkHessianRecursiveGaussianImageFilterIUS2)
itkHessianRecursiveGaussianImageFilterIUS2.GetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_GetSigma, None, itkHessianRecursiveGaussianImageFilterIUS2)
itkHessianRecursiveGaussianImageFilterIUS2.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_SetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterIUS2)
itkHessianRecursiveGaussianImageFilterIUS2.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_GetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterIUS2)
itkHessianRecursiveGaussianImageFilterIUS2.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_GenerateInputRequestedRegion, None, itkHessianRecursiveGaussianImageFilterIUS2)
itkHessianRecursiveGaussianImageFilterIUS2_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_swigregister
itkHessianRecursiveGaussianImageFilterIUS2_swigregister(itkHessianRecursiveGaussianImageFilterIUS2)

def itkHessianRecursiveGaussianImageFilterIUS2___New_orig__() -> "itkHessianRecursiveGaussianImageFilterIUS2_Pointer":
    """itkHessianRecursiveGaussianImageFilterIUS2___New_orig__() -> itkHessianRecursiveGaussianImageFilterIUS2_Pointer"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2___New_orig__()

def itkHessianRecursiveGaussianImageFilterIUS2_cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterIUS2 *":
    """itkHessianRecursiveGaussianImageFilterIUS2_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUS2"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_cast(obj)

class itkHessianRecursiveGaussianImageFilterIUS3(itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHessianRecursiveGaussianImageFilterIUS3_Pointer":
        """__New_orig__() -> itkHessianRecursiveGaussianImageFilterIUS3_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHessianRecursiveGaussianImageFilterIUS3_Pointer":
        """Clone(itkHessianRecursiveGaussianImageFilterIUS3 self) -> itkHessianRecursiveGaussianImageFilterIUS3_Pointer"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_Clone(self)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkHessianRecursiveGaussianImageFilterIUS3 self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_SetSigma(self, sigma)


    def GetSigma(self) -> "double":
        """GetSigma(itkHessianRecursiveGaussianImageFilterIUS3 self) -> double"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """SetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterIUS3 self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkHessianRecursiveGaussianImageFilterIUS3 self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkHessianRecursiveGaussianImageFilterIUS3 self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_GenerateInputRequestedRegion(self)

    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_OutputHasPixelTraitsCheck
    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIUS3

    def cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterIUS3 *":
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUS3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIUS3

        Create a new object of the class itkHessianRecursiveGaussianImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianRecursiveGaussianImageFilterIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHessianRecursiveGaussianImageFilterIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIUS3.Clone = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_Clone, None, itkHessianRecursiveGaussianImageFilterIUS3)
itkHessianRecursiveGaussianImageFilterIUS3.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_SetSigma, None, itkHessianRecursiveGaussianImageFilterIUS3)
itkHessianRecursiveGaussianImageFilterIUS3.GetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_GetSigma, None, itkHessianRecursiveGaussianImageFilterIUS3)
itkHessianRecursiveGaussianImageFilterIUS3.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_SetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterIUS3)
itkHessianRecursiveGaussianImageFilterIUS3.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_GetNormalizeAcrossScale, None, itkHessianRecursiveGaussianImageFilterIUS3)
itkHessianRecursiveGaussianImageFilterIUS3.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_GenerateInputRequestedRegion, None, itkHessianRecursiveGaussianImageFilterIUS3)
itkHessianRecursiveGaussianImageFilterIUS3_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_swigregister
itkHessianRecursiveGaussianImageFilterIUS3_swigregister(itkHessianRecursiveGaussianImageFilterIUS3)

def itkHessianRecursiveGaussianImageFilterIUS3___New_orig__() -> "itkHessianRecursiveGaussianImageFilterIUS3_Pointer":
    """itkHessianRecursiveGaussianImageFilterIUS3___New_orig__() -> itkHessianRecursiveGaussianImageFilterIUS3_Pointer"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3___New_orig__()

def itkHessianRecursiveGaussianImageFilterIUS3_cast(obj: 'itkLightObject') -> "itkHessianRecursiveGaussianImageFilterIUS3 *":
    """itkHessianRecursiveGaussianImageFilterIUS3_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUS3"""
    return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_cast(obj)


def hessian_recursive_gaussian_image_filter(*args, **kwargs):
    """Procedural interface for HessianRecursiveGaussianImageFilter"""
    import itk
    instance = itk.HessianRecursiveGaussianImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def hessian_recursive_gaussian_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.HessianRecursiveGaussianImageFilter, itkTemplate.itkTemplate):
        hessian_recursive_gaussian_image_filter.__doc__ = itk.HessianRecursiveGaussianImageFilter.values()[0].__doc__
    else:
        hessian_recursive_gaussian_image_filter.__doc__ = itk.HessianRecursiveGaussianImageFilter.__doc__




