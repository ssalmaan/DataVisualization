# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkContourSpatialObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkContourSpatialObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkContourSpatialObjectPython
            return _itkContourSpatialObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkContourSpatialObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkContourSpatialObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkContourSpatialObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSpatialObjectBasePython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import vnl_vector_refPython
import itkFixedArrayPython
import itkCovariantVectorPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import ITKCommonBasePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkPointPython
import itkVectorContainerPython
import itkOffsetPython
import itkSizePython
import itkContinuousIndexPython
import itkIndexPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkImageRegionPython
import itkAffineTransformPython
import itkTransformBasePython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkSymmetricSecondRankTensorPython
import itkDiffusionTensor3DPython
import itkMatrixOffsetTransformBasePython
import itkContourSpatialObjectPointPython
import itkSpatialObjectPointPython

def itkContourSpatialObject3_New():
  return itkContourSpatialObject3.New()


def itkContourSpatialObject2_New():
  return itkContourSpatialObject2.New()


def itkPointBasedSpatialObjectContour3_New():
  return itkPointBasedSpatialObjectContour3.New()


def itkPointBasedSpatialObjectContour2_New():
  return itkPointBasedSpatialObjectContour2.New()

class itkPointBasedSpatialObjectContour2(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkPointBasedSpatialObjectContour2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPointBasedSpatialObjectContour2_Pointer":
        """__New_orig__() -> itkPointBasedSpatialObjectContour2_Pointer"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPointBasedSpatialObjectContour2_Pointer":
        """Clone(itkPointBasedSpatialObjectContour2 self) -> itkPointBasedSpatialObjectContour2_Pointer"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_Clone(self)


    def AddPoint(self, newPoints: 'itkContourSpatialObjectPoint2') -> "void":
        """AddPoint(itkPointBasedSpatialObjectContour2 self, itkContourSpatialObjectPoint2 newPoints)"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_AddPoint(self, newPoints)


    def RemovePoint(self, id: 'unsigned long long') -> "void":
        """RemovePoint(itkPointBasedSpatialObjectContour2 self, unsigned long long id)"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_RemovePoint(self, id)


    def SetPoints(self, newPoints: 'vectoritkContourSpatialObjectPoint2') -> "void":
        """SetPoints(itkPointBasedSpatialObjectContour2 self, vectoritkContourSpatialObjectPoint2 newPoints)"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_SetPoints(self, newPoints)


    def GetPoints(self, *args) -> "std::vector< itkContourSpatialObjectPoint2,std::allocator< itkContourSpatialObjectPoint2 > > const &":
        """
        GetPoints(itkPointBasedSpatialObjectContour2 self) -> vectoritkContourSpatialObjectPoint2
        GetPoints(itkPointBasedSpatialObjectContour2 self) -> vectoritkContourSpatialObjectPoint2
        """
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_GetPoints(self, *args)


    def GetPoint(self, *args) -> "itkContourSpatialObjectPoint2 *":
        """
        GetPoint(itkPointBasedSpatialObjectContour2 self, unsigned long long id) -> itkContourSpatialObjectPoint2
        GetPoint(itkPointBasedSpatialObjectContour2 self, unsigned long long id) -> itkContourSpatialObjectPoint2
        """
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_GetPoint(self, *args)


    def GetNumberOfPoints(self) -> "unsigned long long":
        """GetNumberOfPoints(itkPointBasedSpatialObjectContour2 self) -> unsigned long long"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_GetNumberOfPoints(self)


    def ClosestPointInWorldSpace(self, point: 'itkPointD2') -> "itkContourSpatialObjectPoint2":
        """ClosestPointInWorldSpace(itkPointBasedSpatialObjectContour2 self, itkPointD2 point) -> itkContourSpatialObjectPoint2"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_ClosestPointInWorldSpace(self, point)


    def ClosestPointInObjectSpace(self, point: 'itkPointD2') -> "itkContourSpatialObjectPoint2":
        """ClosestPointInObjectSpace(itkPointBasedSpatialObjectContour2 self, itkPointD2 point) -> itkContourSpatialObjectPoint2"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_ClosestPointInObjectSpace(self, point)

    __swig_destroy__ = _itkContourSpatialObjectPython.delete_itkPointBasedSpatialObjectContour2

    def cast(obj: 'itkLightObject') -> "itkPointBasedSpatialObjectContour2 *":
        """cast(itkLightObject obj) -> itkPointBasedSpatialObjectContour2"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObjectContour2

        Create a new object of the class itkPointBasedSpatialObjectContour2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObjectContour2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObjectContour2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPointBasedSpatialObjectContour2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPointBasedSpatialObjectContour2.Clone = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_Clone, None, itkPointBasedSpatialObjectContour2)
itkPointBasedSpatialObjectContour2.AddPoint = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_AddPoint, None, itkPointBasedSpatialObjectContour2)
itkPointBasedSpatialObjectContour2.RemovePoint = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_RemovePoint, None, itkPointBasedSpatialObjectContour2)
itkPointBasedSpatialObjectContour2.SetPoints = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_SetPoints, None, itkPointBasedSpatialObjectContour2)
itkPointBasedSpatialObjectContour2.GetPoints = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_GetPoints, None, itkPointBasedSpatialObjectContour2)
itkPointBasedSpatialObjectContour2.GetPoint = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_GetPoint, None, itkPointBasedSpatialObjectContour2)
itkPointBasedSpatialObjectContour2.GetNumberOfPoints = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_GetNumberOfPoints, None, itkPointBasedSpatialObjectContour2)
itkPointBasedSpatialObjectContour2.ClosestPointInWorldSpace = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_ClosestPointInWorldSpace, None, itkPointBasedSpatialObjectContour2)
itkPointBasedSpatialObjectContour2.ClosestPointInObjectSpace = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_ClosestPointInObjectSpace, None, itkPointBasedSpatialObjectContour2)
itkPointBasedSpatialObjectContour2_swigregister = _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_swigregister
itkPointBasedSpatialObjectContour2_swigregister(itkPointBasedSpatialObjectContour2)

def itkPointBasedSpatialObjectContour2___New_orig__() -> "itkPointBasedSpatialObjectContour2_Pointer":
    """itkPointBasedSpatialObjectContour2___New_orig__() -> itkPointBasedSpatialObjectContour2_Pointer"""
    return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2___New_orig__()

def itkPointBasedSpatialObjectContour2_cast(obj: 'itkLightObject') -> "itkPointBasedSpatialObjectContour2 *":
    """itkPointBasedSpatialObjectContour2_cast(itkLightObject obj) -> itkPointBasedSpatialObjectContour2"""
    return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour2_cast(obj)

class itkPointBasedSpatialObjectContour3(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkPointBasedSpatialObjectContour3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPointBasedSpatialObjectContour3_Pointer":
        """__New_orig__() -> itkPointBasedSpatialObjectContour3_Pointer"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPointBasedSpatialObjectContour3_Pointer":
        """Clone(itkPointBasedSpatialObjectContour3 self) -> itkPointBasedSpatialObjectContour3_Pointer"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_Clone(self)


    def AddPoint(self, newPoints: 'itkContourSpatialObjectPoint3') -> "void":
        """AddPoint(itkPointBasedSpatialObjectContour3 self, itkContourSpatialObjectPoint3 newPoints)"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_AddPoint(self, newPoints)


    def RemovePoint(self, id: 'unsigned long long') -> "void":
        """RemovePoint(itkPointBasedSpatialObjectContour3 self, unsigned long long id)"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_RemovePoint(self, id)


    def SetPoints(self, newPoints: 'vectoritkContourSpatialObjectPoint3') -> "void":
        """SetPoints(itkPointBasedSpatialObjectContour3 self, vectoritkContourSpatialObjectPoint3 newPoints)"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_SetPoints(self, newPoints)


    def GetPoints(self, *args) -> "std::vector< itkContourSpatialObjectPoint3,std::allocator< itkContourSpatialObjectPoint3 > > const &":
        """
        GetPoints(itkPointBasedSpatialObjectContour3 self) -> vectoritkContourSpatialObjectPoint3
        GetPoints(itkPointBasedSpatialObjectContour3 self) -> vectoritkContourSpatialObjectPoint3
        """
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_GetPoints(self, *args)


    def GetPoint(self, *args) -> "itkContourSpatialObjectPoint3 *":
        """
        GetPoint(itkPointBasedSpatialObjectContour3 self, unsigned long long id) -> itkContourSpatialObjectPoint3
        GetPoint(itkPointBasedSpatialObjectContour3 self, unsigned long long id) -> itkContourSpatialObjectPoint3
        """
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_GetPoint(self, *args)


    def GetNumberOfPoints(self) -> "unsigned long long":
        """GetNumberOfPoints(itkPointBasedSpatialObjectContour3 self) -> unsigned long long"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_GetNumberOfPoints(self)


    def ClosestPointInWorldSpace(self, point: 'itkPointD3') -> "itkContourSpatialObjectPoint3":
        """ClosestPointInWorldSpace(itkPointBasedSpatialObjectContour3 self, itkPointD3 point) -> itkContourSpatialObjectPoint3"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_ClosestPointInWorldSpace(self, point)


    def ClosestPointInObjectSpace(self, point: 'itkPointD3') -> "itkContourSpatialObjectPoint3":
        """ClosestPointInObjectSpace(itkPointBasedSpatialObjectContour3 self, itkPointD3 point) -> itkContourSpatialObjectPoint3"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_ClosestPointInObjectSpace(self, point)

    __swig_destroy__ = _itkContourSpatialObjectPython.delete_itkPointBasedSpatialObjectContour3

    def cast(obj: 'itkLightObject') -> "itkPointBasedSpatialObjectContour3 *":
        """cast(itkLightObject obj) -> itkPointBasedSpatialObjectContour3"""
        return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObjectContour3

        Create a new object of the class itkPointBasedSpatialObjectContour3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObjectContour3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObjectContour3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPointBasedSpatialObjectContour3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPointBasedSpatialObjectContour3.Clone = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_Clone, None, itkPointBasedSpatialObjectContour3)
itkPointBasedSpatialObjectContour3.AddPoint = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_AddPoint, None, itkPointBasedSpatialObjectContour3)
itkPointBasedSpatialObjectContour3.RemovePoint = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_RemovePoint, None, itkPointBasedSpatialObjectContour3)
itkPointBasedSpatialObjectContour3.SetPoints = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_SetPoints, None, itkPointBasedSpatialObjectContour3)
itkPointBasedSpatialObjectContour3.GetPoints = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_GetPoints, None, itkPointBasedSpatialObjectContour3)
itkPointBasedSpatialObjectContour3.GetPoint = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_GetPoint, None, itkPointBasedSpatialObjectContour3)
itkPointBasedSpatialObjectContour3.GetNumberOfPoints = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_GetNumberOfPoints, None, itkPointBasedSpatialObjectContour3)
itkPointBasedSpatialObjectContour3.ClosestPointInWorldSpace = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_ClosestPointInWorldSpace, None, itkPointBasedSpatialObjectContour3)
itkPointBasedSpatialObjectContour3.ClosestPointInObjectSpace = new_instancemethod(_itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_ClosestPointInObjectSpace, None, itkPointBasedSpatialObjectContour3)
itkPointBasedSpatialObjectContour3_swigregister = _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_swigregister
itkPointBasedSpatialObjectContour3_swigregister(itkPointBasedSpatialObjectContour3)

def itkPointBasedSpatialObjectContour3___New_orig__() -> "itkPointBasedSpatialObjectContour3_Pointer":
    """itkPointBasedSpatialObjectContour3___New_orig__() -> itkPointBasedSpatialObjectContour3_Pointer"""
    return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3___New_orig__()

def itkPointBasedSpatialObjectContour3_cast(obj: 'itkLightObject') -> "itkPointBasedSpatialObjectContour3 *":
    """itkPointBasedSpatialObjectContour3_cast(itkLightObject obj) -> itkPointBasedSpatialObjectContour3"""
    return _itkContourSpatialObjectPython.itkPointBasedSpatialObjectContour3_cast(obj)

class itkContourSpatialObject2(itkPointBasedSpatialObjectContour2):
    """Proxy of C++ itkContourSpatialObject2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NO_INTERPOLATION = _itkContourSpatialObjectPython.itkContourSpatialObject2_NO_INTERPOLATION
    EXPLICIT_INTERPOLATION = _itkContourSpatialObjectPython.itkContourSpatialObject2_EXPLICIT_INTERPOLATION
    BEZIER_INTERPOLATION = _itkContourSpatialObjectPython.itkContourSpatialObject2_BEZIER_INTERPOLATION
    LINEAR_INTERPOLATION = _itkContourSpatialObjectPython.itkContourSpatialObject2_LINEAR_INTERPOLATION

    def __New_orig__() -> "itkContourSpatialObject2_Pointer":
        """__New_orig__() -> itkContourSpatialObject2_Pointer"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourSpatialObject2_Pointer":
        """Clone(itkContourSpatialObject2 self) -> itkContourSpatialObject2_Pointer"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_Clone(self)


    def GetControlPoints(self, *args) -> "std::vector< itkContourSpatialObjectPoint2,std::allocator< itkContourSpatialObjectPoint2 > > const &":
        """
        GetControlPoints(itkContourSpatialObject2 self) -> vectoritkContourSpatialObjectPoint2
        GetControlPoints(itkContourSpatialObject2 self) -> vectoritkContourSpatialObjectPoint2
        """
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_GetControlPoints(self, *args)


    def SetControlPoints(self, newPoints: 'vectoritkContourSpatialObjectPoint2') -> "void":
        """SetControlPoints(itkContourSpatialObject2 self, vectoritkContourSpatialObjectPoint2 newPoints)"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_SetControlPoints(self, newPoints)


    def AddControlPoint(self, point: 'itkContourSpatialObjectPoint2') -> "void":
        """AddControlPoint(itkContourSpatialObject2 self, itkContourSpatialObjectPoint2 point)"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_AddControlPoint(self, point)


    def GetControlPoint(self, *args) -> "itkContourSpatialObjectPoint2 *":
        """
        GetControlPoint(itkContourSpatialObject2 self, unsigned long long id) -> itkContourSpatialObjectPoint2
        GetControlPoint(itkContourSpatialObject2 self, unsigned long long id) -> itkContourSpatialObjectPoint2
        """
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_GetControlPoint(self, *args)


    def GetNumberOfControlPoints(self) -> "unsigned long long":
        """GetNumberOfControlPoints(itkContourSpatialObject2 self) -> unsigned long long"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_GetNumberOfControlPoints(self)


    def SetInterpolationMethod(self, _arg: 'itkContourSpatialObject2::InterpolationMethodType const') -> "void":
        """SetInterpolationMethod(itkContourSpatialObject2 self, itkContourSpatialObject2::InterpolationMethodType const _arg)"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_SetInterpolationMethod(self, _arg)


    def GetInterpolationMethod(self) -> "itkContourSpatialObject2::InterpolationMethodType":
        """GetInterpolationMethod(itkContourSpatialObject2 self) -> itkContourSpatialObject2::InterpolationMethodType"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_GetInterpolationMethod(self)


    def SetInterpolationFactor(self, _arg: 'unsigned int const') -> "void":
        """SetInterpolationFactor(itkContourSpatialObject2 self, unsigned int const _arg)"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_SetInterpolationFactor(self, _arg)


    def GetInterpolationFactor(self) -> "unsigned int":
        """GetInterpolationFactor(itkContourSpatialObject2 self) -> unsigned int"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_GetInterpolationFactor(self)


    def SetIsClosed(self, _arg: 'bool const') -> "void":
        """SetIsClosed(itkContourSpatialObject2 self, bool const _arg)"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_SetIsClosed(self, _arg)


    def GetIsClosed(self) -> "bool":
        """GetIsClosed(itkContourSpatialObject2 self) -> bool"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_GetIsClosed(self)


    def GetOrientationInObjectSpace(self) -> "int":
        """GetOrientationInObjectSpace(itkContourSpatialObject2 self) -> int"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_GetOrientationInObjectSpace(self)


    def SetAttachedToSlice(self, _arg: 'int const') -> "void":
        """SetAttachedToSlice(itkContourSpatialObject2 self, int const _arg)"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_SetAttachedToSlice(self, _arg)


    def GetAttachedToSlice(self) -> "int":
        """GetAttachedToSlice(itkContourSpatialObject2 self) -> int"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_GetAttachedToSlice(self)

    __swig_destroy__ = _itkContourSpatialObjectPython.delete_itkContourSpatialObject2

    def cast(obj: 'itkLightObject') -> "itkContourSpatialObject2 *":
        """cast(itkLightObject obj) -> itkContourSpatialObject2"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourSpatialObject2

        Create a new object of the class itkContourSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourSpatialObject2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourSpatialObject2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourSpatialObject2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourSpatialObject2.Clone = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_Clone, None, itkContourSpatialObject2)
itkContourSpatialObject2.GetControlPoints = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_GetControlPoints, None, itkContourSpatialObject2)
itkContourSpatialObject2.SetControlPoints = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_SetControlPoints, None, itkContourSpatialObject2)
itkContourSpatialObject2.AddControlPoint = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_AddControlPoint, None, itkContourSpatialObject2)
itkContourSpatialObject2.GetControlPoint = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_GetControlPoint, None, itkContourSpatialObject2)
itkContourSpatialObject2.GetNumberOfControlPoints = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_GetNumberOfControlPoints, None, itkContourSpatialObject2)
itkContourSpatialObject2.SetInterpolationMethod = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_SetInterpolationMethod, None, itkContourSpatialObject2)
itkContourSpatialObject2.GetInterpolationMethod = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_GetInterpolationMethod, None, itkContourSpatialObject2)
itkContourSpatialObject2.SetInterpolationFactor = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_SetInterpolationFactor, None, itkContourSpatialObject2)
itkContourSpatialObject2.GetInterpolationFactor = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_GetInterpolationFactor, None, itkContourSpatialObject2)
itkContourSpatialObject2.SetIsClosed = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_SetIsClosed, None, itkContourSpatialObject2)
itkContourSpatialObject2.GetIsClosed = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_GetIsClosed, None, itkContourSpatialObject2)
itkContourSpatialObject2.GetOrientationInObjectSpace = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_GetOrientationInObjectSpace, None, itkContourSpatialObject2)
itkContourSpatialObject2.SetAttachedToSlice = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_SetAttachedToSlice, None, itkContourSpatialObject2)
itkContourSpatialObject2.GetAttachedToSlice = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject2_GetAttachedToSlice, None, itkContourSpatialObject2)
itkContourSpatialObject2_swigregister = _itkContourSpatialObjectPython.itkContourSpatialObject2_swigregister
itkContourSpatialObject2_swigregister(itkContourSpatialObject2)

def itkContourSpatialObject2___New_orig__() -> "itkContourSpatialObject2_Pointer":
    """itkContourSpatialObject2___New_orig__() -> itkContourSpatialObject2_Pointer"""
    return _itkContourSpatialObjectPython.itkContourSpatialObject2___New_orig__()

def itkContourSpatialObject2_cast(obj: 'itkLightObject') -> "itkContourSpatialObject2 *":
    """itkContourSpatialObject2_cast(itkLightObject obj) -> itkContourSpatialObject2"""
    return _itkContourSpatialObjectPython.itkContourSpatialObject2_cast(obj)

class itkContourSpatialObject3(itkPointBasedSpatialObjectContour3):
    """Proxy of C++ itkContourSpatialObject3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NO_INTERPOLATION = _itkContourSpatialObjectPython.itkContourSpatialObject3_NO_INTERPOLATION
    EXPLICIT_INTERPOLATION = _itkContourSpatialObjectPython.itkContourSpatialObject3_EXPLICIT_INTERPOLATION
    BEZIER_INTERPOLATION = _itkContourSpatialObjectPython.itkContourSpatialObject3_BEZIER_INTERPOLATION
    LINEAR_INTERPOLATION = _itkContourSpatialObjectPython.itkContourSpatialObject3_LINEAR_INTERPOLATION

    def __New_orig__() -> "itkContourSpatialObject3_Pointer":
        """__New_orig__() -> itkContourSpatialObject3_Pointer"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourSpatialObject3_Pointer":
        """Clone(itkContourSpatialObject3 self) -> itkContourSpatialObject3_Pointer"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_Clone(self)


    def GetControlPoints(self, *args) -> "std::vector< itkContourSpatialObjectPoint3,std::allocator< itkContourSpatialObjectPoint3 > > const &":
        """
        GetControlPoints(itkContourSpatialObject3 self) -> vectoritkContourSpatialObjectPoint3
        GetControlPoints(itkContourSpatialObject3 self) -> vectoritkContourSpatialObjectPoint3
        """
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_GetControlPoints(self, *args)


    def SetControlPoints(self, newPoints: 'vectoritkContourSpatialObjectPoint3') -> "void":
        """SetControlPoints(itkContourSpatialObject3 self, vectoritkContourSpatialObjectPoint3 newPoints)"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_SetControlPoints(self, newPoints)


    def AddControlPoint(self, point: 'itkContourSpatialObjectPoint3') -> "void":
        """AddControlPoint(itkContourSpatialObject3 self, itkContourSpatialObjectPoint3 point)"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_AddControlPoint(self, point)


    def GetControlPoint(self, *args) -> "itkContourSpatialObjectPoint3 *":
        """
        GetControlPoint(itkContourSpatialObject3 self, unsigned long long id) -> itkContourSpatialObjectPoint3
        GetControlPoint(itkContourSpatialObject3 self, unsigned long long id) -> itkContourSpatialObjectPoint3
        """
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_GetControlPoint(self, *args)


    def GetNumberOfControlPoints(self) -> "unsigned long long":
        """GetNumberOfControlPoints(itkContourSpatialObject3 self) -> unsigned long long"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_GetNumberOfControlPoints(self)


    def SetInterpolationMethod(self, _arg: 'itkContourSpatialObject3::InterpolationMethodType const') -> "void":
        """SetInterpolationMethod(itkContourSpatialObject3 self, itkContourSpatialObject3::InterpolationMethodType const _arg)"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_SetInterpolationMethod(self, _arg)


    def GetInterpolationMethod(self) -> "itkContourSpatialObject3::InterpolationMethodType":
        """GetInterpolationMethod(itkContourSpatialObject3 self) -> itkContourSpatialObject3::InterpolationMethodType"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_GetInterpolationMethod(self)


    def SetInterpolationFactor(self, _arg: 'unsigned int const') -> "void":
        """SetInterpolationFactor(itkContourSpatialObject3 self, unsigned int const _arg)"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_SetInterpolationFactor(self, _arg)


    def GetInterpolationFactor(self) -> "unsigned int":
        """GetInterpolationFactor(itkContourSpatialObject3 self) -> unsigned int"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_GetInterpolationFactor(self)


    def SetIsClosed(self, _arg: 'bool const') -> "void":
        """SetIsClosed(itkContourSpatialObject3 self, bool const _arg)"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_SetIsClosed(self, _arg)


    def GetIsClosed(self) -> "bool":
        """GetIsClosed(itkContourSpatialObject3 self) -> bool"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_GetIsClosed(self)


    def GetOrientationInObjectSpace(self) -> "int":
        """GetOrientationInObjectSpace(itkContourSpatialObject3 self) -> int"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_GetOrientationInObjectSpace(self)


    def SetAttachedToSlice(self, _arg: 'int const') -> "void":
        """SetAttachedToSlice(itkContourSpatialObject3 self, int const _arg)"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_SetAttachedToSlice(self, _arg)


    def GetAttachedToSlice(self) -> "int":
        """GetAttachedToSlice(itkContourSpatialObject3 self) -> int"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_GetAttachedToSlice(self)

    __swig_destroy__ = _itkContourSpatialObjectPython.delete_itkContourSpatialObject3

    def cast(obj: 'itkLightObject') -> "itkContourSpatialObject3 *":
        """cast(itkLightObject obj) -> itkContourSpatialObject3"""
        return _itkContourSpatialObjectPython.itkContourSpatialObject3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourSpatialObject3

        Create a new object of the class itkContourSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourSpatialObject3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourSpatialObject3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourSpatialObject3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourSpatialObject3.Clone = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_Clone, None, itkContourSpatialObject3)
itkContourSpatialObject3.GetControlPoints = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_GetControlPoints, None, itkContourSpatialObject3)
itkContourSpatialObject3.SetControlPoints = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_SetControlPoints, None, itkContourSpatialObject3)
itkContourSpatialObject3.AddControlPoint = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_AddControlPoint, None, itkContourSpatialObject3)
itkContourSpatialObject3.GetControlPoint = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_GetControlPoint, None, itkContourSpatialObject3)
itkContourSpatialObject3.GetNumberOfControlPoints = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_GetNumberOfControlPoints, None, itkContourSpatialObject3)
itkContourSpatialObject3.SetInterpolationMethod = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_SetInterpolationMethod, None, itkContourSpatialObject3)
itkContourSpatialObject3.GetInterpolationMethod = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_GetInterpolationMethod, None, itkContourSpatialObject3)
itkContourSpatialObject3.SetInterpolationFactor = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_SetInterpolationFactor, None, itkContourSpatialObject3)
itkContourSpatialObject3.GetInterpolationFactor = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_GetInterpolationFactor, None, itkContourSpatialObject3)
itkContourSpatialObject3.SetIsClosed = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_SetIsClosed, None, itkContourSpatialObject3)
itkContourSpatialObject3.GetIsClosed = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_GetIsClosed, None, itkContourSpatialObject3)
itkContourSpatialObject3.GetOrientationInObjectSpace = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_GetOrientationInObjectSpace, None, itkContourSpatialObject3)
itkContourSpatialObject3.SetAttachedToSlice = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_SetAttachedToSlice, None, itkContourSpatialObject3)
itkContourSpatialObject3.GetAttachedToSlice = new_instancemethod(_itkContourSpatialObjectPython.itkContourSpatialObject3_GetAttachedToSlice, None, itkContourSpatialObject3)
itkContourSpatialObject3_swigregister = _itkContourSpatialObjectPython.itkContourSpatialObject3_swigregister
itkContourSpatialObject3_swigregister(itkContourSpatialObject3)

def itkContourSpatialObject3___New_orig__() -> "itkContourSpatialObject3_Pointer":
    """itkContourSpatialObject3___New_orig__() -> itkContourSpatialObject3_Pointer"""
    return _itkContourSpatialObjectPython.itkContourSpatialObject3___New_orig__()

def itkContourSpatialObject3_cast(obj: 'itkLightObject') -> "itkContourSpatialObject3 *":
    """itkContourSpatialObject3_cast(itkLightObject obj) -> itkContourSpatialObject3"""
    return _itkContourSpatialObjectPython.itkContourSpatialObject3_cast(obj)



