# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkLandweberDeconvolutionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkLandweberDeconvolutionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkLandweberDeconvolutionImageFilterPython
            return _itkLandweberDeconvolutionImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkLandweberDeconvolutionImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkLandweberDeconvolutionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkLandweberDeconvolutionImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkIterativeDeconvolutionImageFilterPython
import itkFFTConvolutionImageFilterPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkConvolutionImageFilterBasePython
import itkImageBoundaryConditionPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkLandweberDeconvolutionImageFilterIF3IF3_New():
  return itkLandweberDeconvolutionImageFilterIF3IF3.New()


def itkLandweberDeconvolutionImageFilterIF2IF2_New():
  return itkLandweberDeconvolutionImageFilterIF2IF2.New()


def itkLandweberDeconvolutionImageFilterIUS3IUS3_New():
  return itkLandweberDeconvolutionImageFilterIUS3IUS3.New()


def itkLandweberDeconvolutionImageFilterIUS2IUS2_New():
  return itkLandweberDeconvolutionImageFilterIUS2IUS2.New()


def itkLandweberDeconvolutionImageFilterIUC3IUC3_New():
  return itkLandweberDeconvolutionImageFilterIUC3IUC3.New()


def itkLandweberDeconvolutionImageFilterIUC2IUC2_New():
  return itkLandweberDeconvolutionImageFilterIUC2IUC2.New()


def itkLandweberDeconvolutionImageFilterISS3ISS3_New():
  return itkLandweberDeconvolutionImageFilterISS3ISS3.New()


def itkLandweberDeconvolutionImageFilterISS2ISS2_New():
  return itkLandweberDeconvolutionImageFilterISS2ISS2.New()

class itkLandweberDeconvolutionImageFilterIF2IF2(itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2):
    """Proxy of C++ itkLandweberDeconvolutionImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLandweberDeconvolutionImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkLandweberDeconvolutionImageFilterIF2IF2_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLandweberDeconvolutionImageFilterIF2IF2_Pointer":
        """Clone(itkLandweberDeconvolutionImageFilterIF2IF2 self) -> itkLandweberDeconvolutionImageFilterIF2IF2_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF2IF2_Clone(self)


    def SetAlpha(self, _arg: 'double const') -> "void":
        """SetAlpha(itkLandweberDeconvolutionImageFilterIF2IF2 self, double const _arg)"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF2IF2_SetAlpha(self, _arg)


    def GetAlpha(self) -> "double":
        """GetAlpha(itkLandweberDeconvolutionImageFilterIF2IF2 self) -> double"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF2IF2_GetAlpha(self)

    __swig_destroy__ = _itkLandweberDeconvolutionImageFilterPython.delete_itkLandweberDeconvolutionImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterIF2IF2"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLandweberDeconvolutionImageFilterIF2IF2

        Create a new object of the class itkLandweberDeconvolutionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLandweberDeconvolutionImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLandweberDeconvolutionImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLandweberDeconvolutionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLandweberDeconvolutionImageFilterIF2IF2.Clone = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF2IF2_Clone, None, itkLandweberDeconvolutionImageFilterIF2IF2)
itkLandweberDeconvolutionImageFilterIF2IF2.SetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF2IF2_SetAlpha, None, itkLandweberDeconvolutionImageFilterIF2IF2)
itkLandweberDeconvolutionImageFilterIF2IF2.GetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF2IF2_GetAlpha, None, itkLandweberDeconvolutionImageFilterIF2IF2)
itkLandweberDeconvolutionImageFilterIF2IF2_swigregister = _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF2IF2_swigregister
itkLandweberDeconvolutionImageFilterIF2IF2_swigregister(itkLandweberDeconvolutionImageFilterIF2IF2)

def itkLandweberDeconvolutionImageFilterIF2IF2___New_orig__() -> "itkLandweberDeconvolutionImageFilterIF2IF2_Pointer":
    """itkLandweberDeconvolutionImageFilterIF2IF2___New_orig__() -> itkLandweberDeconvolutionImageFilterIF2IF2_Pointer"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF2IF2___New_orig__()

def itkLandweberDeconvolutionImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterIF2IF2 *":
    """itkLandweberDeconvolutionImageFilterIF2IF2_cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterIF2IF2"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF2IF2_cast(obj)

class itkLandweberDeconvolutionImageFilterIF3IF3(itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3):
    """Proxy of C++ itkLandweberDeconvolutionImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLandweberDeconvolutionImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkLandweberDeconvolutionImageFilterIF3IF3_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLandweberDeconvolutionImageFilterIF3IF3_Pointer":
        """Clone(itkLandweberDeconvolutionImageFilterIF3IF3 self) -> itkLandweberDeconvolutionImageFilterIF3IF3_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF3IF3_Clone(self)


    def SetAlpha(self, _arg: 'double const') -> "void":
        """SetAlpha(itkLandweberDeconvolutionImageFilterIF3IF3 self, double const _arg)"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF3IF3_SetAlpha(self, _arg)


    def GetAlpha(self) -> "double":
        """GetAlpha(itkLandweberDeconvolutionImageFilterIF3IF3 self) -> double"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF3IF3_GetAlpha(self)

    __swig_destroy__ = _itkLandweberDeconvolutionImageFilterPython.delete_itkLandweberDeconvolutionImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterIF3IF3"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLandweberDeconvolutionImageFilterIF3IF3

        Create a new object of the class itkLandweberDeconvolutionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLandweberDeconvolutionImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLandweberDeconvolutionImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLandweberDeconvolutionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLandweberDeconvolutionImageFilterIF3IF3.Clone = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF3IF3_Clone, None, itkLandweberDeconvolutionImageFilterIF3IF3)
itkLandweberDeconvolutionImageFilterIF3IF3.SetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF3IF3_SetAlpha, None, itkLandweberDeconvolutionImageFilterIF3IF3)
itkLandweberDeconvolutionImageFilterIF3IF3.GetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF3IF3_GetAlpha, None, itkLandweberDeconvolutionImageFilterIF3IF3)
itkLandweberDeconvolutionImageFilterIF3IF3_swigregister = _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF3IF3_swigregister
itkLandweberDeconvolutionImageFilterIF3IF3_swigregister(itkLandweberDeconvolutionImageFilterIF3IF3)

def itkLandweberDeconvolutionImageFilterIF3IF3___New_orig__() -> "itkLandweberDeconvolutionImageFilterIF3IF3_Pointer":
    """itkLandweberDeconvolutionImageFilterIF3IF3___New_orig__() -> itkLandweberDeconvolutionImageFilterIF3IF3_Pointer"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF3IF3___New_orig__()

def itkLandweberDeconvolutionImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterIF3IF3 *":
    """itkLandweberDeconvolutionImageFilterIF3IF3_cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterIF3IF3"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF3IF3_cast(obj)

class itkLandweberDeconvolutionImageFilterISS2ISS2(itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2):
    """Proxy of C++ itkLandweberDeconvolutionImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLandweberDeconvolutionImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkLandweberDeconvolutionImageFilterISS2ISS2_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLandweberDeconvolutionImageFilterISS2ISS2_Pointer":
        """Clone(itkLandweberDeconvolutionImageFilterISS2ISS2 self) -> itkLandweberDeconvolutionImageFilterISS2ISS2_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS2ISS2_Clone(self)


    def SetAlpha(self, _arg: 'double const') -> "void":
        """SetAlpha(itkLandweberDeconvolutionImageFilterISS2ISS2 self, double const _arg)"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS2ISS2_SetAlpha(self, _arg)


    def GetAlpha(self) -> "double":
        """GetAlpha(itkLandweberDeconvolutionImageFilterISS2ISS2 self) -> double"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS2ISS2_GetAlpha(self)

    __swig_destroy__ = _itkLandweberDeconvolutionImageFilterPython.delete_itkLandweberDeconvolutionImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterISS2ISS2"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLandweberDeconvolutionImageFilterISS2ISS2

        Create a new object of the class itkLandweberDeconvolutionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLandweberDeconvolutionImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLandweberDeconvolutionImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLandweberDeconvolutionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLandweberDeconvolutionImageFilterISS2ISS2.Clone = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS2ISS2_Clone, None, itkLandweberDeconvolutionImageFilterISS2ISS2)
itkLandweberDeconvolutionImageFilterISS2ISS2.SetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS2ISS2_SetAlpha, None, itkLandweberDeconvolutionImageFilterISS2ISS2)
itkLandweberDeconvolutionImageFilterISS2ISS2.GetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS2ISS2_GetAlpha, None, itkLandweberDeconvolutionImageFilterISS2ISS2)
itkLandweberDeconvolutionImageFilterISS2ISS2_swigregister = _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS2ISS2_swigregister
itkLandweberDeconvolutionImageFilterISS2ISS2_swigregister(itkLandweberDeconvolutionImageFilterISS2ISS2)

def itkLandweberDeconvolutionImageFilterISS2ISS2___New_orig__() -> "itkLandweberDeconvolutionImageFilterISS2ISS2_Pointer":
    """itkLandweberDeconvolutionImageFilterISS2ISS2___New_orig__() -> itkLandweberDeconvolutionImageFilterISS2ISS2_Pointer"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS2ISS2___New_orig__()

def itkLandweberDeconvolutionImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterISS2ISS2 *":
    """itkLandweberDeconvolutionImageFilterISS2ISS2_cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterISS2ISS2"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS2ISS2_cast(obj)

class itkLandweberDeconvolutionImageFilterISS3ISS3(itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3):
    """Proxy of C++ itkLandweberDeconvolutionImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLandweberDeconvolutionImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkLandweberDeconvolutionImageFilterISS3ISS3_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLandweberDeconvolutionImageFilterISS3ISS3_Pointer":
        """Clone(itkLandweberDeconvolutionImageFilterISS3ISS3 self) -> itkLandweberDeconvolutionImageFilterISS3ISS3_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS3ISS3_Clone(self)


    def SetAlpha(self, _arg: 'double const') -> "void":
        """SetAlpha(itkLandweberDeconvolutionImageFilterISS3ISS3 self, double const _arg)"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS3ISS3_SetAlpha(self, _arg)


    def GetAlpha(self) -> "double":
        """GetAlpha(itkLandweberDeconvolutionImageFilterISS3ISS3 self) -> double"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS3ISS3_GetAlpha(self)

    __swig_destroy__ = _itkLandweberDeconvolutionImageFilterPython.delete_itkLandweberDeconvolutionImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterISS3ISS3"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLandweberDeconvolutionImageFilterISS3ISS3

        Create a new object of the class itkLandweberDeconvolutionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLandweberDeconvolutionImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLandweberDeconvolutionImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLandweberDeconvolutionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLandweberDeconvolutionImageFilterISS3ISS3.Clone = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS3ISS3_Clone, None, itkLandweberDeconvolutionImageFilterISS3ISS3)
itkLandweberDeconvolutionImageFilterISS3ISS3.SetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS3ISS3_SetAlpha, None, itkLandweberDeconvolutionImageFilterISS3ISS3)
itkLandweberDeconvolutionImageFilterISS3ISS3.GetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS3ISS3_GetAlpha, None, itkLandweberDeconvolutionImageFilterISS3ISS3)
itkLandweberDeconvolutionImageFilterISS3ISS3_swigregister = _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS3ISS3_swigregister
itkLandweberDeconvolutionImageFilterISS3ISS3_swigregister(itkLandweberDeconvolutionImageFilterISS3ISS3)

def itkLandweberDeconvolutionImageFilterISS3ISS3___New_orig__() -> "itkLandweberDeconvolutionImageFilterISS3ISS3_Pointer":
    """itkLandweberDeconvolutionImageFilterISS3ISS3___New_orig__() -> itkLandweberDeconvolutionImageFilterISS3ISS3_Pointer"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS3ISS3___New_orig__()

def itkLandweberDeconvolutionImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterISS3ISS3 *":
    """itkLandweberDeconvolutionImageFilterISS3ISS3_cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterISS3ISS3"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS3ISS3_cast(obj)

class itkLandweberDeconvolutionImageFilterIUC2IUC2(itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2):
    """Proxy of C++ itkLandweberDeconvolutionImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLandweberDeconvolutionImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkLandweberDeconvolutionImageFilterIUC2IUC2_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLandweberDeconvolutionImageFilterIUC2IUC2_Pointer":
        """Clone(itkLandweberDeconvolutionImageFilterIUC2IUC2 self) -> itkLandweberDeconvolutionImageFilterIUC2IUC2_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC2IUC2_Clone(self)


    def SetAlpha(self, _arg: 'double const') -> "void":
        """SetAlpha(itkLandweberDeconvolutionImageFilterIUC2IUC2 self, double const _arg)"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC2IUC2_SetAlpha(self, _arg)


    def GetAlpha(self) -> "double":
        """GetAlpha(itkLandweberDeconvolutionImageFilterIUC2IUC2 self) -> double"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC2IUC2_GetAlpha(self)

    __swig_destroy__ = _itkLandweberDeconvolutionImageFilterPython.delete_itkLandweberDeconvolutionImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterIUC2IUC2"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLandweberDeconvolutionImageFilterIUC2IUC2

        Create a new object of the class itkLandweberDeconvolutionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLandweberDeconvolutionImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLandweberDeconvolutionImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLandweberDeconvolutionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLandweberDeconvolutionImageFilterIUC2IUC2.Clone = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC2IUC2_Clone, None, itkLandweberDeconvolutionImageFilterIUC2IUC2)
itkLandweberDeconvolutionImageFilterIUC2IUC2.SetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC2IUC2_SetAlpha, None, itkLandweberDeconvolutionImageFilterIUC2IUC2)
itkLandweberDeconvolutionImageFilterIUC2IUC2.GetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC2IUC2_GetAlpha, None, itkLandweberDeconvolutionImageFilterIUC2IUC2)
itkLandweberDeconvolutionImageFilterIUC2IUC2_swigregister = _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC2IUC2_swigregister
itkLandweberDeconvolutionImageFilterIUC2IUC2_swigregister(itkLandweberDeconvolutionImageFilterIUC2IUC2)

def itkLandweberDeconvolutionImageFilterIUC2IUC2___New_orig__() -> "itkLandweberDeconvolutionImageFilterIUC2IUC2_Pointer":
    """itkLandweberDeconvolutionImageFilterIUC2IUC2___New_orig__() -> itkLandweberDeconvolutionImageFilterIUC2IUC2_Pointer"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC2IUC2___New_orig__()

def itkLandweberDeconvolutionImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterIUC2IUC2 *":
    """itkLandweberDeconvolutionImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterIUC2IUC2"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC2IUC2_cast(obj)

class itkLandweberDeconvolutionImageFilterIUC3IUC3(itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3):
    """Proxy of C++ itkLandweberDeconvolutionImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLandweberDeconvolutionImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkLandweberDeconvolutionImageFilterIUC3IUC3_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLandweberDeconvolutionImageFilterIUC3IUC3_Pointer":
        """Clone(itkLandweberDeconvolutionImageFilterIUC3IUC3 self) -> itkLandweberDeconvolutionImageFilterIUC3IUC3_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC3IUC3_Clone(self)


    def SetAlpha(self, _arg: 'double const') -> "void":
        """SetAlpha(itkLandweberDeconvolutionImageFilterIUC3IUC3 self, double const _arg)"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC3IUC3_SetAlpha(self, _arg)


    def GetAlpha(self) -> "double":
        """GetAlpha(itkLandweberDeconvolutionImageFilterIUC3IUC3 self) -> double"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC3IUC3_GetAlpha(self)

    __swig_destroy__ = _itkLandweberDeconvolutionImageFilterPython.delete_itkLandweberDeconvolutionImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterIUC3IUC3"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLandweberDeconvolutionImageFilterIUC3IUC3

        Create a new object of the class itkLandweberDeconvolutionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLandweberDeconvolutionImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLandweberDeconvolutionImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLandweberDeconvolutionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLandweberDeconvolutionImageFilterIUC3IUC3.Clone = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC3IUC3_Clone, None, itkLandweberDeconvolutionImageFilterIUC3IUC3)
itkLandweberDeconvolutionImageFilterIUC3IUC3.SetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC3IUC3_SetAlpha, None, itkLandweberDeconvolutionImageFilterIUC3IUC3)
itkLandweberDeconvolutionImageFilterIUC3IUC3.GetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC3IUC3_GetAlpha, None, itkLandweberDeconvolutionImageFilterIUC3IUC3)
itkLandweberDeconvolutionImageFilterIUC3IUC3_swigregister = _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC3IUC3_swigregister
itkLandweberDeconvolutionImageFilterIUC3IUC3_swigregister(itkLandweberDeconvolutionImageFilterIUC3IUC3)

def itkLandweberDeconvolutionImageFilterIUC3IUC3___New_orig__() -> "itkLandweberDeconvolutionImageFilterIUC3IUC3_Pointer":
    """itkLandweberDeconvolutionImageFilterIUC3IUC3___New_orig__() -> itkLandweberDeconvolutionImageFilterIUC3IUC3_Pointer"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC3IUC3___New_orig__()

def itkLandweberDeconvolutionImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterIUC3IUC3 *":
    """itkLandweberDeconvolutionImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterIUC3IUC3"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC3IUC3_cast(obj)

class itkLandweberDeconvolutionImageFilterIUS2IUS2(itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS2IUS2):
    """Proxy of C++ itkLandweberDeconvolutionImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLandweberDeconvolutionImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkLandweberDeconvolutionImageFilterIUS2IUS2_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLandweberDeconvolutionImageFilterIUS2IUS2_Pointer":
        """Clone(itkLandweberDeconvolutionImageFilterIUS2IUS2 self) -> itkLandweberDeconvolutionImageFilterIUS2IUS2_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS2IUS2_Clone(self)


    def SetAlpha(self, _arg: 'double const') -> "void":
        """SetAlpha(itkLandweberDeconvolutionImageFilterIUS2IUS2 self, double const _arg)"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS2IUS2_SetAlpha(self, _arg)


    def GetAlpha(self) -> "double":
        """GetAlpha(itkLandweberDeconvolutionImageFilterIUS2IUS2 self) -> double"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS2IUS2_GetAlpha(self)

    __swig_destroy__ = _itkLandweberDeconvolutionImageFilterPython.delete_itkLandweberDeconvolutionImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterIUS2IUS2"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLandweberDeconvolutionImageFilterIUS2IUS2

        Create a new object of the class itkLandweberDeconvolutionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLandweberDeconvolutionImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLandweberDeconvolutionImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLandweberDeconvolutionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLandweberDeconvolutionImageFilterIUS2IUS2.Clone = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS2IUS2_Clone, None, itkLandweberDeconvolutionImageFilterIUS2IUS2)
itkLandweberDeconvolutionImageFilterIUS2IUS2.SetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS2IUS2_SetAlpha, None, itkLandweberDeconvolutionImageFilterIUS2IUS2)
itkLandweberDeconvolutionImageFilterIUS2IUS2.GetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS2IUS2_GetAlpha, None, itkLandweberDeconvolutionImageFilterIUS2IUS2)
itkLandweberDeconvolutionImageFilterIUS2IUS2_swigregister = _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS2IUS2_swigregister
itkLandweberDeconvolutionImageFilterIUS2IUS2_swigregister(itkLandweberDeconvolutionImageFilterIUS2IUS2)

def itkLandweberDeconvolutionImageFilterIUS2IUS2___New_orig__() -> "itkLandweberDeconvolutionImageFilterIUS2IUS2_Pointer":
    """itkLandweberDeconvolutionImageFilterIUS2IUS2___New_orig__() -> itkLandweberDeconvolutionImageFilterIUS2IUS2_Pointer"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS2IUS2___New_orig__()

def itkLandweberDeconvolutionImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterIUS2IUS2 *":
    """itkLandweberDeconvolutionImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterIUS2IUS2"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS2IUS2_cast(obj)

class itkLandweberDeconvolutionImageFilterIUS3IUS3(itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS3IUS3):
    """Proxy of C++ itkLandweberDeconvolutionImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLandweberDeconvolutionImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkLandweberDeconvolutionImageFilterIUS3IUS3_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLandweberDeconvolutionImageFilterIUS3IUS3_Pointer":
        """Clone(itkLandweberDeconvolutionImageFilterIUS3IUS3 self) -> itkLandweberDeconvolutionImageFilterIUS3IUS3_Pointer"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS3IUS3_Clone(self)


    def SetAlpha(self, _arg: 'double const') -> "void":
        """SetAlpha(itkLandweberDeconvolutionImageFilterIUS3IUS3 self, double const _arg)"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS3IUS3_SetAlpha(self, _arg)


    def GetAlpha(self) -> "double":
        """GetAlpha(itkLandweberDeconvolutionImageFilterIUS3IUS3 self) -> double"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS3IUS3_GetAlpha(self)

    __swig_destroy__ = _itkLandweberDeconvolutionImageFilterPython.delete_itkLandweberDeconvolutionImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterIUS3IUS3"""
        return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLandweberDeconvolutionImageFilterIUS3IUS3

        Create a new object of the class itkLandweberDeconvolutionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLandweberDeconvolutionImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLandweberDeconvolutionImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLandweberDeconvolutionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLandweberDeconvolutionImageFilterIUS3IUS3.Clone = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS3IUS3_Clone, None, itkLandweberDeconvolutionImageFilterIUS3IUS3)
itkLandweberDeconvolutionImageFilterIUS3IUS3.SetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS3IUS3_SetAlpha, None, itkLandweberDeconvolutionImageFilterIUS3IUS3)
itkLandweberDeconvolutionImageFilterIUS3IUS3.GetAlpha = new_instancemethod(_itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS3IUS3_GetAlpha, None, itkLandweberDeconvolutionImageFilterIUS3IUS3)
itkLandweberDeconvolutionImageFilterIUS3IUS3_swigregister = _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS3IUS3_swigregister
itkLandweberDeconvolutionImageFilterIUS3IUS3_swigregister(itkLandweberDeconvolutionImageFilterIUS3IUS3)

def itkLandweberDeconvolutionImageFilterIUS3IUS3___New_orig__() -> "itkLandweberDeconvolutionImageFilterIUS3IUS3_Pointer":
    """itkLandweberDeconvolutionImageFilterIUS3IUS3___New_orig__() -> itkLandweberDeconvolutionImageFilterIUS3IUS3_Pointer"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS3IUS3___New_orig__()

def itkLandweberDeconvolutionImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkLandweberDeconvolutionImageFilterIUS3IUS3 *":
    """itkLandweberDeconvolutionImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkLandweberDeconvolutionImageFilterIUS3IUS3"""
    return _itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS3IUS3_cast(obj)


def landweber_deconvolution_image_filter(*args, **kwargs):
    """Procedural interface for LandweberDeconvolutionImageFilter"""
    import itk
    instance = itk.LandweberDeconvolutionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def landweber_deconvolution_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.LandweberDeconvolutionImageFilter, itkTemplate.itkTemplate):
        landweber_deconvolution_image_filter.__doc__ = itk.LandweberDeconvolutionImageFilter.values()[0].__doc__
    else:
        landweber_deconvolution_image_filter.__doc__ = itk.LandweberDeconvolutionImageFilter.__doc__




