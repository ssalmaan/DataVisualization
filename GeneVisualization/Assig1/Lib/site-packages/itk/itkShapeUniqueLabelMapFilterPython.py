# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkShapeUniqueLabelMapFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkShapeUniqueLabelMapFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkShapeUniqueLabelMapFilterPython
            return _itkShapeUniqueLabelMapFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkShapeUniqueLabelMapFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkShapeUniqueLabelMapFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkShapeUniqueLabelMapFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkInPlaceLabelMapFilterPython
import ITKCommonBasePython
import pyBasePython
import ITKLabelMapBasePython
import itkImageSourceCommonPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImagePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkStatisticsLabelObjectPython
import itkShapeLabelObjectPython
import itkLabelObjectPython
import itkLabelObjectLinePython
import itkAffineTransformPython
import itkTransformBasePython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkDiffusionTensor3DPython
import itkMatrixOffsetTransformBasePython
import itkHistogramPython
import itkSamplePython
import itkImageSourcePython
import itkVectorImagePython
import itkImageToImageFilterCommonPython
import itkLabelMapFilterPython

def itkShapeUniqueLabelMapFilterLM3_New():
  return itkShapeUniqueLabelMapFilterLM3.New()


def itkShapeUniqueLabelMapFilterLM2_New():
  return itkShapeUniqueLabelMapFilterLM2.New()

class itkShapeUniqueLabelMapFilterLM2(itkInPlaceLabelMapFilterPython.itkInPlaceLabelMapFilterLM2):
    """Proxy of C++ itkShapeUniqueLabelMapFilterLM2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShapeUniqueLabelMapFilterLM2_Pointer":
        """__New_orig__() -> itkShapeUniqueLabelMapFilterLM2_Pointer"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShapeUniqueLabelMapFilterLM2_Pointer":
        """Clone(itkShapeUniqueLabelMapFilterLM2 self) -> itkShapeUniqueLabelMapFilterLM2_Pointer"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_Clone(self)


    def GetReverseOrdering(self) -> "bool":
        """GetReverseOrdering(itkShapeUniqueLabelMapFilterLM2 self) -> bool"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_GetReverseOrdering(self)


    def SetReverseOrdering(self, _arg: 'bool const') -> "void":
        """SetReverseOrdering(itkShapeUniqueLabelMapFilterLM2 self, bool const _arg)"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_SetReverseOrdering(self, _arg)


    def ReverseOrderingOn(self) -> "void":
        """ReverseOrderingOn(itkShapeUniqueLabelMapFilterLM2 self)"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_ReverseOrderingOn(self)


    def ReverseOrderingOff(self) -> "void":
        """ReverseOrderingOff(itkShapeUniqueLabelMapFilterLM2 self)"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_ReverseOrderingOff(self)


    def GetAttribute(self) -> "unsigned int":
        """GetAttribute(itkShapeUniqueLabelMapFilterLM2 self) -> unsigned int"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_GetAttribute(self)


    def SetAttribute(self, *args) -> "void":
        """
        SetAttribute(itkShapeUniqueLabelMapFilterLM2 self, unsigned int const _arg)
        SetAttribute(itkShapeUniqueLabelMapFilterLM2 self, std::string const & s)
        """
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_SetAttribute(self, *args)

    __swig_destroy__ = _itkShapeUniqueLabelMapFilterPython.delete_itkShapeUniqueLabelMapFilterLM2

    def cast(obj: 'itkLightObject') -> "itkShapeUniqueLabelMapFilterLM2 *":
        """cast(itkLightObject obj) -> itkShapeUniqueLabelMapFilterLM2"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShapeUniqueLabelMapFilterLM2

        Create a new object of the class itkShapeUniqueLabelMapFilterLM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShapeUniqueLabelMapFilterLM2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShapeUniqueLabelMapFilterLM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShapeUniqueLabelMapFilterLM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShapeUniqueLabelMapFilterLM2.Clone = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_Clone, None, itkShapeUniqueLabelMapFilterLM2)
itkShapeUniqueLabelMapFilterLM2.GetReverseOrdering = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_GetReverseOrdering, None, itkShapeUniqueLabelMapFilterLM2)
itkShapeUniqueLabelMapFilterLM2.SetReverseOrdering = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_SetReverseOrdering, None, itkShapeUniqueLabelMapFilterLM2)
itkShapeUniqueLabelMapFilterLM2.ReverseOrderingOn = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_ReverseOrderingOn, None, itkShapeUniqueLabelMapFilterLM2)
itkShapeUniqueLabelMapFilterLM2.ReverseOrderingOff = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_ReverseOrderingOff, None, itkShapeUniqueLabelMapFilterLM2)
itkShapeUniqueLabelMapFilterLM2.GetAttribute = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_GetAttribute, None, itkShapeUniqueLabelMapFilterLM2)
itkShapeUniqueLabelMapFilterLM2.SetAttribute = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_SetAttribute, None, itkShapeUniqueLabelMapFilterLM2)
itkShapeUniqueLabelMapFilterLM2_swigregister = _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_swigregister
itkShapeUniqueLabelMapFilterLM2_swigregister(itkShapeUniqueLabelMapFilterLM2)

def itkShapeUniqueLabelMapFilterLM2___New_orig__() -> "itkShapeUniqueLabelMapFilterLM2_Pointer":
    """itkShapeUniqueLabelMapFilterLM2___New_orig__() -> itkShapeUniqueLabelMapFilterLM2_Pointer"""
    return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2___New_orig__()

def itkShapeUniqueLabelMapFilterLM2_cast(obj: 'itkLightObject') -> "itkShapeUniqueLabelMapFilterLM2 *":
    """itkShapeUniqueLabelMapFilterLM2_cast(itkLightObject obj) -> itkShapeUniqueLabelMapFilterLM2"""
    return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2_cast(obj)

class itkShapeUniqueLabelMapFilterLM3(itkInPlaceLabelMapFilterPython.itkInPlaceLabelMapFilterLM3):
    """Proxy of C++ itkShapeUniqueLabelMapFilterLM3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShapeUniqueLabelMapFilterLM3_Pointer":
        """__New_orig__() -> itkShapeUniqueLabelMapFilterLM3_Pointer"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShapeUniqueLabelMapFilterLM3_Pointer":
        """Clone(itkShapeUniqueLabelMapFilterLM3 self) -> itkShapeUniqueLabelMapFilterLM3_Pointer"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_Clone(self)


    def GetReverseOrdering(self) -> "bool":
        """GetReverseOrdering(itkShapeUniqueLabelMapFilterLM3 self) -> bool"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_GetReverseOrdering(self)


    def SetReverseOrdering(self, _arg: 'bool const') -> "void":
        """SetReverseOrdering(itkShapeUniqueLabelMapFilterLM3 self, bool const _arg)"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_SetReverseOrdering(self, _arg)


    def ReverseOrderingOn(self) -> "void":
        """ReverseOrderingOn(itkShapeUniqueLabelMapFilterLM3 self)"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_ReverseOrderingOn(self)


    def ReverseOrderingOff(self) -> "void":
        """ReverseOrderingOff(itkShapeUniqueLabelMapFilterLM3 self)"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_ReverseOrderingOff(self)


    def GetAttribute(self) -> "unsigned int":
        """GetAttribute(itkShapeUniqueLabelMapFilterLM3 self) -> unsigned int"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_GetAttribute(self)


    def SetAttribute(self, *args) -> "void":
        """
        SetAttribute(itkShapeUniqueLabelMapFilterLM3 self, unsigned int const _arg)
        SetAttribute(itkShapeUniqueLabelMapFilterLM3 self, std::string const & s)
        """
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_SetAttribute(self, *args)

    __swig_destroy__ = _itkShapeUniqueLabelMapFilterPython.delete_itkShapeUniqueLabelMapFilterLM3

    def cast(obj: 'itkLightObject') -> "itkShapeUniqueLabelMapFilterLM3 *":
        """cast(itkLightObject obj) -> itkShapeUniqueLabelMapFilterLM3"""
        return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShapeUniqueLabelMapFilterLM3

        Create a new object of the class itkShapeUniqueLabelMapFilterLM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShapeUniqueLabelMapFilterLM3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShapeUniqueLabelMapFilterLM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShapeUniqueLabelMapFilterLM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShapeUniqueLabelMapFilterLM3.Clone = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_Clone, None, itkShapeUniqueLabelMapFilterLM3)
itkShapeUniqueLabelMapFilterLM3.GetReverseOrdering = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_GetReverseOrdering, None, itkShapeUniqueLabelMapFilterLM3)
itkShapeUniqueLabelMapFilterLM3.SetReverseOrdering = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_SetReverseOrdering, None, itkShapeUniqueLabelMapFilterLM3)
itkShapeUniqueLabelMapFilterLM3.ReverseOrderingOn = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_ReverseOrderingOn, None, itkShapeUniqueLabelMapFilterLM3)
itkShapeUniqueLabelMapFilterLM3.ReverseOrderingOff = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_ReverseOrderingOff, None, itkShapeUniqueLabelMapFilterLM3)
itkShapeUniqueLabelMapFilterLM3.GetAttribute = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_GetAttribute, None, itkShapeUniqueLabelMapFilterLM3)
itkShapeUniqueLabelMapFilterLM3.SetAttribute = new_instancemethod(_itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_SetAttribute, None, itkShapeUniqueLabelMapFilterLM3)
itkShapeUniqueLabelMapFilterLM3_swigregister = _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_swigregister
itkShapeUniqueLabelMapFilterLM3_swigregister(itkShapeUniqueLabelMapFilterLM3)

def itkShapeUniqueLabelMapFilterLM3___New_orig__() -> "itkShapeUniqueLabelMapFilterLM3_Pointer":
    """itkShapeUniqueLabelMapFilterLM3___New_orig__() -> itkShapeUniqueLabelMapFilterLM3_Pointer"""
    return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3___New_orig__()

def itkShapeUniqueLabelMapFilterLM3_cast(obj: 'itkLightObject') -> "itkShapeUniqueLabelMapFilterLM3 *":
    """itkShapeUniqueLabelMapFilterLM3_cast(itkLightObject obj) -> itkShapeUniqueLabelMapFilterLM3"""
    return _itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3_cast(obj)


def shape_unique_label_map_filter(*args, **kwargs):
    """Procedural interface for ShapeUniqueLabelMapFilter"""
    import itk
    instance = itk.ShapeUniqueLabelMapFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def shape_unique_label_map_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ShapeUniqueLabelMapFilter, itkTemplate.itkTemplate):
        shape_unique_label_map_filter.__doc__ = itk.ShapeUniqueLabelMapFilter.values()[0].__doc__
    else:
        shape_unique_label_map_filter.__doc__ = itk.ShapeUniqueLabelMapFilter.__doc__




