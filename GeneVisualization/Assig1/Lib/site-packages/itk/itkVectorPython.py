# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkVectorPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkVectorPython', [dirname(__file__)])
        except ImportError:
            import _itkVectorPython
            return _itkVectorPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkVectorPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkVectorPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkVectorPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import vnl_vector_refPython
import itkFixedArrayPython
class itkVectorD1(itkFixedArrayPython.itkFixedArrayD1):
    """Proxy of C++ itkVectorD1 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorD1_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorD') -> "void":
        """SetVnlVector(itkVectorD1 self, vnl_vectorD arg0)"""
        return _itkVectorPython.itkVectorD1_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorD":
        """
        GetVnlVector(itkVectorD1 self) -> vnl_vector_refD
        GetVnlVector(itkVectorD1 self) -> vnl_vectorD
        """
        return _itkVectorPython.itkVectorD1_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorD1

    def __init__(self, *args):
        """
        __init__(itkVectorD1 self) -> itkVectorD1
        __init__(itkVectorD1 self, itkVectorD1 arg0) -> itkVectorD1
        __init__(itkVectorD1 self, double const & r) -> itkVectorD1
        __init__(itkVectorD1 self, double const * r) -> itkVectorD1
        """
        _itkVectorPython.itkVectorD1_swiginit(self, _itkVectorPython.new_itkVectorD1(*args))

    def __iadd__(self, vec: 'itkVectorD1') -> "itkVectorD1 const &":
        """__iadd__(itkVectorD1 self, itkVectorD1 vec) -> itkVectorD1"""
        return _itkVectorPython.itkVectorD1___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorD1') -> "itkVectorD1 const &":
        """__isub__(itkVectorD1 self, itkVectorD1 vec) -> itkVectorD1"""
        return _itkVectorPython.itkVectorD1___isub__(self, vec)


    def __neg__(self) -> "itkVectorD1":
        """__neg__(itkVectorD1 self) -> itkVectorD1"""
        return _itkVectorPython.itkVectorD1___neg__(self)


    def __add__(self, vec: 'itkVectorD1') -> "itkVectorD1":
        """__add__(itkVectorD1 self, itkVectorD1 vec) -> itkVectorD1"""
        return _itkVectorPython.itkVectorD1___add__(self, vec)


    def __sub__(self, vec: 'itkVectorD1') -> "itkVectorD1":
        """__sub__(itkVectorD1 self, itkVectorD1 vec) -> itkVectorD1"""
        return _itkVectorPython.itkVectorD1___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorD1":
        """
        __mul__(itkVectorD1 self, itkVectorD1 vec) -> double
        __mul__(itkVectorD1 self, double const & value) -> itkVectorD1
        """
        return _itkVectorPython.itkVectorD1___mul__(self, *args)


    def __eq__(self, v: 'itkVectorD1') -> "bool":
        """__eq__(itkVectorD1 self, itkVectorD1 v) -> bool"""
        return _itkVectorPython.itkVectorD1___eq__(self, v)


    def __ne__(self, v: 'itkVectorD1') -> "bool":
        """__ne__(itkVectorD1 self, itkVectorD1 v) -> bool"""
        return _itkVectorPython.itkVectorD1___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorD1 self) -> double"""
        return _itkVectorPython.itkVectorD1_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorD1 self) -> double"""
        return _itkVectorPython.itkVectorD1_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorD1_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorD1 self) -> double"""
        return _itkVectorPython.itkVectorD1_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'double const &') -> "void":
        """SetNthComponent(itkVectorD1 self, int c, double const & v)"""
        return _itkVectorPython.itkVectorD1_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "double":
        """__getitem__(itkVectorD1 self, unsigned long d) -> double"""
        return _itkVectorPython.itkVectorD1___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'double') -> "void":
        """__setitem__(itkVectorD1 self, unsigned long d, double v)"""
        return _itkVectorPython.itkVectorD1___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorD1___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorD1 self) -> std::string"""
        return _itkVectorPython.itkVectorD1___repr__(self)

itkVectorD1.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorD1_SetVnlVector, None, itkVectorD1)
itkVectorD1.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorD1_GetVnlVector, None, itkVectorD1)
itkVectorD1.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorD1___iadd__, None, itkVectorD1)
itkVectorD1.__isub__ = new_instancemethod(_itkVectorPython.itkVectorD1___isub__, None, itkVectorD1)
itkVectorD1.__neg__ = new_instancemethod(_itkVectorPython.itkVectorD1___neg__, None, itkVectorD1)
itkVectorD1.__add__ = new_instancemethod(_itkVectorPython.itkVectorD1___add__, None, itkVectorD1)
itkVectorD1.__sub__ = new_instancemethod(_itkVectorPython.itkVectorD1___sub__, None, itkVectorD1)
itkVectorD1.__mul__ = new_instancemethod(_itkVectorPython.itkVectorD1___mul__, None, itkVectorD1)
itkVectorD1.__eq__ = new_instancemethod(_itkVectorPython.itkVectorD1___eq__, None, itkVectorD1)
itkVectorD1.__ne__ = new_instancemethod(_itkVectorPython.itkVectorD1___ne__, None, itkVectorD1)
itkVectorD1.GetNorm = new_instancemethod(_itkVectorPython.itkVectorD1_GetNorm, None, itkVectorD1)
itkVectorD1.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorD1_GetSquaredNorm, None, itkVectorD1)
itkVectorD1.Normalize = new_instancemethod(_itkVectorPython.itkVectorD1_Normalize, None, itkVectorD1)
itkVectorD1.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorD1_SetNthComponent, None, itkVectorD1)
itkVectorD1.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorD1___getitem__, None, itkVectorD1)
itkVectorD1.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorD1___setitem__, None, itkVectorD1)
itkVectorD1.__repr__ = new_instancemethod(_itkVectorPython.itkVectorD1___repr__, None, itkVectorD1)
itkVectorD1_swigregister = _itkVectorPython.itkVectorD1_swigregister
itkVectorD1_swigregister(itkVectorD1)

def itkVectorD1_GetVectorDimension() -> "unsigned int":
    """itkVectorD1_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorD1_GetVectorDimension()

def itkVectorD1_GetNumberOfComponents() -> "unsigned int":
    """itkVectorD1_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorD1_GetNumberOfComponents()

def itkVectorD1___len__() -> "unsigned int":
    """itkVectorD1___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorD1___len__()

class itkVectorD2(itkFixedArrayPython.itkFixedArrayD2):
    """Proxy of C++ itkVectorD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorD2_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorD') -> "void":
        """SetVnlVector(itkVectorD2 self, vnl_vectorD arg0)"""
        return _itkVectorPython.itkVectorD2_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorD":
        """
        GetVnlVector(itkVectorD2 self) -> vnl_vector_refD
        GetVnlVector(itkVectorD2 self) -> vnl_vectorD
        """
        return _itkVectorPython.itkVectorD2_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorD2

    def __init__(self, *args):
        """
        __init__(itkVectorD2 self) -> itkVectorD2
        __init__(itkVectorD2 self, itkVectorD2 arg0) -> itkVectorD2
        __init__(itkVectorD2 self, double const & r) -> itkVectorD2
        __init__(itkVectorD2 self, double const * r) -> itkVectorD2
        """
        _itkVectorPython.itkVectorD2_swiginit(self, _itkVectorPython.new_itkVectorD2(*args))

    def __iadd__(self, vec: 'itkVectorD2') -> "itkVectorD2 const &":
        """__iadd__(itkVectorD2 self, itkVectorD2 vec) -> itkVectorD2"""
        return _itkVectorPython.itkVectorD2___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorD2') -> "itkVectorD2 const &":
        """__isub__(itkVectorD2 self, itkVectorD2 vec) -> itkVectorD2"""
        return _itkVectorPython.itkVectorD2___isub__(self, vec)


    def __neg__(self) -> "itkVectorD2":
        """__neg__(itkVectorD2 self) -> itkVectorD2"""
        return _itkVectorPython.itkVectorD2___neg__(self)


    def __add__(self, vec: 'itkVectorD2') -> "itkVectorD2":
        """__add__(itkVectorD2 self, itkVectorD2 vec) -> itkVectorD2"""
        return _itkVectorPython.itkVectorD2___add__(self, vec)


    def __sub__(self, vec: 'itkVectorD2') -> "itkVectorD2":
        """__sub__(itkVectorD2 self, itkVectorD2 vec) -> itkVectorD2"""
        return _itkVectorPython.itkVectorD2___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorD2":
        """
        __mul__(itkVectorD2 self, itkVectorD2 vec) -> double
        __mul__(itkVectorD2 self, double const & value) -> itkVectorD2
        """
        return _itkVectorPython.itkVectorD2___mul__(self, *args)


    def __eq__(self, v: 'itkVectorD2') -> "bool":
        """__eq__(itkVectorD2 self, itkVectorD2 v) -> bool"""
        return _itkVectorPython.itkVectorD2___eq__(self, v)


    def __ne__(self, v: 'itkVectorD2') -> "bool":
        """__ne__(itkVectorD2 self, itkVectorD2 v) -> bool"""
        return _itkVectorPython.itkVectorD2___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorD2 self) -> double"""
        return _itkVectorPython.itkVectorD2_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorD2 self) -> double"""
        return _itkVectorPython.itkVectorD2_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorD2_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorD2 self) -> double"""
        return _itkVectorPython.itkVectorD2_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'double const &') -> "void":
        """SetNthComponent(itkVectorD2 self, int c, double const & v)"""
        return _itkVectorPython.itkVectorD2_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "double":
        """__getitem__(itkVectorD2 self, unsigned long d) -> double"""
        return _itkVectorPython.itkVectorD2___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'double') -> "void":
        """__setitem__(itkVectorD2 self, unsigned long d, double v)"""
        return _itkVectorPython.itkVectorD2___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorD2___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorD2 self) -> std::string"""
        return _itkVectorPython.itkVectorD2___repr__(self)

itkVectorD2.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorD2_SetVnlVector, None, itkVectorD2)
itkVectorD2.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorD2_GetVnlVector, None, itkVectorD2)
itkVectorD2.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorD2___iadd__, None, itkVectorD2)
itkVectorD2.__isub__ = new_instancemethod(_itkVectorPython.itkVectorD2___isub__, None, itkVectorD2)
itkVectorD2.__neg__ = new_instancemethod(_itkVectorPython.itkVectorD2___neg__, None, itkVectorD2)
itkVectorD2.__add__ = new_instancemethod(_itkVectorPython.itkVectorD2___add__, None, itkVectorD2)
itkVectorD2.__sub__ = new_instancemethod(_itkVectorPython.itkVectorD2___sub__, None, itkVectorD2)
itkVectorD2.__mul__ = new_instancemethod(_itkVectorPython.itkVectorD2___mul__, None, itkVectorD2)
itkVectorD2.__eq__ = new_instancemethod(_itkVectorPython.itkVectorD2___eq__, None, itkVectorD2)
itkVectorD2.__ne__ = new_instancemethod(_itkVectorPython.itkVectorD2___ne__, None, itkVectorD2)
itkVectorD2.GetNorm = new_instancemethod(_itkVectorPython.itkVectorD2_GetNorm, None, itkVectorD2)
itkVectorD2.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorD2_GetSquaredNorm, None, itkVectorD2)
itkVectorD2.Normalize = new_instancemethod(_itkVectorPython.itkVectorD2_Normalize, None, itkVectorD2)
itkVectorD2.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorD2_SetNthComponent, None, itkVectorD2)
itkVectorD2.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorD2___getitem__, None, itkVectorD2)
itkVectorD2.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorD2___setitem__, None, itkVectorD2)
itkVectorD2.__repr__ = new_instancemethod(_itkVectorPython.itkVectorD2___repr__, None, itkVectorD2)
itkVectorD2_swigregister = _itkVectorPython.itkVectorD2_swigregister
itkVectorD2_swigregister(itkVectorD2)

def itkVectorD2_GetVectorDimension() -> "unsigned int":
    """itkVectorD2_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorD2_GetVectorDimension()

def itkVectorD2_GetNumberOfComponents() -> "unsigned int":
    """itkVectorD2_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorD2_GetNumberOfComponents()

def itkVectorD2___len__() -> "unsigned int":
    """itkVectorD2___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorD2___len__()

class itkVectorD3(itkFixedArrayPython.itkFixedArrayD3):
    """Proxy of C++ itkVectorD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorD3_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorD') -> "void":
        """SetVnlVector(itkVectorD3 self, vnl_vectorD arg0)"""
        return _itkVectorPython.itkVectorD3_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorD":
        """
        GetVnlVector(itkVectorD3 self) -> vnl_vector_refD
        GetVnlVector(itkVectorD3 self) -> vnl_vectorD
        """
        return _itkVectorPython.itkVectorD3_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorD3

    def __init__(self, *args):
        """
        __init__(itkVectorD3 self) -> itkVectorD3
        __init__(itkVectorD3 self, itkVectorD3 arg0) -> itkVectorD3
        __init__(itkVectorD3 self, double const & r) -> itkVectorD3
        __init__(itkVectorD3 self, double const * r) -> itkVectorD3
        """
        _itkVectorPython.itkVectorD3_swiginit(self, _itkVectorPython.new_itkVectorD3(*args))

    def __iadd__(self, vec: 'itkVectorD3') -> "itkVectorD3 const &":
        """__iadd__(itkVectorD3 self, itkVectorD3 vec) -> itkVectorD3"""
        return _itkVectorPython.itkVectorD3___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorD3') -> "itkVectorD3 const &":
        """__isub__(itkVectorD3 self, itkVectorD3 vec) -> itkVectorD3"""
        return _itkVectorPython.itkVectorD3___isub__(self, vec)


    def __neg__(self) -> "itkVectorD3":
        """__neg__(itkVectorD3 self) -> itkVectorD3"""
        return _itkVectorPython.itkVectorD3___neg__(self)


    def __add__(self, vec: 'itkVectorD3') -> "itkVectorD3":
        """__add__(itkVectorD3 self, itkVectorD3 vec) -> itkVectorD3"""
        return _itkVectorPython.itkVectorD3___add__(self, vec)


    def __sub__(self, vec: 'itkVectorD3') -> "itkVectorD3":
        """__sub__(itkVectorD3 self, itkVectorD3 vec) -> itkVectorD3"""
        return _itkVectorPython.itkVectorD3___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorD3":
        """
        __mul__(itkVectorD3 self, itkVectorD3 vec) -> double
        __mul__(itkVectorD3 self, double const & value) -> itkVectorD3
        """
        return _itkVectorPython.itkVectorD3___mul__(self, *args)


    def __eq__(self, v: 'itkVectorD3') -> "bool":
        """__eq__(itkVectorD3 self, itkVectorD3 v) -> bool"""
        return _itkVectorPython.itkVectorD3___eq__(self, v)


    def __ne__(self, v: 'itkVectorD3') -> "bool":
        """__ne__(itkVectorD3 self, itkVectorD3 v) -> bool"""
        return _itkVectorPython.itkVectorD3___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorD3 self) -> double"""
        return _itkVectorPython.itkVectorD3_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorD3 self) -> double"""
        return _itkVectorPython.itkVectorD3_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorD3_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorD3 self) -> double"""
        return _itkVectorPython.itkVectorD3_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'double const &') -> "void":
        """SetNthComponent(itkVectorD3 self, int c, double const & v)"""
        return _itkVectorPython.itkVectorD3_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "double":
        """__getitem__(itkVectorD3 self, unsigned long d) -> double"""
        return _itkVectorPython.itkVectorD3___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'double') -> "void":
        """__setitem__(itkVectorD3 self, unsigned long d, double v)"""
        return _itkVectorPython.itkVectorD3___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorD3___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorD3 self) -> std::string"""
        return _itkVectorPython.itkVectorD3___repr__(self)

itkVectorD3.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorD3_SetVnlVector, None, itkVectorD3)
itkVectorD3.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorD3_GetVnlVector, None, itkVectorD3)
itkVectorD3.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorD3___iadd__, None, itkVectorD3)
itkVectorD3.__isub__ = new_instancemethod(_itkVectorPython.itkVectorD3___isub__, None, itkVectorD3)
itkVectorD3.__neg__ = new_instancemethod(_itkVectorPython.itkVectorD3___neg__, None, itkVectorD3)
itkVectorD3.__add__ = new_instancemethod(_itkVectorPython.itkVectorD3___add__, None, itkVectorD3)
itkVectorD3.__sub__ = new_instancemethod(_itkVectorPython.itkVectorD3___sub__, None, itkVectorD3)
itkVectorD3.__mul__ = new_instancemethod(_itkVectorPython.itkVectorD3___mul__, None, itkVectorD3)
itkVectorD3.__eq__ = new_instancemethod(_itkVectorPython.itkVectorD3___eq__, None, itkVectorD3)
itkVectorD3.__ne__ = new_instancemethod(_itkVectorPython.itkVectorD3___ne__, None, itkVectorD3)
itkVectorD3.GetNorm = new_instancemethod(_itkVectorPython.itkVectorD3_GetNorm, None, itkVectorD3)
itkVectorD3.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorD3_GetSquaredNorm, None, itkVectorD3)
itkVectorD3.Normalize = new_instancemethod(_itkVectorPython.itkVectorD3_Normalize, None, itkVectorD3)
itkVectorD3.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorD3_SetNthComponent, None, itkVectorD3)
itkVectorD3.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorD3___getitem__, None, itkVectorD3)
itkVectorD3.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorD3___setitem__, None, itkVectorD3)
itkVectorD3.__repr__ = new_instancemethod(_itkVectorPython.itkVectorD3___repr__, None, itkVectorD3)
itkVectorD3_swigregister = _itkVectorPython.itkVectorD3_swigregister
itkVectorD3_swigregister(itkVectorD3)

def itkVectorD3_GetVectorDimension() -> "unsigned int":
    """itkVectorD3_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorD3_GetVectorDimension()

def itkVectorD3_GetNumberOfComponents() -> "unsigned int":
    """itkVectorD3_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorD3_GetNumberOfComponents()

def itkVectorD3___len__() -> "unsigned int":
    """itkVectorD3___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorD3___len__()

class itkVectorD4(itkFixedArrayPython.itkFixedArrayD4):
    """Proxy of C++ itkVectorD4 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorD4_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorD') -> "void":
        """SetVnlVector(itkVectorD4 self, vnl_vectorD arg0)"""
        return _itkVectorPython.itkVectorD4_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorD":
        """
        GetVnlVector(itkVectorD4 self) -> vnl_vector_refD
        GetVnlVector(itkVectorD4 self) -> vnl_vectorD
        """
        return _itkVectorPython.itkVectorD4_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorD4

    def __init__(self, *args):
        """
        __init__(itkVectorD4 self) -> itkVectorD4
        __init__(itkVectorD4 self, itkVectorD4 arg0) -> itkVectorD4
        __init__(itkVectorD4 self, double const & r) -> itkVectorD4
        __init__(itkVectorD4 self, double const * r) -> itkVectorD4
        """
        _itkVectorPython.itkVectorD4_swiginit(self, _itkVectorPython.new_itkVectorD4(*args))

    def __iadd__(self, vec: 'itkVectorD4') -> "itkVectorD4 const &":
        """__iadd__(itkVectorD4 self, itkVectorD4 vec) -> itkVectorD4"""
        return _itkVectorPython.itkVectorD4___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorD4') -> "itkVectorD4 const &":
        """__isub__(itkVectorD4 self, itkVectorD4 vec) -> itkVectorD4"""
        return _itkVectorPython.itkVectorD4___isub__(self, vec)


    def __neg__(self) -> "itkVectorD4":
        """__neg__(itkVectorD4 self) -> itkVectorD4"""
        return _itkVectorPython.itkVectorD4___neg__(self)


    def __add__(self, vec: 'itkVectorD4') -> "itkVectorD4":
        """__add__(itkVectorD4 self, itkVectorD4 vec) -> itkVectorD4"""
        return _itkVectorPython.itkVectorD4___add__(self, vec)


    def __sub__(self, vec: 'itkVectorD4') -> "itkVectorD4":
        """__sub__(itkVectorD4 self, itkVectorD4 vec) -> itkVectorD4"""
        return _itkVectorPython.itkVectorD4___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorD4":
        """
        __mul__(itkVectorD4 self, itkVectorD4 vec) -> double
        __mul__(itkVectorD4 self, double const & value) -> itkVectorD4
        """
        return _itkVectorPython.itkVectorD4___mul__(self, *args)


    def __eq__(self, v: 'itkVectorD4') -> "bool":
        """__eq__(itkVectorD4 self, itkVectorD4 v) -> bool"""
        return _itkVectorPython.itkVectorD4___eq__(self, v)


    def __ne__(self, v: 'itkVectorD4') -> "bool":
        """__ne__(itkVectorD4 self, itkVectorD4 v) -> bool"""
        return _itkVectorPython.itkVectorD4___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorD4 self) -> double"""
        return _itkVectorPython.itkVectorD4_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorD4 self) -> double"""
        return _itkVectorPython.itkVectorD4_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorD4_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorD4 self) -> double"""
        return _itkVectorPython.itkVectorD4_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'double const &') -> "void":
        """SetNthComponent(itkVectorD4 self, int c, double const & v)"""
        return _itkVectorPython.itkVectorD4_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "double":
        """__getitem__(itkVectorD4 self, unsigned long d) -> double"""
        return _itkVectorPython.itkVectorD4___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'double') -> "void":
        """__setitem__(itkVectorD4 self, unsigned long d, double v)"""
        return _itkVectorPython.itkVectorD4___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorD4___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorD4 self) -> std::string"""
        return _itkVectorPython.itkVectorD4___repr__(self)

itkVectorD4.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorD4_SetVnlVector, None, itkVectorD4)
itkVectorD4.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorD4_GetVnlVector, None, itkVectorD4)
itkVectorD4.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorD4___iadd__, None, itkVectorD4)
itkVectorD4.__isub__ = new_instancemethod(_itkVectorPython.itkVectorD4___isub__, None, itkVectorD4)
itkVectorD4.__neg__ = new_instancemethod(_itkVectorPython.itkVectorD4___neg__, None, itkVectorD4)
itkVectorD4.__add__ = new_instancemethod(_itkVectorPython.itkVectorD4___add__, None, itkVectorD4)
itkVectorD4.__sub__ = new_instancemethod(_itkVectorPython.itkVectorD4___sub__, None, itkVectorD4)
itkVectorD4.__mul__ = new_instancemethod(_itkVectorPython.itkVectorD4___mul__, None, itkVectorD4)
itkVectorD4.__eq__ = new_instancemethod(_itkVectorPython.itkVectorD4___eq__, None, itkVectorD4)
itkVectorD4.__ne__ = new_instancemethod(_itkVectorPython.itkVectorD4___ne__, None, itkVectorD4)
itkVectorD4.GetNorm = new_instancemethod(_itkVectorPython.itkVectorD4_GetNorm, None, itkVectorD4)
itkVectorD4.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorD4_GetSquaredNorm, None, itkVectorD4)
itkVectorD4.Normalize = new_instancemethod(_itkVectorPython.itkVectorD4_Normalize, None, itkVectorD4)
itkVectorD4.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorD4_SetNthComponent, None, itkVectorD4)
itkVectorD4.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorD4___getitem__, None, itkVectorD4)
itkVectorD4.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorD4___setitem__, None, itkVectorD4)
itkVectorD4.__repr__ = new_instancemethod(_itkVectorPython.itkVectorD4___repr__, None, itkVectorD4)
itkVectorD4_swigregister = _itkVectorPython.itkVectorD4_swigregister
itkVectorD4_swigregister(itkVectorD4)

def itkVectorD4_GetVectorDimension() -> "unsigned int":
    """itkVectorD4_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorD4_GetVectorDimension()

def itkVectorD4_GetNumberOfComponents() -> "unsigned int":
    """itkVectorD4_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorD4_GetNumberOfComponents()

def itkVectorD4___len__() -> "unsigned int":
    """itkVectorD4___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorD4___len__()

class itkVectorD5(itkFixedArrayPython.itkFixedArrayD5):
    """Proxy of C++ itkVectorD5 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorD5_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorD') -> "void":
        """SetVnlVector(itkVectorD5 self, vnl_vectorD arg0)"""
        return _itkVectorPython.itkVectorD5_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorD":
        """
        GetVnlVector(itkVectorD5 self) -> vnl_vector_refD
        GetVnlVector(itkVectorD5 self) -> vnl_vectorD
        """
        return _itkVectorPython.itkVectorD5_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorD5

    def __init__(self, *args):
        """
        __init__(itkVectorD5 self) -> itkVectorD5
        __init__(itkVectorD5 self, itkVectorD5 arg0) -> itkVectorD5
        __init__(itkVectorD5 self, double const & r) -> itkVectorD5
        __init__(itkVectorD5 self, double const * r) -> itkVectorD5
        """
        _itkVectorPython.itkVectorD5_swiginit(self, _itkVectorPython.new_itkVectorD5(*args))

    def __iadd__(self, vec: 'itkVectorD5') -> "itkVectorD5 const &":
        """__iadd__(itkVectorD5 self, itkVectorD5 vec) -> itkVectorD5"""
        return _itkVectorPython.itkVectorD5___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorD5') -> "itkVectorD5 const &":
        """__isub__(itkVectorD5 self, itkVectorD5 vec) -> itkVectorD5"""
        return _itkVectorPython.itkVectorD5___isub__(self, vec)


    def __neg__(self) -> "itkVectorD5":
        """__neg__(itkVectorD5 self) -> itkVectorD5"""
        return _itkVectorPython.itkVectorD5___neg__(self)


    def __add__(self, vec: 'itkVectorD5') -> "itkVectorD5":
        """__add__(itkVectorD5 self, itkVectorD5 vec) -> itkVectorD5"""
        return _itkVectorPython.itkVectorD5___add__(self, vec)


    def __sub__(self, vec: 'itkVectorD5') -> "itkVectorD5":
        """__sub__(itkVectorD5 self, itkVectorD5 vec) -> itkVectorD5"""
        return _itkVectorPython.itkVectorD5___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorD5":
        """
        __mul__(itkVectorD5 self, itkVectorD5 vec) -> double
        __mul__(itkVectorD5 self, double const & value) -> itkVectorD5
        """
        return _itkVectorPython.itkVectorD5___mul__(self, *args)


    def __eq__(self, v: 'itkVectorD5') -> "bool":
        """__eq__(itkVectorD5 self, itkVectorD5 v) -> bool"""
        return _itkVectorPython.itkVectorD5___eq__(self, v)


    def __ne__(self, v: 'itkVectorD5') -> "bool":
        """__ne__(itkVectorD5 self, itkVectorD5 v) -> bool"""
        return _itkVectorPython.itkVectorD5___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorD5 self) -> double"""
        return _itkVectorPython.itkVectorD5_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorD5 self) -> double"""
        return _itkVectorPython.itkVectorD5_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorD5_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorD5 self) -> double"""
        return _itkVectorPython.itkVectorD5_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'double const &') -> "void":
        """SetNthComponent(itkVectorD5 self, int c, double const & v)"""
        return _itkVectorPython.itkVectorD5_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "double":
        """__getitem__(itkVectorD5 self, unsigned long d) -> double"""
        return _itkVectorPython.itkVectorD5___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'double') -> "void":
        """__setitem__(itkVectorD5 self, unsigned long d, double v)"""
        return _itkVectorPython.itkVectorD5___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorD5___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorD5 self) -> std::string"""
        return _itkVectorPython.itkVectorD5___repr__(self)

itkVectorD5.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorD5_SetVnlVector, None, itkVectorD5)
itkVectorD5.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorD5_GetVnlVector, None, itkVectorD5)
itkVectorD5.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorD5___iadd__, None, itkVectorD5)
itkVectorD5.__isub__ = new_instancemethod(_itkVectorPython.itkVectorD5___isub__, None, itkVectorD5)
itkVectorD5.__neg__ = new_instancemethod(_itkVectorPython.itkVectorD5___neg__, None, itkVectorD5)
itkVectorD5.__add__ = new_instancemethod(_itkVectorPython.itkVectorD5___add__, None, itkVectorD5)
itkVectorD5.__sub__ = new_instancemethod(_itkVectorPython.itkVectorD5___sub__, None, itkVectorD5)
itkVectorD5.__mul__ = new_instancemethod(_itkVectorPython.itkVectorD5___mul__, None, itkVectorD5)
itkVectorD5.__eq__ = new_instancemethod(_itkVectorPython.itkVectorD5___eq__, None, itkVectorD5)
itkVectorD5.__ne__ = new_instancemethod(_itkVectorPython.itkVectorD5___ne__, None, itkVectorD5)
itkVectorD5.GetNorm = new_instancemethod(_itkVectorPython.itkVectorD5_GetNorm, None, itkVectorD5)
itkVectorD5.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorD5_GetSquaredNorm, None, itkVectorD5)
itkVectorD5.Normalize = new_instancemethod(_itkVectorPython.itkVectorD5_Normalize, None, itkVectorD5)
itkVectorD5.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorD5_SetNthComponent, None, itkVectorD5)
itkVectorD5.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorD5___getitem__, None, itkVectorD5)
itkVectorD5.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorD5___setitem__, None, itkVectorD5)
itkVectorD5.__repr__ = new_instancemethod(_itkVectorPython.itkVectorD5___repr__, None, itkVectorD5)
itkVectorD5_swigregister = _itkVectorPython.itkVectorD5_swigregister
itkVectorD5_swigregister(itkVectorD5)

def itkVectorD5_GetVectorDimension() -> "unsigned int":
    """itkVectorD5_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorD5_GetVectorDimension()

def itkVectorD5_GetNumberOfComponents() -> "unsigned int":
    """itkVectorD5_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorD5_GetNumberOfComponents()

def itkVectorD5___len__() -> "unsigned int":
    """itkVectorD5___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorD5___len__()

class itkVectorD6(itkFixedArrayPython.itkFixedArrayD6):
    """Proxy of C++ itkVectorD6 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorD6_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorD') -> "void":
        """SetVnlVector(itkVectorD6 self, vnl_vectorD arg0)"""
        return _itkVectorPython.itkVectorD6_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorD":
        """
        GetVnlVector(itkVectorD6 self) -> vnl_vector_refD
        GetVnlVector(itkVectorD6 self) -> vnl_vectorD
        """
        return _itkVectorPython.itkVectorD6_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorD6

    def __init__(self, *args):
        """
        __init__(itkVectorD6 self) -> itkVectorD6
        __init__(itkVectorD6 self, itkVectorD6 arg0) -> itkVectorD6
        __init__(itkVectorD6 self, double const & r) -> itkVectorD6
        __init__(itkVectorD6 self, double const * r) -> itkVectorD6
        """
        _itkVectorPython.itkVectorD6_swiginit(self, _itkVectorPython.new_itkVectorD6(*args))

    def __iadd__(self, vec: 'itkVectorD6') -> "itkVectorD6 const &":
        """__iadd__(itkVectorD6 self, itkVectorD6 vec) -> itkVectorD6"""
        return _itkVectorPython.itkVectorD6___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorD6') -> "itkVectorD6 const &":
        """__isub__(itkVectorD6 self, itkVectorD6 vec) -> itkVectorD6"""
        return _itkVectorPython.itkVectorD6___isub__(self, vec)


    def __neg__(self) -> "itkVectorD6":
        """__neg__(itkVectorD6 self) -> itkVectorD6"""
        return _itkVectorPython.itkVectorD6___neg__(self)


    def __add__(self, vec: 'itkVectorD6') -> "itkVectorD6":
        """__add__(itkVectorD6 self, itkVectorD6 vec) -> itkVectorD6"""
        return _itkVectorPython.itkVectorD6___add__(self, vec)


    def __sub__(self, vec: 'itkVectorD6') -> "itkVectorD6":
        """__sub__(itkVectorD6 self, itkVectorD6 vec) -> itkVectorD6"""
        return _itkVectorPython.itkVectorD6___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorD6":
        """
        __mul__(itkVectorD6 self, itkVectorD6 vec) -> double
        __mul__(itkVectorD6 self, double const & value) -> itkVectorD6
        """
        return _itkVectorPython.itkVectorD6___mul__(self, *args)


    def __eq__(self, v: 'itkVectorD6') -> "bool":
        """__eq__(itkVectorD6 self, itkVectorD6 v) -> bool"""
        return _itkVectorPython.itkVectorD6___eq__(self, v)


    def __ne__(self, v: 'itkVectorD6') -> "bool":
        """__ne__(itkVectorD6 self, itkVectorD6 v) -> bool"""
        return _itkVectorPython.itkVectorD6___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorD6 self) -> double"""
        return _itkVectorPython.itkVectorD6_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorD6 self) -> double"""
        return _itkVectorPython.itkVectorD6_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorD6_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorD6 self) -> double"""
        return _itkVectorPython.itkVectorD6_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'double const &') -> "void":
        """SetNthComponent(itkVectorD6 self, int c, double const & v)"""
        return _itkVectorPython.itkVectorD6_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "double":
        """__getitem__(itkVectorD6 self, unsigned long d) -> double"""
        return _itkVectorPython.itkVectorD6___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'double') -> "void":
        """__setitem__(itkVectorD6 self, unsigned long d, double v)"""
        return _itkVectorPython.itkVectorD6___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorD6___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorD6 self) -> std::string"""
        return _itkVectorPython.itkVectorD6___repr__(self)

itkVectorD6.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorD6_SetVnlVector, None, itkVectorD6)
itkVectorD6.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorD6_GetVnlVector, None, itkVectorD6)
itkVectorD6.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorD6___iadd__, None, itkVectorD6)
itkVectorD6.__isub__ = new_instancemethod(_itkVectorPython.itkVectorD6___isub__, None, itkVectorD6)
itkVectorD6.__neg__ = new_instancemethod(_itkVectorPython.itkVectorD6___neg__, None, itkVectorD6)
itkVectorD6.__add__ = new_instancemethod(_itkVectorPython.itkVectorD6___add__, None, itkVectorD6)
itkVectorD6.__sub__ = new_instancemethod(_itkVectorPython.itkVectorD6___sub__, None, itkVectorD6)
itkVectorD6.__mul__ = new_instancemethod(_itkVectorPython.itkVectorD6___mul__, None, itkVectorD6)
itkVectorD6.__eq__ = new_instancemethod(_itkVectorPython.itkVectorD6___eq__, None, itkVectorD6)
itkVectorD6.__ne__ = new_instancemethod(_itkVectorPython.itkVectorD6___ne__, None, itkVectorD6)
itkVectorD6.GetNorm = new_instancemethod(_itkVectorPython.itkVectorD6_GetNorm, None, itkVectorD6)
itkVectorD6.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorD6_GetSquaredNorm, None, itkVectorD6)
itkVectorD6.Normalize = new_instancemethod(_itkVectorPython.itkVectorD6_Normalize, None, itkVectorD6)
itkVectorD6.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorD6_SetNthComponent, None, itkVectorD6)
itkVectorD6.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorD6___getitem__, None, itkVectorD6)
itkVectorD6.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorD6___setitem__, None, itkVectorD6)
itkVectorD6.__repr__ = new_instancemethod(_itkVectorPython.itkVectorD6___repr__, None, itkVectorD6)
itkVectorD6_swigregister = _itkVectorPython.itkVectorD6_swigregister
itkVectorD6_swigregister(itkVectorD6)

def itkVectorD6_GetVectorDimension() -> "unsigned int":
    """itkVectorD6_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorD6_GetVectorDimension()

def itkVectorD6_GetNumberOfComponents() -> "unsigned int":
    """itkVectorD6_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorD6_GetNumberOfComponents()

def itkVectorD6___len__() -> "unsigned int":
    """itkVectorD6___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorD6___len__()

class itkVectorF1(itkFixedArrayPython.itkFixedArrayF1):
    """Proxy of C++ itkVectorF1 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorF1_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorF') -> "void":
        """SetVnlVector(itkVectorF1 self, vnl_vectorF arg0)"""
        return _itkVectorPython.itkVectorF1_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorF":
        """
        GetVnlVector(itkVectorF1 self) -> vnl_vector_refF
        GetVnlVector(itkVectorF1 self) -> vnl_vectorF
        """
        return _itkVectorPython.itkVectorF1_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorF1

    def __init__(self, *args):
        """
        __init__(itkVectorF1 self) -> itkVectorF1
        __init__(itkVectorF1 self, itkVectorF1 arg0) -> itkVectorF1
        __init__(itkVectorF1 self, float const & r) -> itkVectorF1
        __init__(itkVectorF1 self, float const * r) -> itkVectorF1
        """
        _itkVectorPython.itkVectorF1_swiginit(self, _itkVectorPython.new_itkVectorF1(*args))

    def __iadd__(self, vec: 'itkVectorF1') -> "itkVectorF1 const &":
        """__iadd__(itkVectorF1 self, itkVectorF1 vec) -> itkVectorF1"""
        return _itkVectorPython.itkVectorF1___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorF1') -> "itkVectorF1 const &":
        """__isub__(itkVectorF1 self, itkVectorF1 vec) -> itkVectorF1"""
        return _itkVectorPython.itkVectorF1___isub__(self, vec)


    def __neg__(self) -> "itkVectorF1":
        """__neg__(itkVectorF1 self) -> itkVectorF1"""
        return _itkVectorPython.itkVectorF1___neg__(self)


    def __add__(self, vec: 'itkVectorF1') -> "itkVectorF1":
        """__add__(itkVectorF1 self, itkVectorF1 vec) -> itkVectorF1"""
        return _itkVectorPython.itkVectorF1___add__(self, vec)


    def __sub__(self, vec: 'itkVectorF1') -> "itkVectorF1":
        """__sub__(itkVectorF1 self, itkVectorF1 vec) -> itkVectorF1"""
        return _itkVectorPython.itkVectorF1___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorF1":
        """
        __mul__(itkVectorF1 self, itkVectorF1 vec) -> float
        __mul__(itkVectorF1 self, float const & value) -> itkVectorF1
        """
        return _itkVectorPython.itkVectorF1___mul__(self, *args)


    def __eq__(self, v: 'itkVectorF1') -> "bool":
        """__eq__(itkVectorF1 self, itkVectorF1 v) -> bool"""
        return _itkVectorPython.itkVectorF1___eq__(self, v)


    def __ne__(self, v: 'itkVectorF1') -> "bool":
        """__ne__(itkVectorF1 self, itkVectorF1 v) -> bool"""
        return _itkVectorPython.itkVectorF1___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorF1 self) -> double"""
        return _itkVectorPython.itkVectorF1_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorF1 self) -> double"""
        return _itkVectorPython.itkVectorF1_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorF1_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorF1 self) -> double"""
        return _itkVectorPython.itkVectorF1_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'float const &') -> "void":
        """SetNthComponent(itkVectorF1 self, int c, float const & v)"""
        return _itkVectorPython.itkVectorF1_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "float":
        """__getitem__(itkVectorF1 self, unsigned long d) -> float"""
        return _itkVectorPython.itkVectorF1___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'float') -> "void":
        """__setitem__(itkVectorF1 self, unsigned long d, float v)"""
        return _itkVectorPython.itkVectorF1___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorF1___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorF1 self) -> std::string"""
        return _itkVectorPython.itkVectorF1___repr__(self)

itkVectorF1.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorF1_SetVnlVector, None, itkVectorF1)
itkVectorF1.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorF1_GetVnlVector, None, itkVectorF1)
itkVectorF1.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorF1___iadd__, None, itkVectorF1)
itkVectorF1.__isub__ = new_instancemethod(_itkVectorPython.itkVectorF1___isub__, None, itkVectorF1)
itkVectorF1.__neg__ = new_instancemethod(_itkVectorPython.itkVectorF1___neg__, None, itkVectorF1)
itkVectorF1.__add__ = new_instancemethod(_itkVectorPython.itkVectorF1___add__, None, itkVectorF1)
itkVectorF1.__sub__ = new_instancemethod(_itkVectorPython.itkVectorF1___sub__, None, itkVectorF1)
itkVectorF1.__mul__ = new_instancemethod(_itkVectorPython.itkVectorF1___mul__, None, itkVectorF1)
itkVectorF1.__eq__ = new_instancemethod(_itkVectorPython.itkVectorF1___eq__, None, itkVectorF1)
itkVectorF1.__ne__ = new_instancemethod(_itkVectorPython.itkVectorF1___ne__, None, itkVectorF1)
itkVectorF1.GetNorm = new_instancemethod(_itkVectorPython.itkVectorF1_GetNorm, None, itkVectorF1)
itkVectorF1.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorF1_GetSquaredNorm, None, itkVectorF1)
itkVectorF1.Normalize = new_instancemethod(_itkVectorPython.itkVectorF1_Normalize, None, itkVectorF1)
itkVectorF1.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorF1_SetNthComponent, None, itkVectorF1)
itkVectorF1.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorF1___getitem__, None, itkVectorF1)
itkVectorF1.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorF1___setitem__, None, itkVectorF1)
itkVectorF1.__repr__ = new_instancemethod(_itkVectorPython.itkVectorF1___repr__, None, itkVectorF1)
itkVectorF1_swigregister = _itkVectorPython.itkVectorF1_swigregister
itkVectorF1_swigregister(itkVectorF1)

def itkVectorF1_GetVectorDimension() -> "unsigned int":
    """itkVectorF1_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorF1_GetVectorDimension()

def itkVectorF1_GetNumberOfComponents() -> "unsigned int":
    """itkVectorF1_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorF1_GetNumberOfComponents()

def itkVectorF1___len__() -> "unsigned int":
    """itkVectorF1___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorF1___len__()

class itkVectorF2(itkFixedArrayPython.itkFixedArrayF2):
    """Proxy of C++ itkVectorF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorF2_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorF') -> "void":
        """SetVnlVector(itkVectorF2 self, vnl_vectorF arg0)"""
        return _itkVectorPython.itkVectorF2_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorF":
        """
        GetVnlVector(itkVectorF2 self) -> vnl_vector_refF
        GetVnlVector(itkVectorF2 self) -> vnl_vectorF
        """
        return _itkVectorPython.itkVectorF2_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorF2

    def __init__(self, *args):
        """
        __init__(itkVectorF2 self) -> itkVectorF2
        __init__(itkVectorF2 self, itkVectorF2 arg0) -> itkVectorF2
        __init__(itkVectorF2 self, float const & r) -> itkVectorF2
        __init__(itkVectorF2 self, float const * r) -> itkVectorF2
        """
        _itkVectorPython.itkVectorF2_swiginit(self, _itkVectorPython.new_itkVectorF2(*args))

    def __iadd__(self, vec: 'itkVectorF2') -> "itkVectorF2 const &":
        """__iadd__(itkVectorF2 self, itkVectorF2 vec) -> itkVectorF2"""
        return _itkVectorPython.itkVectorF2___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorF2') -> "itkVectorF2 const &":
        """__isub__(itkVectorF2 self, itkVectorF2 vec) -> itkVectorF2"""
        return _itkVectorPython.itkVectorF2___isub__(self, vec)


    def __neg__(self) -> "itkVectorF2":
        """__neg__(itkVectorF2 self) -> itkVectorF2"""
        return _itkVectorPython.itkVectorF2___neg__(self)


    def __add__(self, vec: 'itkVectorF2') -> "itkVectorF2":
        """__add__(itkVectorF2 self, itkVectorF2 vec) -> itkVectorF2"""
        return _itkVectorPython.itkVectorF2___add__(self, vec)


    def __sub__(self, vec: 'itkVectorF2') -> "itkVectorF2":
        """__sub__(itkVectorF2 self, itkVectorF2 vec) -> itkVectorF2"""
        return _itkVectorPython.itkVectorF2___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorF2":
        """
        __mul__(itkVectorF2 self, itkVectorF2 vec) -> float
        __mul__(itkVectorF2 self, float const & value) -> itkVectorF2
        """
        return _itkVectorPython.itkVectorF2___mul__(self, *args)


    def __eq__(self, v: 'itkVectorF2') -> "bool":
        """__eq__(itkVectorF2 self, itkVectorF2 v) -> bool"""
        return _itkVectorPython.itkVectorF2___eq__(self, v)


    def __ne__(self, v: 'itkVectorF2') -> "bool":
        """__ne__(itkVectorF2 self, itkVectorF2 v) -> bool"""
        return _itkVectorPython.itkVectorF2___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorF2 self) -> double"""
        return _itkVectorPython.itkVectorF2_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorF2 self) -> double"""
        return _itkVectorPython.itkVectorF2_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorF2_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorF2 self) -> double"""
        return _itkVectorPython.itkVectorF2_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'float const &') -> "void":
        """SetNthComponent(itkVectorF2 self, int c, float const & v)"""
        return _itkVectorPython.itkVectorF2_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "float":
        """__getitem__(itkVectorF2 self, unsigned long d) -> float"""
        return _itkVectorPython.itkVectorF2___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'float') -> "void":
        """__setitem__(itkVectorF2 self, unsigned long d, float v)"""
        return _itkVectorPython.itkVectorF2___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorF2___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorF2 self) -> std::string"""
        return _itkVectorPython.itkVectorF2___repr__(self)

itkVectorF2.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorF2_SetVnlVector, None, itkVectorF2)
itkVectorF2.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorF2_GetVnlVector, None, itkVectorF2)
itkVectorF2.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorF2___iadd__, None, itkVectorF2)
itkVectorF2.__isub__ = new_instancemethod(_itkVectorPython.itkVectorF2___isub__, None, itkVectorF2)
itkVectorF2.__neg__ = new_instancemethod(_itkVectorPython.itkVectorF2___neg__, None, itkVectorF2)
itkVectorF2.__add__ = new_instancemethod(_itkVectorPython.itkVectorF2___add__, None, itkVectorF2)
itkVectorF2.__sub__ = new_instancemethod(_itkVectorPython.itkVectorF2___sub__, None, itkVectorF2)
itkVectorF2.__mul__ = new_instancemethod(_itkVectorPython.itkVectorF2___mul__, None, itkVectorF2)
itkVectorF2.__eq__ = new_instancemethod(_itkVectorPython.itkVectorF2___eq__, None, itkVectorF2)
itkVectorF2.__ne__ = new_instancemethod(_itkVectorPython.itkVectorF2___ne__, None, itkVectorF2)
itkVectorF2.GetNorm = new_instancemethod(_itkVectorPython.itkVectorF2_GetNorm, None, itkVectorF2)
itkVectorF2.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorF2_GetSquaredNorm, None, itkVectorF2)
itkVectorF2.Normalize = new_instancemethod(_itkVectorPython.itkVectorF2_Normalize, None, itkVectorF2)
itkVectorF2.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorF2_SetNthComponent, None, itkVectorF2)
itkVectorF2.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorF2___getitem__, None, itkVectorF2)
itkVectorF2.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorF2___setitem__, None, itkVectorF2)
itkVectorF2.__repr__ = new_instancemethod(_itkVectorPython.itkVectorF2___repr__, None, itkVectorF2)
itkVectorF2_swigregister = _itkVectorPython.itkVectorF2_swigregister
itkVectorF2_swigregister(itkVectorF2)

def itkVectorF2_GetVectorDimension() -> "unsigned int":
    """itkVectorF2_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorF2_GetVectorDimension()

def itkVectorF2_GetNumberOfComponents() -> "unsigned int":
    """itkVectorF2_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorF2_GetNumberOfComponents()

def itkVectorF2___len__() -> "unsigned int":
    """itkVectorF2___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorF2___len__()

class itkVectorF3(itkFixedArrayPython.itkFixedArrayF3):
    """Proxy of C++ itkVectorF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorF3_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorF') -> "void":
        """SetVnlVector(itkVectorF3 self, vnl_vectorF arg0)"""
        return _itkVectorPython.itkVectorF3_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorF":
        """
        GetVnlVector(itkVectorF3 self) -> vnl_vector_refF
        GetVnlVector(itkVectorF3 self) -> vnl_vectorF
        """
        return _itkVectorPython.itkVectorF3_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorF3

    def __init__(self, *args):
        """
        __init__(itkVectorF3 self) -> itkVectorF3
        __init__(itkVectorF3 self, itkVectorF3 arg0) -> itkVectorF3
        __init__(itkVectorF3 self, float const & r) -> itkVectorF3
        __init__(itkVectorF3 self, float const * r) -> itkVectorF3
        """
        _itkVectorPython.itkVectorF3_swiginit(self, _itkVectorPython.new_itkVectorF3(*args))

    def __iadd__(self, vec: 'itkVectorF3') -> "itkVectorF3 const &":
        """__iadd__(itkVectorF3 self, itkVectorF3 vec) -> itkVectorF3"""
        return _itkVectorPython.itkVectorF3___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorF3') -> "itkVectorF3 const &":
        """__isub__(itkVectorF3 self, itkVectorF3 vec) -> itkVectorF3"""
        return _itkVectorPython.itkVectorF3___isub__(self, vec)


    def __neg__(self) -> "itkVectorF3":
        """__neg__(itkVectorF3 self) -> itkVectorF3"""
        return _itkVectorPython.itkVectorF3___neg__(self)


    def __add__(self, vec: 'itkVectorF3') -> "itkVectorF3":
        """__add__(itkVectorF3 self, itkVectorF3 vec) -> itkVectorF3"""
        return _itkVectorPython.itkVectorF3___add__(self, vec)


    def __sub__(self, vec: 'itkVectorF3') -> "itkVectorF3":
        """__sub__(itkVectorF3 self, itkVectorF3 vec) -> itkVectorF3"""
        return _itkVectorPython.itkVectorF3___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorF3":
        """
        __mul__(itkVectorF3 self, itkVectorF3 vec) -> float
        __mul__(itkVectorF3 self, float const & value) -> itkVectorF3
        """
        return _itkVectorPython.itkVectorF3___mul__(self, *args)


    def __eq__(self, v: 'itkVectorF3') -> "bool":
        """__eq__(itkVectorF3 self, itkVectorF3 v) -> bool"""
        return _itkVectorPython.itkVectorF3___eq__(self, v)


    def __ne__(self, v: 'itkVectorF3') -> "bool":
        """__ne__(itkVectorF3 self, itkVectorF3 v) -> bool"""
        return _itkVectorPython.itkVectorF3___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorF3 self) -> double"""
        return _itkVectorPython.itkVectorF3_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorF3 self) -> double"""
        return _itkVectorPython.itkVectorF3_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorF3_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorF3 self) -> double"""
        return _itkVectorPython.itkVectorF3_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'float const &') -> "void":
        """SetNthComponent(itkVectorF3 self, int c, float const & v)"""
        return _itkVectorPython.itkVectorF3_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "float":
        """__getitem__(itkVectorF3 self, unsigned long d) -> float"""
        return _itkVectorPython.itkVectorF3___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'float') -> "void":
        """__setitem__(itkVectorF3 self, unsigned long d, float v)"""
        return _itkVectorPython.itkVectorF3___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorF3___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorF3 self) -> std::string"""
        return _itkVectorPython.itkVectorF3___repr__(self)

itkVectorF3.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorF3_SetVnlVector, None, itkVectorF3)
itkVectorF3.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorF3_GetVnlVector, None, itkVectorF3)
itkVectorF3.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorF3___iadd__, None, itkVectorF3)
itkVectorF3.__isub__ = new_instancemethod(_itkVectorPython.itkVectorF3___isub__, None, itkVectorF3)
itkVectorF3.__neg__ = new_instancemethod(_itkVectorPython.itkVectorF3___neg__, None, itkVectorF3)
itkVectorF3.__add__ = new_instancemethod(_itkVectorPython.itkVectorF3___add__, None, itkVectorF3)
itkVectorF3.__sub__ = new_instancemethod(_itkVectorPython.itkVectorF3___sub__, None, itkVectorF3)
itkVectorF3.__mul__ = new_instancemethod(_itkVectorPython.itkVectorF3___mul__, None, itkVectorF3)
itkVectorF3.__eq__ = new_instancemethod(_itkVectorPython.itkVectorF3___eq__, None, itkVectorF3)
itkVectorF3.__ne__ = new_instancemethod(_itkVectorPython.itkVectorF3___ne__, None, itkVectorF3)
itkVectorF3.GetNorm = new_instancemethod(_itkVectorPython.itkVectorF3_GetNorm, None, itkVectorF3)
itkVectorF3.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorF3_GetSquaredNorm, None, itkVectorF3)
itkVectorF3.Normalize = new_instancemethod(_itkVectorPython.itkVectorF3_Normalize, None, itkVectorF3)
itkVectorF3.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorF3_SetNthComponent, None, itkVectorF3)
itkVectorF3.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorF3___getitem__, None, itkVectorF3)
itkVectorF3.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorF3___setitem__, None, itkVectorF3)
itkVectorF3.__repr__ = new_instancemethod(_itkVectorPython.itkVectorF3___repr__, None, itkVectorF3)
itkVectorF3_swigregister = _itkVectorPython.itkVectorF3_swigregister
itkVectorF3_swigregister(itkVectorF3)

def itkVectorF3_GetVectorDimension() -> "unsigned int":
    """itkVectorF3_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorF3_GetVectorDimension()

def itkVectorF3_GetNumberOfComponents() -> "unsigned int":
    """itkVectorF3_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorF3_GetNumberOfComponents()

def itkVectorF3___len__() -> "unsigned int":
    """itkVectorF3___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorF3___len__()

class itkVectorF4(itkFixedArrayPython.itkFixedArrayF4):
    """Proxy of C++ itkVectorF4 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorF4_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorF') -> "void":
        """SetVnlVector(itkVectorF4 self, vnl_vectorF arg0)"""
        return _itkVectorPython.itkVectorF4_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorF":
        """
        GetVnlVector(itkVectorF4 self) -> vnl_vector_refF
        GetVnlVector(itkVectorF4 self) -> vnl_vectorF
        """
        return _itkVectorPython.itkVectorF4_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorF4

    def __init__(self, *args):
        """
        __init__(itkVectorF4 self) -> itkVectorF4
        __init__(itkVectorF4 self, itkVectorF4 arg0) -> itkVectorF4
        __init__(itkVectorF4 self, float const & r) -> itkVectorF4
        __init__(itkVectorF4 self, float const * r) -> itkVectorF4
        """
        _itkVectorPython.itkVectorF4_swiginit(self, _itkVectorPython.new_itkVectorF4(*args))

    def __iadd__(self, vec: 'itkVectorF4') -> "itkVectorF4 const &":
        """__iadd__(itkVectorF4 self, itkVectorF4 vec) -> itkVectorF4"""
        return _itkVectorPython.itkVectorF4___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorF4') -> "itkVectorF4 const &":
        """__isub__(itkVectorF4 self, itkVectorF4 vec) -> itkVectorF4"""
        return _itkVectorPython.itkVectorF4___isub__(self, vec)


    def __neg__(self) -> "itkVectorF4":
        """__neg__(itkVectorF4 self) -> itkVectorF4"""
        return _itkVectorPython.itkVectorF4___neg__(self)


    def __add__(self, vec: 'itkVectorF4') -> "itkVectorF4":
        """__add__(itkVectorF4 self, itkVectorF4 vec) -> itkVectorF4"""
        return _itkVectorPython.itkVectorF4___add__(self, vec)


    def __sub__(self, vec: 'itkVectorF4') -> "itkVectorF4":
        """__sub__(itkVectorF4 self, itkVectorF4 vec) -> itkVectorF4"""
        return _itkVectorPython.itkVectorF4___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorF4":
        """
        __mul__(itkVectorF4 self, itkVectorF4 vec) -> float
        __mul__(itkVectorF4 self, float const & value) -> itkVectorF4
        """
        return _itkVectorPython.itkVectorF4___mul__(self, *args)


    def __eq__(self, v: 'itkVectorF4') -> "bool":
        """__eq__(itkVectorF4 self, itkVectorF4 v) -> bool"""
        return _itkVectorPython.itkVectorF4___eq__(self, v)


    def __ne__(self, v: 'itkVectorF4') -> "bool":
        """__ne__(itkVectorF4 self, itkVectorF4 v) -> bool"""
        return _itkVectorPython.itkVectorF4___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorF4 self) -> double"""
        return _itkVectorPython.itkVectorF4_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorF4 self) -> double"""
        return _itkVectorPython.itkVectorF4_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorF4_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorF4 self) -> double"""
        return _itkVectorPython.itkVectorF4_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'float const &') -> "void":
        """SetNthComponent(itkVectorF4 self, int c, float const & v)"""
        return _itkVectorPython.itkVectorF4_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "float":
        """__getitem__(itkVectorF4 self, unsigned long d) -> float"""
        return _itkVectorPython.itkVectorF4___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'float') -> "void":
        """__setitem__(itkVectorF4 self, unsigned long d, float v)"""
        return _itkVectorPython.itkVectorF4___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorF4___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorF4 self) -> std::string"""
        return _itkVectorPython.itkVectorF4___repr__(self)

itkVectorF4.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorF4_SetVnlVector, None, itkVectorF4)
itkVectorF4.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorF4_GetVnlVector, None, itkVectorF4)
itkVectorF4.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorF4___iadd__, None, itkVectorF4)
itkVectorF4.__isub__ = new_instancemethod(_itkVectorPython.itkVectorF4___isub__, None, itkVectorF4)
itkVectorF4.__neg__ = new_instancemethod(_itkVectorPython.itkVectorF4___neg__, None, itkVectorF4)
itkVectorF4.__add__ = new_instancemethod(_itkVectorPython.itkVectorF4___add__, None, itkVectorF4)
itkVectorF4.__sub__ = new_instancemethod(_itkVectorPython.itkVectorF4___sub__, None, itkVectorF4)
itkVectorF4.__mul__ = new_instancemethod(_itkVectorPython.itkVectorF4___mul__, None, itkVectorF4)
itkVectorF4.__eq__ = new_instancemethod(_itkVectorPython.itkVectorF4___eq__, None, itkVectorF4)
itkVectorF4.__ne__ = new_instancemethod(_itkVectorPython.itkVectorF4___ne__, None, itkVectorF4)
itkVectorF4.GetNorm = new_instancemethod(_itkVectorPython.itkVectorF4_GetNorm, None, itkVectorF4)
itkVectorF4.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorF4_GetSquaredNorm, None, itkVectorF4)
itkVectorF4.Normalize = new_instancemethod(_itkVectorPython.itkVectorF4_Normalize, None, itkVectorF4)
itkVectorF4.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorF4_SetNthComponent, None, itkVectorF4)
itkVectorF4.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorF4___getitem__, None, itkVectorF4)
itkVectorF4.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorF4___setitem__, None, itkVectorF4)
itkVectorF4.__repr__ = new_instancemethod(_itkVectorPython.itkVectorF4___repr__, None, itkVectorF4)
itkVectorF4_swigregister = _itkVectorPython.itkVectorF4_swigregister
itkVectorF4_swigregister(itkVectorF4)

def itkVectorF4_GetVectorDimension() -> "unsigned int":
    """itkVectorF4_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorF4_GetVectorDimension()

def itkVectorF4_GetNumberOfComponents() -> "unsigned int":
    """itkVectorF4_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorF4_GetNumberOfComponents()

def itkVectorF4___len__() -> "unsigned int":
    """itkVectorF4___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorF4___len__()

class itkVectorF5(itkFixedArrayPython.itkFixedArrayF5):
    """Proxy of C++ itkVectorF5 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorF5_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorF') -> "void":
        """SetVnlVector(itkVectorF5 self, vnl_vectorF arg0)"""
        return _itkVectorPython.itkVectorF5_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorF":
        """
        GetVnlVector(itkVectorF5 self) -> vnl_vector_refF
        GetVnlVector(itkVectorF5 self) -> vnl_vectorF
        """
        return _itkVectorPython.itkVectorF5_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorF5

    def __init__(self, *args):
        """
        __init__(itkVectorF5 self) -> itkVectorF5
        __init__(itkVectorF5 self, itkVectorF5 arg0) -> itkVectorF5
        __init__(itkVectorF5 self, float const & r) -> itkVectorF5
        __init__(itkVectorF5 self, float const * r) -> itkVectorF5
        """
        _itkVectorPython.itkVectorF5_swiginit(self, _itkVectorPython.new_itkVectorF5(*args))

    def __iadd__(self, vec: 'itkVectorF5') -> "itkVectorF5 const &":
        """__iadd__(itkVectorF5 self, itkVectorF5 vec) -> itkVectorF5"""
        return _itkVectorPython.itkVectorF5___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorF5') -> "itkVectorF5 const &":
        """__isub__(itkVectorF5 self, itkVectorF5 vec) -> itkVectorF5"""
        return _itkVectorPython.itkVectorF5___isub__(self, vec)


    def __neg__(self) -> "itkVectorF5":
        """__neg__(itkVectorF5 self) -> itkVectorF5"""
        return _itkVectorPython.itkVectorF5___neg__(self)


    def __add__(self, vec: 'itkVectorF5') -> "itkVectorF5":
        """__add__(itkVectorF5 self, itkVectorF5 vec) -> itkVectorF5"""
        return _itkVectorPython.itkVectorF5___add__(self, vec)


    def __sub__(self, vec: 'itkVectorF5') -> "itkVectorF5":
        """__sub__(itkVectorF5 self, itkVectorF5 vec) -> itkVectorF5"""
        return _itkVectorPython.itkVectorF5___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorF5":
        """
        __mul__(itkVectorF5 self, itkVectorF5 vec) -> float
        __mul__(itkVectorF5 self, float const & value) -> itkVectorF5
        """
        return _itkVectorPython.itkVectorF5___mul__(self, *args)


    def __eq__(self, v: 'itkVectorF5') -> "bool":
        """__eq__(itkVectorF5 self, itkVectorF5 v) -> bool"""
        return _itkVectorPython.itkVectorF5___eq__(self, v)


    def __ne__(self, v: 'itkVectorF5') -> "bool":
        """__ne__(itkVectorF5 self, itkVectorF5 v) -> bool"""
        return _itkVectorPython.itkVectorF5___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorF5 self) -> double"""
        return _itkVectorPython.itkVectorF5_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorF5 self) -> double"""
        return _itkVectorPython.itkVectorF5_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorF5_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorF5 self) -> double"""
        return _itkVectorPython.itkVectorF5_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'float const &') -> "void":
        """SetNthComponent(itkVectorF5 self, int c, float const & v)"""
        return _itkVectorPython.itkVectorF5_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "float":
        """__getitem__(itkVectorF5 self, unsigned long d) -> float"""
        return _itkVectorPython.itkVectorF5___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'float') -> "void":
        """__setitem__(itkVectorF5 self, unsigned long d, float v)"""
        return _itkVectorPython.itkVectorF5___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorF5___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorF5 self) -> std::string"""
        return _itkVectorPython.itkVectorF5___repr__(self)

itkVectorF5.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorF5_SetVnlVector, None, itkVectorF5)
itkVectorF5.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorF5_GetVnlVector, None, itkVectorF5)
itkVectorF5.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorF5___iadd__, None, itkVectorF5)
itkVectorF5.__isub__ = new_instancemethod(_itkVectorPython.itkVectorF5___isub__, None, itkVectorF5)
itkVectorF5.__neg__ = new_instancemethod(_itkVectorPython.itkVectorF5___neg__, None, itkVectorF5)
itkVectorF5.__add__ = new_instancemethod(_itkVectorPython.itkVectorF5___add__, None, itkVectorF5)
itkVectorF5.__sub__ = new_instancemethod(_itkVectorPython.itkVectorF5___sub__, None, itkVectorF5)
itkVectorF5.__mul__ = new_instancemethod(_itkVectorPython.itkVectorF5___mul__, None, itkVectorF5)
itkVectorF5.__eq__ = new_instancemethod(_itkVectorPython.itkVectorF5___eq__, None, itkVectorF5)
itkVectorF5.__ne__ = new_instancemethod(_itkVectorPython.itkVectorF5___ne__, None, itkVectorF5)
itkVectorF5.GetNorm = new_instancemethod(_itkVectorPython.itkVectorF5_GetNorm, None, itkVectorF5)
itkVectorF5.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorF5_GetSquaredNorm, None, itkVectorF5)
itkVectorF5.Normalize = new_instancemethod(_itkVectorPython.itkVectorF5_Normalize, None, itkVectorF5)
itkVectorF5.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorF5_SetNthComponent, None, itkVectorF5)
itkVectorF5.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorF5___getitem__, None, itkVectorF5)
itkVectorF5.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorF5___setitem__, None, itkVectorF5)
itkVectorF5.__repr__ = new_instancemethod(_itkVectorPython.itkVectorF5___repr__, None, itkVectorF5)
itkVectorF5_swigregister = _itkVectorPython.itkVectorF5_swigregister
itkVectorF5_swigregister(itkVectorF5)

def itkVectorF5_GetVectorDimension() -> "unsigned int":
    """itkVectorF5_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorF5_GetVectorDimension()

def itkVectorF5_GetNumberOfComponents() -> "unsigned int":
    """itkVectorF5_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorF5_GetNumberOfComponents()

def itkVectorF5___len__() -> "unsigned int":
    """itkVectorF5___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorF5___len__()

class itkVectorF6(itkFixedArrayPython.itkFixedArrayF6):
    """Proxy of C++ itkVectorF6 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorF6_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorF') -> "void":
        """SetVnlVector(itkVectorF6 self, vnl_vectorF arg0)"""
        return _itkVectorPython.itkVectorF6_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorF":
        """
        GetVnlVector(itkVectorF6 self) -> vnl_vector_refF
        GetVnlVector(itkVectorF6 self) -> vnl_vectorF
        """
        return _itkVectorPython.itkVectorF6_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorF6

    def __init__(self, *args):
        """
        __init__(itkVectorF6 self) -> itkVectorF6
        __init__(itkVectorF6 self, itkVectorF6 arg0) -> itkVectorF6
        __init__(itkVectorF6 self, float const & r) -> itkVectorF6
        __init__(itkVectorF6 self, float const * r) -> itkVectorF6
        """
        _itkVectorPython.itkVectorF6_swiginit(self, _itkVectorPython.new_itkVectorF6(*args))

    def __iadd__(self, vec: 'itkVectorF6') -> "itkVectorF6 const &":
        """__iadd__(itkVectorF6 self, itkVectorF6 vec) -> itkVectorF6"""
        return _itkVectorPython.itkVectorF6___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorF6') -> "itkVectorF6 const &":
        """__isub__(itkVectorF6 self, itkVectorF6 vec) -> itkVectorF6"""
        return _itkVectorPython.itkVectorF6___isub__(self, vec)


    def __neg__(self) -> "itkVectorF6":
        """__neg__(itkVectorF6 self) -> itkVectorF6"""
        return _itkVectorPython.itkVectorF6___neg__(self)


    def __add__(self, vec: 'itkVectorF6') -> "itkVectorF6":
        """__add__(itkVectorF6 self, itkVectorF6 vec) -> itkVectorF6"""
        return _itkVectorPython.itkVectorF6___add__(self, vec)


    def __sub__(self, vec: 'itkVectorF6') -> "itkVectorF6":
        """__sub__(itkVectorF6 self, itkVectorF6 vec) -> itkVectorF6"""
        return _itkVectorPython.itkVectorF6___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorF6":
        """
        __mul__(itkVectorF6 self, itkVectorF6 vec) -> float
        __mul__(itkVectorF6 self, float const & value) -> itkVectorF6
        """
        return _itkVectorPython.itkVectorF6___mul__(self, *args)


    def __eq__(self, v: 'itkVectorF6') -> "bool":
        """__eq__(itkVectorF6 self, itkVectorF6 v) -> bool"""
        return _itkVectorPython.itkVectorF6___eq__(self, v)


    def __ne__(self, v: 'itkVectorF6') -> "bool":
        """__ne__(itkVectorF6 self, itkVectorF6 v) -> bool"""
        return _itkVectorPython.itkVectorF6___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorF6 self) -> double"""
        return _itkVectorPython.itkVectorF6_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorF6 self) -> double"""
        return _itkVectorPython.itkVectorF6_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorF6_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorF6 self) -> double"""
        return _itkVectorPython.itkVectorF6_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'float const &') -> "void":
        """SetNthComponent(itkVectorF6 self, int c, float const & v)"""
        return _itkVectorPython.itkVectorF6_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "float":
        """__getitem__(itkVectorF6 self, unsigned long d) -> float"""
        return _itkVectorPython.itkVectorF6___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'float') -> "void":
        """__setitem__(itkVectorF6 self, unsigned long d, float v)"""
        return _itkVectorPython.itkVectorF6___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorF6___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorF6 self) -> std::string"""
        return _itkVectorPython.itkVectorF6___repr__(self)

itkVectorF6.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorF6_SetVnlVector, None, itkVectorF6)
itkVectorF6.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorF6_GetVnlVector, None, itkVectorF6)
itkVectorF6.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorF6___iadd__, None, itkVectorF6)
itkVectorF6.__isub__ = new_instancemethod(_itkVectorPython.itkVectorF6___isub__, None, itkVectorF6)
itkVectorF6.__neg__ = new_instancemethod(_itkVectorPython.itkVectorF6___neg__, None, itkVectorF6)
itkVectorF6.__add__ = new_instancemethod(_itkVectorPython.itkVectorF6___add__, None, itkVectorF6)
itkVectorF6.__sub__ = new_instancemethod(_itkVectorPython.itkVectorF6___sub__, None, itkVectorF6)
itkVectorF6.__mul__ = new_instancemethod(_itkVectorPython.itkVectorF6___mul__, None, itkVectorF6)
itkVectorF6.__eq__ = new_instancemethod(_itkVectorPython.itkVectorF6___eq__, None, itkVectorF6)
itkVectorF6.__ne__ = new_instancemethod(_itkVectorPython.itkVectorF6___ne__, None, itkVectorF6)
itkVectorF6.GetNorm = new_instancemethod(_itkVectorPython.itkVectorF6_GetNorm, None, itkVectorF6)
itkVectorF6.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorF6_GetSquaredNorm, None, itkVectorF6)
itkVectorF6.Normalize = new_instancemethod(_itkVectorPython.itkVectorF6_Normalize, None, itkVectorF6)
itkVectorF6.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorF6_SetNthComponent, None, itkVectorF6)
itkVectorF6.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorF6___getitem__, None, itkVectorF6)
itkVectorF6.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorF6___setitem__, None, itkVectorF6)
itkVectorF6.__repr__ = new_instancemethod(_itkVectorPython.itkVectorF6___repr__, None, itkVectorF6)
itkVectorF6_swigregister = _itkVectorPython.itkVectorF6_swigregister
itkVectorF6_swigregister(itkVectorF6)

def itkVectorF6_GetVectorDimension() -> "unsigned int":
    """itkVectorF6_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorF6_GetVectorDimension()

def itkVectorF6_GetNumberOfComponents() -> "unsigned int":
    """itkVectorF6_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorF6_GetNumberOfComponents()

def itkVectorF6___len__() -> "unsigned int":
    """itkVectorF6___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorF6___len__()

class itkVectorSS1(itkFixedArrayPython.itkFixedArraySS1):
    """Proxy of C++ itkVectorSS1 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorSS1_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorSS') -> "void":
        """SetVnlVector(itkVectorSS1 self, vnl_vectorSS arg0)"""
        return _itkVectorPython.itkVectorSS1_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorSS":
        """
        GetVnlVector(itkVectorSS1 self) -> vnl_vector_refSS
        GetVnlVector(itkVectorSS1 self) -> vnl_vectorSS
        """
        return _itkVectorPython.itkVectorSS1_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorSS1

    def __init__(self, *args):
        """
        __init__(itkVectorSS1 self) -> itkVectorSS1
        __init__(itkVectorSS1 self, itkVectorSS1 arg0) -> itkVectorSS1
        __init__(itkVectorSS1 self, short const & r) -> itkVectorSS1
        __init__(itkVectorSS1 self, short const * r) -> itkVectorSS1
        """
        _itkVectorPython.itkVectorSS1_swiginit(self, _itkVectorPython.new_itkVectorSS1(*args))

    def __iadd__(self, vec: 'itkVectorSS1') -> "itkVectorSS1 const &":
        """__iadd__(itkVectorSS1 self, itkVectorSS1 vec) -> itkVectorSS1"""
        return _itkVectorPython.itkVectorSS1___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorSS1') -> "itkVectorSS1 const &":
        """__isub__(itkVectorSS1 self, itkVectorSS1 vec) -> itkVectorSS1"""
        return _itkVectorPython.itkVectorSS1___isub__(self, vec)


    def __neg__(self) -> "itkVectorSS1":
        """__neg__(itkVectorSS1 self) -> itkVectorSS1"""
        return _itkVectorPython.itkVectorSS1___neg__(self)


    def __add__(self, vec: 'itkVectorSS1') -> "itkVectorSS1":
        """__add__(itkVectorSS1 self, itkVectorSS1 vec) -> itkVectorSS1"""
        return _itkVectorPython.itkVectorSS1___add__(self, vec)


    def __sub__(self, vec: 'itkVectorSS1') -> "itkVectorSS1":
        """__sub__(itkVectorSS1 self, itkVectorSS1 vec) -> itkVectorSS1"""
        return _itkVectorPython.itkVectorSS1___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorSS1":
        """
        __mul__(itkVectorSS1 self, itkVectorSS1 vec) -> short
        __mul__(itkVectorSS1 self, short const & value) -> itkVectorSS1
        """
        return _itkVectorPython.itkVectorSS1___mul__(self, *args)


    def __eq__(self, v: 'itkVectorSS1') -> "bool":
        """__eq__(itkVectorSS1 self, itkVectorSS1 v) -> bool"""
        return _itkVectorPython.itkVectorSS1___eq__(self, v)


    def __ne__(self, v: 'itkVectorSS1') -> "bool":
        """__ne__(itkVectorSS1 self, itkVectorSS1 v) -> bool"""
        return _itkVectorPython.itkVectorSS1___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorSS1 self) -> double"""
        return _itkVectorPython.itkVectorSS1_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorSS1 self) -> double"""
        return _itkVectorPython.itkVectorSS1_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorSS1_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorSS1 self) -> double"""
        return _itkVectorPython.itkVectorSS1_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'short const &') -> "void":
        """SetNthComponent(itkVectorSS1 self, int c, short const & v)"""
        return _itkVectorPython.itkVectorSS1_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "short":
        """__getitem__(itkVectorSS1 self, unsigned long d) -> short"""
        return _itkVectorPython.itkVectorSS1___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'short') -> "void":
        """__setitem__(itkVectorSS1 self, unsigned long d, short v)"""
        return _itkVectorPython.itkVectorSS1___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorSS1___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorSS1 self) -> std::string"""
        return _itkVectorPython.itkVectorSS1___repr__(self)

itkVectorSS1.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorSS1_SetVnlVector, None, itkVectorSS1)
itkVectorSS1.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorSS1_GetVnlVector, None, itkVectorSS1)
itkVectorSS1.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorSS1___iadd__, None, itkVectorSS1)
itkVectorSS1.__isub__ = new_instancemethod(_itkVectorPython.itkVectorSS1___isub__, None, itkVectorSS1)
itkVectorSS1.__neg__ = new_instancemethod(_itkVectorPython.itkVectorSS1___neg__, None, itkVectorSS1)
itkVectorSS1.__add__ = new_instancemethod(_itkVectorPython.itkVectorSS1___add__, None, itkVectorSS1)
itkVectorSS1.__sub__ = new_instancemethod(_itkVectorPython.itkVectorSS1___sub__, None, itkVectorSS1)
itkVectorSS1.__mul__ = new_instancemethod(_itkVectorPython.itkVectorSS1___mul__, None, itkVectorSS1)
itkVectorSS1.__eq__ = new_instancemethod(_itkVectorPython.itkVectorSS1___eq__, None, itkVectorSS1)
itkVectorSS1.__ne__ = new_instancemethod(_itkVectorPython.itkVectorSS1___ne__, None, itkVectorSS1)
itkVectorSS1.GetNorm = new_instancemethod(_itkVectorPython.itkVectorSS1_GetNorm, None, itkVectorSS1)
itkVectorSS1.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorSS1_GetSquaredNorm, None, itkVectorSS1)
itkVectorSS1.Normalize = new_instancemethod(_itkVectorPython.itkVectorSS1_Normalize, None, itkVectorSS1)
itkVectorSS1.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorSS1_SetNthComponent, None, itkVectorSS1)
itkVectorSS1.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorSS1___getitem__, None, itkVectorSS1)
itkVectorSS1.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorSS1___setitem__, None, itkVectorSS1)
itkVectorSS1.__repr__ = new_instancemethod(_itkVectorPython.itkVectorSS1___repr__, None, itkVectorSS1)
itkVectorSS1_swigregister = _itkVectorPython.itkVectorSS1_swigregister
itkVectorSS1_swigregister(itkVectorSS1)

def itkVectorSS1_GetVectorDimension() -> "unsigned int":
    """itkVectorSS1_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorSS1_GetVectorDimension()

def itkVectorSS1_GetNumberOfComponents() -> "unsigned int":
    """itkVectorSS1_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorSS1_GetNumberOfComponents()

def itkVectorSS1___len__() -> "unsigned int":
    """itkVectorSS1___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorSS1___len__()

class itkVectorSS2(itkFixedArrayPython.itkFixedArraySS2):
    """Proxy of C++ itkVectorSS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorSS2_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorSS') -> "void":
        """SetVnlVector(itkVectorSS2 self, vnl_vectorSS arg0)"""
        return _itkVectorPython.itkVectorSS2_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorSS":
        """
        GetVnlVector(itkVectorSS2 self) -> vnl_vector_refSS
        GetVnlVector(itkVectorSS2 self) -> vnl_vectorSS
        """
        return _itkVectorPython.itkVectorSS2_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorSS2

    def __init__(self, *args):
        """
        __init__(itkVectorSS2 self) -> itkVectorSS2
        __init__(itkVectorSS2 self, itkVectorSS2 arg0) -> itkVectorSS2
        __init__(itkVectorSS2 self, short const & r) -> itkVectorSS2
        __init__(itkVectorSS2 self, short const * r) -> itkVectorSS2
        """
        _itkVectorPython.itkVectorSS2_swiginit(self, _itkVectorPython.new_itkVectorSS2(*args))

    def __iadd__(self, vec: 'itkVectorSS2') -> "itkVectorSS2 const &":
        """__iadd__(itkVectorSS2 self, itkVectorSS2 vec) -> itkVectorSS2"""
        return _itkVectorPython.itkVectorSS2___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorSS2') -> "itkVectorSS2 const &":
        """__isub__(itkVectorSS2 self, itkVectorSS2 vec) -> itkVectorSS2"""
        return _itkVectorPython.itkVectorSS2___isub__(self, vec)


    def __neg__(self) -> "itkVectorSS2":
        """__neg__(itkVectorSS2 self) -> itkVectorSS2"""
        return _itkVectorPython.itkVectorSS2___neg__(self)


    def __add__(self, vec: 'itkVectorSS2') -> "itkVectorSS2":
        """__add__(itkVectorSS2 self, itkVectorSS2 vec) -> itkVectorSS2"""
        return _itkVectorPython.itkVectorSS2___add__(self, vec)


    def __sub__(self, vec: 'itkVectorSS2') -> "itkVectorSS2":
        """__sub__(itkVectorSS2 self, itkVectorSS2 vec) -> itkVectorSS2"""
        return _itkVectorPython.itkVectorSS2___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorSS2":
        """
        __mul__(itkVectorSS2 self, itkVectorSS2 vec) -> short
        __mul__(itkVectorSS2 self, short const & value) -> itkVectorSS2
        """
        return _itkVectorPython.itkVectorSS2___mul__(self, *args)


    def __eq__(self, v: 'itkVectorSS2') -> "bool":
        """__eq__(itkVectorSS2 self, itkVectorSS2 v) -> bool"""
        return _itkVectorPython.itkVectorSS2___eq__(self, v)


    def __ne__(self, v: 'itkVectorSS2') -> "bool":
        """__ne__(itkVectorSS2 self, itkVectorSS2 v) -> bool"""
        return _itkVectorPython.itkVectorSS2___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorSS2 self) -> double"""
        return _itkVectorPython.itkVectorSS2_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorSS2 self) -> double"""
        return _itkVectorPython.itkVectorSS2_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorSS2_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorSS2 self) -> double"""
        return _itkVectorPython.itkVectorSS2_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'short const &') -> "void":
        """SetNthComponent(itkVectorSS2 self, int c, short const & v)"""
        return _itkVectorPython.itkVectorSS2_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "short":
        """__getitem__(itkVectorSS2 self, unsigned long d) -> short"""
        return _itkVectorPython.itkVectorSS2___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'short') -> "void":
        """__setitem__(itkVectorSS2 self, unsigned long d, short v)"""
        return _itkVectorPython.itkVectorSS2___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorSS2___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorSS2 self) -> std::string"""
        return _itkVectorPython.itkVectorSS2___repr__(self)

itkVectorSS2.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorSS2_SetVnlVector, None, itkVectorSS2)
itkVectorSS2.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorSS2_GetVnlVector, None, itkVectorSS2)
itkVectorSS2.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorSS2___iadd__, None, itkVectorSS2)
itkVectorSS2.__isub__ = new_instancemethod(_itkVectorPython.itkVectorSS2___isub__, None, itkVectorSS2)
itkVectorSS2.__neg__ = new_instancemethod(_itkVectorPython.itkVectorSS2___neg__, None, itkVectorSS2)
itkVectorSS2.__add__ = new_instancemethod(_itkVectorPython.itkVectorSS2___add__, None, itkVectorSS2)
itkVectorSS2.__sub__ = new_instancemethod(_itkVectorPython.itkVectorSS2___sub__, None, itkVectorSS2)
itkVectorSS2.__mul__ = new_instancemethod(_itkVectorPython.itkVectorSS2___mul__, None, itkVectorSS2)
itkVectorSS2.__eq__ = new_instancemethod(_itkVectorPython.itkVectorSS2___eq__, None, itkVectorSS2)
itkVectorSS2.__ne__ = new_instancemethod(_itkVectorPython.itkVectorSS2___ne__, None, itkVectorSS2)
itkVectorSS2.GetNorm = new_instancemethod(_itkVectorPython.itkVectorSS2_GetNorm, None, itkVectorSS2)
itkVectorSS2.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorSS2_GetSquaredNorm, None, itkVectorSS2)
itkVectorSS2.Normalize = new_instancemethod(_itkVectorPython.itkVectorSS2_Normalize, None, itkVectorSS2)
itkVectorSS2.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorSS2_SetNthComponent, None, itkVectorSS2)
itkVectorSS2.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorSS2___getitem__, None, itkVectorSS2)
itkVectorSS2.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorSS2___setitem__, None, itkVectorSS2)
itkVectorSS2.__repr__ = new_instancemethod(_itkVectorPython.itkVectorSS2___repr__, None, itkVectorSS2)
itkVectorSS2_swigregister = _itkVectorPython.itkVectorSS2_swigregister
itkVectorSS2_swigregister(itkVectorSS2)

def itkVectorSS2_GetVectorDimension() -> "unsigned int":
    """itkVectorSS2_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorSS2_GetVectorDimension()

def itkVectorSS2_GetNumberOfComponents() -> "unsigned int":
    """itkVectorSS2_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorSS2_GetNumberOfComponents()

def itkVectorSS2___len__() -> "unsigned int":
    """itkVectorSS2___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorSS2___len__()

class itkVectorSS3(itkFixedArrayPython.itkFixedArraySS3):
    """Proxy of C++ itkVectorSS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorSS3_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorSS') -> "void":
        """SetVnlVector(itkVectorSS3 self, vnl_vectorSS arg0)"""
        return _itkVectorPython.itkVectorSS3_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorSS":
        """
        GetVnlVector(itkVectorSS3 self) -> vnl_vector_refSS
        GetVnlVector(itkVectorSS3 self) -> vnl_vectorSS
        """
        return _itkVectorPython.itkVectorSS3_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorSS3

    def __init__(self, *args):
        """
        __init__(itkVectorSS3 self) -> itkVectorSS3
        __init__(itkVectorSS3 self, itkVectorSS3 arg0) -> itkVectorSS3
        __init__(itkVectorSS3 self, short const & r) -> itkVectorSS3
        __init__(itkVectorSS3 self, short const * r) -> itkVectorSS3
        """
        _itkVectorPython.itkVectorSS3_swiginit(self, _itkVectorPython.new_itkVectorSS3(*args))

    def __iadd__(self, vec: 'itkVectorSS3') -> "itkVectorSS3 const &":
        """__iadd__(itkVectorSS3 self, itkVectorSS3 vec) -> itkVectorSS3"""
        return _itkVectorPython.itkVectorSS3___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorSS3') -> "itkVectorSS3 const &":
        """__isub__(itkVectorSS3 self, itkVectorSS3 vec) -> itkVectorSS3"""
        return _itkVectorPython.itkVectorSS3___isub__(self, vec)


    def __neg__(self) -> "itkVectorSS3":
        """__neg__(itkVectorSS3 self) -> itkVectorSS3"""
        return _itkVectorPython.itkVectorSS3___neg__(self)


    def __add__(self, vec: 'itkVectorSS3') -> "itkVectorSS3":
        """__add__(itkVectorSS3 self, itkVectorSS3 vec) -> itkVectorSS3"""
        return _itkVectorPython.itkVectorSS3___add__(self, vec)


    def __sub__(self, vec: 'itkVectorSS3') -> "itkVectorSS3":
        """__sub__(itkVectorSS3 self, itkVectorSS3 vec) -> itkVectorSS3"""
        return _itkVectorPython.itkVectorSS3___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorSS3":
        """
        __mul__(itkVectorSS3 self, itkVectorSS3 vec) -> short
        __mul__(itkVectorSS3 self, short const & value) -> itkVectorSS3
        """
        return _itkVectorPython.itkVectorSS3___mul__(self, *args)


    def __eq__(self, v: 'itkVectorSS3') -> "bool":
        """__eq__(itkVectorSS3 self, itkVectorSS3 v) -> bool"""
        return _itkVectorPython.itkVectorSS3___eq__(self, v)


    def __ne__(self, v: 'itkVectorSS3') -> "bool":
        """__ne__(itkVectorSS3 self, itkVectorSS3 v) -> bool"""
        return _itkVectorPython.itkVectorSS3___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorSS3 self) -> double"""
        return _itkVectorPython.itkVectorSS3_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorSS3 self) -> double"""
        return _itkVectorPython.itkVectorSS3_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorSS3_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorSS3 self) -> double"""
        return _itkVectorPython.itkVectorSS3_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'short const &') -> "void":
        """SetNthComponent(itkVectorSS3 self, int c, short const & v)"""
        return _itkVectorPython.itkVectorSS3_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "short":
        """__getitem__(itkVectorSS3 self, unsigned long d) -> short"""
        return _itkVectorPython.itkVectorSS3___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'short') -> "void":
        """__setitem__(itkVectorSS3 self, unsigned long d, short v)"""
        return _itkVectorPython.itkVectorSS3___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorSS3___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorSS3 self) -> std::string"""
        return _itkVectorPython.itkVectorSS3___repr__(self)

itkVectorSS3.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorSS3_SetVnlVector, None, itkVectorSS3)
itkVectorSS3.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorSS3_GetVnlVector, None, itkVectorSS3)
itkVectorSS3.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorSS3___iadd__, None, itkVectorSS3)
itkVectorSS3.__isub__ = new_instancemethod(_itkVectorPython.itkVectorSS3___isub__, None, itkVectorSS3)
itkVectorSS3.__neg__ = new_instancemethod(_itkVectorPython.itkVectorSS3___neg__, None, itkVectorSS3)
itkVectorSS3.__add__ = new_instancemethod(_itkVectorPython.itkVectorSS3___add__, None, itkVectorSS3)
itkVectorSS3.__sub__ = new_instancemethod(_itkVectorPython.itkVectorSS3___sub__, None, itkVectorSS3)
itkVectorSS3.__mul__ = new_instancemethod(_itkVectorPython.itkVectorSS3___mul__, None, itkVectorSS3)
itkVectorSS3.__eq__ = new_instancemethod(_itkVectorPython.itkVectorSS3___eq__, None, itkVectorSS3)
itkVectorSS3.__ne__ = new_instancemethod(_itkVectorPython.itkVectorSS3___ne__, None, itkVectorSS3)
itkVectorSS3.GetNorm = new_instancemethod(_itkVectorPython.itkVectorSS3_GetNorm, None, itkVectorSS3)
itkVectorSS3.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorSS3_GetSquaredNorm, None, itkVectorSS3)
itkVectorSS3.Normalize = new_instancemethod(_itkVectorPython.itkVectorSS3_Normalize, None, itkVectorSS3)
itkVectorSS3.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorSS3_SetNthComponent, None, itkVectorSS3)
itkVectorSS3.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorSS3___getitem__, None, itkVectorSS3)
itkVectorSS3.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorSS3___setitem__, None, itkVectorSS3)
itkVectorSS3.__repr__ = new_instancemethod(_itkVectorPython.itkVectorSS3___repr__, None, itkVectorSS3)
itkVectorSS3_swigregister = _itkVectorPython.itkVectorSS3_swigregister
itkVectorSS3_swigregister(itkVectorSS3)

def itkVectorSS3_GetVectorDimension() -> "unsigned int":
    """itkVectorSS3_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorSS3_GetVectorDimension()

def itkVectorSS3_GetNumberOfComponents() -> "unsigned int":
    """itkVectorSS3_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorSS3_GetNumberOfComponents()

def itkVectorSS3___len__() -> "unsigned int":
    """itkVectorSS3___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorSS3___len__()

class itkVectorSS4(itkFixedArrayPython.itkFixedArraySS4):
    """Proxy of C++ itkVectorSS4 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorSS4_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorSS') -> "void":
        """SetVnlVector(itkVectorSS4 self, vnl_vectorSS arg0)"""
        return _itkVectorPython.itkVectorSS4_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorSS":
        """
        GetVnlVector(itkVectorSS4 self) -> vnl_vector_refSS
        GetVnlVector(itkVectorSS4 self) -> vnl_vectorSS
        """
        return _itkVectorPython.itkVectorSS4_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorSS4

    def __init__(self, *args):
        """
        __init__(itkVectorSS4 self) -> itkVectorSS4
        __init__(itkVectorSS4 self, itkVectorSS4 arg0) -> itkVectorSS4
        __init__(itkVectorSS4 self, short const & r) -> itkVectorSS4
        __init__(itkVectorSS4 self, short const * r) -> itkVectorSS4
        """
        _itkVectorPython.itkVectorSS4_swiginit(self, _itkVectorPython.new_itkVectorSS4(*args))

    def __iadd__(self, vec: 'itkVectorSS4') -> "itkVectorSS4 const &":
        """__iadd__(itkVectorSS4 self, itkVectorSS4 vec) -> itkVectorSS4"""
        return _itkVectorPython.itkVectorSS4___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorSS4') -> "itkVectorSS4 const &":
        """__isub__(itkVectorSS4 self, itkVectorSS4 vec) -> itkVectorSS4"""
        return _itkVectorPython.itkVectorSS4___isub__(self, vec)


    def __neg__(self) -> "itkVectorSS4":
        """__neg__(itkVectorSS4 self) -> itkVectorSS4"""
        return _itkVectorPython.itkVectorSS4___neg__(self)


    def __add__(self, vec: 'itkVectorSS4') -> "itkVectorSS4":
        """__add__(itkVectorSS4 self, itkVectorSS4 vec) -> itkVectorSS4"""
        return _itkVectorPython.itkVectorSS4___add__(self, vec)


    def __sub__(self, vec: 'itkVectorSS4') -> "itkVectorSS4":
        """__sub__(itkVectorSS4 self, itkVectorSS4 vec) -> itkVectorSS4"""
        return _itkVectorPython.itkVectorSS4___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorSS4":
        """
        __mul__(itkVectorSS4 self, itkVectorSS4 vec) -> short
        __mul__(itkVectorSS4 self, short const & value) -> itkVectorSS4
        """
        return _itkVectorPython.itkVectorSS4___mul__(self, *args)


    def __eq__(self, v: 'itkVectorSS4') -> "bool":
        """__eq__(itkVectorSS4 self, itkVectorSS4 v) -> bool"""
        return _itkVectorPython.itkVectorSS4___eq__(self, v)


    def __ne__(self, v: 'itkVectorSS4') -> "bool":
        """__ne__(itkVectorSS4 self, itkVectorSS4 v) -> bool"""
        return _itkVectorPython.itkVectorSS4___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorSS4 self) -> double"""
        return _itkVectorPython.itkVectorSS4_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorSS4 self) -> double"""
        return _itkVectorPython.itkVectorSS4_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorSS4_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorSS4 self) -> double"""
        return _itkVectorPython.itkVectorSS4_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'short const &') -> "void":
        """SetNthComponent(itkVectorSS4 self, int c, short const & v)"""
        return _itkVectorPython.itkVectorSS4_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "short":
        """__getitem__(itkVectorSS4 self, unsigned long d) -> short"""
        return _itkVectorPython.itkVectorSS4___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'short') -> "void":
        """__setitem__(itkVectorSS4 self, unsigned long d, short v)"""
        return _itkVectorPython.itkVectorSS4___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorSS4___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorSS4 self) -> std::string"""
        return _itkVectorPython.itkVectorSS4___repr__(self)

itkVectorSS4.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorSS4_SetVnlVector, None, itkVectorSS4)
itkVectorSS4.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorSS4_GetVnlVector, None, itkVectorSS4)
itkVectorSS4.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorSS4___iadd__, None, itkVectorSS4)
itkVectorSS4.__isub__ = new_instancemethod(_itkVectorPython.itkVectorSS4___isub__, None, itkVectorSS4)
itkVectorSS4.__neg__ = new_instancemethod(_itkVectorPython.itkVectorSS4___neg__, None, itkVectorSS4)
itkVectorSS4.__add__ = new_instancemethod(_itkVectorPython.itkVectorSS4___add__, None, itkVectorSS4)
itkVectorSS4.__sub__ = new_instancemethod(_itkVectorPython.itkVectorSS4___sub__, None, itkVectorSS4)
itkVectorSS4.__mul__ = new_instancemethod(_itkVectorPython.itkVectorSS4___mul__, None, itkVectorSS4)
itkVectorSS4.__eq__ = new_instancemethod(_itkVectorPython.itkVectorSS4___eq__, None, itkVectorSS4)
itkVectorSS4.__ne__ = new_instancemethod(_itkVectorPython.itkVectorSS4___ne__, None, itkVectorSS4)
itkVectorSS4.GetNorm = new_instancemethod(_itkVectorPython.itkVectorSS4_GetNorm, None, itkVectorSS4)
itkVectorSS4.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorSS4_GetSquaredNorm, None, itkVectorSS4)
itkVectorSS4.Normalize = new_instancemethod(_itkVectorPython.itkVectorSS4_Normalize, None, itkVectorSS4)
itkVectorSS4.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorSS4_SetNthComponent, None, itkVectorSS4)
itkVectorSS4.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorSS4___getitem__, None, itkVectorSS4)
itkVectorSS4.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorSS4___setitem__, None, itkVectorSS4)
itkVectorSS4.__repr__ = new_instancemethod(_itkVectorPython.itkVectorSS4___repr__, None, itkVectorSS4)
itkVectorSS4_swigregister = _itkVectorPython.itkVectorSS4_swigregister
itkVectorSS4_swigregister(itkVectorSS4)

def itkVectorSS4_GetVectorDimension() -> "unsigned int":
    """itkVectorSS4_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorSS4_GetVectorDimension()

def itkVectorSS4_GetNumberOfComponents() -> "unsigned int":
    """itkVectorSS4_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorSS4_GetNumberOfComponents()

def itkVectorSS4___len__() -> "unsigned int":
    """itkVectorSS4___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorSS4___len__()

class itkVectorSS5(itkFixedArrayPython.itkFixedArraySS5):
    """Proxy of C++ itkVectorSS5 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorSS5_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorSS') -> "void":
        """SetVnlVector(itkVectorSS5 self, vnl_vectorSS arg0)"""
        return _itkVectorPython.itkVectorSS5_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorSS":
        """
        GetVnlVector(itkVectorSS5 self) -> vnl_vector_refSS
        GetVnlVector(itkVectorSS5 self) -> vnl_vectorSS
        """
        return _itkVectorPython.itkVectorSS5_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorSS5

    def __init__(self, *args):
        """
        __init__(itkVectorSS5 self) -> itkVectorSS5
        __init__(itkVectorSS5 self, itkVectorSS5 arg0) -> itkVectorSS5
        __init__(itkVectorSS5 self, short const & r) -> itkVectorSS5
        __init__(itkVectorSS5 self, short const * r) -> itkVectorSS5
        """
        _itkVectorPython.itkVectorSS5_swiginit(self, _itkVectorPython.new_itkVectorSS5(*args))

    def __iadd__(self, vec: 'itkVectorSS5') -> "itkVectorSS5 const &":
        """__iadd__(itkVectorSS5 self, itkVectorSS5 vec) -> itkVectorSS5"""
        return _itkVectorPython.itkVectorSS5___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorSS5') -> "itkVectorSS5 const &":
        """__isub__(itkVectorSS5 self, itkVectorSS5 vec) -> itkVectorSS5"""
        return _itkVectorPython.itkVectorSS5___isub__(self, vec)


    def __neg__(self) -> "itkVectorSS5":
        """__neg__(itkVectorSS5 self) -> itkVectorSS5"""
        return _itkVectorPython.itkVectorSS5___neg__(self)


    def __add__(self, vec: 'itkVectorSS5') -> "itkVectorSS5":
        """__add__(itkVectorSS5 self, itkVectorSS5 vec) -> itkVectorSS5"""
        return _itkVectorPython.itkVectorSS5___add__(self, vec)


    def __sub__(self, vec: 'itkVectorSS5') -> "itkVectorSS5":
        """__sub__(itkVectorSS5 self, itkVectorSS5 vec) -> itkVectorSS5"""
        return _itkVectorPython.itkVectorSS5___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorSS5":
        """
        __mul__(itkVectorSS5 self, itkVectorSS5 vec) -> short
        __mul__(itkVectorSS5 self, short const & value) -> itkVectorSS5
        """
        return _itkVectorPython.itkVectorSS5___mul__(self, *args)


    def __eq__(self, v: 'itkVectorSS5') -> "bool":
        """__eq__(itkVectorSS5 self, itkVectorSS5 v) -> bool"""
        return _itkVectorPython.itkVectorSS5___eq__(self, v)


    def __ne__(self, v: 'itkVectorSS5') -> "bool":
        """__ne__(itkVectorSS5 self, itkVectorSS5 v) -> bool"""
        return _itkVectorPython.itkVectorSS5___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorSS5 self) -> double"""
        return _itkVectorPython.itkVectorSS5_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorSS5 self) -> double"""
        return _itkVectorPython.itkVectorSS5_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorSS5_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorSS5 self) -> double"""
        return _itkVectorPython.itkVectorSS5_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'short const &') -> "void":
        """SetNthComponent(itkVectorSS5 self, int c, short const & v)"""
        return _itkVectorPython.itkVectorSS5_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "short":
        """__getitem__(itkVectorSS5 self, unsigned long d) -> short"""
        return _itkVectorPython.itkVectorSS5___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'short') -> "void":
        """__setitem__(itkVectorSS5 self, unsigned long d, short v)"""
        return _itkVectorPython.itkVectorSS5___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorSS5___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorSS5 self) -> std::string"""
        return _itkVectorPython.itkVectorSS5___repr__(self)

itkVectorSS5.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorSS5_SetVnlVector, None, itkVectorSS5)
itkVectorSS5.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorSS5_GetVnlVector, None, itkVectorSS5)
itkVectorSS5.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorSS5___iadd__, None, itkVectorSS5)
itkVectorSS5.__isub__ = new_instancemethod(_itkVectorPython.itkVectorSS5___isub__, None, itkVectorSS5)
itkVectorSS5.__neg__ = new_instancemethod(_itkVectorPython.itkVectorSS5___neg__, None, itkVectorSS5)
itkVectorSS5.__add__ = new_instancemethod(_itkVectorPython.itkVectorSS5___add__, None, itkVectorSS5)
itkVectorSS5.__sub__ = new_instancemethod(_itkVectorPython.itkVectorSS5___sub__, None, itkVectorSS5)
itkVectorSS5.__mul__ = new_instancemethod(_itkVectorPython.itkVectorSS5___mul__, None, itkVectorSS5)
itkVectorSS5.__eq__ = new_instancemethod(_itkVectorPython.itkVectorSS5___eq__, None, itkVectorSS5)
itkVectorSS5.__ne__ = new_instancemethod(_itkVectorPython.itkVectorSS5___ne__, None, itkVectorSS5)
itkVectorSS5.GetNorm = new_instancemethod(_itkVectorPython.itkVectorSS5_GetNorm, None, itkVectorSS5)
itkVectorSS5.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorSS5_GetSquaredNorm, None, itkVectorSS5)
itkVectorSS5.Normalize = new_instancemethod(_itkVectorPython.itkVectorSS5_Normalize, None, itkVectorSS5)
itkVectorSS5.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorSS5_SetNthComponent, None, itkVectorSS5)
itkVectorSS5.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorSS5___getitem__, None, itkVectorSS5)
itkVectorSS5.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorSS5___setitem__, None, itkVectorSS5)
itkVectorSS5.__repr__ = new_instancemethod(_itkVectorPython.itkVectorSS5___repr__, None, itkVectorSS5)
itkVectorSS5_swigregister = _itkVectorPython.itkVectorSS5_swigregister
itkVectorSS5_swigregister(itkVectorSS5)

def itkVectorSS5_GetVectorDimension() -> "unsigned int":
    """itkVectorSS5_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorSS5_GetVectorDimension()

def itkVectorSS5_GetNumberOfComponents() -> "unsigned int":
    """itkVectorSS5_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorSS5_GetNumberOfComponents()

def itkVectorSS5___len__() -> "unsigned int":
    """itkVectorSS5___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorSS5___len__()

class itkVectorSS6(itkFixedArrayPython.itkFixedArraySS6):
    """Proxy of C++ itkVectorSS6 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorSS6_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorSS') -> "void":
        """SetVnlVector(itkVectorSS6 self, vnl_vectorSS arg0)"""
        return _itkVectorPython.itkVectorSS6_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorSS":
        """
        GetVnlVector(itkVectorSS6 self) -> vnl_vector_refSS
        GetVnlVector(itkVectorSS6 self) -> vnl_vectorSS
        """
        return _itkVectorPython.itkVectorSS6_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorSS6

    def __init__(self, *args):
        """
        __init__(itkVectorSS6 self) -> itkVectorSS6
        __init__(itkVectorSS6 self, itkVectorSS6 arg0) -> itkVectorSS6
        __init__(itkVectorSS6 self, short const & r) -> itkVectorSS6
        __init__(itkVectorSS6 self, short const * r) -> itkVectorSS6
        """
        _itkVectorPython.itkVectorSS6_swiginit(self, _itkVectorPython.new_itkVectorSS6(*args))

    def __iadd__(self, vec: 'itkVectorSS6') -> "itkVectorSS6 const &":
        """__iadd__(itkVectorSS6 self, itkVectorSS6 vec) -> itkVectorSS6"""
        return _itkVectorPython.itkVectorSS6___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorSS6') -> "itkVectorSS6 const &":
        """__isub__(itkVectorSS6 self, itkVectorSS6 vec) -> itkVectorSS6"""
        return _itkVectorPython.itkVectorSS6___isub__(self, vec)


    def __neg__(self) -> "itkVectorSS6":
        """__neg__(itkVectorSS6 self) -> itkVectorSS6"""
        return _itkVectorPython.itkVectorSS6___neg__(self)


    def __add__(self, vec: 'itkVectorSS6') -> "itkVectorSS6":
        """__add__(itkVectorSS6 self, itkVectorSS6 vec) -> itkVectorSS6"""
        return _itkVectorPython.itkVectorSS6___add__(self, vec)


    def __sub__(self, vec: 'itkVectorSS6') -> "itkVectorSS6":
        """__sub__(itkVectorSS6 self, itkVectorSS6 vec) -> itkVectorSS6"""
        return _itkVectorPython.itkVectorSS6___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorSS6":
        """
        __mul__(itkVectorSS6 self, itkVectorSS6 vec) -> short
        __mul__(itkVectorSS6 self, short const & value) -> itkVectorSS6
        """
        return _itkVectorPython.itkVectorSS6___mul__(self, *args)


    def __eq__(self, v: 'itkVectorSS6') -> "bool":
        """__eq__(itkVectorSS6 self, itkVectorSS6 v) -> bool"""
        return _itkVectorPython.itkVectorSS6___eq__(self, v)


    def __ne__(self, v: 'itkVectorSS6') -> "bool":
        """__ne__(itkVectorSS6 self, itkVectorSS6 v) -> bool"""
        return _itkVectorPython.itkVectorSS6___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorSS6 self) -> double"""
        return _itkVectorPython.itkVectorSS6_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorSS6 self) -> double"""
        return _itkVectorPython.itkVectorSS6_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorSS6_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorSS6 self) -> double"""
        return _itkVectorPython.itkVectorSS6_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'short const &') -> "void":
        """SetNthComponent(itkVectorSS6 self, int c, short const & v)"""
        return _itkVectorPython.itkVectorSS6_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "short":
        """__getitem__(itkVectorSS6 self, unsigned long d) -> short"""
        return _itkVectorPython.itkVectorSS6___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'short') -> "void":
        """__setitem__(itkVectorSS6 self, unsigned long d, short v)"""
        return _itkVectorPython.itkVectorSS6___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorSS6___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorSS6 self) -> std::string"""
        return _itkVectorPython.itkVectorSS6___repr__(self)

itkVectorSS6.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorSS6_SetVnlVector, None, itkVectorSS6)
itkVectorSS6.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorSS6_GetVnlVector, None, itkVectorSS6)
itkVectorSS6.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorSS6___iadd__, None, itkVectorSS6)
itkVectorSS6.__isub__ = new_instancemethod(_itkVectorPython.itkVectorSS6___isub__, None, itkVectorSS6)
itkVectorSS6.__neg__ = new_instancemethod(_itkVectorPython.itkVectorSS6___neg__, None, itkVectorSS6)
itkVectorSS6.__add__ = new_instancemethod(_itkVectorPython.itkVectorSS6___add__, None, itkVectorSS6)
itkVectorSS6.__sub__ = new_instancemethod(_itkVectorPython.itkVectorSS6___sub__, None, itkVectorSS6)
itkVectorSS6.__mul__ = new_instancemethod(_itkVectorPython.itkVectorSS6___mul__, None, itkVectorSS6)
itkVectorSS6.__eq__ = new_instancemethod(_itkVectorPython.itkVectorSS6___eq__, None, itkVectorSS6)
itkVectorSS6.__ne__ = new_instancemethod(_itkVectorPython.itkVectorSS6___ne__, None, itkVectorSS6)
itkVectorSS6.GetNorm = new_instancemethod(_itkVectorPython.itkVectorSS6_GetNorm, None, itkVectorSS6)
itkVectorSS6.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorSS6_GetSquaredNorm, None, itkVectorSS6)
itkVectorSS6.Normalize = new_instancemethod(_itkVectorPython.itkVectorSS6_Normalize, None, itkVectorSS6)
itkVectorSS6.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorSS6_SetNthComponent, None, itkVectorSS6)
itkVectorSS6.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorSS6___getitem__, None, itkVectorSS6)
itkVectorSS6.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorSS6___setitem__, None, itkVectorSS6)
itkVectorSS6.__repr__ = new_instancemethod(_itkVectorPython.itkVectorSS6___repr__, None, itkVectorSS6)
itkVectorSS6_swigregister = _itkVectorPython.itkVectorSS6_swigregister
itkVectorSS6_swigregister(itkVectorSS6)

def itkVectorSS6_GetVectorDimension() -> "unsigned int":
    """itkVectorSS6_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorSS6_GetVectorDimension()

def itkVectorSS6_GetNumberOfComponents() -> "unsigned int":
    """itkVectorSS6_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorSS6_GetNumberOfComponents()

def itkVectorSS6___len__() -> "unsigned int":
    """itkVectorSS6___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorSS6___len__()

class itkVectorUC1(itkFixedArrayPython.itkFixedArrayUC1):
    """Proxy of C++ itkVectorUC1 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorUC1_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorUC') -> "void":
        """SetVnlVector(itkVectorUC1 self, vnl_vectorUC arg0)"""
        return _itkVectorPython.itkVectorUC1_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorUC":
        """
        GetVnlVector(itkVectorUC1 self) -> vnl_vector_refUC
        GetVnlVector(itkVectorUC1 self) -> vnl_vectorUC
        """
        return _itkVectorPython.itkVectorUC1_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorUC1

    def __init__(self, *args):
        """
        __init__(itkVectorUC1 self) -> itkVectorUC1
        __init__(itkVectorUC1 self, itkVectorUC1 arg0) -> itkVectorUC1
        __init__(itkVectorUC1 self, unsigned char const & r) -> itkVectorUC1
        __init__(itkVectorUC1 self, unsigned char const * r) -> itkVectorUC1
        """
        _itkVectorPython.itkVectorUC1_swiginit(self, _itkVectorPython.new_itkVectorUC1(*args))

    def __iadd__(self, vec: 'itkVectorUC1') -> "itkVectorUC1 const &":
        """__iadd__(itkVectorUC1 self, itkVectorUC1 vec) -> itkVectorUC1"""
        return _itkVectorPython.itkVectorUC1___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorUC1') -> "itkVectorUC1 const &":
        """__isub__(itkVectorUC1 self, itkVectorUC1 vec) -> itkVectorUC1"""
        return _itkVectorPython.itkVectorUC1___isub__(self, vec)


    def __neg__(self) -> "itkVectorUC1":
        """__neg__(itkVectorUC1 self) -> itkVectorUC1"""
        return _itkVectorPython.itkVectorUC1___neg__(self)


    def __add__(self, vec: 'itkVectorUC1') -> "itkVectorUC1":
        """__add__(itkVectorUC1 self, itkVectorUC1 vec) -> itkVectorUC1"""
        return _itkVectorPython.itkVectorUC1___add__(self, vec)


    def __sub__(self, vec: 'itkVectorUC1') -> "itkVectorUC1":
        """__sub__(itkVectorUC1 self, itkVectorUC1 vec) -> itkVectorUC1"""
        return _itkVectorPython.itkVectorUC1___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorUC1":
        """
        __mul__(itkVectorUC1 self, itkVectorUC1 vec) -> unsigned char
        __mul__(itkVectorUC1 self, unsigned char const & value) -> itkVectorUC1
        """
        return _itkVectorPython.itkVectorUC1___mul__(self, *args)


    def __eq__(self, v: 'itkVectorUC1') -> "bool":
        """__eq__(itkVectorUC1 self, itkVectorUC1 v) -> bool"""
        return _itkVectorPython.itkVectorUC1___eq__(self, v)


    def __ne__(self, v: 'itkVectorUC1') -> "bool":
        """__ne__(itkVectorUC1 self, itkVectorUC1 v) -> bool"""
        return _itkVectorPython.itkVectorUC1___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorUC1 self) -> double"""
        return _itkVectorPython.itkVectorUC1_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorUC1 self) -> double"""
        return _itkVectorPython.itkVectorUC1_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorUC1_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorUC1 self) -> double"""
        return _itkVectorPython.itkVectorUC1_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'unsigned char const &') -> "void":
        """SetNthComponent(itkVectorUC1 self, int c, unsigned char const & v)"""
        return _itkVectorPython.itkVectorUC1_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "unsigned char":
        """__getitem__(itkVectorUC1 self, unsigned long d) -> unsigned char"""
        return _itkVectorPython.itkVectorUC1___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'unsigned char') -> "void":
        """__setitem__(itkVectorUC1 self, unsigned long d, unsigned char v)"""
        return _itkVectorPython.itkVectorUC1___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorUC1___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorUC1 self) -> std::string"""
        return _itkVectorPython.itkVectorUC1___repr__(self)

itkVectorUC1.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUC1_SetVnlVector, None, itkVectorUC1)
itkVectorUC1.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUC1_GetVnlVector, None, itkVectorUC1)
itkVectorUC1.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorUC1___iadd__, None, itkVectorUC1)
itkVectorUC1.__isub__ = new_instancemethod(_itkVectorPython.itkVectorUC1___isub__, None, itkVectorUC1)
itkVectorUC1.__neg__ = new_instancemethod(_itkVectorPython.itkVectorUC1___neg__, None, itkVectorUC1)
itkVectorUC1.__add__ = new_instancemethod(_itkVectorPython.itkVectorUC1___add__, None, itkVectorUC1)
itkVectorUC1.__sub__ = new_instancemethod(_itkVectorPython.itkVectorUC1___sub__, None, itkVectorUC1)
itkVectorUC1.__mul__ = new_instancemethod(_itkVectorPython.itkVectorUC1___mul__, None, itkVectorUC1)
itkVectorUC1.__eq__ = new_instancemethod(_itkVectorPython.itkVectorUC1___eq__, None, itkVectorUC1)
itkVectorUC1.__ne__ = new_instancemethod(_itkVectorPython.itkVectorUC1___ne__, None, itkVectorUC1)
itkVectorUC1.GetNorm = new_instancemethod(_itkVectorPython.itkVectorUC1_GetNorm, None, itkVectorUC1)
itkVectorUC1.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorUC1_GetSquaredNorm, None, itkVectorUC1)
itkVectorUC1.Normalize = new_instancemethod(_itkVectorPython.itkVectorUC1_Normalize, None, itkVectorUC1)
itkVectorUC1.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorUC1_SetNthComponent, None, itkVectorUC1)
itkVectorUC1.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorUC1___getitem__, None, itkVectorUC1)
itkVectorUC1.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorUC1___setitem__, None, itkVectorUC1)
itkVectorUC1.__repr__ = new_instancemethod(_itkVectorPython.itkVectorUC1___repr__, None, itkVectorUC1)
itkVectorUC1_swigregister = _itkVectorPython.itkVectorUC1_swigregister
itkVectorUC1_swigregister(itkVectorUC1)

def itkVectorUC1_GetVectorDimension() -> "unsigned int":
    """itkVectorUC1_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorUC1_GetVectorDimension()

def itkVectorUC1_GetNumberOfComponents() -> "unsigned int":
    """itkVectorUC1_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorUC1_GetNumberOfComponents()

def itkVectorUC1___len__() -> "unsigned int":
    """itkVectorUC1___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorUC1___len__()

class itkVectorUC2(itkFixedArrayPython.itkFixedArrayUC2):
    """Proxy of C++ itkVectorUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorUC2_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorUC') -> "void":
        """SetVnlVector(itkVectorUC2 self, vnl_vectorUC arg0)"""
        return _itkVectorPython.itkVectorUC2_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorUC":
        """
        GetVnlVector(itkVectorUC2 self) -> vnl_vector_refUC
        GetVnlVector(itkVectorUC2 self) -> vnl_vectorUC
        """
        return _itkVectorPython.itkVectorUC2_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorUC2

    def __init__(self, *args):
        """
        __init__(itkVectorUC2 self) -> itkVectorUC2
        __init__(itkVectorUC2 self, itkVectorUC2 arg0) -> itkVectorUC2
        __init__(itkVectorUC2 self, unsigned char const & r) -> itkVectorUC2
        __init__(itkVectorUC2 self, unsigned char const * r) -> itkVectorUC2
        """
        _itkVectorPython.itkVectorUC2_swiginit(self, _itkVectorPython.new_itkVectorUC2(*args))

    def __iadd__(self, vec: 'itkVectorUC2') -> "itkVectorUC2 const &":
        """__iadd__(itkVectorUC2 self, itkVectorUC2 vec) -> itkVectorUC2"""
        return _itkVectorPython.itkVectorUC2___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorUC2') -> "itkVectorUC2 const &":
        """__isub__(itkVectorUC2 self, itkVectorUC2 vec) -> itkVectorUC2"""
        return _itkVectorPython.itkVectorUC2___isub__(self, vec)


    def __neg__(self) -> "itkVectorUC2":
        """__neg__(itkVectorUC2 self) -> itkVectorUC2"""
        return _itkVectorPython.itkVectorUC2___neg__(self)


    def __add__(self, vec: 'itkVectorUC2') -> "itkVectorUC2":
        """__add__(itkVectorUC2 self, itkVectorUC2 vec) -> itkVectorUC2"""
        return _itkVectorPython.itkVectorUC2___add__(self, vec)


    def __sub__(self, vec: 'itkVectorUC2') -> "itkVectorUC2":
        """__sub__(itkVectorUC2 self, itkVectorUC2 vec) -> itkVectorUC2"""
        return _itkVectorPython.itkVectorUC2___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorUC2":
        """
        __mul__(itkVectorUC2 self, itkVectorUC2 vec) -> unsigned char
        __mul__(itkVectorUC2 self, unsigned char const & value) -> itkVectorUC2
        """
        return _itkVectorPython.itkVectorUC2___mul__(self, *args)


    def __eq__(self, v: 'itkVectorUC2') -> "bool":
        """__eq__(itkVectorUC2 self, itkVectorUC2 v) -> bool"""
        return _itkVectorPython.itkVectorUC2___eq__(self, v)


    def __ne__(self, v: 'itkVectorUC2') -> "bool":
        """__ne__(itkVectorUC2 self, itkVectorUC2 v) -> bool"""
        return _itkVectorPython.itkVectorUC2___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorUC2 self) -> double"""
        return _itkVectorPython.itkVectorUC2_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorUC2 self) -> double"""
        return _itkVectorPython.itkVectorUC2_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorUC2_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorUC2 self) -> double"""
        return _itkVectorPython.itkVectorUC2_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'unsigned char const &') -> "void":
        """SetNthComponent(itkVectorUC2 self, int c, unsigned char const & v)"""
        return _itkVectorPython.itkVectorUC2_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "unsigned char":
        """__getitem__(itkVectorUC2 self, unsigned long d) -> unsigned char"""
        return _itkVectorPython.itkVectorUC2___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'unsigned char') -> "void":
        """__setitem__(itkVectorUC2 self, unsigned long d, unsigned char v)"""
        return _itkVectorPython.itkVectorUC2___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorUC2___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorUC2 self) -> std::string"""
        return _itkVectorPython.itkVectorUC2___repr__(self)

itkVectorUC2.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUC2_SetVnlVector, None, itkVectorUC2)
itkVectorUC2.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUC2_GetVnlVector, None, itkVectorUC2)
itkVectorUC2.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorUC2___iadd__, None, itkVectorUC2)
itkVectorUC2.__isub__ = new_instancemethod(_itkVectorPython.itkVectorUC2___isub__, None, itkVectorUC2)
itkVectorUC2.__neg__ = new_instancemethod(_itkVectorPython.itkVectorUC2___neg__, None, itkVectorUC2)
itkVectorUC2.__add__ = new_instancemethod(_itkVectorPython.itkVectorUC2___add__, None, itkVectorUC2)
itkVectorUC2.__sub__ = new_instancemethod(_itkVectorPython.itkVectorUC2___sub__, None, itkVectorUC2)
itkVectorUC2.__mul__ = new_instancemethod(_itkVectorPython.itkVectorUC2___mul__, None, itkVectorUC2)
itkVectorUC2.__eq__ = new_instancemethod(_itkVectorPython.itkVectorUC2___eq__, None, itkVectorUC2)
itkVectorUC2.__ne__ = new_instancemethod(_itkVectorPython.itkVectorUC2___ne__, None, itkVectorUC2)
itkVectorUC2.GetNorm = new_instancemethod(_itkVectorPython.itkVectorUC2_GetNorm, None, itkVectorUC2)
itkVectorUC2.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorUC2_GetSquaredNorm, None, itkVectorUC2)
itkVectorUC2.Normalize = new_instancemethod(_itkVectorPython.itkVectorUC2_Normalize, None, itkVectorUC2)
itkVectorUC2.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorUC2_SetNthComponent, None, itkVectorUC2)
itkVectorUC2.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorUC2___getitem__, None, itkVectorUC2)
itkVectorUC2.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorUC2___setitem__, None, itkVectorUC2)
itkVectorUC2.__repr__ = new_instancemethod(_itkVectorPython.itkVectorUC2___repr__, None, itkVectorUC2)
itkVectorUC2_swigregister = _itkVectorPython.itkVectorUC2_swigregister
itkVectorUC2_swigregister(itkVectorUC2)

def itkVectorUC2_GetVectorDimension() -> "unsigned int":
    """itkVectorUC2_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorUC2_GetVectorDimension()

def itkVectorUC2_GetNumberOfComponents() -> "unsigned int":
    """itkVectorUC2_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorUC2_GetNumberOfComponents()

def itkVectorUC2___len__() -> "unsigned int":
    """itkVectorUC2___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorUC2___len__()

class itkVectorUC3(itkFixedArrayPython.itkFixedArrayUC3):
    """Proxy of C++ itkVectorUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorUC3_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorUC') -> "void":
        """SetVnlVector(itkVectorUC3 self, vnl_vectorUC arg0)"""
        return _itkVectorPython.itkVectorUC3_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorUC":
        """
        GetVnlVector(itkVectorUC3 self) -> vnl_vector_refUC
        GetVnlVector(itkVectorUC3 self) -> vnl_vectorUC
        """
        return _itkVectorPython.itkVectorUC3_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorUC3

    def __init__(self, *args):
        """
        __init__(itkVectorUC3 self) -> itkVectorUC3
        __init__(itkVectorUC3 self, itkVectorUC3 arg0) -> itkVectorUC3
        __init__(itkVectorUC3 self, unsigned char const & r) -> itkVectorUC3
        __init__(itkVectorUC3 self, unsigned char const * r) -> itkVectorUC3
        """
        _itkVectorPython.itkVectorUC3_swiginit(self, _itkVectorPython.new_itkVectorUC3(*args))

    def __iadd__(self, vec: 'itkVectorUC3') -> "itkVectorUC3 const &":
        """__iadd__(itkVectorUC3 self, itkVectorUC3 vec) -> itkVectorUC3"""
        return _itkVectorPython.itkVectorUC3___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorUC3') -> "itkVectorUC3 const &":
        """__isub__(itkVectorUC3 self, itkVectorUC3 vec) -> itkVectorUC3"""
        return _itkVectorPython.itkVectorUC3___isub__(self, vec)


    def __neg__(self) -> "itkVectorUC3":
        """__neg__(itkVectorUC3 self) -> itkVectorUC3"""
        return _itkVectorPython.itkVectorUC3___neg__(self)


    def __add__(self, vec: 'itkVectorUC3') -> "itkVectorUC3":
        """__add__(itkVectorUC3 self, itkVectorUC3 vec) -> itkVectorUC3"""
        return _itkVectorPython.itkVectorUC3___add__(self, vec)


    def __sub__(self, vec: 'itkVectorUC3') -> "itkVectorUC3":
        """__sub__(itkVectorUC3 self, itkVectorUC3 vec) -> itkVectorUC3"""
        return _itkVectorPython.itkVectorUC3___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorUC3":
        """
        __mul__(itkVectorUC3 self, itkVectorUC3 vec) -> unsigned char
        __mul__(itkVectorUC3 self, unsigned char const & value) -> itkVectorUC3
        """
        return _itkVectorPython.itkVectorUC3___mul__(self, *args)


    def __eq__(self, v: 'itkVectorUC3') -> "bool":
        """__eq__(itkVectorUC3 self, itkVectorUC3 v) -> bool"""
        return _itkVectorPython.itkVectorUC3___eq__(self, v)


    def __ne__(self, v: 'itkVectorUC3') -> "bool":
        """__ne__(itkVectorUC3 self, itkVectorUC3 v) -> bool"""
        return _itkVectorPython.itkVectorUC3___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorUC3 self) -> double"""
        return _itkVectorPython.itkVectorUC3_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorUC3 self) -> double"""
        return _itkVectorPython.itkVectorUC3_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorUC3_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorUC3 self) -> double"""
        return _itkVectorPython.itkVectorUC3_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'unsigned char const &') -> "void":
        """SetNthComponent(itkVectorUC3 self, int c, unsigned char const & v)"""
        return _itkVectorPython.itkVectorUC3_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "unsigned char":
        """__getitem__(itkVectorUC3 self, unsigned long d) -> unsigned char"""
        return _itkVectorPython.itkVectorUC3___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'unsigned char') -> "void":
        """__setitem__(itkVectorUC3 self, unsigned long d, unsigned char v)"""
        return _itkVectorPython.itkVectorUC3___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorUC3___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorUC3 self) -> std::string"""
        return _itkVectorPython.itkVectorUC3___repr__(self)

itkVectorUC3.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUC3_SetVnlVector, None, itkVectorUC3)
itkVectorUC3.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUC3_GetVnlVector, None, itkVectorUC3)
itkVectorUC3.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorUC3___iadd__, None, itkVectorUC3)
itkVectorUC3.__isub__ = new_instancemethod(_itkVectorPython.itkVectorUC3___isub__, None, itkVectorUC3)
itkVectorUC3.__neg__ = new_instancemethod(_itkVectorPython.itkVectorUC3___neg__, None, itkVectorUC3)
itkVectorUC3.__add__ = new_instancemethod(_itkVectorPython.itkVectorUC3___add__, None, itkVectorUC3)
itkVectorUC3.__sub__ = new_instancemethod(_itkVectorPython.itkVectorUC3___sub__, None, itkVectorUC3)
itkVectorUC3.__mul__ = new_instancemethod(_itkVectorPython.itkVectorUC3___mul__, None, itkVectorUC3)
itkVectorUC3.__eq__ = new_instancemethod(_itkVectorPython.itkVectorUC3___eq__, None, itkVectorUC3)
itkVectorUC3.__ne__ = new_instancemethod(_itkVectorPython.itkVectorUC3___ne__, None, itkVectorUC3)
itkVectorUC3.GetNorm = new_instancemethod(_itkVectorPython.itkVectorUC3_GetNorm, None, itkVectorUC3)
itkVectorUC3.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorUC3_GetSquaredNorm, None, itkVectorUC3)
itkVectorUC3.Normalize = new_instancemethod(_itkVectorPython.itkVectorUC3_Normalize, None, itkVectorUC3)
itkVectorUC3.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorUC3_SetNthComponent, None, itkVectorUC3)
itkVectorUC3.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorUC3___getitem__, None, itkVectorUC3)
itkVectorUC3.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorUC3___setitem__, None, itkVectorUC3)
itkVectorUC3.__repr__ = new_instancemethod(_itkVectorPython.itkVectorUC3___repr__, None, itkVectorUC3)
itkVectorUC3_swigregister = _itkVectorPython.itkVectorUC3_swigregister
itkVectorUC3_swigregister(itkVectorUC3)

def itkVectorUC3_GetVectorDimension() -> "unsigned int":
    """itkVectorUC3_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorUC3_GetVectorDimension()

def itkVectorUC3_GetNumberOfComponents() -> "unsigned int":
    """itkVectorUC3_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorUC3_GetNumberOfComponents()

def itkVectorUC3___len__() -> "unsigned int":
    """itkVectorUC3___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorUC3___len__()

class itkVectorUC4(itkFixedArrayPython.itkFixedArrayUC4):
    """Proxy of C++ itkVectorUC4 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorUC4_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorUC') -> "void":
        """SetVnlVector(itkVectorUC4 self, vnl_vectorUC arg0)"""
        return _itkVectorPython.itkVectorUC4_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorUC":
        """
        GetVnlVector(itkVectorUC4 self) -> vnl_vector_refUC
        GetVnlVector(itkVectorUC4 self) -> vnl_vectorUC
        """
        return _itkVectorPython.itkVectorUC4_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorUC4

    def __init__(self, *args):
        """
        __init__(itkVectorUC4 self) -> itkVectorUC4
        __init__(itkVectorUC4 self, itkVectorUC4 arg0) -> itkVectorUC4
        __init__(itkVectorUC4 self, unsigned char const & r) -> itkVectorUC4
        __init__(itkVectorUC4 self, unsigned char const * r) -> itkVectorUC4
        """
        _itkVectorPython.itkVectorUC4_swiginit(self, _itkVectorPython.new_itkVectorUC4(*args))

    def __iadd__(self, vec: 'itkVectorUC4') -> "itkVectorUC4 const &":
        """__iadd__(itkVectorUC4 self, itkVectorUC4 vec) -> itkVectorUC4"""
        return _itkVectorPython.itkVectorUC4___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorUC4') -> "itkVectorUC4 const &":
        """__isub__(itkVectorUC4 self, itkVectorUC4 vec) -> itkVectorUC4"""
        return _itkVectorPython.itkVectorUC4___isub__(self, vec)


    def __neg__(self) -> "itkVectorUC4":
        """__neg__(itkVectorUC4 self) -> itkVectorUC4"""
        return _itkVectorPython.itkVectorUC4___neg__(self)


    def __add__(self, vec: 'itkVectorUC4') -> "itkVectorUC4":
        """__add__(itkVectorUC4 self, itkVectorUC4 vec) -> itkVectorUC4"""
        return _itkVectorPython.itkVectorUC4___add__(self, vec)


    def __sub__(self, vec: 'itkVectorUC4') -> "itkVectorUC4":
        """__sub__(itkVectorUC4 self, itkVectorUC4 vec) -> itkVectorUC4"""
        return _itkVectorPython.itkVectorUC4___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorUC4":
        """
        __mul__(itkVectorUC4 self, itkVectorUC4 vec) -> unsigned char
        __mul__(itkVectorUC4 self, unsigned char const & value) -> itkVectorUC4
        """
        return _itkVectorPython.itkVectorUC4___mul__(self, *args)


    def __eq__(self, v: 'itkVectorUC4') -> "bool":
        """__eq__(itkVectorUC4 self, itkVectorUC4 v) -> bool"""
        return _itkVectorPython.itkVectorUC4___eq__(self, v)


    def __ne__(self, v: 'itkVectorUC4') -> "bool":
        """__ne__(itkVectorUC4 self, itkVectorUC4 v) -> bool"""
        return _itkVectorPython.itkVectorUC4___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorUC4 self) -> double"""
        return _itkVectorPython.itkVectorUC4_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorUC4 self) -> double"""
        return _itkVectorPython.itkVectorUC4_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorUC4_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorUC4 self) -> double"""
        return _itkVectorPython.itkVectorUC4_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'unsigned char const &') -> "void":
        """SetNthComponent(itkVectorUC4 self, int c, unsigned char const & v)"""
        return _itkVectorPython.itkVectorUC4_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "unsigned char":
        """__getitem__(itkVectorUC4 self, unsigned long d) -> unsigned char"""
        return _itkVectorPython.itkVectorUC4___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'unsigned char') -> "void":
        """__setitem__(itkVectorUC4 self, unsigned long d, unsigned char v)"""
        return _itkVectorPython.itkVectorUC4___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorUC4___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorUC4 self) -> std::string"""
        return _itkVectorPython.itkVectorUC4___repr__(self)

itkVectorUC4.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUC4_SetVnlVector, None, itkVectorUC4)
itkVectorUC4.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUC4_GetVnlVector, None, itkVectorUC4)
itkVectorUC4.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorUC4___iadd__, None, itkVectorUC4)
itkVectorUC4.__isub__ = new_instancemethod(_itkVectorPython.itkVectorUC4___isub__, None, itkVectorUC4)
itkVectorUC4.__neg__ = new_instancemethod(_itkVectorPython.itkVectorUC4___neg__, None, itkVectorUC4)
itkVectorUC4.__add__ = new_instancemethod(_itkVectorPython.itkVectorUC4___add__, None, itkVectorUC4)
itkVectorUC4.__sub__ = new_instancemethod(_itkVectorPython.itkVectorUC4___sub__, None, itkVectorUC4)
itkVectorUC4.__mul__ = new_instancemethod(_itkVectorPython.itkVectorUC4___mul__, None, itkVectorUC4)
itkVectorUC4.__eq__ = new_instancemethod(_itkVectorPython.itkVectorUC4___eq__, None, itkVectorUC4)
itkVectorUC4.__ne__ = new_instancemethod(_itkVectorPython.itkVectorUC4___ne__, None, itkVectorUC4)
itkVectorUC4.GetNorm = new_instancemethod(_itkVectorPython.itkVectorUC4_GetNorm, None, itkVectorUC4)
itkVectorUC4.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorUC4_GetSquaredNorm, None, itkVectorUC4)
itkVectorUC4.Normalize = new_instancemethod(_itkVectorPython.itkVectorUC4_Normalize, None, itkVectorUC4)
itkVectorUC4.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorUC4_SetNthComponent, None, itkVectorUC4)
itkVectorUC4.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorUC4___getitem__, None, itkVectorUC4)
itkVectorUC4.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorUC4___setitem__, None, itkVectorUC4)
itkVectorUC4.__repr__ = new_instancemethod(_itkVectorPython.itkVectorUC4___repr__, None, itkVectorUC4)
itkVectorUC4_swigregister = _itkVectorPython.itkVectorUC4_swigregister
itkVectorUC4_swigregister(itkVectorUC4)

def itkVectorUC4_GetVectorDimension() -> "unsigned int":
    """itkVectorUC4_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorUC4_GetVectorDimension()

def itkVectorUC4_GetNumberOfComponents() -> "unsigned int":
    """itkVectorUC4_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorUC4_GetNumberOfComponents()

def itkVectorUC4___len__() -> "unsigned int":
    """itkVectorUC4___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorUC4___len__()

class itkVectorUC5(itkFixedArrayPython.itkFixedArrayUC5):
    """Proxy of C++ itkVectorUC5 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorUC5_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorUC') -> "void":
        """SetVnlVector(itkVectorUC5 self, vnl_vectorUC arg0)"""
        return _itkVectorPython.itkVectorUC5_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorUC":
        """
        GetVnlVector(itkVectorUC5 self) -> vnl_vector_refUC
        GetVnlVector(itkVectorUC5 self) -> vnl_vectorUC
        """
        return _itkVectorPython.itkVectorUC5_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorUC5

    def __init__(self, *args):
        """
        __init__(itkVectorUC5 self) -> itkVectorUC5
        __init__(itkVectorUC5 self, itkVectorUC5 arg0) -> itkVectorUC5
        __init__(itkVectorUC5 self, unsigned char const & r) -> itkVectorUC5
        __init__(itkVectorUC5 self, unsigned char const * r) -> itkVectorUC5
        """
        _itkVectorPython.itkVectorUC5_swiginit(self, _itkVectorPython.new_itkVectorUC5(*args))

    def __iadd__(self, vec: 'itkVectorUC5') -> "itkVectorUC5 const &":
        """__iadd__(itkVectorUC5 self, itkVectorUC5 vec) -> itkVectorUC5"""
        return _itkVectorPython.itkVectorUC5___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorUC5') -> "itkVectorUC5 const &":
        """__isub__(itkVectorUC5 self, itkVectorUC5 vec) -> itkVectorUC5"""
        return _itkVectorPython.itkVectorUC5___isub__(self, vec)


    def __neg__(self) -> "itkVectorUC5":
        """__neg__(itkVectorUC5 self) -> itkVectorUC5"""
        return _itkVectorPython.itkVectorUC5___neg__(self)


    def __add__(self, vec: 'itkVectorUC5') -> "itkVectorUC5":
        """__add__(itkVectorUC5 self, itkVectorUC5 vec) -> itkVectorUC5"""
        return _itkVectorPython.itkVectorUC5___add__(self, vec)


    def __sub__(self, vec: 'itkVectorUC5') -> "itkVectorUC5":
        """__sub__(itkVectorUC5 self, itkVectorUC5 vec) -> itkVectorUC5"""
        return _itkVectorPython.itkVectorUC5___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorUC5":
        """
        __mul__(itkVectorUC5 self, itkVectorUC5 vec) -> unsigned char
        __mul__(itkVectorUC5 self, unsigned char const & value) -> itkVectorUC5
        """
        return _itkVectorPython.itkVectorUC5___mul__(self, *args)


    def __eq__(self, v: 'itkVectorUC5') -> "bool":
        """__eq__(itkVectorUC5 self, itkVectorUC5 v) -> bool"""
        return _itkVectorPython.itkVectorUC5___eq__(self, v)


    def __ne__(self, v: 'itkVectorUC5') -> "bool":
        """__ne__(itkVectorUC5 self, itkVectorUC5 v) -> bool"""
        return _itkVectorPython.itkVectorUC5___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorUC5 self) -> double"""
        return _itkVectorPython.itkVectorUC5_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorUC5 self) -> double"""
        return _itkVectorPython.itkVectorUC5_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorUC5_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorUC5 self) -> double"""
        return _itkVectorPython.itkVectorUC5_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'unsigned char const &') -> "void":
        """SetNthComponent(itkVectorUC5 self, int c, unsigned char const & v)"""
        return _itkVectorPython.itkVectorUC5_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "unsigned char":
        """__getitem__(itkVectorUC5 self, unsigned long d) -> unsigned char"""
        return _itkVectorPython.itkVectorUC5___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'unsigned char') -> "void":
        """__setitem__(itkVectorUC5 self, unsigned long d, unsigned char v)"""
        return _itkVectorPython.itkVectorUC5___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorUC5___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorUC5 self) -> std::string"""
        return _itkVectorPython.itkVectorUC5___repr__(self)

itkVectorUC5.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUC5_SetVnlVector, None, itkVectorUC5)
itkVectorUC5.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUC5_GetVnlVector, None, itkVectorUC5)
itkVectorUC5.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorUC5___iadd__, None, itkVectorUC5)
itkVectorUC5.__isub__ = new_instancemethod(_itkVectorPython.itkVectorUC5___isub__, None, itkVectorUC5)
itkVectorUC5.__neg__ = new_instancemethod(_itkVectorPython.itkVectorUC5___neg__, None, itkVectorUC5)
itkVectorUC5.__add__ = new_instancemethod(_itkVectorPython.itkVectorUC5___add__, None, itkVectorUC5)
itkVectorUC5.__sub__ = new_instancemethod(_itkVectorPython.itkVectorUC5___sub__, None, itkVectorUC5)
itkVectorUC5.__mul__ = new_instancemethod(_itkVectorPython.itkVectorUC5___mul__, None, itkVectorUC5)
itkVectorUC5.__eq__ = new_instancemethod(_itkVectorPython.itkVectorUC5___eq__, None, itkVectorUC5)
itkVectorUC5.__ne__ = new_instancemethod(_itkVectorPython.itkVectorUC5___ne__, None, itkVectorUC5)
itkVectorUC5.GetNorm = new_instancemethod(_itkVectorPython.itkVectorUC5_GetNorm, None, itkVectorUC5)
itkVectorUC5.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorUC5_GetSquaredNorm, None, itkVectorUC5)
itkVectorUC5.Normalize = new_instancemethod(_itkVectorPython.itkVectorUC5_Normalize, None, itkVectorUC5)
itkVectorUC5.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorUC5_SetNthComponent, None, itkVectorUC5)
itkVectorUC5.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorUC5___getitem__, None, itkVectorUC5)
itkVectorUC5.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorUC5___setitem__, None, itkVectorUC5)
itkVectorUC5.__repr__ = new_instancemethod(_itkVectorPython.itkVectorUC5___repr__, None, itkVectorUC5)
itkVectorUC5_swigregister = _itkVectorPython.itkVectorUC5_swigregister
itkVectorUC5_swigregister(itkVectorUC5)

def itkVectorUC5_GetVectorDimension() -> "unsigned int":
    """itkVectorUC5_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorUC5_GetVectorDimension()

def itkVectorUC5_GetNumberOfComponents() -> "unsigned int":
    """itkVectorUC5_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorUC5_GetNumberOfComponents()

def itkVectorUC5___len__() -> "unsigned int":
    """itkVectorUC5___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorUC5___len__()

class itkVectorUC6(itkFixedArrayPython.itkFixedArrayUC6):
    """Proxy of C++ itkVectorUC6 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorUC6_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorUC') -> "void":
        """SetVnlVector(itkVectorUC6 self, vnl_vectorUC arg0)"""
        return _itkVectorPython.itkVectorUC6_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorUC":
        """
        GetVnlVector(itkVectorUC6 self) -> vnl_vector_refUC
        GetVnlVector(itkVectorUC6 self) -> vnl_vectorUC
        """
        return _itkVectorPython.itkVectorUC6_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorUC6

    def __init__(self, *args):
        """
        __init__(itkVectorUC6 self) -> itkVectorUC6
        __init__(itkVectorUC6 self, itkVectorUC6 arg0) -> itkVectorUC6
        __init__(itkVectorUC6 self, unsigned char const & r) -> itkVectorUC6
        __init__(itkVectorUC6 self, unsigned char const * r) -> itkVectorUC6
        """
        _itkVectorPython.itkVectorUC6_swiginit(self, _itkVectorPython.new_itkVectorUC6(*args))

    def __iadd__(self, vec: 'itkVectorUC6') -> "itkVectorUC6 const &":
        """__iadd__(itkVectorUC6 self, itkVectorUC6 vec) -> itkVectorUC6"""
        return _itkVectorPython.itkVectorUC6___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorUC6') -> "itkVectorUC6 const &":
        """__isub__(itkVectorUC6 self, itkVectorUC6 vec) -> itkVectorUC6"""
        return _itkVectorPython.itkVectorUC6___isub__(self, vec)


    def __neg__(self) -> "itkVectorUC6":
        """__neg__(itkVectorUC6 self) -> itkVectorUC6"""
        return _itkVectorPython.itkVectorUC6___neg__(self)


    def __add__(self, vec: 'itkVectorUC6') -> "itkVectorUC6":
        """__add__(itkVectorUC6 self, itkVectorUC6 vec) -> itkVectorUC6"""
        return _itkVectorPython.itkVectorUC6___add__(self, vec)


    def __sub__(self, vec: 'itkVectorUC6') -> "itkVectorUC6":
        """__sub__(itkVectorUC6 self, itkVectorUC6 vec) -> itkVectorUC6"""
        return _itkVectorPython.itkVectorUC6___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorUC6":
        """
        __mul__(itkVectorUC6 self, itkVectorUC6 vec) -> unsigned char
        __mul__(itkVectorUC6 self, unsigned char const & value) -> itkVectorUC6
        """
        return _itkVectorPython.itkVectorUC6___mul__(self, *args)


    def __eq__(self, v: 'itkVectorUC6') -> "bool":
        """__eq__(itkVectorUC6 self, itkVectorUC6 v) -> bool"""
        return _itkVectorPython.itkVectorUC6___eq__(self, v)


    def __ne__(self, v: 'itkVectorUC6') -> "bool":
        """__ne__(itkVectorUC6 self, itkVectorUC6 v) -> bool"""
        return _itkVectorPython.itkVectorUC6___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorUC6 self) -> double"""
        return _itkVectorPython.itkVectorUC6_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorUC6 self) -> double"""
        return _itkVectorPython.itkVectorUC6_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorUC6_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorUC6 self) -> double"""
        return _itkVectorPython.itkVectorUC6_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'unsigned char const &') -> "void":
        """SetNthComponent(itkVectorUC6 self, int c, unsigned char const & v)"""
        return _itkVectorPython.itkVectorUC6_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "unsigned char":
        """__getitem__(itkVectorUC6 self, unsigned long d) -> unsigned char"""
        return _itkVectorPython.itkVectorUC6___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'unsigned char') -> "void":
        """__setitem__(itkVectorUC6 self, unsigned long d, unsigned char v)"""
        return _itkVectorPython.itkVectorUC6___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorUC6___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorUC6 self) -> std::string"""
        return _itkVectorPython.itkVectorUC6___repr__(self)

itkVectorUC6.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUC6_SetVnlVector, None, itkVectorUC6)
itkVectorUC6.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUC6_GetVnlVector, None, itkVectorUC6)
itkVectorUC6.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorUC6___iadd__, None, itkVectorUC6)
itkVectorUC6.__isub__ = new_instancemethod(_itkVectorPython.itkVectorUC6___isub__, None, itkVectorUC6)
itkVectorUC6.__neg__ = new_instancemethod(_itkVectorPython.itkVectorUC6___neg__, None, itkVectorUC6)
itkVectorUC6.__add__ = new_instancemethod(_itkVectorPython.itkVectorUC6___add__, None, itkVectorUC6)
itkVectorUC6.__sub__ = new_instancemethod(_itkVectorPython.itkVectorUC6___sub__, None, itkVectorUC6)
itkVectorUC6.__mul__ = new_instancemethod(_itkVectorPython.itkVectorUC6___mul__, None, itkVectorUC6)
itkVectorUC6.__eq__ = new_instancemethod(_itkVectorPython.itkVectorUC6___eq__, None, itkVectorUC6)
itkVectorUC6.__ne__ = new_instancemethod(_itkVectorPython.itkVectorUC6___ne__, None, itkVectorUC6)
itkVectorUC6.GetNorm = new_instancemethod(_itkVectorPython.itkVectorUC6_GetNorm, None, itkVectorUC6)
itkVectorUC6.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorUC6_GetSquaredNorm, None, itkVectorUC6)
itkVectorUC6.Normalize = new_instancemethod(_itkVectorPython.itkVectorUC6_Normalize, None, itkVectorUC6)
itkVectorUC6.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorUC6_SetNthComponent, None, itkVectorUC6)
itkVectorUC6.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorUC6___getitem__, None, itkVectorUC6)
itkVectorUC6.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorUC6___setitem__, None, itkVectorUC6)
itkVectorUC6.__repr__ = new_instancemethod(_itkVectorPython.itkVectorUC6___repr__, None, itkVectorUC6)
itkVectorUC6_swigregister = _itkVectorPython.itkVectorUC6_swigregister
itkVectorUC6_swigregister(itkVectorUC6)

def itkVectorUC6_GetVectorDimension() -> "unsigned int":
    """itkVectorUC6_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorUC6_GetVectorDimension()

def itkVectorUC6_GetNumberOfComponents() -> "unsigned int":
    """itkVectorUC6_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorUC6_GetNumberOfComponents()

def itkVectorUC6___len__() -> "unsigned int":
    """itkVectorUC6___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorUC6___len__()

class itkVectorUS1(itkFixedArrayPython.itkFixedArrayUS1):
    """Proxy of C++ itkVectorUS1 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorUS1_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorUS') -> "void":
        """SetVnlVector(itkVectorUS1 self, vnl_vectorUS arg0)"""
        return _itkVectorPython.itkVectorUS1_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorUS":
        """
        GetVnlVector(itkVectorUS1 self) -> vnl_vector_refUS
        GetVnlVector(itkVectorUS1 self) -> vnl_vectorUS
        """
        return _itkVectorPython.itkVectorUS1_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorUS1

    def __init__(self, *args):
        """
        __init__(itkVectorUS1 self) -> itkVectorUS1
        __init__(itkVectorUS1 self, itkVectorUS1 arg0) -> itkVectorUS1
        __init__(itkVectorUS1 self, unsigned short const & r) -> itkVectorUS1
        __init__(itkVectorUS1 self, unsigned short const * r) -> itkVectorUS1
        """
        _itkVectorPython.itkVectorUS1_swiginit(self, _itkVectorPython.new_itkVectorUS1(*args))

    def __iadd__(self, vec: 'itkVectorUS1') -> "itkVectorUS1 const &":
        """__iadd__(itkVectorUS1 self, itkVectorUS1 vec) -> itkVectorUS1"""
        return _itkVectorPython.itkVectorUS1___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorUS1') -> "itkVectorUS1 const &":
        """__isub__(itkVectorUS1 self, itkVectorUS1 vec) -> itkVectorUS1"""
        return _itkVectorPython.itkVectorUS1___isub__(self, vec)


    def __neg__(self) -> "itkVectorUS1":
        """__neg__(itkVectorUS1 self) -> itkVectorUS1"""
        return _itkVectorPython.itkVectorUS1___neg__(self)


    def __add__(self, vec: 'itkVectorUS1') -> "itkVectorUS1":
        """__add__(itkVectorUS1 self, itkVectorUS1 vec) -> itkVectorUS1"""
        return _itkVectorPython.itkVectorUS1___add__(self, vec)


    def __sub__(self, vec: 'itkVectorUS1') -> "itkVectorUS1":
        """__sub__(itkVectorUS1 self, itkVectorUS1 vec) -> itkVectorUS1"""
        return _itkVectorPython.itkVectorUS1___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorUS1":
        """
        __mul__(itkVectorUS1 self, itkVectorUS1 vec) -> unsigned short
        __mul__(itkVectorUS1 self, unsigned short const & value) -> itkVectorUS1
        """
        return _itkVectorPython.itkVectorUS1___mul__(self, *args)


    def __eq__(self, v: 'itkVectorUS1') -> "bool":
        """__eq__(itkVectorUS1 self, itkVectorUS1 v) -> bool"""
        return _itkVectorPython.itkVectorUS1___eq__(self, v)


    def __ne__(self, v: 'itkVectorUS1') -> "bool":
        """__ne__(itkVectorUS1 self, itkVectorUS1 v) -> bool"""
        return _itkVectorPython.itkVectorUS1___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorUS1 self) -> double"""
        return _itkVectorPython.itkVectorUS1_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorUS1 self) -> double"""
        return _itkVectorPython.itkVectorUS1_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorUS1_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorUS1 self) -> double"""
        return _itkVectorPython.itkVectorUS1_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'unsigned short const &') -> "void":
        """SetNthComponent(itkVectorUS1 self, int c, unsigned short const & v)"""
        return _itkVectorPython.itkVectorUS1_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "unsigned short":
        """__getitem__(itkVectorUS1 self, unsigned long d) -> unsigned short"""
        return _itkVectorPython.itkVectorUS1___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'unsigned short') -> "void":
        """__setitem__(itkVectorUS1 self, unsigned long d, unsigned short v)"""
        return _itkVectorPython.itkVectorUS1___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorUS1___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorUS1 self) -> std::string"""
        return _itkVectorPython.itkVectorUS1___repr__(self)

itkVectorUS1.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUS1_SetVnlVector, None, itkVectorUS1)
itkVectorUS1.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUS1_GetVnlVector, None, itkVectorUS1)
itkVectorUS1.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorUS1___iadd__, None, itkVectorUS1)
itkVectorUS1.__isub__ = new_instancemethod(_itkVectorPython.itkVectorUS1___isub__, None, itkVectorUS1)
itkVectorUS1.__neg__ = new_instancemethod(_itkVectorPython.itkVectorUS1___neg__, None, itkVectorUS1)
itkVectorUS1.__add__ = new_instancemethod(_itkVectorPython.itkVectorUS1___add__, None, itkVectorUS1)
itkVectorUS1.__sub__ = new_instancemethod(_itkVectorPython.itkVectorUS1___sub__, None, itkVectorUS1)
itkVectorUS1.__mul__ = new_instancemethod(_itkVectorPython.itkVectorUS1___mul__, None, itkVectorUS1)
itkVectorUS1.__eq__ = new_instancemethod(_itkVectorPython.itkVectorUS1___eq__, None, itkVectorUS1)
itkVectorUS1.__ne__ = new_instancemethod(_itkVectorPython.itkVectorUS1___ne__, None, itkVectorUS1)
itkVectorUS1.GetNorm = new_instancemethod(_itkVectorPython.itkVectorUS1_GetNorm, None, itkVectorUS1)
itkVectorUS1.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorUS1_GetSquaredNorm, None, itkVectorUS1)
itkVectorUS1.Normalize = new_instancemethod(_itkVectorPython.itkVectorUS1_Normalize, None, itkVectorUS1)
itkVectorUS1.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorUS1_SetNthComponent, None, itkVectorUS1)
itkVectorUS1.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorUS1___getitem__, None, itkVectorUS1)
itkVectorUS1.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorUS1___setitem__, None, itkVectorUS1)
itkVectorUS1.__repr__ = new_instancemethod(_itkVectorPython.itkVectorUS1___repr__, None, itkVectorUS1)
itkVectorUS1_swigregister = _itkVectorPython.itkVectorUS1_swigregister
itkVectorUS1_swigregister(itkVectorUS1)

def itkVectorUS1_GetVectorDimension() -> "unsigned int":
    """itkVectorUS1_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorUS1_GetVectorDimension()

def itkVectorUS1_GetNumberOfComponents() -> "unsigned int":
    """itkVectorUS1_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorUS1_GetNumberOfComponents()

def itkVectorUS1___len__() -> "unsigned int":
    """itkVectorUS1___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorUS1___len__()

class itkVectorUS2(itkFixedArrayPython.itkFixedArrayUS2):
    """Proxy of C++ itkVectorUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorUS2_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorUS') -> "void":
        """SetVnlVector(itkVectorUS2 self, vnl_vectorUS arg0)"""
        return _itkVectorPython.itkVectorUS2_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorUS":
        """
        GetVnlVector(itkVectorUS2 self) -> vnl_vector_refUS
        GetVnlVector(itkVectorUS2 self) -> vnl_vectorUS
        """
        return _itkVectorPython.itkVectorUS2_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorUS2

    def __init__(self, *args):
        """
        __init__(itkVectorUS2 self) -> itkVectorUS2
        __init__(itkVectorUS2 self, itkVectorUS2 arg0) -> itkVectorUS2
        __init__(itkVectorUS2 self, unsigned short const & r) -> itkVectorUS2
        __init__(itkVectorUS2 self, unsigned short const * r) -> itkVectorUS2
        """
        _itkVectorPython.itkVectorUS2_swiginit(self, _itkVectorPython.new_itkVectorUS2(*args))

    def __iadd__(self, vec: 'itkVectorUS2') -> "itkVectorUS2 const &":
        """__iadd__(itkVectorUS2 self, itkVectorUS2 vec) -> itkVectorUS2"""
        return _itkVectorPython.itkVectorUS2___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorUS2') -> "itkVectorUS2 const &":
        """__isub__(itkVectorUS2 self, itkVectorUS2 vec) -> itkVectorUS2"""
        return _itkVectorPython.itkVectorUS2___isub__(self, vec)


    def __neg__(self) -> "itkVectorUS2":
        """__neg__(itkVectorUS2 self) -> itkVectorUS2"""
        return _itkVectorPython.itkVectorUS2___neg__(self)


    def __add__(self, vec: 'itkVectorUS2') -> "itkVectorUS2":
        """__add__(itkVectorUS2 self, itkVectorUS2 vec) -> itkVectorUS2"""
        return _itkVectorPython.itkVectorUS2___add__(self, vec)


    def __sub__(self, vec: 'itkVectorUS2') -> "itkVectorUS2":
        """__sub__(itkVectorUS2 self, itkVectorUS2 vec) -> itkVectorUS2"""
        return _itkVectorPython.itkVectorUS2___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorUS2":
        """
        __mul__(itkVectorUS2 self, itkVectorUS2 vec) -> unsigned short
        __mul__(itkVectorUS2 self, unsigned short const & value) -> itkVectorUS2
        """
        return _itkVectorPython.itkVectorUS2___mul__(self, *args)


    def __eq__(self, v: 'itkVectorUS2') -> "bool":
        """__eq__(itkVectorUS2 self, itkVectorUS2 v) -> bool"""
        return _itkVectorPython.itkVectorUS2___eq__(self, v)


    def __ne__(self, v: 'itkVectorUS2') -> "bool":
        """__ne__(itkVectorUS2 self, itkVectorUS2 v) -> bool"""
        return _itkVectorPython.itkVectorUS2___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorUS2 self) -> double"""
        return _itkVectorPython.itkVectorUS2_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorUS2 self) -> double"""
        return _itkVectorPython.itkVectorUS2_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorUS2_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorUS2 self) -> double"""
        return _itkVectorPython.itkVectorUS2_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'unsigned short const &') -> "void":
        """SetNthComponent(itkVectorUS2 self, int c, unsigned short const & v)"""
        return _itkVectorPython.itkVectorUS2_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "unsigned short":
        """__getitem__(itkVectorUS2 self, unsigned long d) -> unsigned short"""
        return _itkVectorPython.itkVectorUS2___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'unsigned short') -> "void":
        """__setitem__(itkVectorUS2 self, unsigned long d, unsigned short v)"""
        return _itkVectorPython.itkVectorUS2___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorUS2___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorUS2 self) -> std::string"""
        return _itkVectorPython.itkVectorUS2___repr__(self)

itkVectorUS2.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUS2_SetVnlVector, None, itkVectorUS2)
itkVectorUS2.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUS2_GetVnlVector, None, itkVectorUS2)
itkVectorUS2.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorUS2___iadd__, None, itkVectorUS2)
itkVectorUS2.__isub__ = new_instancemethod(_itkVectorPython.itkVectorUS2___isub__, None, itkVectorUS2)
itkVectorUS2.__neg__ = new_instancemethod(_itkVectorPython.itkVectorUS2___neg__, None, itkVectorUS2)
itkVectorUS2.__add__ = new_instancemethod(_itkVectorPython.itkVectorUS2___add__, None, itkVectorUS2)
itkVectorUS2.__sub__ = new_instancemethod(_itkVectorPython.itkVectorUS2___sub__, None, itkVectorUS2)
itkVectorUS2.__mul__ = new_instancemethod(_itkVectorPython.itkVectorUS2___mul__, None, itkVectorUS2)
itkVectorUS2.__eq__ = new_instancemethod(_itkVectorPython.itkVectorUS2___eq__, None, itkVectorUS2)
itkVectorUS2.__ne__ = new_instancemethod(_itkVectorPython.itkVectorUS2___ne__, None, itkVectorUS2)
itkVectorUS2.GetNorm = new_instancemethod(_itkVectorPython.itkVectorUS2_GetNorm, None, itkVectorUS2)
itkVectorUS2.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorUS2_GetSquaredNorm, None, itkVectorUS2)
itkVectorUS2.Normalize = new_instancemethod(_itkVectorPython.itkVectorUS2_Normalize, None, itkVectorUS2)
itkVectorUS2.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorUS2_SetNthComponent, None, itkVectorUS2)
itkVectorUS2.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorUS2___getitem__, None, itkVectorUS2)
itkVectorUS2.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorUS2___setitem__, None, itkVectorUS2)
itkVectorUS2.__repr__ = new_instancemethod(_itkVectorPython.itkVectorUS2___repr__, None, itkVectorUS2)
itkVectorUS2_swigregister = _itkVectorPython.itkVectorUS2_swigregister
itkVectorUS2_swigregister(itkVectorUS2)

def itkVectorUS2_GetVectorDimension() -> "unsigned int":
    """itkVectorUS2_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorUS2_GetVectorDimension()

def itkVectorUS2_GetNumberOfComponents() -> "unsigned int":
    """itkVectorUS2_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorUS2_GetNumberOfComponents()

def itkVectorUS2___len__() -> "unsigned int":
    """itkVectorUS2___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorUS2___len__()

class itkVectorUS3(itkFixedArrayPython.itkFixedArrayUS3):
    """Proxy of C++ itkVectorUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorUS3_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorUS') -> "void":
        """SetVnlVector(itkVectorUS3 self, vnl_vectorUS arg0)"""
        return _itkVectorPython.itkVectorUS3_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorUS":
        """
        GetVnlVector(itkVectorUS3 self) -> vnl_vector_refUS
        GetVnlVector(itkVectorUS3 self) -> vnl_vectorUS
        """
        return _itkVectorPython.itkVectorUS3_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorUS3

    def __init__(self, *args):
        """
        __init__(itkVectorUS3 self) -> itkVectorUS3
        __init__(itkVectorUS3 self, itkVectorUS3 arg0) -> itkVectorUS3
        __init__(itkVectorUS3 self, unsigned short const & r) -> itkVectorUS3
        __init__(itkVectorUS3 self, unsigned short const * r) -> itkVectorUS3
        """
        _itkVectorPython.itkVectorUS3_swiginit(self, _itkVectorPython.new_itkVectorUS3(*args))

    def __iadd__(self, vec: 'itkVectorUS3') -> "itkVectorUS3 const &":
        """__iadd__(itkVectorUS3 self, itkVectorUS3 vec) -> itkVectorUS3"""
        return _itkVectorPython.itkVectorUS3___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorUS3') -> "itkVectorUS3 const &":
        """__isub__(itkVectorUS3 self, itkVectorUS3 vec) -> itkVectorUS3"""
        return _itkVectorPython.itkVectorUS3___isub__(self, vec)


    def __neg__(self) -> "itkVectorUS3":
        """__neg__(itkVectorUS3 self) -> itkVectorUS3"""
        return _itkVectorPython.itkVectorUS3___neg__(self)


    def __add__(self, vec: 'itkVectorUS3') -> "itkVectorUS3":
        """__add__(itkVectorUS3 self, itkVectorUS3 vec) -> itkVectorUS3"""
        return _itkVectorPython.itkVectorUS3___add__(self, vec)


    def __sub__(self, vec: 'itkVectorUS3') -> "itkVectorUS3":
        """__sub__(itkVectorUS3 self, itkVectorUS3 vec) -> itkVectorUS3"""
        return _itkVectorPython.itkVectorUS3___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorUS3":
        """
        __mul__(itkVectorUS3 self, itkVectorUS3 vec) -> unsigned short
        __mul__(itkVectorUS3 self, unsigned short const & value) -> itkVectorUS3
        """
        return _itkVectorPython.itkVectorUS3___mul__(self, *args)


    def __eq__(self, v: 'itkVectorUS3') -> "bool":
        """__eq__(itkVectorUS3 self, itkVectorUS3 v) -> bool"""
        return _itkVectorPython.itkVectorUS3___eq__(self, v)


    def __ne__(self, v: 'itkVectorUS3') -> "bool":
        """__ne__(itkVectorUS3 self, itkVectorUS3 v) -> bool"""
        return _itkVectorPython.itkVectorUS3___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorUS3 self) -> double"""
        return _itkVectorPython.itkVectorUS3_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorUS3 self) -> double"""
        return _itkVectorPython.itkVectorUS3_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorUS3_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorUS3 self) -> double"""
        return _itkVectorPython.itkVectorUS3_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'unsigned short const &') -> "void":
        """SetNthComponent(itkVectorUS3 self, int c, unsigned short const & v)"""
        return _itkVectorPython.itkVectorUS3_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "unsigned short":
        """__getitem__(itkVectorUS3 self, unsigned long d) -> unsigned short"""
        return _itkVectorPython.itkVectorUS3___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'unsigned short') -> "void":
        """__setitem__(itkVectorUS3 self, unsigned long d, unsigned short v)"""
        return _itkVectorPython.itkVectorUS3___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorUS3___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorUS3 self) -> std::string"""
        return _itkVectorPython.itkVectorUS3___repr__(self)

itkVectorUS3.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUS3_SetVnlVector, None, itkVectorUS3)
itkVectorUS3.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUS3_GetVnlVector, None, itkVectorUS3)
itkVectorUS3.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorUS3___iadd__, None, itkVectorUS3)
itkVectorUS3.__isub__ = new_instancemethod(_itkVectorPython.itkVectorUS3___isub__, None, itkVectorUS3)
itkVectorUS3.__neg__ = new_instancemethod(_itkVectorPython.itkVectorUS3___neg__, None, itkVectorUS3)
itkVectorUS3.__add__ = new_instancemethod(_itkVectorPython.itkVectorUS3___add__, None, itkVectorUS3)
itkVectorUS3.__sub__ = new_instancemethod(_itkVectorPython.itkVectorUS3___sub__, None, itkVectorUS3)
itkVectorUS3.__mul__ = new_instancemethod(_itkVectorPython.itkVectorUS3___mul__, None, itkVectorUS3)
itkVectorUS3.__eq__ = new_instancemethod(_itkVectorPython.itkVectorUS3___eq__, None, itkVectorUS3)
itkVectorUS3.__ne__ = new_instancemethod(_itkVectorPython.itkVectorUS3___ne__, None, itkVectorUS3)
itkVectorUS3.GetNorm = new_instancemethod(_itkVectorPython.itkVectorUS3_GetNorm, None, itkVectorUS3)
itkVectorUS3.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorUS3_GetSquaredNorm, None, itkVectorUS3)
itkVectorUS3.Normalize = new_instancemethod(_itkVectorPython.itkVectorUS3_Normalize, None, itkVectorUS3)
itkVectorUS3.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorUS3_SetNthComponent, None, itkVectorUS3)
itkVectorUS3.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorUS3___getitem__, None, itkVectorUS3)
itkVectorUS3.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorUS3___setitem__, None, itkVectorUS3)
itkVectorUS3.__repr__ = new_instancemethod(_itkVectorPython.itkVectorUS3___repr__, None, itkVectorUS3)
itkVectorUS3_swigregister = _itkVectorPython.itkVectorUS3_swigregister
itkVectorUS3_swigregister(itkVectorUS3)

def itkVectorUS3_GetVectorDimension() -> "unsigned int":
    """itkVectorUS3_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorUS3_GetVectorDimension()

def itkVectorUS3_GetNumberOfComponents() -> "unsigned int":
    """itkVectorUS3_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorUS3_GetNumberOfComponents()

def itkVectorUS3___len__() -> "unsigned int":
    """itkVectorUS3___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorUS3___len__()

class itkVectorUS4(itkFixedArrayPython.itkFixedArrayUS4):
    """Proxy of C++ itkVectorUS4 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorUS4_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorUS') -> "void":
        """SetVnlVector(itkVectorUS4 self, vnl_vectorUS arg0)"""
        return _itkVectorPython.itkVectorUS4_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorUS":
        """
        GetVnlVector(itkVectorUS4 self) -> vnl_vector_refUS
        GetVnlVector(itkVectorUS4 self) -> vnl_vectorUS
        """
        return _itkVectorPython.itkVectorUS4_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorUS4

    def __init__(self, *args):
        """
        __init__(itkVectorUS4 self) -> itkVectorUS4
        __init__(itkVectorUS4 self, itkVectorUS4 arg0) -> itkVectorUS4
        __init__(itkVectorUS4 self, unsigned short const & r) -> itkVectorUS4
        __init__(itkVectorUS4 self, unsigned short const * r) -> itkVectorUS4
        """
        _itkVectorPython.itkVectorUS4_swiginit(self, _itkVectorPython.new_itkVectorUS4(*args))

    def __iadd__(self, vec: 'itkVectorUS4') -> "itkVectorUS4 const &":
        """__iadd__(itkVectorUS4 self, itkVectorUS4 vec) -> itkVectorUS4"""
        return _itkVectorPython.itkVectorUS4___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorUS4') -> "itkVectorUS4 const &":
        """__isub__(itkVectorUS4 self, itkVectorUS4 vec) -> itkVectorUS4"""
        return _itkVectorPython.itkVectorUS4___isub__(self, vec)


    def __neg__(self) -> "itkVectorUS4":
        """__neg__(itkVectorUS4 self) -> itkVectorUS4"""
        return _itkVectorPython.itkVectorUS4___neg__(self)


    def __add__(self, vec: 'itkVectorUS4') -> "itkVectorUS4":
        """__add__(itkVectorUS4 self, itkVectorUS4 vec) -> itkVectorUS4"""
        return _itkVectorPython.itkVectorUS4___add__(self, vec)


    def __sub__(self, vec: 'itkVectorUS4') -> "itkVectorUS4":
        """__sub__(itkVectorUS4 self, itkVectorUS4 vec) -> itkVectorUS4"""
        return _itkVectorPython.itkVectorUS4___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorUS4":
        """
        __mul__(itkVectorUS4 self, itkVectorUS4 vec) -> unsigned short
        __mul__(itkVectorUS4 self, unsigned short const & value) -> itkVectorUS4
        """
        return _itkVectorPython.itkVectorUS4___mul__(self, *args)


    def __eq__(self, v: 'itkVectorUS4') -> "bool":
        """__eq__(itkVectorUS4 self, itkVectorUS4 v) -> bool"""
        return _itkVectorPython.itkVectorUS4___eq__(self, v)


    def __ne__(self, v: 'itkVectorUS4') -> "bool":
        """__ne__(itkVectorUS4 self, itkVectorUS4 v) -> bool"""
        return _itkVectorPython.itkVectorUS4___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorUS4 self) -> double"""
        return _itkVectorPython.itkVectorUS4_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorUS4 self) -> double"""
        return _itkVectorPython.itkVectorUS4_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorUS4_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorUS4 self) -> double"""
        return _itkVectorPython.itkVectorUS4_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'unsigned short const &') -> "void":
        """SetNthComponent(itkVectorUS4 self, int c, unsigned short const & v)"""
        return _itkVectorPython.itkVectorUS4_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "unsigned short":
        """__getitem__(itkVectorUS4 self, unsigned long d) -> unsigned short"""
        return _itkVectorPython.itkVectorUS4___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'unsigned short') -> "void":
        """__setitem__(itkVectorUS4 self, unsigned long d, unsigned short v)"""
        return _itkVectorPython.itkVectorUS4___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorUS4___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorUS4 self) -> std::string"""
        return _itkVectorPython.itkVectorUS4___repr__(self)

itkVectorUS4.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUS4_SetVnlVector, None, itkVectorUS4)
itkVectorUS4.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUS4_GetVnlVector, None, itkVectorUS4)
itkVectorUS4.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorUS4___iadd__, None, itkVectorUS4)
itkVectorUS4.__isub__ = new_instancemethod(_itkVectorPython.itkVectorUS4___isub__, None, itkVectorUS4)
itkVectorUS4.__neg__ = new_instancemethod(_itkVectorPython.itkVectorUS4___neg__, None, itkVectorUS4)
itkVectorUS4.__add__ = new_instancemethod(_itkVectorPython.itkVectorUS4___add__, None, itkVectorUS4)
itkVectorUS4.__sub__ = new_instancemethod(_itkVectorPython.itkVectorUS4___sub__, None, itkVectorUS4)
itkVectorUS4.__mul__ = new_instancemethod(_itkVectorPython.itkVectorUS4___mul__, None, itkVectorUS4)
itkVectorUS4.__eq__ = new_instancemethod(_itkVectorPython.itkVectorUS4___eq__, None, itkVectorUS4)
itkVectorUS4.__ne__ = new_instancemethod(_itkVectorPython.itkVectorUS4___ne__, None, itkVectorUS4)
itkVectorUS4.GetNorm = new_instancemethod(_itkVectorPython.itkVectorUS4_GetNorm, None, itkVectorUS4)
itkVectorUS4.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorUS4_GetSquaredNorm, None, itkVectorUS4)
itkVectorUS4.Normalize = new_instancemethod(_itkVectorPython.itkVectorUS4_Normalize, None, itkVectorUS4)
itkVectorUS4.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorUS4_SetNthComponent, None, itkVectorUS4)
itkVectorUS4.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorUS4___getitem__, None, itkVectorUS4)
itkVectorUS4.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorUS4___setitem__, None, itkVectorUS4)
itkVectorUS4.__repr__ = new_instancemethod(_itkVectorPython.itkVectorUS4___repr__, None, itkVectorUS4)
itkVectorUS4_swigregister = _itkVectorPython.itkVectorUS4_swigregister
itkVectorUS4_swigregister(itkVectorUS4)

def itkVectorUS4_GetVectorDimension() -> "unsigned int":
    """itkVectorUS4_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorUS4_GetVectorDimension()

def itkVectorUS4_GetNumberOfComponents() -> "unsigned int":
    """itkVectorUS4_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorUS4_GetNumberOfComponents()

def itkVectorUS4___len__() -> "unsigned int":
    """itkVectorUS4___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorUS4___len__()

class itkVectorUS5(itkFixedArrayPython.itkFixedArrayUS5):
    """Proxy of C++ itkVectorUS5 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorUS5_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorUS') -> "void":
        """SetVnlVector(itkVectorUS5 self, vnl_vectorUS arg0)"""
        return _itkVectorPython.itkVectorUS5_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorUS":
        """
        GetVnlVector(itkVectorUS5 self) -> vnl_vector_refUS
        GetVnlVector(itkVectorUS5 self) -> vnl_vectorUS
        """
        return _itkVectorPython.itkVectorUS5_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorUS5

    def __init__(self, *args):
        """
        __init__(itkVectorUS5 self) -> itkVectorUS5
        __init__(itkVectorUS5 self, itkVectorUS5 arg0) -> itkVectorUS5
        __init__(itkVectorUS5 self, unsigned short const & r) -> itkVectorUS5
        __init__(itkVectorUS5 self, unsigned short const * r) -> itkVectorUS5
        """
        _itkVectorPython.itkVectorUS5_swiginit(self, _itkVectorPython.new_itkVectorUS5(*args))

    def __iadd__(self, vec: 'itkVectorUS5') -> "itkVectorUS5 const &":
        """__iadd__(itkVectorUS5 self, itkVectorUS5 vec) -> itkVectorUS5"""
        return _itkVectorPython.itkVectorUS5___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorUS5') -> "itkVectorUS5 const &":
        """__isub__(itkVectorUS5 self, itkVectorUS5 vec) -> itkVectorUS5"""
        return _itkVectorPython.itkVectorUS5___isub__(self, vec)


    def __neg__(self) -> "itkVectorUS5":
        """__neg__(itkVectorUS5 self) -> itkVectorUS5"""
        return _itkVectorPython.itkVectorUS5___neg__(self)


    def __add__(self, vec: 'itkVectorUS5') -> "itkVectorUS5":
        """__add__(itkVectorUS5 self, itkVectorUS5 vec) -> itkVectorUS5"""
        return _itkVectorPython.itkVectorUS5___add__(self, vec)


    def __sub__(self, vec: 'itkVectorUS5') -> "itkVectorUS5":
        """__sub__(itkVectorUS5 self, itkVectorUS5 vec) -> itkVectorUS5"""
        return _itkVectorPython.itkVectorUS5___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorUS5":
        """
        __mul__(itkVectorUS5 self, itkVectorUS5 vec) -> unsigned short
        __mul__(itkVectorUS5 self, unsigned short const & value) -> itkVectorUS5
        """
        return _itkVectorPython.itkVectorUS5___mul__(self, *args)


    def __eq__(self, v: 'itkVectorUS5') -> "bool":
        """__eq__(itkVectorUS5 self, itkVectorUS5 v) -> bool"""
        return _itkVectorPython.itkVectorUS5___eq__(self, v)


    def __ne__(self, v: 'itkVectorUS5') -> "bool":
        """__ne__(itkVectorUS5 self, itkVectorUS5 v) -> bool"""
        return _itkVectorPython.itkVectorUS5___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorUS5 self) -> double"""
        return _itkVectorPython.itkVectorUS5_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorUS5 self) -> double"""
        return _itkVectorPython.itkVectorUS5_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorUS5_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorUS5 self) -> double"""
        return _itkVectorPython.itkVectorUS5_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'unsigned short const &') -> "void":
        """SetNthComponent(itkVectorUS5 self, int c, unsigned short const & v)"""
        return _itkVectorPython.itkVectorUS5_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "unsigned short":
        """__getitem__(itkVectorUS5 self, unsigned long d) -> unsigned short"""
        return _itkVectorPython.itkVectorUS5___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'unsigned short') -> "void":
        """__setitem__(itkVectorUS5 self, unsigned long d, unsigned short v)"""
        return _itkVectorPython.itkVectorUS5___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorUS5___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorUS5 self) -> std::string"""
        return _itkVectorPython.itkVectorUS5___repr__(self)

itkVectorUS5.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUS5_SetVnlVector, None, itkVectorUS5)
itkVectorUS5.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUS5_GetVnlVector, None, itkVectorUS5)
itkVectorUS5.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorUS5___iadd__, None, itkVectorUS5)
itkVectorUS5.__isub__ = new_instancemethod(_itkVectorPython.itkVectorUS5___isub__, None, itkVectorUS5)
itkVectorUS5.__neg__ = new_instancemethod(_itkVectorPython.itkVectorUS5___neg__, None, itkVectorUS5)
itkVectorUS5.__add__ = new_instancemethod(_itkVectorPython.itkVectorUS5___add__, None, itkVectorUS5)
itkVectorUS5.__sub__ = new_instancemethod(_itkVectorPython.itkVectorUS5___sub__, None, itkVectorUS5)
itkVectorUS5.__mul__ = new_instancemethod(_itkVectorPython.itkVectorUS5___mul__, None, itkVectorUS5)
itkVectorUS5.__eq__ = new_instancemethod(_itkVectorPython.itkVectorUS5___eq__, None, itkVectorUS5)
itkVectorUS5.__ne__ = new_instancemethod(_itkVectorPython.itkVectorUS5___ne__, None, itkVectorUS5)
itkVectorUS5.GetNorm = new_instancemethod(_itkVectorPython.itkVectorUS5_GetNorm, None, itkVectorUS5)
itkVectorUS5.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorUS5_GetSquaredNorm, None, itkVectorUS5)
itkVectorUS5.Normalize = new_instancemethod(_itkVectorPython.itkVectorUS5_Normalize, None, itkVectorUS5)
itkVectorUS5.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorUS5_SetNthComponent, None, itkVectorUS5)
itkVectorUS5.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorUS5___getitem__, None, itkVectorUS5)
itkVectorUS5.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorUS5___setitem__, None, itkVectorUS5)
itkVectorUS5.__repr__ = new_instancemethod(_itkVectorPython.itkVectorUS5___repr__, None, itkVectorUS5)
itkVectorUS5_swigregister = _itkVectorPython.itkVectorUS5_swigregister
itkVectorUS5_swigregister(itkVectorUS5)

def itkVectorUS5_GetVectorDimension() -> "unsigned int":
    """itkVectorUS5_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorUS5_GetVectorDimension()

def itkVectorUS5_GetNumberOfComponents() -> "unsigned int":
    """itkVectorUS5_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorUS5_GetNumberOfComponents()

def itkVectorUS5___len__() -> "unsigned int":
    """itkVectorUS5___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorUS5___len__()

class itkVectorUS6(itkFixedArrayPython.itkFixedArrayUS6):
    """Proxy of C++ itkVectorUS6 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetVectorDimension() -> "unsigned int":
        """GetVectorDimension() -> unsigned int"""
        return _itkVectorPython.itkVectorUS6_GetVectorDimension()

    GetVectorDimension = staticmethod(GetVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorUS') -> "void":
        """SetVnlVector(itkVectorUS6 self, vnl_vectorUS arg0)"""
        return _itkVectorPython.itkVectorUS6_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorUS":
        """
        GetVnlVector(itkVectorUS6 self) -> vnl_vector_refUS
        GetVnlVector(itkVectorUS6 self) -> vnl_vectorUS
        """
        return _itkVectorPython.itkVectorUS6_GetVnlVector(self, *args)

    __swig_destroy__ = _itkVectorPython.delete_itkVectorUS6

    def __init__(self, *args):
        """
        __init__(itkVectorUS6 self) -> itkVectorUS6
        __init__(itkVectorUS6 self, itkVectorUS6 arg0) -> itkVectorUS6
        __init__(itkVectorUS6 self, unsigned short const & r) -> itkVectorUS6
        __init__(itkVectorUS6 self, unsigned short const * r) -> itkVectorUS6
        """
        _itkVectorPython.itkVectorUS6_swiginit(self, _itkVectorPython.new_itkVectorUS6(*args))

    def __iadd__(self, vec: 'itkVectorUS6') -> "itkVectorUS6 const &":
        """__iadd__(itkVectorUS6 self, itkVectorUS6 vec) -> itkVectorUS6"""
        return _itkVectorPython.itkVectorUS6___iadd__(self, vec)


    def __isub__(self, vec: 'itkVectorUS6') -> "itkVectorUS6 const &":
        """__isub__(itkVectorUS6 self, itkVectorUS6 vec) -> itkVectorUS6"""
        return _itkVectorPython.itkVectorUS6___isub__(self, vec)


    def __neg__(self) -> "itkVectorUS6":
        """__neg__(itkVectorUS6 self) -> itkVectorUS6"""
        return _itkVectorPython.itkVectorUS6___neg__(self)


    def __add__(self, vec: 'itkVectorUS6') -> "itkVectorUS6":
        """__add__(itkVectorUS6 self, itkVectorUS6 vec) -> itkVectorUS6"""
        return _itkVectorPython.itkVectorUS6___add__(self, vec)


    def __sub__(self, vec: 'itkVectorUS6') -> "itkVectorUS6":
        """__sub__(itkVectorUS6 self, itkVectorUS6 vec) -> itkVectorUS6"""
        return _itkVectorPython.itkVectorUS6___sub__(self, vec)


    def __mul__(self, *args) -> "itkVectorUS6":
        """
        __mul__(itkVectorUS6 self, itkVectorUS6 vec) -> unsigned short
        __mul__(itkVectorUS6 self, unsigned short const & value) -> itkVectorUS6
        """
        return _itkVectorPython.itkVectorUS6___mul__(self, *args)


    def __eq__(self, v: 'itkVectorUS6') -> "bool":
        """__eq__(itkVectorUS6 self, itkVectorUS6 v) -> bool"""
        return _itkVectorPython.itkVectorUS6___eq__(self, v)


    def __ne__(self, v: 'itkVectorUS6') -> "bool":
        """__ne__(itkVectorUS6 self, itkVectorUS6 v) -> bool"""
        return _itkVectorPython.itkVectorUS6___ne__(self, v)


    def GetNorm(self) -> "double":
        """GetNorm(itkVectorUS6 self) -> double"""
        return _itkVectorPython.itkVectorUS6_GetNorm(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkVectorUS6 self) -> double"""
        return _itkVectorPython.itkVectorUS6_GetSquaredNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkVectorPython.itkVectorUS6_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkVectorUS6 self) -> double"""
        return _itkVectorPython.itkVectorUS6_Normalize(self)


    def SetNthComponent(self, c: 'int', v: 'unsigned short const &') -> "void":
        """SetNthComponent(itkVectorUS6 self, int c, unsigned short const & v)"""
        return _itkVectorPython.itkVectorUS6_SetNthComponent(self, c, v)


    def __getitem__(self, d: 'unsigned long') -> "unsigned short":
        """__getitem__(itkVectorUS6 self, unsigned long d) -> unsigned short"""
        return _itkVectorPython.itkVectorUS6___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'unsigned short') -> "void":
        """__setitem__(itkVectorUS6 self, unsigned long d, unsigned short v)"""
        return _itkVectorPython.itkVectorUS6___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkVectorPython.itkVectorUS6___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkVectorUS6 self) -> std::string"""
        return _itkVectorPython.itkVectorUS6___repr__(self)

itkVectorUS6.SetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUS6_SetVnlVector, None, itkVectorUS6)
itkVectorUS6.GetVnlVector = new_instancemethod(_itkVectorPython.itkVectorUS6_GetVnlVector, None, itkVectorUS6)
itkVectorUS6.__iadd__ = new_instancemethod(_itkVectorPython.itkVectorUS6___iadd__, None, itkVectorUS6)
itkVectorUS6.__isub__ = new_instancemethod(_itkVectorPython.itkVectorUS6___isub__, None, itkVectorUS6)
itkVectorUS6.__neg__ = new_instancemethod(_itkVectorPython.itkVectorUS6___neg__, None, itkVectorUS6)
itkVectorUS6.__add__ = new_instancemethod(_itkVectorPython.itkVectorUS6___add__, None, itkVectorUS6)
itkVectorUS6.__sub__ = new_instancemethod(_itkVectorPython.itkVectorUS6___sub__, None, itkVectorUS6)
itkVectorUS6.__mul__ = new_instancemethod(_itkVectorPython.itkVectorUS6___mul__, None, itkVectorUS6)
itkVectorUS6.__eq__ = new_instancemethod(_itkVectorPython.itkVectorUS6___eq__, None, itkVectorUS6)
itkVectorUS6.__ne__ = new_instancemethod(_itkVectorPython.itkVectorUS6___ne__, None, itkVectorUS6)
itkVectorUS6.GetNorm = new_instancemethod(_itkVectorPython.itkVectorUS6_GetNorm, None, itkVectorUS6)
itkVectorUS6.GetSquaredNorm = new_instancemethod(_itkVectorPython.itkVectorUS6_GetSquaredNorm, None, itkVectorUS6)
itkVectorUS6.Normalize = new_instancemethod(_itkVectorPython.itkVectorUS6_Normalize, None, itkVectorUS6)
itkVectorUS6.SetNthComponent = new_instancemethod(_itkVectorPython.itkVectorUS6_SetNthComponent, None, itkVectorUS6)
itkVectorUS6.__getitem__ = new_instancemethod(_itkVectorPython.itkVectorUS6___getitem__, None, itkVectorUS6)
itkVectorUS6.__setitem__ = new_instancemethod(_itkVectorPython.itkVectorUS6___setitem__, None, itkVectorUS6)
itkVectorUS6.__repr__ = new_instancemethod(_itkVectorPython.itkVectorUS6___repr__, None, itkVectorUS6)
itkVectorUS6_swigregister = _itkVectorPython.itkVectorUS6_swigregister
itkVectorUS6_swigregister(itkVectorUS6)

def itkVectorUS6_GetVectorDimension() -> "unsigned int":
    """itkVectorUS6_GetVectorDimension() -> unsigned int"""
    return _itkVectorPython.itkVectorUS6_GetVectorDimension()

def itkVectorUS6_GetNumberOfComponents() -> "unsigned int":
    """itkVectorUS6_GetNumberOfComponents() -> unsigned int"""
    return _itkVectorPython.itkVectorUS6_GetNumberOfComponents()

def itkVectorUS6___len__() -> "unsigned int":
    """itkVectorUS6___len__() -> unsigned int"""
    return _itkVectorPython.itkVectorUS6___len__()



