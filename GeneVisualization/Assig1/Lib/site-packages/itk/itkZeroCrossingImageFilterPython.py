# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkZeroCrossingImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkZeroCrossingImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkZeroCrossingImageFilterPython
            return _itkZeroCrossingImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkZeroCrossingImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkZeroCrossingImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkZeroCrossingImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkZeroCrossingImageFilterIF3IF3_New():
  return itkZeroCrossingImageFilterIF3IF3.New()


def itkZeroCrossingImageFilterIF2IF2_New():
  return itkZeroCrossingImageFilterIF2IF2.New()


def itkZeroCrossingImageFilterISS3ISS3_New():
  return itkZeroCrossingImageFilterISS3ISS3.New()


def itkZeroCrossingImageFilterISS2ISS2_New():
  return itkZeroCrossingImageFilterISS2ISS2.New()

class itkZeroCrossingImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkZeroCrossingImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkZeroCrossingImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkZeroCrossingImageFilterIF2IF2_Pointer"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkZeroCrossingImageFilterIF2IF2_Pointer":
        """Clone(itkZeroCrossingImageFilterIF2IF2 self) -> itkZeroCrossingImageFilterIF2IF2_Pointer"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_Clone(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkZeroCrossingImageFilterIF2IF2 self)"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_GenerateInputRequestedRegion(self)


    def SetForegroundValue(self, _arg: 'float const') -> "void":
        """SetForegroundValue(itkZeroCrossingImageFilterIF2IF2 self, float const _arg)"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "float":
        """GetForegroundValue(itkZeroCrossingImageFilterIF2IF2 self) -> float"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'float const') -> "void":
        """SetBackgroundValue(itkZeroCrossingImageFilterIF2IF2 self, float const _arg)"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "float":
        """GetBackgroundValue(itkZeroCrossingImageFilterIF2IF2 self) -> float"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_GetBackgroundValue(self)

    OutputEqualityComparableCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_OutputEqualityComparableCheck
    SameDimensionCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_SameDimensionCheck
    InputComparableCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_InputComparableCheck
    OutputOStreamWritableCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkZeroCrossingImageFilterPython.delete_itkZeroCrossingImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkZeroCrossingImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkZeroCrossingImageFilterIF2IF2"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkZeroCrossingImageFilterIF2IF2

        Create a new object of the class itkZeroCrossingImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroCrossingImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkZeroCrossingImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkZeroCrossingImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkZeroCrossingImageFilterIF2IF2.Clone = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_Clone, None, itkZeroCrossingImageFilterIF2IF2)
itkZeroCrossingImageFilterIF2IF2.GenerateInputRequestedRegion = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_GenerateInputRequestedRegion, None, itkZeroCrossingImageFilterIF2IF2)
itkZeroCrossingImageFilterIF2IF2.SetForegroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_SetForegroundValue, None, itkZeroCrossingImageFilterIF2IF2)
itkZeroCrossingImageFilterIF2IF2.GetForegroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_GetForegroundValue, None, itkZeroCrossingImageFilterIF2IF2)
itkZeroCrossingImageFilterIF2IF2.SetBackgroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_SetBackgroundValue, None, itkZeroCrossingImageFilterIF2IF2)
itkZeroCrossingImageFilterIF2IF2.GetBackgroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_GetBackgroundValue, None, itkZeroCrossingImageFilterIF2IF2)
itkZeroCrossingImageFilterIF2IF2_swigregister = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_swigregister
itkZeroCrossingImageFilterIF2IF2_swigregister(itkZeroCrossingImageFilterIF2IF2)

def itkZeroCrossingImageFilterIF2IF2___New_orig__() -> "itkZeroCrossingImageFilterIF2IF2_Pointer":
    """itkZeroCrossingImageFilterIF2IF2___New_orig__() -> itkZeroCrossingImageFilterIF2IF2_Pointer"""
    return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2___New_orig__()

def itkZeroCrossingImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkZeroCrossingImageFilterIF2IF2 *":
    """itkZeroCrossingImageFilterIF2IF2_cast(itkLightObject obj) -> itkZeroCrossingImageFilterIF2IF2"""
    return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF2IF2_cast(obj)

class itkZeroCrossingImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkZeroCrossingImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkZeroCrossingImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkZeroCrossingImageFilterIF3IF3_Pointer"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkZeroCrossingImageFilterIF3IF3_Pointer":
        """Clone(itkZeroCrossingImageFilterIF3IF3 self) -> itkZeroCrossingImageFilterIF3IF3_Pointer"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_Clone(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkZeroCrossingImageFilterIF3IF3 self)"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_GenerateInputRequestedRegion(self)


    def SetForegroundValue(self, _arg: 'float const') -> "void":
        """SetForegroundValue(itkZeroCrossingImageFilterIF3IF3 self, float const _arg)"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "float":
        """GetForegroundValue(itkZeroCrossingImageFilterIF3IF3 self) -> float"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'float const') -> "void":
        """SetBackgroundValue(itkZeroCrossingImageFilterIF3IF3 self, float const _arg)"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "float":
        """GetBackgroundValue(itkZeroCrossingImageFilterIF3IF3 self) -> float"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_GetBackgroundValue(self)

    OutputEqualityComparableCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_OutputEqualityComparableCheck
    SameDimensionCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_SameDimensionCheck
    InputComparableCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_InputComparableCheck
    OutputOStreamWritableCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkZeroCrossingImageFilterPython.delete_itkZeroCrossingImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkZeroCrossingImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkZeroCrossingImageFilterIF3IF3"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkZeroCrossingImageFilterIF3IF3

        Create a new object of the class itkZeroCrossingImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroCrossingImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkZeroCrossingImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkZeroCrossingImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkZeroCrossingImageFilterIF3IF3.Clone = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_Clone, None, itkZeroCrossingImageFilterIF3IF3)
itkZeroCrossingImageFilterIF3IF3.GenerateInputRequestedRegion = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_GenerateInputRequestedRegion, None, itkZeroCrossingImageFilterIF3IF3)
itkZeroCrossingImageFilterIF3IF3.SetForegroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_SetForegroundValue, None, itkZeroCrossingImageFilterIF3IF3)
itkZeroCrossingImageFilterIF3IF3.GetForegroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_GetForegroundValue, None, itkZeroCrossingImageFilterIF3IF3)
itkZeroCrossingImageFilterIF3IF3.SetBackgroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_SetBackgroundValue, None, itkZeroCrossingImageFilterIF3IF3)
itkZeroCrossingImageFilterIF3IF3.GetBackgroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_GetBackgroundValue, None, itkZeroCrossingImageFilterIF3IF3)
itkZeroCrossingImageFilterIF3IF3_swigregister = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_swigregister
itkZeroCrossingImageFilterIF3IF3_swigregister(itkZeroCrossingImageFilterIF3IF3)

def itkZeroCrossingImageFilterIF3IF3___New_orig__() -> "itkZeroCrossingImageFilterIF3IF3_Pointer":
    """itkZeroCrossingImageFilterIF3IF3___New_orig__() -> itkZeroCrossingImageFilterIF3IF3_Pointer"""
    return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3___New_orig__()

def itkZeroCrossingImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkZeroCrossingImageFilterIF3IF3 *":
    """itkZeroCrossingImageFilterIF3IF3_cast(itkLightObject obj) -> itkZeroCrossingImageFilterIF3IF3"""
    return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterIF3IF3_cast(obj)

class itkZeroCrossingImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkZeroCrossingImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkZeroCrossingImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkZeroCrossingImageFilterISS2ISS2_Pointer"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkZeroCrossingImageFilterISS2ISS2_Pointer":
        """Clone(itkZeroCrossingImageFilterISS2ISS2 self) -> itkZeroCrossingImageFilterISS2ISS2_Pointer"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_Clone(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkZeroCrossingImageFilterISS2ISS2 self)"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_GenerateInputRequestedRegion(self)


    def SetForegroundValue(self, _arg: 'short const') -> "void":
        """SetForegroundValue(itkZeroCrossingImageFilterISS2ISS2 self, short const _arg)"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "short":
        """GetForegroundValue(itkZeroCrossingImageFilterISS2ISS2 self) -> short"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'short const') -> "void":
        """SetBackgroundValue(itkZeroCrossingImageFilterISS2ISS2 self, short const _arg)"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "short":
        """GetBackgroundValue(itkZeroCrossingImageFilterISS2ISS2 self) -> short"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_GetBackgroundValue(self)

    OutputEqualityComparableCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_OutputEqualityComparableCheck
    SameDimensionCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_SameDimensionCheck
    InputComparableCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_InputComparableCheck
    OutputOStreamWritableCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkZeroCrossingImageFilterPython.delete_itkZeroCrossingImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkZeroCrossingImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkZeroCrossingImageFilterISS2ISS2"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkZeroCrossingImageFilterISS2ISS2

        Create a new object of the class itkZeroCrossingImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroCrossingImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkZeroCrossingImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkZeroCrossingImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkZeroCrossingImageFilterISS2ISS2.Clone = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_Clone, None, itkZeroCrossingImageFilterISS2ISS2)
itkZeroCrossingImageFilterISS2ISS2.GenerateInputRequestedRegion = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_GenerateInputRequestedRegion, None, itkZeroCrossingImageFilterISS2ISS2)
itkZeroCrossingImageFilterISS2ISS2.SetForegroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_SetForegroundValue, None, itkZeroCrossingImageFilterISS2ISS2)
itkZeroCrossingImageFilterISS2ISS2.GetForegroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_GetForegroundValue, None, itkZeroCrossingImageFilterISS2ISS2)
itkZeroCrossingImageFilterISS2ISS2.SetBackgroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_SetBackgroundValue, None, itkZeroCrossingImageFilterISS2ISS2)
itkZeroCrossingImageFilterISS2ISS2.GetBackgroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_GetBackgroundValue, None, itkZeroCrossingImageFilterISS2ISS2)
itkZeroCrossingImageFilterISS2ISS2_swigregister = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_swigregister
itkZeroCrossingImageFilterISS2ISS2_swigregister(itkZeroCrossingImageFilterISS2ISS2)

def itkZeroCrossingImageFilterISS2ISS2___New_orig__() -> "itkZeroCrossingImageFilterISS2ISS2_Pointer":
    """itkZeroCrossingImageFilterISS2ISS2___New_orig__() -> itkZeroCrossingImageFilterISS2ISS2_Pointer"""
    return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2___New_orig__()

def itkZeroCrossingImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkZeroCrossingImageFilterISS2ISS2 *":
    """itkZeroCrossingImageFilterISS2ISS2_cast(itkLightObject obj) -> itkZeroCrossingImageFilterISS2ISS2"""
    return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS2ISS2_cast(obj)

class itkZeroCrossingImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkZeroCrossingImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkZeroCrossingImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkZeroCrossingImageFilterISS3ISS3_Pointer"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkZeroCrossingImageFilterISS3ISS3_Pointer":
        """Clone(itkZeroCrossingImageFilterISS3ISS3 self) -> itkZeroCrossingImageFilterISS3ISS3_Pointer"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_Clone(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkZeroCrossingImageFilterISS3ISS3 self)"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_GenerateInputRequestedRegion(self)


    def SetForegroundValue(self, _arg: 'short const') -> "void":
        """SetForegroundValue(itkZeroCrossingImageFilterISS3ISS3 self, short const _arg)"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "short":
        """GetForegroundValue(itkZeroCrossingImageFilterISS3ISS3 self) -> short"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'short const') -> "void":
        """SetBackgroundValue(itkZeroCrossingImageFilterISS3ISS3 self, short const _arg)"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "short":
        """GetBackgroundValue(itkZeroCrossingImageFilterISS3ISS3 self) -> short"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_GetBackgroundValue(self)

    OutputEqualityComparableCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_OutputEqualityComparableCheck
    SameDimensionCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_SameDimensionCheck
    InputComparableCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_InputComparableCheck
    OutputOStreamWritableCheck = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkZeroCrossingImageFilterPython.delete_itkZeroCrossingImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkZeroCrossingImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkZeroCrossingImageFilterISS3ISS3"""
        return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkZeroCrossingImageFilterISS3ISS3

        Create a new object of the class itkZeroCrossingImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroCrossingImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkZeroCrossingImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkZeroCrossingImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkZeroCrossingImageFilterISS3ISS3.Clone = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_Clone, None, itkZeroCrossingImageFilterISS3ISS3)
itkZeroCrossingImageFilterISS3ISS3.GenerateInputRequestedRegion = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_GenerateInputRequestedRegion, None, itkZeroCrossingImageFilterISS3ISS3)
itkZeroCrossingImageFilterISS3ISS3.SetForegroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_SetForegroundValue, None, itkZeroCrossingImageFilterISS3ISS3)
itkZeroCrossingImageFilterISS3ISS3.GetForegroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_GetForegroundValue, None, itkZeroCrossingImageFilterISS3ISS3)
itkZeroCrossingImageFilterISS3ISS3.SetBackgroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_SetBackgroundValue, None, itkZeroCrossingImageFilterISS3ISS3)
itkZeroCrossingImageFilterISS3ISS3.GetBackgroundValue = new_instancemethod(_itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_GetBackgroundValue, None, itkZeroCrossingImageFilterISS3ISS3)
itkZeroCrossingImageFilterISS3ISS3_swigregister = _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_swigregister
itkZeroCrossingImageFilterISS3ISS3_swigregister(itkZeroCrossingImageFilterISS3ISS3)

def itkZeroCrossingImageFilterISS3ISS3___New_orig__() -> "itkZeroCrossingImageFilterISS3ISS3_Pointer":
    """itkZeroCrossingImageFilterISS3ISS3___New_orig__() -> itkZeroCrossingImageFilterISS3ISS3_Pointer"""
    return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3___New_orig__()

def itkZeroCrossingImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkZeroCrossingImageFilterISS3ISS3 *":
    """itkZeroCrossingImageFilterISS3ISS3_cast(itkLightObject obj) -> itkZeroCrossingImageFilterISS3ISS3"""
    return _itkZeroCrossingImageFilterPython.itkZeroCrossingImageFilterISS3ISS3_cast(obj)


def zero_crossing_image_filter(*args, **kwargs):
    """Procedural interface for ZeroCrossingImageFilter"""
    import itk
    instance = itk.ZeroCrossingImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def zero_crossing_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ZeroCrossingImageFilter, itkTemplate.itkTemplate):
        zero_crossing_image_filter.__doc__ = itk.ZeroCrossingImageFilter.values()[0].__doc__
    else:
        zero_crossing_image_filter.__doc__ = itk.ZeroCrossingImageFilter.__doc__




