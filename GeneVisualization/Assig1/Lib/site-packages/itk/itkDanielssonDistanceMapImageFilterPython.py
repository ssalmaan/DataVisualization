# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkDanielssonDistanceMapImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkDanielssonDistanceMapImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkDanielssonDistanceMapImageFilterPython
            return _itkDanielssonDistanceMapImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkDanielssonDistanceMapImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkDanielssonDistanceMapImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkDanielssonDistanceMapImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkOffsetPython
import itkSizePython
import pyBasePython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import ITKCommonBasePython
import itkImagePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkDanielssonDistanceMapImageFilterIUS3IF3_New():
  return itkDanielssonDistanceMapImageFilterIUS3IF3.New()


def itkDanielssonDistanceMapImageFilterIUS2IF2_New():
  return itkDanielssonDistanceMapImageFilterIUS2IF2.New()


def itkDanielssonDistanceMapImageFilterIUC3IF3_New():
  return itkDanielssonDistanceMapImageFilterIUC3IF3.New()


def itkDanielssonDistanceMapImageFilterIUC2IF2_New():
  return itkDanielssonDistanceMapImageFilterIUC2IF2.New()


def itkDanielssonDistanceMapImageFilterIF3IF3_New():
  return itkDanielssonDistanceMapImageFilterIF3IF3.New()


def itkDanielssonDistanceMapImageFilterIF2IF2_New():
  return itkDanielssonDistanceMapImageFilterIF2IF2.New()


def itkDanielssonDistanceMapImageFilterIUS3IUS3_New():
  return itkDanielssonDistanceMapImageFilterIUS3IUS3.New()


def itkDanielssonDistanceMapImageFilterIUS2IUS2_New():
  return itkDanielssonDistanceMapImageFilterIUS2IUS2.New()


def itkDanielssonDistanceMapImageFilterIUC3IUC3_New():
  return itkDanielssonDistanceMapImageFilterIUC3IUC3.New()


def itkDanielssonDistanceMapImageFilterIUC2IUC2_New():
  return itkDanielssonDistanceMapImageFilterIUC2IUC2.New()


def itkDanielssonDistanceMapImageFilterISS3ISS3_New():
  return itkDanielssonDistanceMapImageFilterISS3ISS3.New()


def itkDanielssonDistanceMapImageFilterISS2ISS2_New():
  return itkDanielssonDistanceMapImageFilterISS2ISS2.New()

class itkDanielssonDistanceMapImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkDanielssonDistanceMapImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkDanielssonDistanceMapImageFilterIF2IF2_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkDanielssonDistanceMapImageFilterIF2IF2_Pointer":
        """Clone(itkDanielssonDistanceMapImageFilterIF2IF2 self) -> itkDanielssonDistanceMapImageFilterIF2IF2_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_Clone(self)


    def SetSquaredDistance(self, _arg: 'bool const') -> "void":
        """SetSquaredDistance(itkDanielssonDistanceMapImageFilterIF2IF2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SetSquaredDistance(self, _arg)


    def GetSquaredDistance(self) -> "bool const &":
        """GetSquaredDistance(itkDanielssonDistanceMapImageFilterIF2IF2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetSquaredDistance(self)


    def SquaredDistanceOn(self) -> "void":
        """SquaredDistanceOn(itkDanielssonDistanceMapImageFilterIF2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SquaredDistanceOn(self)


    def SquaredDistanceOff(self) -> "void":
        """SquaredDistanceOff(itkDanielssonDistanceMapImageFilterIF2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SquaredDistanceOff(self)


    def SetInputIsBinary(self, _arg: 'bool const') -> "void":
        """SetInputIsBinary(itkDanielssonDistanceMapImageFilterIF2IF2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SetInputIsBinary(self, _arg)


    def GetInputIsBinary(self) -> "bool const &":
        """GetInputIsBinary(itkDanielssonDistanceMapImageFilterIF2IF2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetInputIsBinary(self)


    def InputIsBinaryOn(self) -> "void":
        """InputIsBinaryOn(itkDanielssonDistanceMapImageFilterIF2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_InputIsBinaryOn(self)


    def InputIsBinaryOff(self) -> "void":
        """InputIsBinaryOff(itkDanielssonDistanceMapImageFilterIF2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_InputIsBinaryOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkDanielssonDistanceMapImageFilterIF2IF2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool const &":
        """GetUseImageSpacing(itkDanielssonDistanceMapImageFilterIF2IF2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkDanielssonDistanceMapImageFilterIF2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkDanielssonDistanceMapImageFilterIF2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_UseImageSpacingOff(self)


    def GetVoronoiMap(self) -> "itkImageF2 *":
        """GetVoronoiMap(itkDanielssonDistanceMapImageFilterIF2IF2 self) -> itkImageF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetVoronoiMap(self)


    def GetDistanceMap(self) -> "itkImageF2 *":
        """GetDistanceMap(itkDanielssonDistanceMapImageFilterIF2IF2 self) -> itkImageF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetDistanceMap(self)


    def GetVectorDistanceMap(self) -> "itkImageO22 *":
        """GetVectorDistanceMap(itkDanielssonDistanceMapImageFilterIF2IF2 self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetVectorDistanceMap(self)

    InputOutputSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_InputOutputSameDimensionCheck
    InputVoronoiSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_InputVoronoiSameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIF2IF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIF2IF2

        Create a new object of the class itkDanielssonDistanceMapImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDanielssonDistanceMapImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDanielssonDistanceMapImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIF2IF2.Clone = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_Clone, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SquaredDistanceOn, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SquaredDistanceOff, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_InputIsBinaryOn, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_InputIsBinaryOff, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_UseImageSpacingOn, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_UseImageSpacingOff, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetVoronoiMap, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetDistanceMap, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetVectorDistanceMap, None, itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_swigregister
itkDanielssonDistanceMapImageFilterIF2IF2_swigregister(itkDanielssonDistanceMapImageFilterIF2IF2)

def itkDanielssonDistanceMapImageFilterIF2IF2___New_orig__() -> "itkDanielssonDistanceMapImageFilterIF2IF2_Pointer":
    """itkDanielssonDistanceMapImageFilterIF2IF2___New_orig__() -> itkDanielssonDistanceMapImageFilterIF2IF2_Pointer"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2___New_orig__()

def itkDanielssonDistanceMapImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIF2IF2 *":
    """itkDanielssonDistanceMapImageFilterIF2IF2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIF2IF2"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_cast(obj)

class itkDanielssonDistanceMapImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkDanielssonDistanceMapImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkDanielssonDistanceMapImageFilterIF3IF3_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkDanielssonDistanceMapImageFilterIF3IF3_Pointer":
        """Clone(itkDanielssonDistanceMapImageFilterIF3IF3 self) -> itkDanielssonDistanceMapImageFilterIF3IF3_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_Clone(self)


    def SetSquaredDistance(self, _arg: 'bool const') -> "void":
        """SetSquaredDistance(itkDanielssonDistanceMapImageFilterIF3IF3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SetSquaredDistance(self, _arg)


    def GetSquaredDistance(self) -> "bool const &":
        """GetSquaredDistance(itkDanielssonDistanceMapImageFilterIF3IF3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetSquaredDistance(self)


    def SquaredDistanceOn(self) -> "void":
        """SquaredDistanceOn(itkDanielssonDistanceMapImageFilterIF3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SquaredDistanceOn(self)


    def SquaredDistanceOff(self) -> "void":
        """SquaredDistanceOff(itkDanielssonDistanceMapImageFilterIF3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SquaredDistanceOff(self)


    def SetInputIsBinary(self, _arg: 'bool const') -> "void":
        """SetInputIsBinary(itkDanielssonDistanceMapImageFilterIF3IF3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SetInputIsBinary(self, _arg)


    def GetInputIsBinary(self) -> "bool const &":
        """GetInputIsBinary(itkDanielssonDistanceMapImageFilterIF3IF3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetInputIsBinary(self)


    def InputIsBinaryOn(self) -> "void":
        """InputIsBinaryOn(itkDanielssonDistanceMapImageFilterIF3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_InputIsBinaryOn(self)


    def InputIsBinaryOff(self) -> "void":
        """InputIsBinaryOff(itkDanielssonDistanceMapImageFilterIF3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_InputIsBinaryOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkDanielssonDistanceMapImageFilterIF3IF3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool const &":
        """GetUseImageSpacing(itkDanielssonDistanceMapImageFilterIF3IF3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkDanielssonDistanceMapImageFilterIF3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkDanielssonDistanceMapImageFilterIF3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_UseImageSpacingOff(self)


    def GetVoronoiMap(self) -> "itkImageF3 *":
        """GetVoronoiMap(itkDanielssonDistanceMapImageFilterIF3IF3 self) -> itkImageF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetVoronoiMap(self)


    def GetDistanceMap(self) -> "itkImageF3 *":
        """GetDistanceMap(itkDanielssonDistanceMapImageFilterIF3IF3 self) -> itkImageF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetDistanceMap(self)


    def GetVectorDistanceMap(self) -> "itkImageO33 *":
        """GetVectorDistanceMap(itkDanielssonDistanceMapImageFilterIF3IF3 self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetVectorDistanceMap(self)

    InputOutputSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_InputOutputSameDimensionCheck
    InputVoronoiSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_InputVoronoiSameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIF3IF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIF3IF3

        Create a new object of the class itkDanielssonDistanceMapImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDanielssonDistanceMapImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDanielssonDistanceMapImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIF3IF3.Clone = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_Clone, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SquaredDistanceOn, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SquaredDistanceOff, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_InputIsBinaryOn, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_InputIsBinaryOff, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_UseImageSpacingOn, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_UseImageSpacingOff, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetVoronoiMap, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetDistanceMap, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetVectorDistanceMap, None, itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_swigregister
itkDanielssonDistanceMapImageFilterIF3IF3_swigregister(itkDanielssonDistanceMapImageFilterIF3IF3)

def itkDanielssonDistanceMapImageFilterIF3IF3___New_orig__() -> "itkDanielssonDistanceMapImageFilterIF3IF3_Pointer":
    """itkDanielssonDistanceMapImageFilterIF3IF3___New_orig__() -> itkDanielssonDistanceMapImageFilterIF3IF3_Pointer"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3___New_orig__()

def itkDanielssonDistanceMapImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIF3IF3 *":
    """itkDanielssonDistanceMapImageFilterIF3IF3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIF3IF3"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_cast(obj)

class itkDanielssonDistanceMapImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkDanielssonDistanceMapImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkDanielssonDistanceMapImageFilterISS2ISS2_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkDanielssonDistanceMapImageFilterISS2ISS2_Pointer":
        """Clone(itkDanielssonDistanceMapImageFilterISS2ISS2 self) -> itkDanielssonDistanceMapImageFilterISS2ISS2_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_Clone(self)


    def SetSquaredDistance(self, _arg: 'bool const') -> "void":
        """SetSquaredDistance(itkDanielssonDistanceMapImageFilterISS2ISS2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_SetSquaredDistance(self, _arg)


    def GetSquaredDistance(self) -> "bool const &":
        """GetSquaredDistance(itkDanielssonDistanceMapImageFilterISS2ISS2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_GetSquaredDistance(self)


    def SquaredDistanceOn(self) -> "void":
        """SquaredDistanceOn(itkDanielssonDistanceMapImageFilterISS2ISS2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_SquaredDistanceOn(self)


    def SquaredDistanceOff(self) -> "void":
        """SquaredDistanceOff(itkDanielssonDistanceMapImageFilterISS2ISS2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_SquaredDistanceOff(self)


    def SetInputIsBinary(self, _arg: 'bool const') -> "void":
        """SetInputIsBinary(itkDanielssonDistanceMapImageFilterISS2ISS2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_SetInputIsBinary(self, _arg)


    def GetInputIsBinary(self) -> "bool const &":
        """GetInputIsBinary(itkDanielssonDistanceMapImageFilterISS2ISS2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_GetInputIsBinary(self)


    def InputIsBinaryOn(self) -> "void":
        """InputIsBinaryOn(itkDanielssonDistanceMapImageFilterISS2ISS2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_InputIsBinaryOn(self)


    def InputIsBinaryOff(self) -> "void":
        """InputIsBinaryOff(itkDanielssonDistanceMapImageFilterISS2ISS2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_InputIsBinaryOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkDanielssonDistanceMapImageFilterISS2ISS2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool const &":
        """GetUseImageSpacing(itkDanielssonDistanceMapImageFilterISS2ISS2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkDanielssonDistanceMapImageFilterISS2ISS2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkDanielssonDistanceMapImageFilterISS2ISS2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_UseImageSpacingOff(self)


    def GetVoronoiMap(self) -> "itkImageSS2 *":
        """GetVoronoiMap(itkDanielssonDistanceMapImageFilterISS2ISS2 self) -> itkImageSS2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_GetVoronoiMap(self)


    def GetDistanceMap(self) -> "itkImageSS2 *":
        """GetDistanceMap(itkDanielssonDistanceMapImageFilterISS2ISS2 self) -> itkImageSS2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_GetDistanceMap(self)


    def GetVectorDistanceMap(self) -> "itkImageO22 *":
        """GetVectorDistanceMap(itkDanielssonDistanceMapImageFilterISS2ISS2 self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_GetVectorDistanceMap(self)

    InputOutputSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_InputOutputSameDimensionCheck
    InputVoronoiSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_InputVoronoiSameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterISS2ISS2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterISS2ISS2

        Create a new object of the class itkDanielssonDistanceMapImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDanielssonDistanceMapImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDanielssonDistanceMapImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterISS2ISS2.Clone = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_Clone, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_SetSquaredDistance, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_GetSquaredDistance, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_SquaredDistanceOn, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_SquaredDistanceOff, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_SetInputIsBinary, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_GetInputIsBinary, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_InputIsBinaryOn, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_InputIsBinaryOff, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_SetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_GetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_UseImageSpacingOn, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_UseImageSpacingOff, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_GetVoronoiMap, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_GetDistanceMap, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_GetVectorDistanceMap, None, itkDanielssonDistanceMapImageFilterISS2ISS2)
itkDanielssonDistanceMapImageFilterISS2ISS2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_swigregister
itkDanielssonDistanceMapImageFilterISS2ISS2_swigregister(itkDanielssonDistanceMapImageFilterISS2ISS2)

def itkDanielssonDistanceMapImageFilterISS2ISS2___New_orig__() -> "itkDanielssonDistanceMapImageFilterISS2ISS2_Pointer":
    """itkDanielssonDistanceMapImageFilterISS2ISS2___New_orig__() -> itkDanielssonDistanceMapImageFilterISS2ISS2_Pointer"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2___New_orig__()

def itkDanielssonDistanceMapImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterISS2ISS2 *":
    """itkDanielssonDistanceMapImageFilterISS2ISS2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterISS2ISS2"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS2ISS2_cast(obj)

class itkDanielssonDistanceMapImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkDanielssonDistanceMapImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkDanielssonDistanceMapImageFilterISS3ISS3_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkDanielssonDistanceMapImageFilterISS3ISS3_Pointer":
        """Clone(itkDanielssonDistanceMapImageFilterISS3ISS3 self) -> itkDanielssonDistanceMapImageFilterISS3ISS3_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_Clone(self)


    def SetSquaredDistance(self, _arg: 'bool const') -> "void":
        """SetSquaredDistance(itkDanielssonDistanceMapImageFilterISS3ISS3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_SetSquaredDistance(self, _arg)


    def GetSquaredDistance(self) -> "bool const &":
        """GetSquaredDistance(itkDanielssonDistanceMapImageFilterISS3ISS3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_GetSquaredDistance(self)


    def SquaredDistanceOn(self) -> "void":
        """SquaredDistanceOn(itkDanielssonDistanceMapImageFilterISS3ISS3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_SquaredDistanceOn(self)


    def SquaredDistanceOff(self) -> "void":
        """SquaredDistanceOff(itkDanielssonDistanceMapImageFilterISS3ISS3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_SquaredDistanceOff(self)


    def SetInputIsBinary(self, _arg: 'bool const') -> "void":
        """SetInputIsBinary(itkDanielssonDistanceMapImageFilterISS3ISS3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_SetInputIsBinary(self, _arg)


    def GetInputIsBinary(self) -> "bool const &":
        """GetInputIsBinary(itkDanielssonDistanceMapImageFilterISS3ISS3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_GetInputIsBinary(self)


    def InputIsBinaryOn(self) -> "void":
        """InputIsBinaryOn(itkDanielssonDistanceMapImageFilterISS3ISS3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_InputIsBinaryOn(self)


    def InputIsBinaryOff(self) -> "void":
        """InputIsBinaryOff(itkDanielssonDistanceMapImageFilterISS3ISS3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_InputIsBinaryOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkDanielssonDistanceMapImageFilterISS3ISS3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool const &":
        """GetUseImageSpacing(itkDanielssonDistanceMapImageFilterISS3ISS3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkDanielssonDistanceMapImageFilterISS3ISS3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkDanielssonDistanceMapImageFilterISS3ISS3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_UseImageSpacingOff(self)


    def GetVoronoiMap(self) -> "itkImageSS3 *":
        """GetVoronoiMap(itkDanielssonDistanceMapImageFilterISS3ISS3 self) -> itkImageSS3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_GetVoronoiMap(self)


    def GetDistanceMap(self) -> "itkImageSS3 *":
        """GetDistanceMap(itkDanielssonDistanceMapImageFilterISS3ISS3 self) -> itkImageSS3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_GetDistanceMap(self)


    def GetVectorDistanceMap(self) -> "itkImageO33 *":
        """GetVectorDistanceMap(itkDanielssonDistanceMapImageFilterISS3ISS3 self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_GetVectorDistanceMap(self)

    InputOutputSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_InputOutputSameDimensionCheck
    InputVoronoiSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_InputVoronoiSameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterISS3ISS3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterISS3ISS3

        Create a new object of the class itkDanielssonDistanceMapImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDanielssonDistanceMapImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDanielssonDistanceMapImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterISS3ISS3.Clone = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_Clone, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_SetSquaredDistance, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_GetSquaredDistance, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_SquaredDistanceOn, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_SquaredDistanceOff, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_SetInputIsBinary, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_GetInputIsBinary, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_InputIsBinaryOn, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_InputIsBinaryOff, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_SetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_GetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_UseImageSpacingOn, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_UseImageSpacingOff, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_GetVoronoiMap, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_GetDistanceMap, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_GetVectorDistanceMap, None, itkDanielssonDistanceMapImageFilterISS3ISS3)
itkDanielssonDistanceMapImageFilterISS3ISS3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_swigregister
itkDanielssonDistanceMapImageFilterISS3ISS3_swigregister(itkDanielssonDistanceMapImageFilterISS3ISS3)

def itkDanielssonDistanceMapImageFilterISS3ISS3___New_orig__() -> "itkDanielssonDistanceMapImageFilterISS3ISS3_Pointer":
    """itkDanielssonDistanceMapImageFilterISS3ISS3___New_orig__() -> itkDanielssonDistanceMapImageFilterISS3ISS3_Pointer"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3___New_orig__()

def itkDanielssonDistanceMapImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterISS3ISS3 *":
    """itkDanielssonDistanceMapImageFilterISS3ISS3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterISS3ISS3"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterISS3ISS3_cast(obj)

class itkDanielssonDistanceMapImageFilterIUC2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUC2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkDanielssonDistanceMapImageFilterIUC2IF2_Pointer":
        """__New_orig__() -> itkDanielssonDistanceMapImageFilterIUC2IF2_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkDanielssonDistanceMapImageFilterIUC2IF2_Pointer":
        """Clone(itkDanielssonDistanceMapImageFilterIUC2IF2 self) -> itkDanielssonDistanceMapImageFilterIUC2IF2_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_Clone(self)


    def SetSquaredDistance(self, _arg: 'bool const') -> "void":
        """SetSquaredDistance(itkDanielssonDistanceMapImageFilterIUC2IF2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SetSquaredDistance(self, _arg)


    def GetSquaredDistance(self) -> "bool const &":
        """GetSquaredDistance(itkDanielssonDistanceMapImageFilterIUC2IF2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetSquaredDistance(self)


    def SquaredDistanceOn(self) -> "void":
        """SquaredDistanceOn(itkDanielssonDistanceMapImageFilterIUC2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SquaredDistanceOn(self)


    def SquaredDistanceOff(self) -> "void":
        """SquaredDistanceOff(itkDanielssonDistanceMapImageFilterIUC2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SquaredDistanceOff(self)


    def SetInputIsBinary(self, _arg: 'bool const') -> "void":
        """SetInputIsBinary(itkDanielssonDistanceMapImageFilterIUC2IF2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SetInputIsBinary(self, _arg)


    def GetInputIsBinary(self) -> "bool const &":
        """GetInputIsBinary(itkDanielssonDistanceMapImageFilterIUC2IF2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetInputIsBinary(self)


    def InputIsBinaryOn(self) -> "void":
        """InputIsBinaryOn(itkDanielssonDistanceMapImageFilterIUC2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_InputIsBinaryOn(self)


    def InputIsBinaryOff(self) -> "void":
        """InputIsBinaryOff(itkDanielssonDistanceMapImageFilterIUC2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_InputIsBinaryOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUC2IF2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool const &":
        """GetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUC2IF2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkDanielssonDistanceMapImageFilterIUC2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkDanielssonDistanceMapImageFilterIUC2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_UseImageSpacingOff(self)


    def GetVoronoiMap(self) -> "itkImageUC2 *":
        """GetVoronoiMap(itkDanielssonDistanceMapImageFilterIUC2IF2 self) -> itkImageUC2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetVoronoiMap(self)


    def GetDistanceMap(self) -> "itkImageF2 *":
        """GetDistanceMap(itkDanielssonDistanceMapImageFilterIUC2IF2 self) -> itkImageF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetDistanceMap(self)


    def GetVectorDistanceMap(self) -> "itkImageO22 *":
        """GetVectorDistanceMap(itkDanielssonDistanceMapImageFilterIUC2IF2 self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetVectorDistanceMap(self)

    InputOutputSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_InputOutputSameDimensionCheck
    InputVoronoiSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_InputVoronoiSameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUC2IF2

    def cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUC2IF2 *":
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC2IF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUC2IF2

        Create a new object of the class itkDanielssonDistanceMapImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDanielssonDistanceMapImageFilterIUC2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDanielssonDistanceMapImageFilterIUC2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUC2IF2.Clone = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_Clone, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SquaredDistanceOn, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SquaredDistanceOff, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_InputIsBinaryOn, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_InputIsBinaryOff, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_UseImageSpacingOn, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_UseImageSpacingOff, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetVoronoiMap, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetDistanceMap, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetVectorDistanceMap, None, itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_swigregister
itkDanielssonDistanceMapImageFilterIUC2IF2_swigregister(itkDanielssonDistanceMapImageFilterIUC2IF2)

def itkDanielssonDistanceMapImageFilterIUC2IF2___New_orig__() -> "itkDanielssonDistanceMapImageFilterIUC2IF2_Pointer":
    """itkDanielssonDistanceMapImageFilterIUC2IF2___New_orig__() -> itkDanielssonDistanceMapImageFilterIUC2IF2_Pointer"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2___New_orig__()

def itkDanielssonDistanceMapImageFilterIUC2IF2_cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUC2IF2 *":
    """itkDanielssonDistanceMapImageFilterIUC2IF2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC2IF2"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_cast(obj)

class itkDanielssonDistanceMapImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkDanielssonDistanceMapImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkDanielssonDistanceMapImageFilterIUC2IUC2_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkDanielssonDistanceMapImageFilterIUC2IUC2_Pointer":
        """Clone(itkDanielssonDistanceMapImageFilterIUC2IUC2 self) -> itkDanielssonDistanceMapImageFilterIUC2IUC2_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_Clone(self)


    def SetSquaredDistance(self, _arg: 'bool const') -> "void":
        """SetSquaredDistance(itkDanielssonDistanceMapImageFilterIUC2IUC2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SetSquaredDistance(self, _arg)


    def GetSquaredDistance(self) -> "bool const &":
        """GetSquaredDistance(itkDanielssonDistanceMapImageFilterIUC2IUC2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetSquaredDistance(self)


    def SquaredDistanceOn(self) -> "void":
        """SquaredDistanceOn(itkDanielssonDistanceMapImageFilterIUC2IUC2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SquaredDistanceOn(self)


    def SquaredDistanceOff(self) -> "void":
        """SquaredDistanceOff(itkDanielssonDistanceMapImageFilterIUC2IUC2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SquaredDistanceOff(self)


    def SetInputIsBinary(self, _arg: 'bool const') -> "void":
        """SetInputIsBinary(itkDanielssonDistanceMapImageFilterIUC2IUC2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SetInputIsBinary(self, _arg)


    def GetInputIsBinary(self) -> "bool const &":
        """GetInputIsBinary(itkDanielssonDistanceMapImageFilterIUC2IUC2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetInputIsBinary(self)


    def InputIsBinaryOn(self) -> "void":
        """InputIsBinaryOn(itkDanielssonDistanceMapImageFilterIUC2IUC2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_InputIsBinaryOn(self)


    def InputIsBinaryOff(self) -> "void":
        """InputIsBinaryOff(itkDanielssonDistanceMapImageFilterIUC2IUC2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_InputIsBinaryOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUC2IUC2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool const &":
        """GetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUC2IUC2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkDanielssonDistanceMapImageFilterIUC2IUC2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkDanielssonDistanceMapImageFilterIUC2IUC2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_UseImageSpacingOff(self)


    def GetVoronoiMap(self) -> "itkImageUC2 *":
        """GetVoronoiMap(itkDanielssonDistanceMapImageFilterIUC2IUC2 self) -> itkImageUC2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetVoronoiMap(self)


    def GetDistanceMap(self) -> "itkImageUC2 *":
        """GetDistanceMap(itkDanielssonDistanceMapImageFilterIUC2IUC2 self) -> itkImageUC2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetDistanceMap(self)


    def GetVectorDistanceMap(self) -> "itkImageO22 *":
        """GetVectorDistanceMap(itkDanielssonDistanceMapImageFilterIUC2IUC2 self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetVectorDistanceMap(self)

    InputOutputSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_InputOutputSameDimensionCheck
    InputVoronoiSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_InputVoronoiSameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC2IUC2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUC2IUC2

        Create a new object of the class itkDanielssonDistanceMapImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDanielssonDistanceMapImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDanielssonDistanceMapImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUC2IUC2.Clone = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_Clone, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SquaredDistanceOn, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SquaredDistanceOff, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_InputIsBinaryOn, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_InputIsBinaryOff, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_UseImageSpacingOn, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_UseImageSpacingOff, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetVoronoiMap, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetDistanceMap, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetVectorDistanceMap, None, itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_swigregister
itkDanielssonDistanceMapImageFilterIUC2IUC2_swigregister(itkDanielssonDistanceMapImageFilterIUC2IUC2)

def itkDanielssonDistanceMapImageFilterIUC2IUC2___New_orig__() -> "itkDanielssonDistanceMapImageFilterIUC2IUC2_Pointer":
    """itkDanielssonDistanceMapImageFilterIUC2IUC2___New_orig__() -> itkDanielssonDistanceMapImageFilterIUC2IUC2_Pointer"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2___New_orig__()

def itkDanielssonDistanceMapImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUC2IUC2 *":
    """itkDanielssonDistanceMapImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC2IUC2"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_cast(obj)

class itkDanielssonDistanceMapImageFilterIUC3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUC3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkDanielssonDistanceMapImageFilterIUC3IF3_Pointer":
        """__New_orig__() -> itkDanielssonDistanceMapImageFilterIUC3IF3_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkDanielssonDistanceMapImageFilterIUC3IF3_Pointer":
        """Clone(itkDanielssonDistanceMapImageFilterIUC3IF3 self) -> itkDanielssonDistanceMapImageFilterIUC3IF3_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_Clone(self)


    def SetSquaredDistance(self, _arg: 'bool const') -> "void":
        """SetSquaredDistance(itkDanielssonDistanceMapImageFilterIUC3IF3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SetSquaredDistance(self, _arg)


    def GetSquaredDistance(self) -> "bool const &":
        """GetSquaredDistance(itkDanielssonDistanceMapImageFilterIUC3IF3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetSquaredDistance(self)


    def SquaredDistanceOn(self) -> "void":
        """SquaredDistanceOn(itkDanielssonDistanceMapImageFilterIUC3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SquaredDistanceOn(self)


    def SquaredDistanceOff(self) -> "void":
        """SquaredDistanceOff(itkDanielssonDistanceMapImageFilterIUC3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SquaredDistanceOff(self)


    def SetInputIsBinary(self, _arg: 'bool const') -> "void":
        """SetInputIsBinary(itkDanielssonDistanceMapImageFilterIUC3IF3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SetInputIsBinary(self, _arg)


    def GetInputIsBinary(self) -> "bool const &":
        """GetInputIsBinary(itkDanielssonDistanceMapImageFilterIUC3IF3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetInputIsBinary(self)


    def InputIsBinaryOn(self) -> "void":
        """InputIsBinaryOn(itkDanielssonDistanceMapImageFilterIUC3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_InputIsBinaryOn(self)


    def InputIsBinaryOff(self) -> "void":
        """InputIsBinaryOff(itkDanielssonDistanceMapImageFilterIUC3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_InputIsBinaryOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUC3IF3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool const &":
        """GetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUC3IF3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkDanielssonDistanceMapImageFilterIUC3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkDanielssonDistanceMapImageFilterIUC3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_UseImageSpacingOff(self)


    def GetVoronoiMap(self) -> "itkImageUC3 *":
        """GetVoronoiMap(itkDanielssonDistanceMapImageFilterIUC3IF3 self) -> itkImageUC3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetVoronoiMap(self)


    def GetDistanceMap(self) -> "itkImageF3 *":
        """GetDistanceMap(itkDanielssonDistanceMapImageFilterIUC3IF3 self) -> itkImageF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetDistanceMap(self)


    def GetVectorDistanceMap(self) -> "itkImageO33 *":
        """GetVectorDistanceMap(itkDanielssonDistanceMapImageFilterIUC3IF3 self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetVectorDistanceMap(self)

    InputOutputSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_InputOutputSameDimensionCheck
    InputVoronoiSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_InputVoronoiSameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUC3IF3

    def cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUC3IF3 *":
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC3IF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUC3IF3

        Create a new object of the class itkDanielssonDistanceMapImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDanielssonDistanceMapImageFilterIUC3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDanielssonDistanceMapImageFilterIUC3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUC3IF3.Clone = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_Clone, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SquaredDistanceOn, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SquaredDistanceOff, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_InputIsBinaryOn, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_InputIsBinaryOff, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_UseImageSpacingOn, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_UseImageSpacingOff, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetVoronoiMap, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetDistanceMap, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetVectorDistanceMap, None, itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_swigregister
itkDanielssonDistanceMapImageFilterIUC3IF3_swigregister(itkDanielssonDistanceMapImageFilterIUC3IF3)

def itkDanielssonDistanceMapImageFilterIUC3IF3___New_orig__() -> "itkDanielssonDistanceMapImageFilterIUC3IF3_Pointer":
    """itkDanielssonDistanceMapImageFilterIUC3IF3___New_orig__() -> itkDanielssonDistanceMapImageFilterIUC3IF3_Pointer"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3___New_orig__()

def itkDanielssonDistanceMapImageFilterIUC3IF3_cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUC3IF3 *":
    """itkDanielssonDistanceMapImageFilterIUC3IF3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC3IF3"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_cast(obj)

class itkDanielssonDistanceMapImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkDanielssonDistanceMapImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkDanielssonDistanceMapImageFilterIUC3IUC3_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkDanielssonDistanceMapImageFilterIUC3IUC3_Pointer":
        """Clone(itkDanielssonDistanceMapImageFilterIUC3IUC3 self) -> itkDanielssonDistanceMapImageFilterIUC3IUC3_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_Clone(self)


    def SetSquaredDistance(self, _arg: 'bool const') -> "void":
        """SetSquaredDistance(itkDanielssonDistanceMapImageFilterIUC3IUC3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SetSquaredDistance(self, _arg)


    def GetSquaredDistance(self) -> "bool const &":
        """GetSquaredDistance(itkDanielssonDistanceMapImageFilterIUC3IUC3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetSquaredDistance(self)


    def SquaredDistanceOn(self) -> "void":
        """SquaredDistanceOn(itkDanielssonDistanceMapImageFilterIUC3IUC3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SquaredDistanceOn(self)


    def SquaredDistanceOff(self) -> "void":
        """SquaredDistanceOff(itkDanielssonDistanceMapImageFilterIUC3IUC3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SquaredDistanceOff(self)


    def SetInputIsBinary(self, _arg: 'bool const') -> "void":
        """SetInputIsBinary(itkDanielssonDistanceMapImageFilterIUC3IUC3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SetInputIsBinary(self, _arg)


    def GetInputIsBinary(self) -> "bool const &":
        """GetInputIsBinary(itkDanielssonDistanceMapImageFilterIUC3IUC3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetInputIsBinary(self)


    def InputIsBinaryOn(self) -> "void":
        """InputIsBinaryOn(itkDanielssonDistanceMapImageFilterIUC3IUC3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_InputIsBinaryOn(self)


    def InputIsBinaryOff(self) -> "void":
        """InputIsBinaryOff(itkDanielssonDistanceMapImageFilterIUC3IUC3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_InputIsBinaryOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUC3IUC3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool const &":
        """GetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUC3IUC3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkDanielssonDistanceMapImageFilterIUC3IUC3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkDanielssonDistanceMapImageFilterIUC3IUC3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_UseImageSpacingOff(self)


    def GetVoronoiMap(self) -> "itkImageUC3 *":
        """GetVoronoiMap(itkDanielssonDistanceMapImageFilterIUC3IUC3 self) -> itkImageUC3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetVoronoiMap(self)


    def GetDistanceMap(self) -> "itkImageUC3 *":
        """GetDistanceMap(itkDanielssonDistanceMapImageFilterIUC3IUC3 self) -> itkImageUC3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetDistanceMap(self)


    def GetVectorDistanceMap(self) -> "itkImageO33 *":
        """GetVectorDistanceMap(itkDanielssonDistanceMapImageFilterIUC3IUC3 self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetVectorDistanceMap(self)

    InputOutputSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_InputOutputSameDimensionCheck
    InputVoronoiSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_InputVoronoiSameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC3IUC3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUC3IUC3

        Create a new object of the class itkDanielssonDistanceMapImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDanielssonDistanceMapImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDanielssonDistanceMapImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUC3IUC3.Clone = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_Clone, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SquaredDistanceOn, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SquaredDistanceOff, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_InputIsBinaryOn, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_InputIsBinaryOff, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_UseImageSpacingOn, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_UseImageSpacingOff, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetVoronoiMap, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetDistanceMap, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetVectorDistanceMap, None, itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_swigregister
itkDanielssonDistanceMapImageFilterIUC3IUC3_swigregister(itkDanielssonDistanceMapImageFilterIUC3IUC3)

def itkDanielssonDistanceMapImageFilterIUC3IUC3___New_orig__() -> "itkDanielssonDistanceMapImageFilterIUC3IUC3_Pointer":
    """itkDanielssonDistanceMapImageFilterIUC3IUC3___New_orig__() -> itkDanielssonDistanceMapImageFilterIUC3IUC3_Pointer"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3___New_orig__()

def itkDanielssonDistanceMapImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUC3IUC3 *":
    """itkDanielssonDistanceMapImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC3IUC3"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_cast(obj)

class itkDanielssonDistanceMapImageFilterIUS2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUS2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkDanielssonDistanceMapImageFilterIUS2IF2_Pointer":
        """__New_orig__() -> itkDanielssonDistanceMapImageFilterIUS2IF2_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkDanielssonDistanceMapImageFilterIUS2IF2_Pointer":
        """Clone(itkDanielssonDistanceMapImageFilterIUS2IF2 self) -> itkDanielssonDistanceMapImageFilterIUS2IF2_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_Clone(self)


    def SetSquaredDistance(self, _arg: 'bool const') -> "void":
        """SetSquaredDistance(itkDanielssonDistanceMapImageFilterIUS2IF2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SetSquaredDistance(self, _arg)


    def GetSquaredDistance(self) -> "bool const &":
        """GetSquaredDistance(itkDanielssonDistanceMapImageFilterIUS2IF2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetSquaredDistance(self)


    def SquaredDistanceOn(self) -> "void":
        """SquaredDistanceOn(itkDanielssonDistanceMapImageFilterIUS2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SquaredDistanceOn(self)


    def SquaredDistanceOff(self) -> "void":
        """SquaredDistanceOff(itkDanielssonDistanceMapImageFilterIUS2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SquaredDistanceOff(self)


    def SetInputIsBinary(self, _arg: 'bool const') -> "void":
        """SetInputIsBinary(itkDanielssonDistanceMapImageFilterIUS2IF2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SetInputIsBinary(self, _arg)


    def GetInputIsBinary(self) -> "bool const &":
        """GetInputIsBinary(itkDanielssonDistanceMapImageFilterIUS2IF2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetInputIsBinary(self)


    def InputIsBinaryOn(self) -> "void":
        """InputIsBinaryOn(itkDanielssonDistanceMapImageFilterIUS2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_InputIsBinaryOn(self)


    def InputIsBinaryOff(self) -> "void":
        """InputIsBinaryOff(itkDanielssonDistanceMapImageFilterIUS2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_InputIsBinaryOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUS2IF2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool const &":
        """GetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUS2IF2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkDanielssonDistanceMapImageFilterIUS2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkDanielssonDistanceMapImageFilterIUS2IF2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_UseImageSpacingOff(self)


    def GetVoronoiMap(self) -> "itkImageUS2 *":
        """GetVoronoiMap(itkDanielssonDistanceMapImageFilterIUS2IF2 self) -> itkImageUS2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetVoronoiMap(self)


    def GetDistanceMap(self) -> "itkImageF2 *":
        """GetDistanceMap(itkDanielssonDistanceMapImageFilterIUS2IF2 self) -> itkImageF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetDistanceMap(self)


    def GetVectorDistanceMap(self) -> "itkImageO22 *":
        """GetVectorDistanceMap(itkDanielssonDistanceMapImageFilterIUS2IF2 self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetVectorDistanceMap(self)

    InputOutputSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_InputOutputSameDimensionCheck
    InputVoronoiSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_InputVoronoiSameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUS2IF2

    def cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUS2IF2 *":
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS2IF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUS2IF2

        Create a new object of the class itkDanielssonDistanceMapImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDanielssonDistanceMapImageFilterIUS2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDanielssonDistanceMapImageFilterIUS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUS2IF2.Clone = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_Clone, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SquaredDistanceOn, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SquaredDistanceOff, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_InputIsBinaryOn, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_InputIsBinaryOff, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_UseImageSpacingOn, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_UseImageSpacingOff, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetVoronoiMap, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetDistanceMap, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetVectorDistanceMap, None, itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_swigregister
itkDanielssonDistanceMapImageFilterIUS2IF2_swigregister(itkDanielssonDistanceMapImageFilterIUS2IF2)

def itkDanielssonDistanceMapImageFilterIUS2IF2___New_orig__() -> "itkDanielssonDistanceMapImageFilterIUS2IF2_Pointer":
    """itkDanielssonDistanceMapImageFilterIUS2IF2___New_orig__() -> itkDanielssonDistanceMapImageFilterIUS2IF2_Pointer"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2___New_orig__()

def itkDanielssonDistanceMapImageFilterIUS2IF2_cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUS2IF2 *":
    """itkDanielssonDistanceMapImageFilterIUS2IF2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS2IF2"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_cast(obj)

class itkDanielssonDistanceMapImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkDanielssonDistanceMapImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkDanielssonDistanceMapImageFilterIUS2IUS2_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkDanielssonDistanceMapImageFilterIUS2IUS2_Pointer":
        """Clone(itkDanielssonDistanceMapImageFilterIUS2IUS2 self) -> itkDanielssonDistanceMapImageFilterIUS2IUS2_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_Clone(self)


    def SetSquaredDistance(self, _arg: 'bool const') -> "void":
        """SetSquaredDistance(itkDanielssonDistanceMapImageFilterIUS2IUS2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SetSquaredDistance(self, _arg)


    def GetSquaredDistance(self) -> "bool const &":
        """GetSquaredDistance(itkDanielssonDistanceMapImageFilterIUS2IUS2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetSquaredDistance(self)


    def SquaredDistanceOn(self) -> "void":
        """SquaredDistanceOn(itkDanielssonDistanceMapImageFilterIUS2IUS2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SquaredDistanceOn(self)


    def SquaredDistanceOff(self) -> "void":
        """SquaredDistanceOff(itkDanielssonDistanceMapImageFilterIUS2IUS2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SquaredDistanceOff(self)


    def SetInputIsBinary(self, _arg: 'bool const') -> "void":
        """SetInputIsBinary(itkDanielssonDistanceMapImageFilterIUS2IUS2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SetInputIsBinary(self, _arg)


    def GetInputIsBinary(self) -> "bool const &":
        """GetInputIsBinary(itkDanielssonDistanceMapImageFilterIUS2IUS2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetInputIsBinary(self)


    def InputIsBinaryOn(self) -> "void":
        """InputIsBinaryOn(itkDanielssonDistanceMapImageFilterIUS2IUS2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_InputIsBinaryOn(self)


    def InputIsBinaryOff(self) -> "void":
        """InputIsBinaryOff(itkDanielssonDistanceMapImageFilterIUS2IUS2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_InputIsBinaryOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUS2IUS2 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool const &":
        """GetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUS2IUS2 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkDanielssonDistanceMapImageFilterIUS2IUS2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkDanielssonDistanceMapImageFilterIUS2IUS2 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_UseImageSpacingOff(self)


    def GetVoronoiMap(self) -> "itkImageUS2 *":
        """GetVoronoiMap(itkDanielssonDistanceMapImageFilterIUS2IUS2 self) -> itkImageUS2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetVoronoiMap(self)


    def GetDistanceMap(self) -> "itkImageUS2 *":
        """GetDistanceMap(itkDanielssonDistanceMapImageFilterIUS2IUS2 self) -> itkImageUS2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetDistanceMap(self)


    def GetVectorDistanceMap(self) -> "itkImageO22 *":
        """GetVectorDistanceMap(itkDanielssonDistanceMapImageFilterIUS2IUS2 self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetVectorDistanceMap(self)

    InputOutputSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_InputOutputSameDimensionCheck
    InputVoronoiSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_InputVoronoiSameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS2IUS2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUS2IUS2

        Create a new object of the class itkDanielssonDistanceMapImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDanielssonDistanceMapImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDanielssonDistanceMapImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUS2IUS2.Clone = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_Clone, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SquaredDistanceOn, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SquaredDistanceOff, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_InputIsBinaryOn, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_InputIsBinaryOff, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_UseImageSpacingOn, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_UseImageSpacingOff, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetVoronoiMap, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetDistanceMap, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetVectorDistanceMap, None, itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_swigregister
itkDanielssonDistanceMapImageFilterIUS2IUS2_swigregister(itkDanielssonDistanceMapImageFilterIUS2IUS2)

def itkDanielssonDistanceMapImageFilterIUS2IUS2___New_orig__() -> "itkDanielssonDistanceMapImageFilterIUS2IUS2_Pointer":
    """itkDanielssonDistanceMapImageFilterIUS2IUS2___New_orig__() -> itkDanielssonDistanceMapImageFilterIUS2IUS2_Pointer"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2___New_orig__()

def itkDanielssonDistanceMapImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUS2IUS2 *":
    """itkDanielssonDistanceMapImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS2IUS2"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_cast(obj)

class itkDanielssonDistanceMapImageFilterIUS3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUS3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkDanielssonDistanceMapImageFilterIUS3IF3_Pointer":
        """__New_orig__() -> itkDanielssonDistanceMapImageFilterIUS3IF3_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkDanielssonDistanceMapImageFilterIUS3IF3_Pointer":
        """Clone(itkDanielssonDistanceMapImageFilterIUS3IF3 self) -> itkDanielssonDistanceMapImageFilterIUS3IF3_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_Clone(self)


    def SetSquaredDistance(self, _arg: 'bool const') -> "void":
        """SetSquaredDistance(itkDanielssonDistanceMapImageFilterIUS3IF3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SetSquaredDistance(self, _arg)


    def GetSquaredDistance(self) -> "bool const &":
        """GetSquaredDistance(itkDanielssonDistanceMapImageFilterIUS3IF3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetSquaredDistance(self)


    def SquaredDistanceOn(self) -> "void":
        """SquaredDistanceOn(itkDanielssonDistanceMapImageFilterIUS3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SquaredDistanceOn(self)


    def SquaredDistanceOff(self) -> "void":
        """SquaredDistanceOff(itkDanielssonDistanceMapImageFilterIUS3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SquaredDistanceOff(self)


    def SetInputIsBinary(self, _arg: 'bool const') -> "void":
        """SetInputIsBinary(itkDanielssonDistanceMapImageFilterIUS3IF3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SetInputIsBinary(self, _arg)


    def GetInputIsBinary(self) -> "bool const &":
        """GetInputIsBinary(itkDanielssonDistanceMapImageFilterIUS3IF3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetInputIsBinary(self)


    def InputIsBinaryOn(self) -> "void":
        """InputIsBinaryOn(itkDanielssonDistanceMapImageFilterIUS3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_InputIsBinaryOn(self)


    def InputIsBinaryOff(self) -> "void":
        """InputIsBinaryOff(itkDanielssonDistanceMapImageFilterIUS3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_InputIsBinaryOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUS3IF3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool const &":
        """GetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUS3IF3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkDanielssonDistanceMapImageFilterIUS3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkDanielssonDistanceMapImageFilterIUS3IF3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_UseImageSpacingOff(self)


    def GetVoronoiMap(self) -> "itkImageUS3 *":
        """GetVoronoiMap(itkDanielssonDistanceMapImageFilterIUS3IF3 self) -> itkImageUS3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetVoronoiMap(self)


    def GetDistanceMap(self) -> "itkImageF3 *":
        """GetDistanceMap(itkDanielssonDistanceMapImageFilterIUS3IF3 self) -> itkImageF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetDistanceMap(self)


    def GetVectorDistanceMap(self) -> "itkImageO33 *":
        """GetVectorDistanceMap(itkDanielssonDistanceMapImageFilterIUS3IF3 self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetVectorDistanceMap(self)

    InputOutputSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_InputOutputSameDimensionCheck
    InputVoronoiSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_InputVoronoiSameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUS3IF3

    def cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUS3IF3 *":
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS3IF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUS3IF3

        Create a new object of the class itkDanielssonDistanceMapImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDanielssonDistanceMapImageFilterIUS3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDanielssonDistanceMapImageFilterIUS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUS3IF3.Clone = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_Clone, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SquaredDistanceOn, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SquaredDistanceOff, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_InputIsBinaryOn, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_InputIsBinaryOff, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_UseImageSpacingOn, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_UseImageSpacingOff, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetVoronoiMap, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetDistanceMap, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetVectorDistanceMap, None, itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_swigregister
itkDanielssonDistanceMapImageFilterIUS3IF3_swigregister(itkDanielssonDistanceMapImageFilterIUS3IF3)

def itkDanielssonDistanceMapImageFilterIUS3IF3___New_orig__() -> "itkDanielssonDistanceMapImageFilterIUS3IF3_Pointer":
    """itkDanielssonDistanceMapImageFilterIUS3IF3___New_orig__() -> itkDanielssonDistanceMapImageFilterIUS3IF3_Pointer"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3___New_orig__()

def itkDanielssonDistanceMapImageFilterIUS3IF3_cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUS3IF3 *":
    """itkDanielssonDistanceMapImageFilterIUS3IF3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS3IF3"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_cast(obj)

class itkDanielssonDistanceMapImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkDanielssonDistanceMapImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkDanielssonDistanceMapImageFilterIUS3IUS3_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkDanielssonDistanceMapImageFilterIUS3IUS3_Pointer":
        """Clone(itkDanielssonDistanceMapImageFilterIUS3IUS3 self) -> itkDanielssonDistanceMapImageFilterIUS3IUS3_Pointer"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_Clone(self)


    def SetSquaredDistance(self, _arg: 'bool const') -> "void":
        """SetSquaredDistance(itkDanielssonDistanceMapImageFilterIUS3IUS3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SetSquaredDistance(self, _arg)


    def GetSquaredDistance(self) -> "bool const &":
        """GetSquaredDistance(itkDanielssonDistanceMapImageFilterIUS3IUS3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetSquaredDistance(self)


    def SquaredDistanceOn(self) -> "void":
        """SquaredDistanceOn(itkDanielssonDistanceMapImageFilterIUS3IUS3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SquaredDistanceOn(self)


    def SquaredDistanceOff(self) -> "void":
        """SquaredDistanceOff(itkDanielssonDistanceMapImageFilterIUS3IUS3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SquaredDistanceOff(self)


    def SetInputIsBinary(self, _arg: 'bool const') -> "void":
        """SetInputIsBinary(itkDanielssonDistanceMapImageFilterIUS3IUS3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SetInputIsBinary(self, _arg)


    def GetInputIsBinary(self) -> "bool const &":
        """GetInputIsBinary(itkDanielssonDistanceMapImageFilterIUS3IUS3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetInputIsBinary(self)


    def InputIsBinaryOn(self) -> "void":
        """InputIsBinaryOn(itkDanielssonDistanceMapImageFilterIUS3IUS3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_InputIsBinaryOn(self)


    def InputIsBinaryOff(self) -> "void":
        """InputIsBinaryOff(itkDanielssonDistanceMapImageFilterIUS3IUS3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_InputIsBinaryOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUS3IUS3 self, bool const _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool const &":
        """GetUseImageSpacing(itkDanielssonDistanceMapImageFilterIUS3IUS3 self) -> bool const &"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkDanielssonDistanceMapImageFilterIUS3IUS3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkDanielssonDistanceMapImageFilterIUS3IUS3 self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_UseImageSpacingOff(self)


    def GetVoronoiMap(self) -> "itkImageUS3 *":
        """GetVoronoiMap(itkDanielssonDistanceMapImageFilterIUS3IUS3 self) -> itkImageUS3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetVoronoiMap(self)


    def GetDistanceMap(self) -> "itkImageUS3 *":
        """GetDistanceMap(itkDanielssonDistanceMapImageFilterIUS3IUS3 self) -> itkImageUS3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetDistanceMap(self)


    def GetVectorDistanceMap(self) -> "itkImageO33 *":
        """GetVectorDistanceMap(itkDanielssonDistanceMapImageFilterIUS3IUS3 self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetVectorDistanceMap(self)

    InputOutputSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_InputOutputSameDimensionCheck
    InputVoronoiSameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_InputVoronoiSameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS3IUS3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUS3IUS3

        Create a new object of the class itkDanielssonDistanceMapImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDanielssonDistanceMapImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDanielssonDistanceMapImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUS3IUS3.Clone = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_Clone, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetSquaredDistance, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SquaredDistanceOn, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SquaredDistanceOff, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetInputIsBinary, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_InputIsBinaryOn, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_InputIsBinaryOff, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetUseImageSpacing, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_UseImageSpacingOn, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_UseImageSpacingOff, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetVoronoiMap, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetDistanceMap, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetVectorDistanceMap, None, itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_swigregister
itkDanielssonDistanceMapImageFilterIUS3IUS3_swigregister(itkDanielssonDistanceMapImageFilterIUS3IUS3)

def itkDanielssonDistanceMapImageFilterIUS3IUS3___New_orig__() -> "itkDanielssonDistanceMapImageFilterIUS3IUS3_Pointer":
    """itkDanielssonDistanceMapImageFilterIUS3IUS3___New_orig__() -> itkDanielssonDistanceMapImageFilterIUS3IUS3_Pointer"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3___New_orig__()

def itkDanielssonDistanceMapImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkDanielssonDistanceMapImageFilterIUS3IUS3 *":
    """itkDanielssonDistanceMapImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS3IUS3"""
    return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_cast(obj)


def danielsson_distance_map_image_filter(*args, **kwargs):
    """Procedural interface for DanielssonDistanceMapImageFilter"""
    import itk
    instance = itk.DanielssonDistanceMapImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def danielsson_distance_map_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.DanielssonDistanceMapImageFilter, itkTemplate.itkTemplate):
        danielsson_distance_map_image_filter.__doc__ = itk.DanielssonDistanceMapImageFilter.values()[0].__doc__
    else:
        danielsson_distance_map_image_filter.__doc__ = itk.DanielssonDistanceMapImageFilter.__doc__




