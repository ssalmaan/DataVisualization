# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkGaborImageSourcePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkGaborImageSourcePython', [dirname(__file__)])
        except ImportError:
            import _itkGaborImageSourcePython
            return _itkGaborImageSourcePython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkGaborImageSourcePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkGaborImageSourcePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkGaborImageSourcePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFixedArrayPython
import pyBasePython
import itkGenerateImageSourcePython
import itkSizePython
import itkMatrixPython
import vnl_matrix_fixedPython
import vnl_matrixPython
import vnl_vectorPython
import stdcomplexPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import itkCovariantVectorPython
import ITKCommonBasePython
import itkImagePython
import itkOffsetPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython

def itkGaborImageSourceIF3_New():
  return itkGaborImageSourceIF3.New()


def itkGaborImageSourceIF2_New():
  return itkGaborImageSourceIF2.New()


def itkGaborImageSourceIUS3_New():
  return itkGaborImageSourceIUS3.New()


def itkGaborImageSourceIUS2_New():
  return itkGaborImageSourceIUS2.New()


def itkGaborImageSourceIUC3_New():
  return itkGaborImageSourceIUC3.New()


def itkGaborImageSourceIUC2_New():
  return itkGaborImageSourceIUC2.New()


def itkGaborImageSourceISS3_New():
  return itkGaborImageSourceISS3.New()


def itkGaborImageSourceISS2_New():
  return itkGaborImageSourceISS2.New()

class itkGaborImageSourceIF2(itkGenerateImageSourcePython.itkGenerateImageSourceIF2):
    """Proxy of C++ itkGaborImageSourceIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGaborImageSourceIF2_Pointer":
        """__New_orig__() -> itkGaborImageSourceIF2_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGaborImageSourceIF2_Pointer":
        """Clone(itkGaborImageSourceIF2 self) -> itkGaborImageSourceIF2_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF2_Clone(self)


    def SetSigma(self, _arg: 'itkFixedArrayD2') -> "void":
        """SetSigma(itkGaborImageSourceIF2 self, itkFixedArrayD2 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF2_SetSigma(self, _arg)


    def GetSigma(self) -> "itkFixedArrayD2 const &":
        """GetSigma(itkGaborImageSourceIF2 self) -> itkFixedArrayD2"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF2_GetSigma(self)


    def SetMean(self, _arg: 'itkFixedArrayD2') -> "void":
        """SetMean(itkGaborImageSourceIF2 self, itkFixedArrayD2 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF2_SetMean(self, _arg)


    def GetMean(self) -> "itkFixedArrayD2 const &":
        """GetMean(itkGaborImageSourceIF2 self) -> itkFixedArrayD2"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF2_GetMean(self)


    def SetFrequency(self, _arg: 'double const') -> "void":
        """SetFrequency(itkGaborImageSourceIF2 self, double const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF2_SetFrequency(self, _arg)


    def GetFrequency(self) -> "double const &":
        """GetFrequency(itkGaborImageSourceIF2 self) -> double const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF2_GetFrequency(self)


    def SetCalculateImaginaryPart(self, _arg: 'bool const') -> "void":
        """SetCalculateImaginaryPart(itkGaborImageSourceIF2 self, bool const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF2_SetCalculateImaginaryPart(self, _arg)


    def GetCalculateImaginaryPart(self) -> "bool const &":
        """GetCalculateImaginaryPart(itkGaborImageSourceIF2 self) -> bool const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF2_GetCalculateImaginaryPart(self)


    def CalculateImaginaryPartOn(self) -> "void":
        """CalculateImaginaryPartOn(itkGaborImageSourceIF2 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF2_CalculateImaginaryPartOn(self)


    def CalculateImaginaryPartOff(self) -> "void":
        """CalculateImaginaryPartOff(itkGaborImageSourceIF2 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF2_CalculateImaginaryPartOff(self)

    __swig_destroy__ = _itkGaborImageSourcePython.delete_itkGaborImageSourceIF2

    def cast(obj: 'itkLightObject') -> "itkGaborImageSourceIF2 *":
        """cast(itkLightObject obj) -> itkGaborImageSourceIF2"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGaborImageSourceIF2

        Create a new object of the class itkGaborImageSourceIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaborImageSourceIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGaborImageSourceIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGaborImageSourceIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGaborImageSourceIF2.Clone = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF2_Clone, None, itkGaborImageSourceIF2)
itkGaborImageSourceIF2.SetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF2_SetSigma, None, itkGaborImageSourceIF2)
itkGaborImageSourceIF2.GetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF2_GetSigma, None, itkGaborImageSourceIF2)
itkGaborImageSourceIF2.SetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF2_SetMean, None, itkGaborImageSourceIF2)
itkGaborImageSourceIF2.GetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF2_GetMean, None, itkGaborImageSourceIF2)
itkGaborImageSourceIF2.SetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF2_SetFrequency, None, itkGaborImageSourceIF2)
itkGaborImageSourceIF2.GetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF2_GetFrequency, None, itkGaborImageSourceIF2)
itkGaborImageSourceIF2.SetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF2_SetCalculateImaginaryPart, None, itkGaborImageSourceIF2)
itkGaborImageSourceIF2.GetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF2_GetCalculateImaginaryPart, None, itkGaborImageSourceIF2)
itkGaborImageSourceIF2.CalculateImaginaryPartOn = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF2_CalculateImaginaryPartOn, None, itkGaborImageSourceIF2)
itkGaborImageSourceIF2.CalculateImaginaryPartOff = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF2_CalculateImaginaryPartOff, None, itkGaborImageSourceIF2)
itkGaborImageSourceIF2_swigregister = _itkGaborImageSourcePython.itkGaborImageSourceIF2_swigregister
itkGaborImageSourceIF2_swigregister(itkGaborImageSourceIF2)

def itkGaborImageSourceIF2___New_orig__() -> "itkGaborImageSourceIF2_Pointer":
    """itkGaborImageSourceIF2___New_orig__() -> itkGaborImageSourceIF2_Pointer"""
    return _itkGaborImageSourcePython.itkGaborImageSourceIF2___New_orig__()

def itkGaborImageSourceIF2_cast(obj: 'itkLightObject') -> "itkGaborImageSourceIF2 *":
    """itkGaborImageSourceIF2_cast(itkLightObject obj) -> itkGaborImageSourceIF2"""
    return _itkGaborImageSourcePython.itkGaborImageSourceIF2_cast(obj)

class itkGaborImageSourceIF3(itkGenerateImageSourcePython.itkGenerateImageSourceIF3):
    """Proxy of C++ itkGaborImageSourceIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGaborImageSourceIF3_Pointer":
        """__New_orig__() -> itkGaborImageSourceIF3_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGaborImageSourceIF3_Pointer":
        """Clone(itkGaborImageSourceIF3 self) -> itkGaborImageSourceIF3_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF3_Clone(self)


    def SetSigma(self, _arg: 'itkFixedArrayD3') -> "void":
        """SetSigma(itkGaborImageSourceIF3 self, itkFixedArrayD3 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF3_SetSigma(self, _arg)


    def GetSigma(self) -> "itkFixedArrayD3 const &":
        """GetSigma(itkGaborImageSourceIF3 self) -> itkFixedArrayD3"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF3_GetSigma(self)


    def SetMean(self, _arg: 'itkFixedArrayD3') -> "void":
        """SetMean(itkGaborImageSourceIF3 self, itkFixedArrayD3 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF3_SetMean(self, _arg)


    def GetMean(self) -> "itkFixedArrayD3 const &":
        """GetMean(itkGaborImageSourceIF3 self) -> itkFixedArrayD3"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF3_GetMean(self)


    def SetFrequency(self, _arg: 'double const') -> "void":
        """SetFrequency(itkGaborImageSourceIF3 self, double const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF3_SetFrequency(self, _arg)


    def GetFrequency(self) -> "double const &":
        """GetFrequency(itkGaborImageSourceIF3 self) -> double const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF3_GetFrequency(self)


    def SetCalculateImaginaryPart(self, _arg: 'bool const') -> "void":
        """SetCalculateImaginaryPart(itkGaborImageSourceIF3 self, bool const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF3_SetCalculateImaginaryPart(self, _arg)


    def GetCalculateImaginaryPart(self) -> "bool const &":
        """GetCalculateImaginaryPart(itkGaborImageSourceIF3 self) -> bool const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF3_GetCalculateImaginaryPart(self)


    def CalculateImaginaryPartOn(self) -> "void":
        """CalculateImaginaryPartOn(itkGaborImageSourceIF3 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF3_CalculateImaginaryPartOn(self)


    def CalculateImaginaryPartOff(self) -> "void":
        """CalculateImaginaryPartOff(itkGaborImageSourceIF3 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF3_CalculateImaginaryPartOff(self)

    __swig_destroy__ = _itkGaborImageSourcePython.delete_itkGaborImageSourceIF3

    def cast(obj: 'itkLightObject') -> "itkGaborImageSourceIF3 *":
        """cast(itkLightObject obj) -> itkGaborImageSourceIF3"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGaborImageSourceIF3

        Create a new object of the class itkGaborImageSourceIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaborImageSourceIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGaborImageSourceIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGaborImageSourceIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGaborImageSourceIF3.Clone = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF3_Clone, None, itkGaborImageSourceIF3)
itkGaborImageSourceIF3.SetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF3_SetSigma, None, itkGaborImageSourceIF3)
itkGaborImageSourceIF3.GetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF3_GetSigma, None, itkGaborImageSourceIF3)
itkGaborImageSourceIF3.SetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF3_SetMean, None, itkGaborImageSourceIF3)
itkGaborImageSourceIF3.GetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF3_GetMean, None, itkGaborImageSourceIF3)
itkGaborImageSourceIF3.SetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF3_SetFrequency, None, itkGaborImageSourceIF3)
itkGaborImageSourceIF3.GetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF3_GetFrequency, None, itkGaborImageSourceIF3)
itkGaborImageSourceIF3.SetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF3_SetCalculateImaginaryPart, None, itkGaborImageSourceIF3)
itkGaborImageSourceIF3.GetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF3_GetCalculateImaginaryPart, None, itkGaborImageSourceIF3)
itkGaborImageSourceIF3.CalculateImaginaryPartOn = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF3_CalculateImaginaryPartOn, None, itkGaborImageSourceIF3)
itkGaborImageSourceIF3.CalculateImaginaryPartOff = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIF3_CalculateImaginaryPartOff, None, itkGaborImageSourceIF3)
itkGaborImageSourceIF3_swigregister = _itkGaborImageSourcePython.itkGaborImageSourceIF3_swigregister
itkGaborImageSourceIF3_swigregister(itkGaborImageSourceIF3)

def itkGaborImageSourceIF3___New_orig__() -> "itkGaborImageSourceIF3_Pointer":
    """itkGaborImageSourceIF3___New_orig__() -> itkGaborImageSourceIF3_Pointer"""
    return _itkGaborImageSourcePython.itkGaborImageSourceIF3___New_orig__()

def itkGaborImageSourceIF3_cast(obj: 'itkLightObject') -> "itkGaborImageSourceIF3 *":
    """itkGaborImageSourceIF3_cast(itkLightObject obj) -> itkGaborImageSourceIF3"""
    return _itkGaborImageSourcePython.itkGaborImageSourceIF3_cast(obj)

class itkGaborImageSourceISS2(itkGenerateImageSourcePython.itkGenerateImageSourceISS2):
    """Proxy of C++ itkGaborImageSourceISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGaborImageSourceISS2_Pointer":
        """__New_orig__() -> itkGaborImageSourceISS2_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGaborImageSourceISS2_Pointer":
        """Clone(itkGaborImageSourceISS2 self) -> itkGaborImageSourceISS2_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS2_Clone(self)


    def SetSigma(self, _arg: 'itkFixedArrayD2') -> "void":
        """SetSigma(itkGaborImageSourceISS2 self, itkFixedArrayD2 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS2_SetSigma(self, _arg)


    def GetSigma(self) -> "itkFixedArrayD2 const &":
        """GetSigma(itkGaborImageSourceISS2 self) -> itkFixedArrayD2"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS2_GetSigma(self)


    def SetMean(self, _arg: 'itkFixedArrayD2') -> "void":
        """SetMean(itkGaborImageSourceISS2 self, itkFixedArrayD2 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS2_SetMean(self, _arg)


    def GetMean(self) -> "itkFixedArrayD2 const &":
        """GetMean(itkGaborImageSourceISS2 self) -> itkFixedArrayD2"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS2_GetMean(self)


    def SetFrequency(self, _arg: 'double const') -> "void":
        """SetFrequency(itkGaborImageSourceISS2 self, double const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS2_SetFrequency(self, _arg)


    def GetFrequency(self) -> "double const &":
        """GetFrequency(itkGaborImageSourceISS2 self) -> double const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS2_GetFrequency(self)


    def SetCalculateImaginaryPart(self, _arg: 'bool const') -> "void":
        """SetCalculateImaginaryPart(itkGaborImageSourceISS2 self, bool const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS2_SetCalculateImaginaryPart(self, _arg)


    def GetCalculateImaginaryPart(self) -> "bool const &":
        """GetCalculateImaginaryPart(itkGaborImageSourceISS2 self) -> bool const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS2_GetCalculateImaginaryPart(self)


    def CalculateImaginaryPartOn(self) -> "void":
        """CalculateImaginaryPartOn(itkGaborImageSourceISS2 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS2_CalculateImaginaryPartOn(self)


    def CalculateImaginaryPartOff(self) -> "void":
        """CalculateImaginaryPartOff(itkGaborImageSourceISS2 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS2_CalculateImaginaryPartOff(self)

    __swig_destroy__ = _itkGaborImageSourcePython.delete_itkGaborImageSourceISS2

    def cast(obj: 'itkLightObject') -> "itkGaborImageSourceISS2 *":
        """cast(itkLightObject obj) -> itkGaborImageSourceISS2"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGaborImageSourceISS2

        Create a new object of the class itkGaborImageSourceISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaborImageSourceISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGaborImageSourceISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGaborImageSourceISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGaborImageSourceISS2.Clone = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS2_Clone, None, itkGaborImageSourceISS2)
itkGaborImageSourceISS2.SetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS2_SetSigma, None, itkGaborImageSourceISS2)
itkGaborImageSourceISS2.GetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS2_GetSigma, None, itkGaborImageSourceISS2)
itkGaborImageSourceISS2.SetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS2_SetMean, None, itkGaborImageSourceISS2)
itkGaborImageSourceISS2.GetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS2_GetMean, None, itkGaborImageSourceISS2)
itkGaborImageSourceISS2.SetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS2_SetFrequency, None, itkGaborImageSourceISS2)
itkGaborImageSourceISS2.GetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS2_GetFrequency, None, itkGaborImageSourceISS2)
itkGaborImageSourceISS2.SetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS2_SetCalculateImaginaryPart, None, itkGaborImageSourceISS2)
itkGaborImageSourceISS2.GetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS2_GetCalculateImaginaryPart, None, itkGaborImageSourceISS2)
itkGaborImageSourceISS2.CalculateImaginaryPartOn = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS2_CalculateImaginaryPartOn, None, itkGaborImageSourceISS2)
itkGaborImageSourceISS2.CalculateImaginaryPartOff = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS2_CalculateImaginaryPartOff, None, itkGaborImageSourceISS2)
itkGaborImageSourceISS2_swigregister = _itkGaborImageSourcePython.itkGaborImageSourceISS2_swigregister
itkGaborImageSourceISS2_swigregister(itkGaborImageSourceISS2)

def itkGaborImageSourceISS2___New_orig__() -> "itkGaborImageSourceISS2_Pointer":
    """itkGaborImageSourceISS2___New_orig__() -> itkGaborImageSourceISS2_Pointer"""
    return _itkGaborImageSourcePython.itkGaborImageSourceISS2___New_orig__()

def itkGaborImageSourceISS2_cast(obj: 'itkLightObject') -> "itkGaborImageSourceISS2 *":
    """itkGaborImageSourceISS2_cast(itkLightObject obj) -> itkGaborImageSourceISS2"""
    return _itkGaborImageSourcePython.itkGaborImageSourceISS2_cast(obj)

class itkGaborImageSourceISS3(itkGenerateImageSourcePython.itkGenerateImageSourceISS3):
    """Proxy of C++ itkGaborImageSourceISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGaborImageSourceISS3_Pointer":
        """__New_orig__() -> itkGaborImageSourceISS3_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGaborImageSourceISS3_Pointer":
        """Clone(itkGaborImageSourceISS3 self) -> itkGaborImageSourceISS3_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS3_Clone(self)


    def SetSigma(self, _arg: 'itkFixedArrayD3') -> "void":
        """SetSigma(itkGaborImageSourceISS3 self, itkFixedArrayD3 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS3_SetSigma(self, _arg)


    def GetSigma(self) -> "itkFixedArrayD3 const &":
        """GetSigma(itkGaborImageSourceISS3 self) -> itkFixedArrayD3"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS3_GetSigma(self)


    def SetMean(self, _arg: 'itkFixedArrayD3') -> "void":
        """SetMean(itkGaborImageSourceISS3 self, itkFixedArrayD3 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS3_SetMean(self, _arg)


    def GetMean(self) -> "itkFixedArrayD3 const &":
        """GetMean(itkGaborImageSourceISS3 self) -> itkFixedArrayD3"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS3_GetMean(self)


    def SetFrequency(self, _arg: 'double const') -> "void":
        """SetFrequency(itkGaborImageSourceISS3 self, double const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS3_SetFrequency(self, _arg)


    def GetFrequency(self) -> "double const &":
        """GetFrequency(itkGaborImageSourceISS3 self) -> double const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS3_GetFrequency(self)


    def SetCalculateImaginaryPart(self, _arg: 'bool const') -> "void":
        """SetCalculateImaginaryPart(itkGaborImageSourceISS3 self, bool const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS3_SetCalculateImaginaryPart(self, _arg)


    def GetCalculateImaginaryPart(self) -> "bool const &":
        """GetCalculateImaginaryPart(itkGaborImageSourceISS3 self) -> bool const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS3_GetCalculateImaginaryPart(self)


    def CalculateImaginaryPartOn(self) -> "void":
        """CalculateImaginaryPartOn(itkGaborImageSourceISS3 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS3_CalculateImaginaryPartOn(self)


    def CalculateImaginaryPartOff(self) -> "void":
        """CalculateImaginaryPartOff(itkGaborImageSourceISS3 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS3_CalculateImaginaryPartOff(self)

    __swig_destroy__ = _itkGaborImageSourcePython.delete_itkGaborImageSourceISS3

    def cast(obj: 'itkLightObject') -> "itkGaborImageSourceISS3 *":
        """cast(itkLightObject obj) -> itkGaborImageSourceISS3"""
        return _itkGaborImageSourcePython.itkGaborImageSourceISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGaborImageSourceISS3

        Create a new object of the class itkGaborImageSourceISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaborImageSourceISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGaborImageSourceISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGaborImageSourceISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGaborImageSourceISS3.Clone = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS3_Clone, None, itkGaborImageSourceISS3)
itkGaborImageSourceISS3.SetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS3_SetSigma, None, itkGaborImageSourceISS3)
itkGaborImageSourceISS3.GetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS3_GetSigma, None, itkGaborImageSourceISS3)
itkGaborImageSourceISS3.SetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS3_SetMean, None, itkGaborImageSourceISS3)
itkGaborImageSourceISS3.GetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS3_GetMean, None, itkGaborImageSourceISS3)
itkGaborImageSourceISS3.SetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS3_SetFrequency, None, itkGaborImageSourceISS3)
itkGaborImageSourceISS3.GetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS3_GetFrequency, None, itkGaborImageSourceISS3)
itkGaborImageSourceISS3.SetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS3_SetCalculateImaginaryPart, None, itkGaborImageSourceISS3)
itkGaborImageSourceISS3.GetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS3_GetCalculateImaginaryPart, None, itkGaborImageSourceISS3)
itkGaborImageSourceISS3.CalculateImaginaryPartOn = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS3_CalculateImaginaryPartOn, None, itkGaborImageSourceISS3)
itkGaborImageSourceISS3.CalculateImaginaryPartOff = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceISS3_CalculateImaginaryPartOff, None, itkGaborImageSourceISS3)
itkGaborImageSourceISS3_swigregister = _itkGaborImageSourcePython.itkGaborImageSourceISS3_swigregister
itkGaborImageSourceISS3_swigregister(itkGaborImageSourceISS3)

def itkGaborImageSourceISS3___New_orig__() -> "itkGaborImageSourceISS3_Pointer":
    """itkGaborImageSourceISS3___New_orig__() -> itkGaborImageSourceISS3_Pointer"""
    return _itkGaborImageSourcePython.itkGaborImageSourceISS3___New_orig__()

def itkGaborImageSourceISS3_cast(obj: 'itkLightObject') -> "itkGaborImageSourceISS3 *":
    """itkGaborImageSourceISS3_cast(itkLightObject obj) -> itkGaborImageSourceISS3"""
    return _itkGaborImageSourcePython.itkGaborImageSourceISS3_cast(obj)

class itkGaborImageSourceIUC2(itkGenerateImageSourcePython.itkGenerateImageSourceIUC2):
    """Proxy of C++ itkGaborImageSourceIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGaborImageSourceIUC2_Pointer":
        """__New_orig__() -> itkGaborImageSourceIUC2_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGaborImageSourceIUC2_Pointer":
        """Clone(itkGaborImageSourceIUC2 self) -> itkGaborImageSourceIUC2_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC2_Clone(self)


    def SetSigma(self, _arg: 'itkFixedArrayD2') -> "void":
        """SetSigma(itkGaborImageSourceIUC2 self, itkFixedArrayD2 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC2_SetSigma(self, _arg)


    def GetSigma(self) -> "itkFixedArrayD2 const &":
        """GetSigma(itkGaborImageSourceIUC2 self) -> itkFixedArrayD2"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC2_GetSigma(self)


    def SetMean(self, _arg: 'itkFixedArrayD2') -> "void":
        """SetMean(itkGaborImageSourceIUC2 self, itkFixedArrayD2 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC2_SetMean(self, _arg)


    def GetMean(self) -> "itkFixedArrayD2 const &":
        """GetMean(itkGaborImageSourceIUC2 self) -> itkFixedArrayD2"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC2_GetMean(self)


    def SetFrequency(self, _arg: 'double const') -> "void":
        """SetFrequency(itkGaborImageSourceIUC2 self, double const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC2_SetFrequency(self, _arg)


    def GetFrequency(self) -> "double const &":
        """GetFrequency(itkGaborImageSourceIUC2 self) -> double const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC2_GetFrequency(self)


    def SetCalculateImaginaryPart(self, _arg: 'bool const') -> "void":
        """SetCalculateImaginaryPart(itkGaborImageSourceIUC2 self, bool const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC2_SetCalculateImaginaryPart(self, _arg)


    def GetCalculateImaginaryPart(self) -> "bool const &":
        """GetCalculateImaginaryPart(itkGaborImageSourceIUC2 self) -> bool const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC2_GetCalculateImaginaryPart(self)


    def CalculateImaginaryPartOn(self) -> "void":
        """CalculateImaginaryPartOn(itkGaborImageSourceIUC2 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC2_CalculateImaginaryPartOn(self)


    def CalculateImaginaryPartOff(self) -> "void":
        """CalculateImaginaryPartOff(itkGaborImageSourceIUC2 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC2_CalculateImaginaryPartOff(self)

    __swig_destroy__ = _itkGaborImageSourcePython.delete_itkGaborImageSourceIUC2

    def cast(obj: 'itkLightObject') -> "itkGaborImageSourceIUC2 *":
        """cast(itkLightObject obj) -> itkGaborImageSourceIUC2"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGaborImageSourceIUC2

        Create a new object of the class itkGaborImageSourceIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaborImageSourceIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGaborImageSourceIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGaborImageSourceIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGaborImageSourceIUC2.Clone = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC2_Clone, None, itkGaborImageSourceIUC2)
itkGaborImageSourceIUC2.SetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC2_SetSigma, None, itkGaborImageSourceIUC2)
itkGaborImageSourceIUC2.GetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC2_GetSigma, None, itkGaborImageSourceIUC2)
itkGaborImageSourceIUC2.SetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC2_SetMean, None, itkGaborImageSourceIUC2)
itkGaborImageSourceIUC2.GetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC2_GetMean, None, itkGaborImageSourceIUC2)
itkGaborImageSourceIUC2.SetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC2_SetFrequency, None, itkGaborImageSourceIUC2)
itkGaborImageSourceIUC2.GetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC2_GetFrequency, None, itkGaborImageSourceIUC2)
itkGaborImageSourceIUC2.SetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC2_SetCalculateImaginaryPart, None, itkGaborImageSourceIUC2)
itkGaborImageSourceIUC2.GetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC2_GetCalculateImaginaryPart, None, itkGaborImageSourceIUC2)
itkGaborImageSourceIUC2.CalculateImaginaryPartOn = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC2_CalculateImaginaryPartOn, None, itkGaborImageSourceIUC2)
itkGaborImageSourceIUC2.CalculateImaginaryPartOff = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC2_CalculateImaginaryPartOff, None, itkGaborImageSourceIUC2)
itkGaborImageSourceIUC2_swigregister = _itkGaborImageSourcePython.itkGaborImageSourceIUC2_swigregister
itkGaborImageSourceIUC2_swigregister(itkGaborImageSourceIUC2)

def itkGaborImageSourceIUC2___New_orig__() -> "itkGaborImageSourceIUC2_Pointer":
    """itkGaborImageSourceIUC2___New_orig__() -> itkGaborImageSourceIUC2_Pointer"""
    return _itkGaborImageSourcePython.itkGaborImageSourceIUC2___New_orig__()

def itkGaborImageSourceIUC2_cast(obj: 'itkLightObject') -> "itkGaborImageSourceIUC2 *":
    """itkGaborImageSourceIUC2_cast(itkLightObject obj) -> itkGaborImageSourceIUC2"""
    return _itkGaborImageSourcePython.itkGaborImageSourceIUC2_cast(obj)

class itkGaborImageSourceIUC3(itkGenerateImageSourcePython.itkGenerateImageSourceIUC3):
    """Proxy of C++ itkGaborImageSourceIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGaborImageSourceIUC3_Pointer":
        """__New_orig__() -> itkGaborImageSourceIUC3_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGaborImageSourceIUC3_Pointer":
        """Clone(itkGaborImageSourceIUC3 self) -> itkGaborImageSourceIUC3_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC3_Clone(self)


    def SetSigma(self, _arg: 'itkFixedArrayD3') -> "void":
        """SetSigma(itkGaborImageSourceIUC3 self, itkFixedArrayD3 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC3_SetSigma(self, _arg)


    def GetSigma(self) -> "itkFixedArrayD3 const &":
        """GetSigma(itkGaborImageSourceIUC3 self) -> itkFixedArrayD3"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC3_GetSigma(self)


    def SetMean(self, _arg: 'itkFixedArrayD3') -> "void":
        """SetMean(itkGaborImageSourceIUC3 self, itkFixedArrayD3 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC3_SetMean(self, _arg)


    def GetMean(self) -> "itkFixedArrayD3 const &":
        """GetMean(itkGaborImageSourceIUC3 self) -> itkFixedArrayD3"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC3_GetMean(self)


    def SetFrequency(self, _arg: 'double const') -> "void":
        """SetFrequency(itkGaborImageSourceIUC3 self, double const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC3_SetFrequency(self, _arg)


    def GetFrequency(self) -> "double const &":
        """GetFrequency(itkGaborImageSourceIUC3 self) -> double const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC3_GetFrequency(self)


    def SetCalculateImaginaryPart(self, _arg: 'bool const') -> "void":
        """SetCalculateImaginaryPart(itkGaborImageSourceIUC3 self, bool const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC3_SetCalculateImaginaryPart(self, _arg)


    def GetCalculateImaginaryPart(self) -> "bool const &":
        """GetCalculateImaginaryPart(itkGaborImageSourceIUC3 self) -> bool const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC3_GetCalculateImaginaryPart(self)


    def CalculateImaginaryPartOn(self) -> "void":
        """CalculateImaginaryPartOn(itkGaborImageSourceIUC3 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC3_CalculateImaginaryPartOn(self)


    def CalculateImaginaryPartOff(self) -> "void":
        """CalculateImaginaryPartOff(itkGaborImageSourceIUC3 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC3_CalculateImaginaryPartOff(self)

    __swig_destroy__ = _itkGaborImageSourcePython.delete_itkGaborImageSourceIUC3

    def cast(obj: 'itkLightObject') -> "itkGaborImageSourceIUC3 *":
        """cast(itkLightObject obj) -> itkGaborImageSourceIUC3"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGaborImageSourceIUC3

        Create a new object of the class itkGaborImageSourceIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaborImageSourceIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGaborImageSourceIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGaborImageSourceIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGaborImageSourceIUC3.Clone = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC3_Clone, None, itkGaborImageSourceIUC3)
itkGaborImageSourceIUC3.SetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC3_SetSigma, None, itkGaborImageSourceIUC3)
itkGaborImageSourceIUC3.GetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC3_GetSigma, None, itkGaborImageSourceIUC3)
itkGaborImageSourceIUC3.SetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC3_SetMean, None, itkGaborImageSourceIUC3)
itkGaborImageSourceIUC3.GetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC3_GetMean, None, itkGaborImageSourceIUC3)
itkGaborImageSourceIUC3.SetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC3_SetFrequency, None, itkGaborImageSourceIUC3)
itkGaborImageSourceIUC3.GetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC3_GetFrequency, None, itkGaborImageSourceIUC3)
itkGaborImageSourceIUC3.SetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC3_SetCalculateImaginaryPart, None, itkGaborImageSourceIUC3)
itkGaborImageSourceIUC3.GetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC3_GetCalculateImaginaryPart, None, itkGaborImageSourceIUC3)
itkGaborImageSourceIUC3.CalculateImaginaryPartOn = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC3_CalculateImaginaryPartOn, None, itkGaborImageSourceIUC3)
itkGaborImageSourceIUC3.CalculateImaginaryPartOff = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUC3_CalculateImaginaryPartOff, None, itkGaborImageSourceIUC3)
itkGaborImageSourceIUC3_swigregister = _itkGaborImageSourcePython.itkGaborImageSourceIUC3_swigregister
itkGaborImageSourceIUC3_swigregister(itkGaborImageSourceIUC3)

def itkGaborImageSourceIUC3___New_orig__() -> "itkGaborImageSourceIUC3_Pointer":
    """itkGaborImageSourceIUC3___New_orig__() -> itkGaborImageSourceIUC3_Pointer"""
    return _itkGaborImageSourcePython.itkGaborImageSourceIUC3___New_orig__()

def itkGaborImageSourceIUC3_cast(obj: 'itkLightObject') -> "itkGaborImageSourceIUC3 *":
    """itkGaborImageSourceIUC3_cast(itkLightObject obj) -> itkGaborImageSourceIUC3"""
    return _itkGaborImageSourcePython.itkGaborImageSourceIUC3_cast(obj)

class itkGaborImageSourceIUS2(itkGenerateImageSourcePython.itkGenerateImageSourceIUS2):
    """Proxy of C++ itkGaborImageSourceIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGaborImageSourceIUS2_Pointer":
        """__New_orig__() -> itkGaborImageSourceIUS2_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGaborImageSourceIUS2_Pointer":
        """Clone(itkGaborImageSourceIUS2 self) -> itkGaborImageSourceIUS2_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS2_Clone(self)


    def SetSigma(self, _arg: 'itkFixedArrayD2') -> "void":
        """SetSigma(itkGaborImageSourceIUS2 self, itkFixedArrayD2 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS2_SetSigma(self, _arg)


    def GetSigma(self) -> "itkFixedArrayD2 const &":
        """GetSigma(itkGaborImageSourceIUS2 self) -> itkFixedArrayD2"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS2_GetSigma(self)


    def SetMean(self, _arg: 'itkFixedArrayD2') -> "void":
        """SetMean(itkGaborImageSourceIUS2 self, itkFixedArrayD2 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS2_SetMean(self, _arg)


    def GetMean(self) -> "itkFixedArrayD2 const &":
        """GetMean(itkGaborImageSourceIUS2 self) -> itkFixedArrayD2"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS2_GetMean(self)


    def SetFrequency(self, _arg: 'double const') -> "void":
        """SetFrequency(itkGaborImageSourceIUS2 self, double const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS2_SetFrequency(self, _arg)


    def GetFrequency(self) -> "double const &":
        """GetFrequency(itkGaborImageSourceIUS2 self) -> double const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS2_GetFrequency(self)


    def SetCalculateImaginaryPart(self, _arg: 'bool const') -> "void":
        """SetCalculateImaginaryPart(itkGaborImageSourceIUS2 self, bool const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS2_SetCalculateImaginaryPart(self, _arg)


    def GetCalculateImaginaryPart(self) -> "bool const &":
        """GetCalculateImaginaryPart(itkGaborImageSourceIUS2 self) -> bool const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS2_GetCalculateImaginaryPart(self)


    def CalculateImaginaryPartOn(self) -> "void":
        """CalculateImaginaryPartOn(itkGaborImageSourceIUS2 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS2_CalculateImaginaryPartOn(self)


    def CalculateImaginaryPartOff(self) -> "void":
        """CalculateImaginaryPartOff(itkGaborImageSourceIUS2 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS2_CalculateImaginaryPartOff(self)

    __swig_destroy__ = _itkGaborImageSourcePython.delete_itkGaborImageSourceIUS2

    def cast(obj: 'itkLightObject') -> "itkGaborImageSourceIUS2 *":
        """cast(itkLightObject obj) -> itkGaborImageSourceIUS2"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGaborImageSourceIUS2

        Create a new object of the class itkGaborImageSourceIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaborImageSourceIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGaborImageSourceIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGaborImageSourceIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGaborImageSourceIUS2.Clone = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS2_Clone, None, itkGaborImageSourceIUS2)
itkGaborImageSourceIUS2.SetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS2_SetSigma, None, itkGaborImageSourceIUS2)
itkGaborImageSourceIUS2.GetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS2_GetSigma, None, itkGaborImageSourceIUS2)
itkGaborImageSourceIUS2.SetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS2_SetMean, None, itkGaborImageSourceIUS2)
itkGaborImageSourceIUS2.GetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS2_GetMean, None, itkGaborImageSourceIUS2)
itkGaborImageSourceIUS2.SetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS2_SetFrequency, None, itkGaborImageSourceIUS2)
itkGaborImageSourceIUS2.GetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS2_GetFrequency, None, itkGaborImageSourceIUS2)
itkGaborImageSourceIUS2.SetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS2_SetCalculateImaginaryPart, None, itkGaborImageSourceIUS2)
itkGaborImageSourceIUS2.GetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS2_GetCalculateImaginaryPart, None, itkGaborImageSourceIUS2)
itkGaborImageSourceIUS2.CalculateImaginaryPartOn = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS2_CalculateImaginaryPartOn, None, itkGaborImageSourceIUS2)
itkGaborImageSourceIUS2.CalculateImaginaryPartOff = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS2_CalculateImaginaryPartOff, None, itkGaborImageSourceIUS2)
itkGaborImageSourceIUS2_swigregister = _itkGaborImageSourcePython.itkGaborImageSourceIUS2_swigregister
itkGaborImageSourceIUS2_swigregister(itkGaborImageSourceIUS2)

def itkGaborImageSourceIUS2___New_orig__() -> "itkGaborImageSourceIUS2_Pointer":
    """itkGaborImageSourceIUS2___New_orig__() -> itkGaborImageSourceIUS2_Pointer"""
    return _itkGaborImageSourcePython.itkGaborImageSourceIUS2___New_orig__()

def itkGaborImageSourceIUS2_cast(obj: 'itkLightObject') -> "itkGaborImageSourceIUS2 *":
    """itkGaborImageSourceIUS2_cast(itkLightObject obj) -> itkGaborImageSourceIUS2"""
    return _itkGaborImageSourcePython.itkGaborImageSourceIUS2_cast(obj)

class itkGaborImageSourceIUS3(itkGenerateImageSourcePython.itkGenerateImageSourceIUS3):
    """Proxy of C++ itkGaborImageSourceIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGaborImageSourceIUS3_Pointer":
        """__New_orig__() -> itkGaborImageSourceIUS3_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGaborImageSourceIUS3_Pointer":
        """Clone(itkGaborImageSourceIUS3 self) -> itkGaborImageSourceIUS3_Pointer"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS3_Clone(self)


    def SetSigma(self, _arg: 'itkFixedArrayD3') -> "void":
        """SetSigma(itkGaborImageSourceIUS3 self, itkFixedArrayD3 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS3_SetSigma(self, _arg)


    def GetSigma(self) -> "itkFixedArrayD3 const &":
        """GetSigma(itkGaborImageSourceIUS3 self) -> itkFixedArrayD3"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS3_GetSigma(self)


    def SetMean(self, _arg: 'itkFixedArrayD3') -> "void":
        """SetMean(itkGaborImageSourceIUS3 self, itkFixedArrayD3 _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS3_SetMean(self, _arg)


    def GetMean(self) -> "itkFixedArrayD3 const &":
        """GetMean(itkGaborImageSourceIUS3 self) -> itkFixedArrayD3"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS3_GetMean(self)


    def SetFrequency(self, _arg: 'double const') -> "void":
        """SetFrequency(itkGaborImageSourceIUS3 self, double const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS3_SetFrequency(self, _arg)


    def GetFrequency(self) -> "double const &":
        """GetFrequency(itkGaborImageSourceIUS3 self) -> double const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS3_GetFrequency(self)


    def SetCalculateImaginaryPart(self, _arg: 'bool const') -> "void":
        """SetCalculateImaginaryPart(itkGaborImageSourceIUS3 self, bool const _arg)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS3_SetCalculateImaginaryPart(self, _arg)


    def GetCalculateImaginaryPart(self) -> "bool const &":
        """GetCalculateImaginaryPart(itkGaborImageSourceIUS3 self) -> bool const &"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS3_GetCalculateImaginaryPart(self)


    def CalculateImaginaryPartOn(self) -> "void":
        """CalculateImaginaryPartOn(itkGaborImageSourceIUS3 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS3_CalculateImaginaryPartOn(self)


    def CalculateImaginaryPartOff(self) -> "void":
        """CalculateImaginaryPartOff(itkGaborImageSourceIUS3 self)"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS3_CalculateImaginaryPartOff(self)

    __swig_destroy__ = _itkGaborImageSourcePython.delete_itkGaborImageSourceIUS3

    def cast(obj: 'itkLightObject') -> "itkGaborImageSourceIUS3 *":
        """cast(itkLightObject obj) -> itkGaborImageSourceIUS3"""
        return _itkGaborImageSourcePython.itkGaborImageSourceIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGaborImageSourceIUS3

        Create a new object of the class itkGaborImageSourceIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaborImageSourceIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGaborImageSourceIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGaborImageSourceIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGaborImageSourceIUS3.Clone = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS3_Clone, None, itkGaborImageSourceIUS3)
itkGaborImageSourceIUS3.SetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS3_SetSigma, None, itkGaborImageSourceIUS3)
itkGaborImageSourceIUS3.GetSigma = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS3_GetSigma, None, itkGaborImageSourceIUS3)
itkGaborImageSourceIUS3.SetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS3_SetMean, None, itkGaborImageSourceIUS3)
itkGaborImageSourceIUS3.GetMean = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS3_GetMean, None, itkGaborImageSourceIUS3)
itkGaborImageSourceIUS3.SetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS3_SetFrequency, None, itkGaborImageSourceIUS3)
itkGaborImageSourceIUS3.GetFrequency = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS3_GetFrequency, None, itkGaborImageSourceIUS3)
itkGaborImageSourceIUS3.SetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS3_SetCalculateImaginaryPart, None, itkGaborImageSourceIUS3)
itkGaborImageSourceIUS3.GetCalculateImaginaryPart = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS3_GetCalculateImaginaryPart, None, itkGaborImageSourceIUS3)
itkGaborImageSourceIUS3.CalculateImaginaryPartOn = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS3_CalculateImaginaryPartOn, None, itkGaborImageSourceIUS3)
itkGaborImageSourceIUS3.CalculateImaginaryPartOff = new_instancemethod(_itkGaborImageSourcePython.itkGaborImageSourceIUS3_CalculateImaginaryPartOff, None, itkGaborImageSourceIUS3)
itkGaborImageSourceIUS3_swigregister = _itkGaborImageSourcePython.itkGaborImageSourceIUS3_swigregister
itkGaborImageSourceIUS3_swigregister(itkGaborImageSourceIUS3)

def itkGaborImageSourceIUS3___New_orig__() -> "itkGaborImageSourceIUS3_Pointer":
    """itkGaborImageSourceIUS3___New_orig__() -> itkGaborImageSourceIUS3_Pointer"""
    return _itkGaborImageSourcePython.itkGaborImageSourceIUS3___New_orig__()

def itkGaborImageSourceIUS3_cast(obj: 'itkLightObject') -> "itkGaborImageSourceIUS3 *":
    """itkGaborImageSourceIUS3_cast(itkLightObject obj) -> itkGaborImageSourceIUS3"""
    return _itkGaborImageSourcePython.itkGaborImageSourceIUS3_cast(obj)


def gabor_image_source(*args, **kwargs):
    """Procedural interface for GaborImageSource"""
    import itk
    instance = itk.GaborImageSource.New(*args, **kwargs)
    return instance.__internal_call__()

def gabor_image_source_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.GaborImageSource, itkTemplate.itkTemplate):
        gabor_image_source.__doc__ = itk.GaborImageSource.values()[0].__doc__
    else:
        gabor_image_source.__doc__ = itk.GaborImageSource.__doc__




