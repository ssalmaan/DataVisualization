# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkVTKPolyDataReaderPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkVTKPolyDataReaderPython', [dirname(__file__)])
        except ImportError:
            import _itkVTKPolyDataReaderPython
            return _itkVTKPolyDataReaderPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkVTKPolyDataReaderPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkVTKPolyDataReaderPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkVTKPolyDataReaderPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkMeshBasePython
import itkBoundingBoxPython
import itkMapContainerPython
import ITKCommonBasePython
import pyBasePython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkPointPython
import itkVectorContainerPython
import itkOffsetPython
import itkSizePython
import itkContinuousIndexPython
import itkIndexPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkPointSetPython
import itkArrayPython

def itkVTKPolyDataReaderMD3_New():
  return itkVTKPolyDataReaderMD3.New()


def itkVTKPolyDataReaderMD3_Superclass_New():
  return itkVTKPolyDataReaderMD3_Superclass.New()


def itkVTKPolyDataReaderMF3_New():
  return itkVTKPolyDataReaderMF3.New()


def itkVTKPolyDataReaderMF3_Superclass_New():
  return itkVTKPolyDataReaderMF3_Superclass.New()


def itkVTKPolyDataReaderMD2_New():
  return itkVTKPolyDataReaderMD2.New()


def itkVTKPolyDataReaderMD2_Superclass_New():
  return itkVTKPolyDataReaderMD2_Superclass.New()


def itkVTKPolyDataReaderMF2_New():
  return itkVTKPolyDataReaderMF2.New()


def itkVTKPolyDataReaderMF2_Superclass_New():
  return itkVTKPolyDataReaderMF2_Superclass.New()

class itkVTKPolyDataReaderMD2_Superclass(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkVTKPolyDataReaderMD2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKPolyDataReaderMD2_Superclass_Pointer":
        """__New_orig__() -> itkVTKPolyDataReaderMD2_Superclass_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKPolyDataReaderMD2_Superclass_Pointer":
        """Clone(itkVTKPolyDataReaderMD2_Superclass self) -> itkVTKPolyDataReaderMD2_Superclass_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass_Clone(self)


    def GetOutput(self, *args) -> "itkMeshD2 *":
        """
        GetOutput(itkVTKPolyDataReaderMD2_Superclass self) -> itkMeshD2
        GetOutput(itkVTKPolyDataReaderMD2_Superclass self, unsigned int idx) -> itkMeshD2
        """
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass_GetOutput(self, *args)


    def SetOutput(self, output: 'itkMeshD2') -> "void":
        """SetOutput(itkVTKPolyDataReaderMD2_Superclass self, itkMeshD2 output)"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass_SetOutput(self, output)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkVTKPolyDataReaderMD2_Superclass self, itkDataObject output)
        GraftOutput(itkVTKPolyDataReaderMD2_Superclass self, std::string const & key, itkDataObject output)
        """
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass_GraftOutput(self, *args)


    def GraftNthOutput(self, idx: 'unsigned int', output: 'itkDataObject') -> "void":
        """GraftNthOutput(itkVTKPolyDataReaderMD2_Superclass self, unsigned int idx, itkDataObject output)"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass_GraftNthOutput(self, idx, output)

    __swig_destroy__ = _itkVTKPolyDataReaderPython.delete_itkVTKPolyDataReaderMD2_Superclass

    def cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMD2_Superclass *":
        """cast(itkLightObject obj) -> itkVTKPolyDataReaderMD2_Superclass"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataReaderMD2_Superclass

        Create a new object of the class itkVTKPolyDataReaderMD2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataReaderMD2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataReaderMD2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKPolyDataReaderMD2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKPolyDataReaderMD2_Superclass.Clone = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass_Clone, None, itkVTKPolyDataReaderMD2_Superclass)
itkVTKPolyDataReaderMD2_Superclass.GetOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass_GetOutput, None, itkVTKPolyDataReaderMD2_Superclass)
itkVTKPolyDataReaderMD2_Superclass.SetOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass_SetOutput, None, itkVTKPolyDataReaderMD2_Superclass)
itkVTKPolyDataReaderMD2_Superclass.GraftOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass_GraftOutput, None, itkVTKPolyDataReaderMD2_Superclass)
itkVTKPolyDataReaderMD2_Superclass.GraftNthOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass_GraftNthOutput, None, itkVTKPolyDataReaderMD2_Superclass)
itkVTKPolyDataReaderMD2_Superclass_swigregister = _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass_swigregister
itkVTKPolyDataReaderMD2_Superclass_swigregister(itkVTKPolyDataReaderMD2_Superclass)

def itkVTKPolyDataReaderMD2_Superclass___New_orig__() -> "itkVTKPolyDataReaderMD2_Superclass_Pointer":
    """itkVTKPolyDataReaderMD2_Superclass___New_orig__() -> itkVTKPolyDataReaderMD2_Superclass_Pointer"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass___New_orig__()

def itkVTKPolyDataReaderMD2_Superclass_cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMD2_Superclass *":
    """itkVTKPolyDataReaderMD2_Superclass_cast(itkLightObject obj) -> itkVTKPolyDataReaderMD2_Superclass"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Superclass_cast(obj)

class itkVTKPolyDataReaderMD3_Superclass(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkVTKPolyDataReaderMD3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKPolyDataReaderMD3_Superclass_Pointer":
        """__New_orig__() -> itkVTKPolyDataReaderMD3_Superclass_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKPolyDataReaderMD3_Superclass_Pointer":
        """Clone(itkVTKPolyDataReaderMD3_Superclass self) -> itkVTKPolyDataReaderMD3_Superclass_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass_Clone(self)


    def GetOutput(self, *args) -> "itkMeshD3 *":
        """
        GetOutput(itkVTKPolyDataReaderMD3_Superclass self) -> itkMeshD3
        GetOutput(itkVTKPolyDataReaderMD3_Superclass self, unsigned int idx) -> itkMeshD3
        """
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass_GetOutput(self, *args)


    def SetOutput(self, output: 'itkMeshD3') -> "void":
        """SetOutput(itkVTKPolyDataReaderMD3_Superclass self, itkMeshD3 output)"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass_SetOutput(self, output)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkVTKPolyDataReaderMD3_Superclass self, itkDataObject output)
        GraftOutput(itkVTKPolyDataReaderMD3_Superclass self, std::string const & key, itkDataObject output)
        """
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass_GraftOutput(self, *args)


    def GraftNthOutput(self, idx: 'unsigned int', output: 'itkDataObject') -> "void":
        """GraftNthOutput(itkVTKPolyDataReaderMD3_Superclass self, unsigned int idx, itkDataObject output)"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass_GraftNthOutput(self, idx, output)

    __swig_destroy__ = _itkVTKPolyDataReaderPython.delete_itkVTKPolyDataReaderMD3_Superclass

    def cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMD3_Superclass *":
        """cast(itkLightObject obj) -> itkVTKPolyDataReaderMD3_Superclass"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataReaderMD3_Superclass

        Create a new object of the class itkVTKPolyDataReaderMD3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataReaderMD3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataReaderMD3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKPolyDataReaderMD3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKPolyDataReaderMD3_Superclass.Clone = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass_Clone, None, itkVTKPolyDataReaderMD3_Superclass)
itkVTKPolyDataReaderMD3_Superclass.GetOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass_GetOutput, None, itkVTKPolyDataReaderMD3_Superclass)
itkVTKPolyDataReaderMD3_Superclass.SetOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass_SetOutput, None, itkVTKPolyDataReaderMD3_Superclass)
itkVTKPolyDataReaderMD3_Superclass.GraftOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass_GraftOutput, None, itkVTKPolyDataReaderMD3_Superclass)
itkVTKPolyDataReaderMD3_Superclass.GraftNthOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass_GraftNthOutput, None, itkVTKPolyDataReaderMD3_Superclass)
itkVTKPolyDataReaderMD3_Superclass_swigregister = _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass_swigregister
itkVTKPolyDataReaderMD3_Superclass_swigregister(itkVTKPolyDataReaderMD3_Superclass)

def itkVTKPolyDataReaderMD3_Superclass___New_orig__() -> "itkVTKPolyDataReaderMD3_Superclass_Pointer":
    """itkVTKPolyDataReaderMD3_Superclass___New_orig__() -> itkVTKPolyDataReaderMD3_Superclass_Pointer"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass___New_orig__()

def itkVTKPolyDataReaderMD3_Superclass_cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMD3_Superclass *":
    """itkVTKPolyDataReaderMD3_Superclass_cast(itkLightObject obj) -> itkVTKPolyDataReaderMD3_Superclass"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Superclass_cast(obj)

class itkVTKPolyDataReaderMF2_Superclass(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkVTKPolyDataReaderMF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKPolyDataReaderMF2_Superclass_Pointer":
        """__New_orig__() -> itkVTKPolyDataReaderMF2_Superclass_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKPolyDataReaderMF2_Superclass_Pointer":
        """Clone(itkVTKPolyDataReaderMF2_Superclass self) -> itkVTKPolyDataReaderMF2_Superclass_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass_Clone(self)


    def GetOutput(self, *args) -> "itkMeshF2 *":
        """
        GetOutput(itkVTKPolyDataReaderMF2_Superclass self) -> itkMeshF2
        GetOutput(itkVTKPolyDataReaderMF2_Superclass self, unsigned int idx) -> itkMeshF2
        """
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass_GetOutput(self, *args)


    def SetOutput(self, output: 'itkMeshF2') -> "void":
        """SetOutput(itkVTKPolyDataReaderMF2_Superclass self, itkMeshF2 output)"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass_SetOutput(self, output)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkVTKPolyDataReaderMF2_Superclass self, itkDataObject output)
        GraftOutput(itkVTKPolyDataReaderMF2_Superclass self, std::string const & key, itkDataObject output)
        """
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass_GraftOutput(self, *args)


    def GraftNthOutput(self, idx: 'unsigned int', output: 'itkDataObject') -> "void":
        """GraftNthOutput(itkVTKPolyDataReaderMF2_Superclass self, unsigned int idx, itkDataObject output)"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass_GraftNthOutput(self, idx, output)

    __swig_destroy__ = _itkVTKPolyDataReaderPython.delete_itkVTKPolyDataReaderMF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMF2_Superclass *":
        """cast(itkLightObject obj) -> itkVTKPolyDataReaderMF2_Superclass"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataReaderMF2_Superclass

        Create a new object of the class itkVTKPolyDataReaderMF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataReaderMF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataReaderMF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKPolyDataReaderMF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKPolyDataReaderMF2_Superclass.Clone = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass_Clone, None, itkVTKPolyDataReaderMF2_Superclass)
itkVTKPolyDataReaderMF2_Superclass.GetOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass_GetOutput, None, itkVTKPolyDataReaderMF2_Superclass)
itkVTKPolyDataReaderMF2_Superclass.SetOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass_SetOutput, None, itkVTKPolyDataReaderMF2_Superclass)
itkVTKPolyDataReaderMF2_Superclass.GraftOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass_GraftOutput, None, itkVTKPolyDataReaderMF2_Superclass)
itkVTKPolyDataReaderMF2_Superclass.GraftNthOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass_GraftNthOutput, None, itkVTKPolyDataReaderMF2_Superclass)
itkVTKPolyDataReaderMF2_Superclass_swigregister = _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass_swigregister
itkVTKPolyDataReaderMF2_Superclass_swigregister(itkVTKPolyDataReaderMF2_Superclass)

def itkVTKPolyDataReaderMF2_Superclass___New_orig__() -> "itkVTKPolyDataReaderMF2_Superclass_Pointer":
    """itkVTKPolyDataReaderMF2_Superclass___New_orig__() -> itkVTKPolyDataReaderMF2_Superclass_Pointer"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass___New_orig__()

def itkVTKPolyDataReaderMF2_Superclass_cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMF2_Superclass *":
    """itkVTKPolyDataReaderMF2_Superclass_cast(itkLightObject obj) -> itkVTKPolyDataReaderMF2_Superclass"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Superclass_cast(obj)

class itkVTKPolyDataReaderMF3_Superclass(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkVTKPolyDataReaderMF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKPolyDataReaderMF3_Superclass_Pointer":
        """__New_orig__() -> itkVTKPolyDataReaderMF3_Superclass_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKPolyDataReaderMF3_Superclass_Pointer":
        """Clone(itkVTKPolyDataReaderMF3_Superclass self) -> itkVTKPolyDataReaderMF3_Superclass_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass_Clone(self)


    def GetOutput(self, *args) -> "itkMeshF3 *":
        """
        GetOutput(itkVTKPolyDataReaderMF3_Superclass self) -> itkMeshF3
        GetOutput(itkVTKPolyDataReaderMF3_Superclass self, unsigned int idx) -> itkMeshF3
        """
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass_GetOutput(self, *args)


    def SetOutput(self, output: 'itkMeshF3') -> "void":
        """SetOutput(itkVTKPolyDataReaderMF3_Superclass self, itkMeshF3 output)"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass_SetOutput(self, output)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkVTKPolyDataReaderMF3_Superclass self, itkDataObject output)
        GraftOutput(itkVTKPolyDataReaderMF3_Superclass self, std::string const & key, itkDataObject output)
        """
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass_GraftOutput(self, *args)


    def GraftNthOutput(self, idx: 'unsigned int', output: 'itkDataObject') -> "void":
        """GraftNthOutput(itkVTKPolyDataReaderMF3_Superclass self, unsigned int idx, itkDataObject output)"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass_GraftNthOutput(self, idx, output)

    __swig_destroy__ = _itkVTKPolyDataReaderPython.delete_itkVTKPolyDataReaderMF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMF3_Superclass *":
        """cast(itkLightObject obj) -> itkVTKPolyDataReaderMF3_Superclass"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataReaderMF3_Superclass

        Create a new object of the class itkVTKPolyDataReaderMF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataReaderMF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataReaderMF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKPolyDataReaderMF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKPolyDataReaderMF3_Superclass.Clone = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass_Clone, None, itkVTKPolyDataReaderMF3_Superclass)
itkVTKPolyDataReaderMF3_Superclass.GetOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass_GetOutput, None, itkVTKPolyDataReaderMF3_Superclass)
itkVTKPolyDataReaderMF3_Superclass.SetOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass_SetOutput, None, itkVTKPolyDataReaderMF3_Superclass)
itkVTKPolyDataReaderMF3_Superclass.GraftOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass_GraftOutput, None, itkVTKPolyDataReaderMF3_Superclass)
itkVTKPolyDataReaderMF3_Superclass.GraftNthOutput = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass_GraftNthOutput, None, itkVTKPolyDataReaderMF3_Superclass)
itkVTKPolyDataReaderMF3_Superclass_swigregister = _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass_swigregister
itkVTKPolyDataReaderMF3_Superclass_swigregister(itkVTKPolyDataReaderMF3_Superclass)

def itkVTKPolyDataReaderMF3_Superclass___New_orig__() -> "itkVTKPolyDataReaderMF3_Superclass_Pointer":
    """itkVTKPolyDataReaderMF3_Superclass___New_orig__() -> itkVTKPolyDataReaderMF3_Superclass_Pointer"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass___New_orig__()

def itkVTKPolyDataReaderMF3_Superclass_cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMF3_Superclass *":
    """itkVTKPolyDataReaderMF3_Superclass_cast(itkLightObject obj) -> itkVTKPolyDataReaderMF3_Superclass"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Superclass_cast(obj)

class itkVTKPolyDataReaderMD2(itkVTKPolyDataReaderMD2_Superclass):
    """Proxy of C++ itkVTKPolyDataReaderMD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKPolyDataReaderMD2_Pointer":
        """__New_orig__() -> itkVTKPolyDataReaderMD2_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKPolyDataReaderMD2_Pointer":
        """Clone(itkVTKPolyDataReaderMD2 self) -> itkVTKPolyDataReaderMD2_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Clone(self)


    def SetFileName(self, *args) -> "void":
        """
        SetFileName(itkVTKPolyDataReaderMD2 self, char const * _arg)
        SetFileName(itkVTKPolyDataReaderMD2 self, std::string const & _arg)
        """
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_SetFileName(self, *args)


    def GetFileName(self) -> "char const *":
        """GetFileName(itkVTKPolyDataReaderMD2 self) -> char const *"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_GetFileName(self)


    def GetVersion(self) -> "char const *":
        """GetVersion(itkVTKPolyDataReaderMD2 self) -> char const *"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_GetVersion(self)


    def GetHeader(self) -> "char const *":
        """GetHeader(itkVTKPolyDataReaderMD2 self) -> char const *"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_GetHeader(self)

    __swig_destroy__ = _itkVTKPolyDataReaderPython.delete_itkVTKPolyDataReaderMD2

    def cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMD2 *":
        """cast(itkLightObject obj) -> itkVTKPolyDataReaderMD2"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataReaderMD2

        Create a new object of the class itkVTKPolyDataReaderMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataReaderMD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataReaderMD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKPolyDataReaderMD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKPolyDataReaderMD2.Clone = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_Clone, None, itkVTKPolyDataReaderMD2)
itkVTKPolyDataReaderMD2.SetFileName = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_SetFileName, None, itkVTKPolyDataReaderMD2)
itkVTKPolyDataReaderMD2.GetFileName = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_GetFileName, None, itkVTKPolyDataReaderMD2)
itkVTKPolyDataReaderMD2.GetVersion = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_GetVersion, None, itkVTKPolyDataReaderMD2)
itkVTKPolyDataReaderMD2.GetHeader = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_GetHeader, None, itkVTKPolyDataReaderMD2)
itkVTKPolyDataReaderMD2_swigregister = _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_swigregister
itkVTKPolyDataReaderMD2_swigregister(itkVTKPolyDataReaderMD2)

def itkVTKPolyDataReaderMD2___New_orig__() -> "itkVTKPolyDataReaderMD2_Pointer":
    """itkVTKPolyDataReaderMD2___New_orig__() -> itkVTKPolyDataReaderMD2_Pointer"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2___New_orig__()

def itkVTKPolyDataReaderMD2_cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMD2 *":
    """itkVTKPolyDataReaderMD2_cast(itkLightObject obj) -> itkVTKPolyDataReaderMD2"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD2_cast(obj)

class itkVTKPolyDataReaderMD3(itkVTKPolyDataReaderMD3_Superclass):
    """Proxy of C++ itkVTKPolyDataReaderMD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKPolyDataReaderMD3_Pointer":
        """__New_orig__() -> itkVTKPolyDataReaderMD3_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKPolyDataReaderMD3_Pointer":
        """Clone(itkVTKPolyDataReaderMD3 self) -> itkVTKPolyDataReaderMD3_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Clone(self)


    def SetFileName(self, *args) -> "void":
        """
        SetFileName(itkVTKPolyDataReaderMD3 self, char const * _arg)
        SetFileName(itkVTKPolyDataReaderMD3 self, std::string const & _arg)
        """
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_SetFileName(self, *args)


    def GetFileName(self) -> "char const *":
        """GetFileName(itkVTKPolyDataReaderMD3 self) -> char const *"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_GetFileName(self)


    def GetVersion(self) -> "char const *":
        """GetVersion(itkVTKPolyDataReaderMD3 self) -> char const *"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_GetVersion(self)


    def GetHeader(self) -> "char const *":
        """GetHeader(itkVTKPolyDataReaderMD3 self) -> char const *"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_GetHeader(self)

    __swig_destroy__ = _itkVTKPolyDataReaderPython.delete_itkVTKPolyDataReaderMD3

    def cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMD3 *":
        """cast(itkLightObject obj) -> itkVTKPolyDataReaderMD3"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataReaderMD3

        Create a new object of the class itkVTKPolyDataReaderMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataReaderMD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataReaderMD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKPolyDataReaderMD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKPolyDataReaderMD3.Clone = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_Clone, None, itkVTKPolyDataReaderMD3)
itkVTKPolyDataReaderMD3.SetFileName = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_SetFileName, None, itkVTKPolyDataReaderMD3)
itkVTKPolyDataReaderMD3.GetFileName = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_GetFileName, None, itkVTKPolyDataReaderMD3)
itkVTKPolyDataReaderMD3.GetVersion = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_GetVersion, None, itkVTKPolyDataReaderMD3)
itkVTKPolyDataReaderMD3.GetHeader = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_GetHeader, None, itkVTKPolyDataReaderMD3)
itkVTKPolyDataReaderMD3_swigregister = _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_swigregister
itkVTKPolyDataReaderMD3_swigregister(itkVTKPolyDataReaderMD3)

def itkVTKPolyDataReaderMD3___New_orig__() -> "itkVTKPolyDataReaderMD3_Pointer":
    """itkVTKPolyDataReaderMD3___New_orig__() -> itkVTKPolyDataReaderMD3_Pointer"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3___New_orig__()

def itkVTKPolyDataReaderMD3_cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMD3 *":
    """itkVTKPolyDataReaderMD3_cast(itkLightObject obj) -> itkVTKPolyDataReaderMD3"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMD3_cast(obj)

class itkVTKPolyDataReaderMF2(itkVTKPolyDataReaderMF2_Superclass):
    """Proxy of C++ itkVTKPolyDataReaderMF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKPolyDataReaderMF2_Pointer":
        """__New_orig__() -> itkVTKPolyDataReaderMF2_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKPolyDataReaderMF2_Pointer":
        """Clone(itkVTKPolyDataReaderMF2 self) -> itkVTKPolyDataReaderMF2_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Clone(self)


    def SetFileName(self, *args) -> "void":
        """
        SetFileName(itkVTKPolyDataReaderMF2 self, char const * _arg)
        SetFileName(itkVTKPolyDataReaderMF2 self, std::string const & _arg)
        """
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_SetFileName(self, *args)


    def GetFileName(self) -> "char const *":
        """GetFileName(itkVTKPolyDataReaderMF2 self) -> char const *"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_GetFileName(self)


    def GetVersion(self) -> "char const *":
        """GetVersion(itkVTKPolyDataReaderMF2 self) -> char const *"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_GetVersion(self)


    def GetHeader(self) -> "char const *":
        """GetHeader(itkVTKPolyDataReaderMF2 self) -> char const *"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_GetHeader(self)

    __swig_destroy__ = _itkVTKPolyDataReaderPython.delete_itkVTKPolyDataReaderMF2

    def cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMF2 *":
        """cast(itkLightObject obj) -> itkVTKPolyDataReaderMF2"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataReaderMF2

        Create a new object of the class itkVTKPolyDataReaderMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataReaderMF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataReaderMF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKPolyDataReaderMF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKPolyDataReaderMF2.Clone = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_Clone, None, itkVTKPolyDataReaderMF2)
itkVTKPolyDataReaderMF2.SetFileName = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_SetFileName, None, itkVTKPolyDataReaderMF2)
itkVTKPolyDataReaderMF2.GetFileName = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_GetFileName, None, itkVTKPolyDataReaderMF2)
itkVTKPolyDataReaderMF2.GetVersion = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_GetVersion, None, itkVTKPolyDataReaderMF2)
itkVTKPolyDataReaderMF2.GetHeader = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_GetHeader, None, itkVTKPolyDataReaderMF2)
itkVTKPolyDataReaderMF2_swigregister = _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_swigregister
itkVTKPolyDataReaderMF2_swigregister(itkVTKPolyDataReaderMF2)

def itkVTKPolyDataReaderMF2___New_orig__() -> "itkVTKPolyDataReaderMF2_Pointer":
    """itkVTKPolyDataReaderMF2___New_orig__() -> itkVTKPolyDataReaderMF2_Pointer"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2___New_orig__()

def itkVTKPolyDataReaderMF2_cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMF2 *":
    """itkVTKPolyDataReaderMF2_cast(itkLightObject obj) -> itkVTKPolyDataReaderMF2"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF2_cast(obj)

class itkVTKPolyDataReaderMF3(itkVTKPolyDataReaderMF3_Superclass):
    """Proxy of C++ itkVTKPolyDataReaderMF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKPolyDataReaderMF3_Pointer":
        """__New_orig__() -> itkVTKPolyDataReaderMF3_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKPolyDataReaderMF3_Pointer":
        """Clone(itkVTKPolyDataReaderMF3 self) -> itkVTKPolyDataReaderMF3_Pointer"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Clone(self)


    def SetFileName(self, *args) -> "void":
        """
        SetFileName(itkVTKPolyDataReaderMF3 self, char const * _arg)
        SetFileName(itkVTKPolyDataReaderMF3 self, std::string const & _arg)
        """
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_SetFileName(self, *args)


    def GetFileName(self) -> "char const *":
        """GetFileName(itkVTKPolyDataReaderMF3 self) -> char const *"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_GetFileName(self)


    def GetVersion(self) -> "char const *":
        """GetVersion(itkVTKPolyDataReaderMF3 self) -> char const *"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_GetVersion(self)


    def GetHeader(self) -> "char const *":
        """GetHeader(itkVTKPolyDataReaderMF3 self) -> char const *"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_GetHeader(self)

    __swig_destroy__ = _itkVTKPolyDataReaderPython.delete_itkVTKPolyDataReaderMF3

    def cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMF3 *":
        """cast(itkLightObject obj) -> itkVTKPolyDataReaderMF3"""
        return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataReaderMF3

        Create a new object of the class itkVTKPolyDataReaderMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataReaderMF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataReaderMF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKPolyDataReaderMF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKPolyDataReaderMF3.Clone = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_Clone, None, itkVTKPolyDataReaderMF3)
itkVTKPolyDataReaderMF3.SetFileName = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_SetFileName, None, itkVTKPolyDataReaderMF3)
itkVTKPolyDataReaderMF3.GetFileName = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_GetFileName, None, itkVTKPolyDataReaderMF3)
itkVTKPolyDataReaderMF3.GetVersion = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_GetVersion, None, itkVTKPolyDataReaderMF3)
itkVTKPolyDataReaderMF3.GetHeader = new_instancemethod(_itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_GetHeader, None, itkVTKPolyDataReaderMF3)
itkVTKPolyDataReaderMF3_swigregister = _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_swigregister
itkVTKPolyDataReaderMF3_swigregister(itkVTKPolyDataReaderMF3)

def itkVTKPolyDataReaderMF3___New_orig__() -> "itkVTKPolyDataReaderMF3_Pointer":
    """itkVTKPolyDataReaderMF3___New_orig__() -> itkVTKPolyDataReaderMF3_Pointer"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3___New_orig__()

def itkVTKPolyDataReaderMF3_cast(obj: 'itkLightObject') -> "itkVTKPolyDataReaderMF3 *":
    """itkVTKPolyDataReaderMF3_cast(itkLightObject obj) -> itkVTKPolyDataReaderMF3"""
    return _itkVTKPolyDataReaderPython.itkVTKPolyDataReaderMF3_cast(obj)


def mesh_source(*args, **kwargs):
    """Procedural interface for MeshSource"""
    import itk
    instance = itk.MeshSource.New(*args, **kwargs)
    return instance.__internal_call__()

def mesh_source_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.MeshSource, itkTemplate.itkTemplate):
        mesh_source.__doc__ = itk.MeshSource.values()[0].__doc__
    else:
        mesh_source.__doc__ = itk.MeshSource.__doc__

def vtk_poly_data_reader(*args, **kwargs):
    """Procedural interface for VTKPolyDataReader"""
    import itk
    instance = itk.VTKPolyDataReader.New(*args, **kwargs)
    return instance.__internal_call__()

def vtk_poly_data_reader_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.VTKPolyDataReader, itkTemplate.itkTemplate):
        vtk_poly_data_reader.__doc__ = itk.VTKPolyDataReader.values()[0].__doc__
    else:
        vtk_poly_data_reader.__doc__ = itk.VTKPolyDataReader.__doc__




