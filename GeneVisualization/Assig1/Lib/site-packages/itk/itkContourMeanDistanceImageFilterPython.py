# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkContourMeanDistanceImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkContourMeanDistanceImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkContourMeanDistanceImageFilterPython
            return _itkContourMeanDistanceImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkContourMeanDistanceImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkContourMeanDistanceImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkContourMeanDistanceImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkContourMeanDistanceImageFilterIUS3IF3_New():
  return itkContourMeanDistanceImageFilterIUS3IF3.New()


def itkContourMeanDistanceImageFilterIUS2IF2_New():
  return itkContourMeanDistanceImageFilterIUS2IF2.New()


def itkContourMeanDistanceImageFilterIUC3IF3_New():
  return itkContourMeanDistanceImageFilterIUC3IF3.New()


def itkContourMeanDistanceImageFilterIUC2IF2_New():
  return itkContourMeanDistanceImageFilterIUC2IF2.New()


def itkContourMeanDistanceImageFilterIF3IF3_New():
  return itkContourMeanDistanceImageFilterIF3IF3.New()


def itkContourMeanDistanceImageFilterIF2IF2_New():
  return itkContourMeanDistanceImageFilterIF2IF2.New()


def itkContourMeanDistanceImageFilterISS3ISS3_New():
  return itkContourMeanDistanceImageFilterISS3ISS3.New()


def itkContourMeanDistanceImageFilterISS2ISS2_New():
  return itkContourMeanDistanceImageFilterISS2ISS2.New()

class itkContourMeanDistanceImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkContourMeanDistanceImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourMeanDistanceImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkContourMeanDistanceImageFilterIF2IF2_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourMeanDistanceImageFilterIF2IF2_Pointer":
        """Clone(itkContourMeanDistanceImageFilterIF2IF2 self) -> itkContourMeanDistanceImageFilterIF2IF2_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_Clone(self)


    def SetInput1(self, image: 'itkImageF2') -> "void":
        """SetInput1(itkContourMeanDistanceImageFilterIF2IF2 self, itkImageF2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageF2') -> "void":
        """SetInput2(itkContourMeanDistanceImageFilterIF2IF2 self, itkImageF2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_SetInput2(self, image)


    def GetInput1(self) -> "itkImageF2 const *":
        """GetInput1(itkContourMeanDistanceImageFilterIF2IF2 self) -> itkImageF2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetInput1(self)


    def GetInput2(self) -> "itkImageF2 const *":
        """GetInput2(itkContourMeanDistanceImageFilterIF2IF2 self) -> itkImageF2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetInput2(self)


    def GetMeanDistance(self) -> "double":
        """GetMeanDistance(itkContourMeanDistanceImageFilterIF2IF2 self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourMeanDistanceImageFilterIF2IF2 self, bool const _arg)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourMeanDistanceImageFilterIF2IF2 self) -> bool"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIF2IF2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIF2IF2

        Create a new object of the class itkContourMeanDistanceImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourMeanDistanceImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourMeanDistanceImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIF2IF2.Clone = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_Clone, None, itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_SetInput1, None, itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_SetInput2, None, itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetInput1, None, itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetInput2, None, itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetMeanDistance, None, itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2.SetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_SetUseImageSpacing, None, itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2.GetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetUseImageSpacing, None, itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_swigregister
itkContourMeanDistanceImageFilterIF2IF2_swigregister(itkContourMeanDistanceImageFilterIF2IF2)

def itkContourMeanDistanceImageFilterIF2IF2___New_orig__() -> "itkContourMeanDistanceImageFilterIF2IF2_Pointer":
    """itkContourMeanDistanceImageFilterIF2IF2___New_orig__() -> itkContourMeanDistanceImageFilterIF2IF2_Pointer"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2___New_orig__()

def itkContourMeanDistanceImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterIF2IF2 *":
    """itkContourMeanDistanceImageFilterIF2IF2_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIF2IF2"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_cast(obj)

class itkContourMeanDistanceImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkContourMeanDistanceImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourMeanDistanceImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkContourMeanDistanceImageFilterIF3IF3_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourMeanDistanceImageFilterIF3IF3_Pointer":
        """Clone(itkContourMeanDistanceImageFilterIF3IF3 self) -> itkContourMeanDistanceImageFilterIF3IF3_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_Clone(self)


    def SetInput1(self, image: 'itkImageF3') -> "void":
        """SetInput1(itkContourMeanDistanceImageFilterIF3IF3 self, itkImageF3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageF3') -> "void":
        """SetInput2(itkContourMeanDistanceImageFilterIF3IF3 self, itkImageF3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_SetInput2(self, image)


    def GetInput1(self) -> "itkImageF3 const *":
        """GetInput1(itkContourMeanDistanceImageFilterIF3IF3 self) -> itkImageF3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetInput1(self)


    def GetInput2(self) -> "itkImageF3 const *":
        """GetInput2(itkContourMeanDistanceImageFilterIF3IF3 self) -> itkImageF3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetInput2(self)


    def GetMeanDistance(self) -> "double":
        """GetMeanDistance(itkContourMeanDistanceImageFilterIF3IF3 self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourMeanDistanceImageFilterIF3IF3 self, bool const _arg)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourMeanDistanceImageFilterIF3IF3 self) -> bool"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIF3IF3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIF3IF3

        Create a new object of the class itkContourMeanDistanceImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourMeanDistanceImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourMeanDistanceImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIF3IF3.Clone = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_Clone, None, itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_SetInput1, None, itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_SetInput2, None, itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetInput1, None, itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetInput2, None, itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetMeanDistance, None, itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3.SetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_SetUseImageSpacing, None, itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3.GetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetUseImageSpacing, None, itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_swigregister
itkContourMeanDistanceImageFilterIF3IF3_swigregister(itkContourMeanDistanceImageFilterIF3IF3)

def itkContourMeanDistanceImageFilterIF3IF3___New_orig__() -> "itkContourMeanDistanceImageFilterIF3IF3_Pointer":
    """itkContourMeanDistanceImageFilterIF3IF3___New_orig__() -> itkContourMeanDistanceImageFilterIF3IF3_Pointer"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3___New_orig__()

def itkContourMeanDistanceImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterIF3IF3 *":
    """itkContourMeanDistanceImageFilterIF3IF3_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIF3IF3"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_cast(obj)

class itkContourMeanDistanceImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkContourMeanDistanceImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourMeanDistanceImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkContourMeanDistanceImageFilterISS2ISS2_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourMeanDistanceImageFilterISS2ISS2_Pointer":
        """Clone(itkContourMeanDistanceImageFilterISS2ISS2 self) -> itkContourMeanDistanceImageFilterISS2ISS2_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_Clone(self)


    def SetInput1(self, image: 'itkImageSS2') -> "void":
        """SetInput1(itkContourMeanDistanceImageFilterISS2ISS2 self, itkImageSS2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageSS2') -> "void":
        """SetInput2(itkContourMeanDistanceImageFilterISS2ISS2 self, itkImageSS2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_SetInput2(self, image)


    def GetInput1(self) -> "itkImageSS2 const *":
        """GetInput1(itkContourMeanDistanceImageFilterISS2ISS2 self) -> itkImageSS2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_GetInput1(self)


    def GetInput2(self) -> "itkImageSS2 const *":
        """GetInput2(itkContourMeanDistanceImageFilterISS2ISS2 self) -> itkImageSS2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_GetInput2(self)


    def GetMeanDistance(self) -> "double":
        """GetMeanDistance(itkContourMeanDistanceImageFilterISS2ISS2 self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_GetMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourMeanDistanceImageFilterISS2ISS2 self, bool const _arg)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourMeanDistanceImageFilterISS2ISS2 self) -> bool"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterISS2ISS2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterISS2ISS2

        Create a new object of the class itkContourMeanDistanceImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourMeanDistanceImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourMeanDistanceImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterISS2ISS2.Clone = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_Clone, None, itkContourMeanDistanceImageFilterISS2ISS2)
itkContourMeanDistanceImageFilterISS2ISS2.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_SetInput1, None, itkContourMeanDistanceImageFilterISS2ISS2)
itkContourMeanDistanceImageFilterISS2ISS2.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_SetInput2, None, itkContourMeanDistanceImageFilterISS2ISS2)
itkContourMeanDistanceImageFilterISS2ISS2.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_GetInput1, None, itkContourMeanDistanceImageFilterISS2ISS2)
itkContourMeanDistanceImageFilterISS2ISS2.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_GetInput2, None, itkContourMeanDistanceImageFilterISS2ISS2)
itkContourMeanDistanceImageFilterISS2ISS2.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_GetMeanDistance, None, itkContourMeanDistanceImageFilterISS2ISS2)
itkContourMeanDistanceImageFilterISS2ISS2.SetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_SetUseImageSpacing, None, itkContourMeanDistanceImageFilterISS2ISS2)
itkContourMeanDistanceImageFilterISS2ISS2.GetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_GetUseImageSpacing, None, itkContourMeanDistanceImageFilterISS2ISS2)
itkContourMeanDistanceImageFilterISS2ISS2_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_swigregister
itkContourMeanDistanceImageFilterISS2ISS2_swigregister(itkContourMeanDistanceImageFilterISS2ISS2)

def itkContourMeanDistanceImageFilterISS2ISS2___New_orig__() -> "itkContourMeanDistanceImageFilterISS2ISS2_Pointer":
    """itkContourMeanDistanceImageFilterISS2ISS2___New_orig__() -> itkContourMeanDistanceImageFilterISS2ISS2_Pointer"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2___New_orig__()

def itkContourMeanDistanceImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterISS2ISS2 *":
    """itkContourMeanDistanceImageFilterISS2ISS2_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterISS2ISS2"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS2ISS2_cast(obj)

class itkContourMeanDistanceImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkContourMeanDistanceImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourMeanDistanceImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkContourMeanDistanceImageFilterISS3ISS3_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourMeanDistanceImageFilterISS3ISS3_Pointer":
        """Clone(itkContourMeanDistanceImageFilterISS3ISS3 self) -> itkContourMeanDistanceImageFilterISS3ISS3_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_Clone(self)


    def SetInput1(self, image: 'itkImageSS3') -> "void":
        """SetInput1(itkContourMeanDistanceImageFilterISS3ISS3 self, itkImageSS3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageSS3') -> "void":
        """SetInput2(itkContourMeanDistanceImageFilterISS3ISS3 self, itkImageSS3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_SetInput2(self, image)


    def GetInput1(self) -> "itkImageSS3 const *":
        """GetInput1(itkContourMeanDistanceImageFilterISS3ISS3 self) -> itkImageSS3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_GetInput1(self)


    def GetInput2(self) -> "itkImageSS3 const *":
        """GetInput2(itkContourMeanDistanceImageFilterISS3ISS3 self) -> itkImageSS3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_GetInput2(self)


    def GetMeanDistance(self) -> "double":
        """GetMeanDistance(itkContourMeanDistanceImageFilterISS3ISS3 self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_GetMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourMeanDistanceImageFilterISS3ISS3 self, bool const _arg)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourMeanDistanceImageFilterISS3ISS3 self) -> bool"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterISS3ISS3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterISS3ISS3

        Create a new object of the class itkContourMeanDistanceImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourMeanDistanceImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourMeanDistanceImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterISS3ISS3.Clone = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_Clone, None, itkContourMeanDistanceImageFilterISS3ISS3)
itkContourMeanDistanceImageFilterISS3ISS3.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_SetInput1, None, itkContourMeanDistanceImageFilterISS3ISS3)
itkContourMeanDistanceImageFilterISS3ISS3.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_SetInput2, None, itkContourMeanDistanceImageFilterISS3ISS3)
itkContourMeanDistanceImageFilterISS3ISS3.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_GetInput1, None, itkContourMeanDistanceImageFilterISS3ISS3)
itkContourMeanDistanceImageFilterISS3ISS3.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_GetInput2, None, itkContourMeanDistanceImageFilterISS3ISS3)
itkContourMeanDistanceImageFilterISS3ISS3.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_GetMeanDistance, None, itkContourMeanDistanceImageFilterISS3ISS3)
itkContourMeanDistanceImageFilterISS3ISS3.SetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_SetUseImageSpacing, None, itkContourMeanDistanceImageFilterISS3ISS3)
itkContourMeanDistanceImageFilterISS3ISS3.GetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_GetUseImageSpacing, None, itkContourMeanDistanceImageFilterISS3ISS3)
itkContourMeanDistanceImageFilterISS3ISS3_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_swigregister
itkContourMeanDistanceImageFilterISS3ISS3_swigregister(itkContourMeanDistanceImageFilterISS3ISS3)

def itkContourMeanDistanceImageFilterISS3ISS3___New_orig__() -> "itkContourMeanDistanceImageFilterISS3ISS3_Pointer":
    """itkContourMeanDistanceImageFilterISS3ISS3___New_orig__() -> itkContourMeanDistanceImageFilterISS3ISS3_Pointer"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3___New_orig__()

def itkContourMeanDistanceImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterISS3ISS3 *":
    """itkContourMeanDistanceImageFilterISS3ISS3_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterISS3ISS3"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterISS3ISS3_cast(obj)

class itkContourMeanDistanceImageFilterIUC2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkContourMeanDistanceImageFilterIUC2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourMeanDistanceImageFilterIUC2IF2_Pointer":
        """__New_orig__() -> itkContourMeanDistanceImageFilterIUC2IF2_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourMeanDistanceImageFilterIUC2IF2_Pointer":
        """Clone(itkContourMeanDistanceImageFilterIUC2IF2 self) -> itkContourMeanDistanceImageFilterIUC2IF2_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_Clone(self)


    def SetInput1(self, image: 'itkImageUC2') -> "void":
        """SetInput1(itkContourMeanDistanceImageFilterIUC2IF2 self, itkImageUC2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageF2') -> "void":
        """SetInput2(itkContourMeanDistanceImageFilterIUC2IF2 self, itkImageF2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_SetInput2(self, image)


    def GetInput1(self) -> "itkImageUC2 const *":
        """GetInput1(itkContourMeanDistanceImageFilterIUC2IF2 self) -> itkImageUC2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_GetInput1(self)


    def GetInput2(self) -> "itkImageF2 const *":
        """GetInput2(itkContourMeanDistanceImageFilterIUC2IF2 self) -> itkImageF2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_GetInput2(self)


    def GetMeanDistance(self) -> "double":
        """GetMeanDistance(itkContourMeanDistanceImageFilterIUC2IF2 self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_GetMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourMeanDistanceImageFilterIUC2IF2 self, bool const _arg)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourMeanDistanceImageFilterIUC2IF2 self) -> bool"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIUC2IF2

    def cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterIUC2IF2 *":
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUC2IF2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIUC2IF2

        Create a new object of the class itkContourMeanDistanceImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourMeanDistanceImageFilterIUC2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourMeanDistanceImageFilterIUC2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIUC2IF2.Clone = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_Clone, None, itkContourMeanDistanceImageFilterIUC2IF2)
itkContourMeanDistanceImageFilterIUC2IF2.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_SetInput1, None, itkContourMeanDistanceImageFilterIUC2IF2)
itkContourMeanDistanceImageFilterIUC2IF2.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_SetInput2, None, itkContourMeanDistanceImageFilterIUC2IF2)
itkContourMeanDistanceImageFilterIUC2IF2.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_GetInput1, None, itkContourMeanDistanceImageFilterIUC2IF2)
itkContourMeanDistanceImageFilterIUC2IF2.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_GetInput2, None, itkContourMeanDistanceImageFilterIUC2IF2)
itkContourMeanDistanceImageFilterIUC2IF2.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_GetMeanDistance, None, itkContourMeanDistanceImageFilterIUC2IF2)
itkContourMeanDistanceImageFilterIUC2IF2.SetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_SetUseImageSpacing, None, itkContourMeanDistanceImageFilterIUC2IF2)
itkContourMeanDistanceImageFilterIUC2IF2.GetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_GetUseImageSpacing, None, itkContourMeanDistanceImageFilterIUC2IF2)
itkContourMeanDistanceImageFilterIUC2IF2_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_swigregister
itkContourMeanDistanceImageFilterIUC2IF2_swigregister(itkContourMeanDistanceImageFilterIUC2IF2)

def itkContourMeanDistanceImageFilterIUC2IF2___New_orig__() -> "itkContourMeanDistanceImageFilterIUC2IF2_Pointer":
    """itkContourMeanDistanceImageFilterIUC2IF2___New_orig__() -> itkContourMeanDistanceImageFilterIUC2IF2_Pointer"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2___New_orig__()

def itkContourMeanDistanceImageFilterIUC2IF2_cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterIUC2IF2 *":
    """itkContourMeanDistanceImageFilterIUC2IF2_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUC2IF2"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IF2_cast(obj)

class itkContourMeanDistanceImageFilterIUC3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkContourMeanDistanceImageFilterIUC3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourMeanDistanceImageFilterIUC3IF3_Pointer":
        """__New_orig__() -> itkContourMeanDistanceImageFilterIUC3IF3_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourMeanDistanceImageFilterIUC3IF3_Pointer":
        """Clone(itkContourMeanDistanceImageFilterIUC3IF3 self) -> itkContourMeanDistanceImageFilterIUC3IF3_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_Clone(self)


    def SetInput1(self, image: 'itkImageUC3') -> "void":
        """SetInput1(itkContourMeanDistanceImageFilterIUC3IF3 self, itkImageUC3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageF3') -> "void":
        """SetInput2(itkContourMeanDistanceImageFilterIUC3IF3 self, itkImageF3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_SetInput2(self, image)


    def GetInput1(self) -> "itkImageUC3 const *":
        """GetInput1(itkContourMeanDistanceImageFilterIUC3IF3 self) -> itkImageUC3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_GetInput1(self)


    def GetInput2(self) -> "itkImageF3 const *":
        """GetInput2(itkContourMeanDistanceImageFilterIUC3IF3 self) -> itkImageF3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_GetInput2(self)


    def GetMeanDistance(self) -> "double":
        """GetMeanDistance(itkContourMeanDistanceImageFilterIUC3IF3 self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_GetMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourMeanDistanceImageFilterIUC3IF3 self, bool const _arg)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourMeanDistanceImageFilterIUC3IF3 self) -> bool"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIUC3IF3

    def cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterIUC3IF3 *":
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUC3IF3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIUC3IF3

        Create a new object of the class itkContourMeanDistanceImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourMeanDistanceImageFilterIUC3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourMeanDistanceImageFilterIUC3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIUC3IF3.Clone = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_Clone, None, itkContourMeanDistanceImageFilterIUC3IF3)
itkContourMeanDistanceImageFilterIUC3IF3.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_SetInput1, None, itkContourMeanDistanceImageFilterIUC3IF3)
itkContourMeanDistanceImageFilterIUC3IF3.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_SetInput2, None, itkContourMeanDistanceImageFilterIUC3IF3)
itkContourMeanDistanceImageFilterIUC3IF3.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_GetInput1, None, itkContourMeanDistanceImageFilterIUC3IF3)
itkContourMeanDistanceImageFilterIUC3IF3.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_GetInput2, None, itkContourMeanDistanceImageFilterIUC3IF3)
itkContourMeanDistanceImageFilterIUC3IF3.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_GetMeanDistance, None, itkContourMeanDistanceImageFilterIUC3IF3)
itkContourMeanDistanceImageFilterIUC3IF3.SetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_SetUseImageSpacing, None, itkContourMeanDistanceImageFilterIUC3IF3)
itkContourMeanDistanceImageFilterIUC3IF3.GetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_GetUseImageSpacing, None, itkContourMeanDistanceImageFilterIUC3IF3)
itkContourMeanDistanceImageFilterIUC3IF3_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_swigregister
itkContourMeanDistanceImageFilterIUC3IF3_swigregister(itkContourMeanDistanceImageFilterIUC3IF3)

def itkContourMeanDistanceImageFilterIUC3IF3___New_orig__() -> "itkContourMeanDistanceImageFilterIUC3IF3_Pointer":
    """itkContourMeanDistanceImageFilterIUC3IF3___New_orig__() -> itkContourMeanDistanceImageFilterIUC3IF3_Pointer"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3___New_orig__()

def itkContourMeanDistanceImageFilterIUC3IF3_cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterIUC3IF3 *":
    """itkContourMeanDistanceImageFilterIUC3IF3_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUC3IF3"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IF3_cast(obj)

class itkContourMeanDistanceImageFilterIUS2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkContourMeanDistanceImageFilterIUS2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourMeanDistanceImageFilterIUS2IF2_Pointer":
        """__New_orig__() -> itkContourMeanDistanceImageFilterIUS2IF2_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourMeanDistanceImageFilterIUS2IF2_Pointer":
        """Clone(itkContourMeanDistanceImageFilterIUS2IF2 self) -> itkContourMeanDistanceImageFilterIUS2IF2_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_Clone(self)


    def SetInput1(self, image: 'itkImageUS2') -> "void":
        """SetInput1(itkContourMeanDistanceImageFilterIUS2IF2 self, itkImageUS2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageF2') -> "void":
        """SetInput2(itkContourMeanDistanceImageFilterIUS2IF2 self, itkImageF2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_SetInput2(self, image)


    def GetInput1(self) -> "itkImageUS2 const *":
        """GetInput1(itkContourMeanDistanceImageFilterIUS2IF2 self) -> itkImageUS2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_GetInput1(self)


    def GetInput2(self) -> "itkImageF2 const *":
        """GetInput2(itkContourMeanDistanceImageFilterIUS2IF2 self) -> itkImageF2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_GetInput2(self)


    def GetMeanDistance(self) -> "double":
        """GetMeanDistance(itkContourMeanDistanceImageFilterIUS2IF2 self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_GetMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourMeanDistanceImageFilterIUS2IF2 self, bool const _arg)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourMeanDistanceImageFilterIUS2IF2 self) -> bool"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIUS2IF2

    def cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterIUS2IF2 *":
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUS2IF2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIUS2IF2

        Create a new object of the class itkContourMeanDistanceImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourMeanDistanceImageFilterIUS2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourMeanDistanceImageFilterIUS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIUS2IF2.Clone = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_Clone, None, itkContourMeanDistanceImageFilterIUS2IF2)
itkContourMeanDistanceImageFilterIUS2IF2.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_SetInput1, None, itkContourMeanDistanceImageFilterIUS2IF2)
itkContourMeanDistanceImageFilterIUS2IF2.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_SetInput2, None, itkContourMeanDistanceImageFilterIUS2IF2)
itkContourMeanDistanceImageFilterIUS2IF2.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_GetInput1, None, itkContourMeanDistanceImageFilterIUS2IF2)
itkContourMeanDistanceImageFilterIUS2IF2.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_GetInput2, None, itkContourMeanDistanceImageFilterIUS2IF2)
itkContourMeanDistanceImageFilterIUS2IF2.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_GetMeanDistance, None, itkContourMeanDistanceImageFilterIUS2IF2)
itkContourMeanDistanceImageFilterIUS2IF2.SetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_SetUseImageSpacing, None, itkContourMeanDistanceImageFilterIUS2IF2)
itkContourMeanDistanceImageFilterIUS2IF2.GetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_GetUseImageSpacing, None, itkContourMeanDistanceImageFilterIUS2IF2)
itkContourMeanDistanceImageFilterIUS2IF2_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_swigregister
itkContourMeanDistanceImageFilterIUS2IF2_swigregister(itkContourMeanDistanceImageFilterIUS2IF2)

def itkContourMeanDistanceImageFilterIUS2IF2___New_orig__() -> "itkContourMeanDistanceImageFilterIUS2IF2_Pointer":
    """itkContourMeanDistanceImageFilterIUS2IF2___New_orig__() -> itkContourMeanDistanceImageFilterIUS2IF2_Pointer"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2___New_orig__()

def itkContourMeanDistanceImageFilterIUS2IF2_cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterIUS2IF2 *":
    """itkContourMeanDistanceImageFilterIUS2IF2_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUS2IF2"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IF2_cast(obj)

class itkContourMeanDistanceImageFilterIUS3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkContourMeanDistanceImageFilterIUS3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkContourMeanDistanceImageFilterIUS3IF3_Pointer":
        """__New_orig__() -> itkContourMeanDistanceImageFilterIUS3IF3_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkContourMeanDistanceImageFilterIUS3IF3_Pointer":
        """Clone(itkContourMeanDistanceImageFilterIUS3IF3 self) -> itkContourMeanDistanceImageFilterIUS3IF3_Pointer"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_Clone(self)


    def SetInput1(self, image: 'itkImageUS3') -> "void":
        """SetInput1(itkContourMeanDistanceImageFilterIUS3IF3 self, itkImageUS3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_SetInput1(self, image)


    def SetInput2(self, image: 'itkImageF3') -> "void":
        """SetInput2(itkContourMeanDistanceImageFilterIUS3IF3 self, itkImageF3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_SetInput2(self, image)


    def GetInput1(self) -> "itkImageUS3 const *":
        """GetInput1(itkContourMeanDistanceImageFilterIUS3IF3 self) -> itkImageUS3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_GetInput1(self)


    def GetInput2(self) -> "itkImageF3 const *":
        """GetInput2(itkContourMeanDistanceImageFilterIUS3IF3 self) -> itkImageF3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_GetInput2(self)


    def GetMeanDistance(self) -> "double":
        """GetMeanDistance(itkContourMeanDistanceImageFilterIUS3IF3 self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_GetMeanDistance(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkContourMeanDistanceImageFilterIUS3IF3 self, bool const _arg)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkContourMeanDistanceImageFilterIUS3IF3 self) -> bool"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_GetUseImageSpacing(self)

    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIUS3IF3

    def cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterIUS3IF3 *":
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUS3IF3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIUS3IF3

        Create a new object of the class itkContourMeanDistanceImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkContourMeanDistanceImageFilterIUS3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkContourMeanDistanceImageFilterIUS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIUS3IF3.Clone = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_Clone, None, itkContourMeanDistanceImageFilterIUS3IF3)
itkContourMeanDistanceImageFilterIUS3IF3.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_SetInput1, None, itkContourMeanDistanceImageFilterIUS3IF3)
itkContourMeanDistanceImageFilterIUS3IF3.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_SetInput2, None, itkContourMeanDistanceImageFilterIUS3IF3)
itkContourMeanDistanceImageFilterIUS3IF3.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_GetInput1, None, itkContourMeanDistanceImageFilterIUS3IF3)
itkContourMeanDistanceImageFilterIUS3IF3.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_GetInput2, None, itkContourMeanDistanceImageFilterIUS3IF3)
itkContourMeanDistanceImageFilterIUS3IF3.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_GetMeanDistance, None, itkContourMeanDistanceImageFilterIUS3IF3)
itkContourMeanDistanceImageFilterIUS3IF3.SetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_SetUseImageSpacing, None, itkContourMeanDistanceImageFilterIUS3IF3)
itkContourMeanDistanceImageFilterIUS3IF3.GetUseImageSpacing = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_GetUseImageSpacing, None, itkContourMeanDistanceImageFilterIUS3IF3)
itkContourMeanDistanceImageFilterIUS3IF3_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_swigregister
itkContourMeanDistanceImageFilterIUS3IF3_swigregister(itkContourMeanDistanceImageFilterIUS3IF3)

def itkContourMeanDistanceImageFilterIUS3IF3___New_orig__() -> "itkContourMeanDistanceImageFilterIUS3IF3_Pointer":
    """itkContourMeanDistanceImageFilterIUS3IF3___New_orig__() -> itkContourMeanDistanceImageFilterIUS3IF3_Pointer"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3___New_orig__()

def itkContourMeanDistanceImageFilterIUS3IF3_cast(obj: 'itkLightObject') -> "itkContourMeanDistanceImageFilterIUS3IF3 *":
    """itkContourMeanDistanceImageFilterIUS3IF3_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUS3IF3"""
    return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IF3_cast(obj)


def contour_mean_distance_image_filter(*args, **kwargs):
    """Procedural interface for ContourMeanDistanceImageFilter"""
    import itk
    instance = itk.ContourMeanDistanceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def contour_mean_distance_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ContourMeanDistanceImageFilter, itkTemplate.itkTemplate):
        contour_mean_distance_image_filter.__doc__ = itk.ContourMeanDistanceImageFilter.values()[0].__doc__
    else:
        contour_mean_distance_image_filter.__doc__ = itk.ContourMeanDistanceImageFilter.__doc__




