# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkBayesianClassifierImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkBayesianClassifierImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkBayesianClassifierImageFilterPython
            return _itkBayesianClassifierImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkBayesianClassifierImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkBayesianClassifierImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkBayesianClassifierImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterBPython

def itkBayesianClassifierImageFilterVIF3USFF_New():
  return itkBayesianClassifierImageFilterVIF3USFF.New()


def itkBayesianClassifierImageFilterVIF3UCFF_New():
  return itkBayesianClassifierImageFilterVIF3UCFF.New()


def itkBayesianClassifierImageFilterVIF3SSFF_New():
  return itkBayesianClassifierImageFilterVIF3SSFF.New()


def itkBayesianClassifierImageFilterVIUS3USFF_New():
  return itkBayesianClassifierImageFilterVIUS3USFF.New()


def itkBayesianClassifierImageFilterVIUS3UCFF_New():
  return itkBayesianClassifierImageFilterVIUS3UCFF.New()


def itkBayesianClassifierImageFilterVIUS3SSFF_New():
  return itkBayesianClassifierImageFilterVIUS3SSFF.New()


def itkBayesianClassifierImageFilterVIUC3USFF_New():
  return itkBayesianClassifierImageFilterVIUC3USFF.New()


def itkBayesianClassifierImageFilterVIUC3UCFF_New():
  return itkBayesianClassifierImageFilterVIUC3UCFF.New()


def itkBayesianClassifierImageFilterVIUC3SSFF_New():
  return itkBayesianClassifierImageFilterVIUC3SSFF.New()


def itkBayesianClassifierImageFilterVISS3USFF_New():
  return itkBayesianClassifierImageFilterVISS3USFF.New()


def itkBayesianClassifierImageFilterVISS3UCFF_New():
  return itkBayesianClassifierImageFilterVISS3UCFF.New()


def itkBayesianClassifierImageFilterVISS3SSFF_New():
  return itkBayesianClassifierImageFilterVISS3SSFF.New()


def itkBayesianClassifierImageFilterVIF2USFF_New():
  return itkBayesianClassifierImageFilterVIF2USFF.New()


def itkBayesianClassifierImageFilterVIF2UCFF_New():
  return itkBayesianClassifierImageFilterVIF2UCFF.New()


def itkBayesianClassifierImageFilterVIF2SSFF_New():
  return itkBayesianClassifierImageFilterVIF2SSFF.New()


def itkBayesianClassifierImageFilterVIUS2USFF_New():
  return itkBayesianClassifierImageFilterVIUS2USFF.New()


def itkBayesianClassifierImageFilterVIUS2UCFF_New():
  return itkBayesianClassifierImageFilterVIUS2UCFF.New()


def itkBayesianClassifierImageFilterVIUS2SSFF_New():
  return itkBayesianClassifierImageFilterVIUS2SSFF.New()


def itkBayesianClassifierImageFilterVIUC2USFF_New():
  return itkBayesianClassifierImageFilterVIUC2USFF.New()


def itkBayesianClassifierImageFilterVIUC2UCFF_New():
  return itkBayesianClassifierImageFilterVIUC2UCFF.New()


def itkBayesianClassifierImageFilterVIUC2SSFF_New():
  return itkBayesianClassifierImageFilterVIUC2SSFF.New()


def itkBayesianClassifierImageFilterVISS2USFF_New():
  return itkBayesianClassifierImageFilterVISS2USFF.New()


def itkBayesianClassifierImageFilterVISS2UCFF_New():
  return itkBayesianClassifierImageFilterVISS2UCFF.New()


def itkBayesianClassifierImageFilterVISS2SSFF_New():
  return itkBayesianClassifierImageFilterVISS2SSFF.New()

class itkBayesianClassifierImageFilterVIF2SSFF(itkImageToImageFilterBPython.itkImageToImageFilterVIF2ISS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF2SSFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIF2SSFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIF2SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIF2SSFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIF2SSFF self) -> itkBayesianClassifierImageFilterVIF2SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF2IF2') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIF2SSFF self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF2IF2_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIF2SSFF self) -> itkImageToImageFilterIF2IF2_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF2') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIF2SSFF self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIF2SSFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIF2SSFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF2SSFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIF2SSFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2SSFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF2SSFF

        Create a new object of the class itkBayesianClassifierImageFilterVIF2SSFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIF2SSFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIF2SSFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF2SSFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF2SSFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_Clone, None, itkBayesianClassifierImageFilterVIF2SSFF)
itkBayesianClassifierImageFilterVIF2SSFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIF2SSFF)
itkBayesianClassifierImageFilterVIF2SSFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIF2SSFF)
itkBayesianClassifierImageFilterVIF2SSFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_SetPriors, None, itkBayesianClassifierImageFilterVIF2SSFF)
itkBayesianClassifierImageFilterVIF2SSFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIF2SSFF)
itkBayesianClassifierImageFilterVIF2SSFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIF2SSFF)
itkBayesianClassifierImageFilterVIF2SSFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_swigregister
itkBayesianClassifierImageFilterVIF2SSFF_swigregister(itkBayesianClassifierImageFilterVIF2SSFF)

def itkBayesianClassifierImageFilterVIF2SSFF___New_orig__() -> "itkBayesianClassifierImageFilterVIF2SSFF_Pointer":
    """itkBayesianClassifierImageFilterVIF2SSFF___New_orig__() -> itkBayesianClassifierImageFilterVIF2SSFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF___New_orig__()

def itkBayesianClassifierImageFilterVIF2SSFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIF2SSFF *":
    """itkBayesianClassifierImageFilterVIF2SSFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2SSFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2SSFF_cast(obj)

class itkBayesianClassifierImageFilterVIF2UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF2UCFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIF2UCFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIF2UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIF2UCFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIF2UCFF self) -> itkBayesianClassifierImageFilterVIF2UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF2IF2') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIF2UCFF self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF2IF2_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIF2UCFF self) -> itkImageToImageFilterIF2IF2_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF2') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIF2UCFF self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIF2UCFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIF2UCFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF2UCFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIF2UCFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF2UCFF

        Create a new object of the class itkBayesianClassifierImageFilterVIF2UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIF2UCFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIF2UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF2UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF2UCFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_Clone, None, itkBayesianClassifierImageFilterVIF2UCFF)
itkBayesianClassifierImageFilterVIF2UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIF2UCFF)
itkBayesianClassifierImageFilterVIF2UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIF2UCFF)
itkBayesianClassifierImageFilterVIF2UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_SetPriors, None, itkBayesianClassifierImageFilterVIF2UCFF)
itkBayesianClassifierImageFilterVIF2UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIF2UCFF)
itkBayesianClassifierImageFilterVIF2UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIF2UCFF)
itkBayesianClassifierImageFilterVIF2UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_swigregister
itkBayesianClassifierImageFilterVIF2UCFF_swigregister(itkBayesianClassifierImageFilterVIF2UCFF)

def itkBayesianClassifierImageFilterVIF2UCFF___New_orig__() -> "itkBayesianClassifierImageFilterVIF2UCFF_Pointer":
    """itkBayesianClassifierImageFilterVIF2UCFF___New_orig__() -> itkBayesianClassifierImageFilterVIF2UCFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIF2UCFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIF2UCFF *":
    """itkBayesianClassifierImageFilterVIF2UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2UCFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_cast(obj)

class itkBayesianClassifierImageFilterVIF2USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF2USFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIF2USFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIF2USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIF2USFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIF2USFF self) -> itkBayesianClassifierImageFilterVIF2USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF2IF2') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIF2USFF self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF2IF2_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIF2USFF self) -> itkImageToImageFilterIF2IF2_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF2') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIF2USFF self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIF2USFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIF2USFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF2USFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIF2USFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF2USFF

        Create a new object of the class itkBayesianClassifierImageFilterVIF2USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIF2USFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIF2USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF2USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF2USFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_Clone, None, itkBayesianClassifierImageFilterVIF2USFF)
itkBayesianClassifierImageFilterVIF2USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIF2USFF)
itkBayesianClassifierImageFilterVIF2USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIF2USFF)
itkBayesianClassifierImageFilterVIF2USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_SetPriors, None, itkBayesianClassifierImageFilterVIF2USFF)
itkBayesianClassifierImageFilterVIF2USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIF2USFF)
itkBayesianClassifierImageFilterVIF2USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIF2USFF)
itkBayesianClassifierImageFilterVIF2USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_swigregister
itkBayesianClassifierImageFilterVIF2USFF_swigregister(itkBayesianClassifierImageFilterVIF2USFF)

def itkBayesianClassifierImageFilterVIF2USFF___New_orig__() -> "itkBayesianClassifierImageFilterVIF2USFF_Pointer":
    """itkBayesianClassifierImageFilterVIF2USFF___New_orig__() -> itkBayesianClassifierImageFilterVIF2USFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF___New_orig__()

def itkBayesianClassifierImageFilterVIF2USFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIF2USFF *":
    """itkBayesianClassifierImageFilterVIF2USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2USFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_cast(obj)

class itkBayesianClassifierImageFilterVIF3SSFF(itkImageToImageFilterBPython.itkImageToImageFilterVIF3ISS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF3SSFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIF3SSFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIF3SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIF3SSFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIF3SSFF self) -> itkBayesianClassifierImageFilterVIF3SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF3IF3') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIF3SSFF self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF3IF3_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIF3SSFF self) -> itkImageToImageFilterIF3IF3_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF3') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIF3SSFF self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIF3SSFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIF3SSFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF3SSFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIF3SSFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3SSFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF3SSFF

        Create a new object of the class itkBayesianClassifierImageFilterVIF3SSFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIF3SSFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIF3SSFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF3SSFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF3SSFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_Clone, None, itkBayesianClassifierImageFilterVIF3SSFF)
itkBayesianClassifierImageFilterVIF3SSFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIF3SSFF)
itkBayesianClassifierImageFilterVIF3SSFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIF3SSFF)
itkBayesianClassifierImageFilterVIF3SSFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_SetPriors, None, itkBayesianClassifierImageFilterVIF3SSFF)
itkBayesianClassifierImageFilterVIF3SSFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIF3SSFF)
itkBayesianClassifierImageFilterVIF3SSFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIF3SSFF)
itkBayesianClassifierImageFilterVIF3SSFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_swigregister
itkBayesianClassifierImageFilterVIF3SSFF_swigregister(itkBayesianClassifierImageFilterVIF3SSFF)

def itkBayesianClassifierImageFilterVIF3SSFF___New_orig__() -> "itkBayesianClassifierImageFilterVIF3SSFF_Pointer":
    """itkBayesianClassifierImageFilterVIF3SSFF___New_orig__() -> itkBayesianClassifierImageFilterVIF3SSFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF___New_orig__()

def itkBayesianClassifierImageFilterVIF3SSFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIF3SSFF *":
    """itkBayesianClassifierImageFilterVIF3SSFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3SSFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3SSFF_cast(obj)

class itkBayesianClassifierImageFilterVIF3UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF3UCFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIF3UCFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIF3UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIF3UCFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIF3UCFF self) -> itkBayesianClassifierImageFilterVIF3UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF3IF3') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIF3UCFF self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF3IF3_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIF3UCFF self) -> itkImageToImageFilterIF3IF3_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF3') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIF3UCFF self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIF3UCFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIF3UCFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF3UCFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIF3UCFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF3UCFF

        Create a new object of the class itkBayesianClassifierImageFilterVIF3UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIF3UCFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIF3UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF3UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF3UCFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_Clone, None, itkBayesianClassifierImageFilterVIF3UCFF)
itkBayesianClassifierImageFilterVIF3UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIF3UCFF)
itkBayesianClassifierImageFilterVIF3UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIF3UCFF)
itkBayesianClassifierImageFilterVIF3UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_SetPriors, None, itkBayesianClassifierImageFilterVIF3UCFF)
itkBayesianClassifierImageFilterVIF3UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIF3UCFF)
itkBayesianClassifierImageFilterVIF3UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIF3UCFF)
itkBayesianClassifierImageFilterVIF3UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_swigregister
itkBayesianClassifierImageFilterVIF3UCFF_swigregister(itkBayesianClassifierImageFilterVIF3UCFF)

def itkBayesianClassifierImageFilterVIF3UCFF___New_orig__() -> "itkBayesianClassifierImageFilterVIF3UCFF_Pointer":
    """itkBayesianClassifierImageFilterVIF3UCFF___New_orig__() -> itkBayesianClassifierImageFilterVIF3UCFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIF3UCFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIF3UCFF *":
    """itkBayesianClassifierImageFilterVIF3UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3UCFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_cast(obj)

class itkBayesianClassifierImageFilterVIF3USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF3USFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIF3USFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIF3USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIF3USFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIF3USFF self) -> itkBayesianClassifierImageFilterVIF3USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF3IF3') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIF3USFF self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF3IF3_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIF3USFF self) -> itkImageToImageFilterIF3IF3_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF3') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIF3USFF self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIF3USFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIF3USFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF3USFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIF3USFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF3USFF

        Create a new object of the class itkBayesianClassifierImageFilterVIF3USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIF3USFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIF3USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF3USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF3USFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_Clone, None, itkBayesianClassifierImageFilterVIF3USFF)
itkBayesianClassifierImageFilterVIF3USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIF3USFF)
itkBayesianClassifierImageFilterVIF3USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIF3USFF)
itkBayesianClassifierImageFilterVIF3USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_SetPriors, None, itkBayesianClassifierImageFilterVIF3USFF)
itkBayesianClassifierImageFilterVIF3USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIF3USFF)
itkBayesianClassifierImageFilterVIF3USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIF3USFF)
itkBayesianClassifierImageFilterVIF3USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_swigregister
itkBayesianClassifierImageFilterVIF3USFF_swigregister(itkBayesianClassifierImageFilterVIF3USFF)

def itkBayesianClassifierImageFilterVIF3USFF___New_orig__() -> "itkBayesianClassifierImageFilterVIF3USFF_Pointer":
    """itkBayesianClassifierImageFilterVIF3USFF___New_orig__() -> itkBayesianClassifierImageFilterVIF3USFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF___New_orig__()

def itkBayesianClassifierImageFilterVIF3USFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIF3USFF *":
    """itkBayesianClassifierImageFilterVIF3USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3USFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_cast(obj)

class itkBayesianClassifierImageFilterVISS2SSFF(itkImageToImageFilterBPython.itkImageToImageFilterVISS2ISS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVISS2SSFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVISS2SSFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVISS2SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVISS2SSFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVISS2SSFF self) -> itkBayesianClassifierImageFilterVISS2SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF2IF2') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVISS2SSFF self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF2IF2_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVISS2SSFF self) -> itkImageToImageFilterIF2IF2_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF2') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVISS2SSFF self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVISS2SSFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVISS2SSFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVISS2SSFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVISS2SSFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVISS2SSFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVISS2SSFF

        Create a new object of the class itkBayesianClassifierImageFilterVISS2SSFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVISS2SSFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVISS2SSFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVISS2SSFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVISS2SSFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_Clone, None, itkBayesianClassifierImageFilterVISS2SSFF)
itkBayesianClassifierImageFilterVISS2SSFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVISS2SSFF)
itkBayesianClassifierImageFilterVISS2SSFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVISS2SSFF)
itkBayesianClassifierImageFilterVISS2SSFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_SetPriors, None, itkBayesianClassifierImageFilterVISS2SSFF)
itkBayesianClassifierImageFilterVISS2SSFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVISS2SSFF)
itkBayesianClassifierImageFilterVISS2SSFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVISS2SSFF)
itkBayesianClassifierImageFilterVISS2SSFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_swigregister
itkBayesianClassifierImageFilterVISS2SSFF_swigregister(itkBayesianClassifierImageFilterVISS2SSFF)

def itkBayesianClassifierImageFilterVISS2SSFF___New_orig__() -> "itkBayesianClassifierImageFilterVISS2SSFF_Pointer":
    """itkBayesianClassifierImageFilterVISS2SSFF___New_orig__() -> itkBayesianClassifierImageFilterVISS2SSFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF___New_orig__()

def itkBayesianClassifierImageFilterVISS2SSFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVISS2SSFF *":
    """itkBayesianClassifierImageFilterVISS2SSFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVISS2SSFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2SSFF_cast(obj)

class itkBayesianClassifierImageFilterVISS2UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVISS2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVISS2UCFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVISS2UCFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVISS2UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVISS2UCFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVISS2UCFF self) -> itkBayesianClassifierImageFilterVISS2UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF2IF2') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVISS2UCFF self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF2IF2_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVISS2UCFF self) -> itkImageToImageFilterIF2IF2_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF2') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVISS2UCFF self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVISS2UCFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVISS2UCFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVISS2UCFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVISS2UCFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVISS2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVISS2UCFF

        Create a new object of the class itkBayesianClassifierImageFilterVISS2UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVISS2UCFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVISS2UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVISS2UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVISS2UCFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_Clone, None, itkBayesianClassifierImageFilterVISS2UCFF)
itkBayesianClassifierImageFilterVISS2UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVISS2UCFF)
itkBayesianClassifierImageFilterVISS2UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVISS2UCFF)
itkBayesianClassifierImageFilterVISS2UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_SetPriors, None, itkBayesianClassifierImageFilterVISS2UCFF)
itkBayesianClassifierImageFilterVISS2UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVISS2UCFF)
itkBayesianClassifierImageFilterVISS2UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVISS2UCFF)
itkBayesianClassifierImageFilterVISS2UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_swigregister
itkBayesianClassifierImageFilterVISS2UCFF_swigregister(itkBayesianClassifierImageFilterVISS2UCFF)

def itkBayesianClassifierImageFilterVISS2UCFF___New_orig__() -> "itkBayesianClassifierImageFilterVISS2UCFF_Pointer":
    """itkBayesianClassifierImageFilterVISS2UCFF___New_orig__() -> itkBayesianClassifierImageFilterVISS2UCFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF___New_orig__()

def itkBayesianClassifierImageFilterVISS2UCFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVISS2UCFF *":
    """itkBayesianClassifierImageFilterVISS2UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVISS2UCFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2UCFF_cast(obj)

class itkBayesianClassifierImageFilterVISS2USFF(itkImageToImageFilterBPython.itkImageToImageFilterVISS2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVISS2USFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVISS2USFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVISS2USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVISS2USFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVISS2USFF self) -> itkBayesianClassifierImageFilterVISS2USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF2IF2') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVISS2USFF self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF2IF2_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVISS2USFF self) -> itkImageToImageFilterIF2IF2_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF2') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVISS2USFF self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVISS2USFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVISS2USFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVISS2USFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVISS2USFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVISS2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVISS2USFF

        Create a new object of the class itkBayesianClassifierImageFilterVISS2USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVISS2USFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVISS2USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVISS2USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVISS2USFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_Clone, None, itkBayesianClassifierImageFilterVISS2USFF)
itkBayesianClassifierImageFilterVISS2USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVISS2USFF)
itkBayesianClassifierImageFilterVISS2USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVISS2USFF)
itkBayesianClassifierImageFilterVISS2USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_SetPriors, None, itkBayesianClassifierImageFilterVISS2USFF)
itkBayesianClassifierImageFilterVISS2USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVISS2USFF)
itkBayesianClassifierImageFilterVISS2USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVISS2USFF)
itkBayesianClassifierImageFilterVISS2USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_swigregister
itkBayesianClassifierImageFilterVISS2USFF_swigregister(itkBayesianClassifierImageFilterVISS2USFF)

def itkBayesianClassifierImageFilterVISS2USFF___New_orig__() -> "itkBayesianClassifierImageFilterVISS2USFF_Pointer":
    """itkBayesianClassifierImageFilterVISS2USFF___New_orig__() -> itkBayesianClassifierImageFilterVISS2USFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF___New_orig__()

def itkBayesianClassifierImageFilterVISS2USFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVISS2USFF *":
    """itkBayesianClassifierImageFilterVISS2USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVISS2USFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS2USFF_cast(obj)

class itkBayesianClassifierImageFilterVISS3SSFF(itkImageToImageFilterBPython.itkImageToImageFilterVISS3ISS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVISS3SSFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVISS3SSFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVISS3SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVISS3SSFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVISS3SSFF self) -> itkBayesianClassifierImageFilterVISS3SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF3IF3') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVISS3SSFF self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF3IF3_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVISS3SSFF self) -> itkImageToImageFilterIF3IF3_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF3') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVISS3SSFF self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVISS3SSFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVISS3SSFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVISS3SSFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVISS3SSFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVISS3SSFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVISS3SSFF

        Create a new object of the class itkBayesianClassifierImageFilterVISS3SSFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVISS3SSFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVISS3SSFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVISS3SSFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVISS3SSFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_Clone, None, itkBayesianClassifierImageFilterVISS3SSFF)
itkBayesianClassifierImageFilterVISS3SSFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVISS3SSFF)
itkBayesianClassifierImageFilterVISS3SSFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVISS3SSFF)
itkBayesianClassifierImageFilterVISS3SSFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_SetPriors, None, itkBayesianClassifierImageFilterVISS3SSFF)
itkBayesianClassifierImageFilterVISS3SSFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVISS3SSFF)
itkBayesianClassifierImageFilterVISS3SSFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVISS3SSFF)
itkBayesianClassifierImageFilterVISS3SSFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_swigregister
itkBayesianClassifierImageFilterVISS3SSFF_swigregister(itkBayesianClassifierImageFilterVISS3SSFF)

def itkBayesianClassifierImageFilterVISS3SSFF___New_orig__() -> "itkBayesianClassifierImageFilterVISS3SSFF_Pointer":
    """itkBayesianClassifierImageFilterVISS3SSFF___New_orig__() -> itkBayesianClassifierImageFilterVISS3SSFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF___New_orig__()

def itkBayesianClassifierImageFilterVISS3SSFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVISS3SSFF *":
    """itkBayesianClassifierImageFilterVISS3SSFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVISS3SSFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3SSFF_cast(obj)

class itkBayesianClassifierImageFilterVISS3UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVISS3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVISS3UCFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVISS3UCFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVISS3UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVISS3UCFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVISS3UCFF self) -> itkBayesianClassifierImageFilterVISS3UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF3IF3') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVISS3UCFF self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF3IF3_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVISS3UCFF self) -> itkImageToImageFilterIF3IF3_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF3') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVISS3UCFF self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVISS3UCFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVISS3UCFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVISS3UCFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVISS3UCFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVISS3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVISS3UCFF

        Create a new object of the class itkBayesianClassifierImageFilterVISS3UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVISS3UCFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVISS3UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVISS3UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVISS3UCFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_Clone, None, itkBayesianClassifierImageFilterVISS3UCFF)
itkBayesianClassifierImageFilterVISS3UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVISS3UCFF)
itkBayesianClassifierImageFilterVISS3UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVISS3UCFF)
itkBayesianClassifierImageFilterVISS3UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_SetPriors, None, itkBayesianClassifierImageFilterVISS3UCFF)
itkBayesianClassifierImageFilterVISS3UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVISS3UCFF)
itkBayesianClassifierImageFilterVISS3UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVISS3UCFF)
itkBayesianClassifierImageFilterVISS3UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_swigregister
itkBayesianClassifierImageFilterVISS3UCFF_swigregister(itkBayesianClassifierImageFilterVISS3UCFF)

def itkBayesianClassifierImageFilterVISS3UCFF___New_orig__() -> "itkBayesianClassifierImageFilterVISS3UCFF_Pointer":
    """itkBayesianClassifierImageFilterVISS3UCFF___New_orig__() -> itkBayesianClassifierImageFilterVISS3UCFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF___New_orig__()

def itkBayesianClassifierImageFilterVISS3UCFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVISS3UCFF *":
    """itkBayesianClassifierImageFilterVISS3UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVISS3UCFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3UCFF_cast(obj)

class itkBayesianClassifierImageFilterVISS3USFF(itkImageToImageFilterBPython.itkImageToImageFilterVISS3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVISS3USFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVISS3USFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVISS3USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVISS3USFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVISS3USFF self) -> itkBayesianClassifierImageFilterVISS3USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF3IF3') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVISS3USFF self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF3IF3_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVISS3USFF self) -> itkImageToImageFilterIF3IF3_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF3') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVISS3USFF self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVISS3USFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVISS3USFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVISS3USFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVISS3USFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVISS3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVISS3USFF

        Create a new object of the class itkBayesianClassifierImageFilterVISS3USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVISS3USFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVISS3USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVISS3USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVISS3USFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_Clone, None, itkBayesianClassifierImageFilterVISS3USFF)
itkBayesianClassifierImageFilterVISS3USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVISS3USFF)
itkBayesianClassifierImageFilterVISS3USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVISS3USFF)
itkBayesianClassifierImageFilterVISS3USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_SetPriors, None, itkBayesianClassifierImageFilterVISS3USFF)
itkBayesianClassifierImageFilterVISS3USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVISS3USFF)
itkBayesianClassifierImageFilterVISS3USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVISS3USFF)
itkBayesianClassifierImageFilterVISS3USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_swigregister
itkBayesianClassifierImageFilterVISS3USFF_swigregister(itkBayesianClassifierImageFilterVISS3USFF)

def itkBayesianClassifierImageFilterVISS3USFF___New_orig__() -> "itkBayesianClassifierImageFilterVISS3USFF_Pointer":
    """itkBayesianClassifierImageFilterVISS3USFF___New_orig__() -> itkBayesianClassifierImageFilterVISS3USFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF___New_orig__()

def itkBayesianClassifierImageFilterVISS3USFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVISS3USFF *":
    """itkBayesianClassifierImageFilterVISS3USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVISS3USFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVISS3USFF_cast(obj)

class itkBayesianClassifierImageFilterVIUC2SSFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ISS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC2SSFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIUC2SSFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIUC2SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIUC2SSFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIUC2SSFF self) -> itkBayesianClassifierImageFilterVIUC2SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF2IF2') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIUC2SSFF self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF2IF2_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIUC2SSFF self) -> itkImageToImageFilterIF2IF2_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF2') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIUC2SSFF self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUC2SSFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUC2SSFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC2SSFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUC2SSFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2SSFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC2SSFF

        Create a new object of the class itkBayesianClassifierImageFilterVIUC2SSFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIUC2SSFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIUC2SSFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC2SSFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC2SSFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_Clone, None, itkBayesianClassifierImageFilterVIUC2SSFF)
itkBayesianClassifierImageFilterVIUC2SSFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUC2SSFF)
itkBayesianClassifierImageFilterVIUC2SSFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUC2SSFF)
itkBayesianClassifierImageFilterVIUC2SSFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_SetPriors, None, itkBayesianClassifierImageFilterVIUC2SSFF)
itkBayesianClassifierImageFilterVIUC2SSFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUC2SSFF)
itkBayesianClassifierImageFilterVIUC2SSFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUC2SSFF)
itkBayesianClassifierImageFilterVIUC2SSFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_swigregister
itkBayesianClassifierImageFilterVIUC2SSFF_swigregister(itkBayesianClassifierImageFilterVIUC2SSFF)

def itkBayesianClassifierImageFilterVIUC2SSFF___New_orig__() -> "itkBayesianClassifierImageFilterVIUC2SSFF_Pointer":
    """itkBayesianClassifierImageFilterVIUC2SSFF___New_orig__() -> itkBayesianClassifierImageFilterVIUC2SSFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF___New_orig__()

def itkBayesianClassifierImageFilterVIUC2SSFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUC2SSFF *":
    """itkBayesianClassifierImageFilterVIUC2SSFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2SSFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2SSFF_cast(obj)

class itkBayesianClassifierImageFilterVIUC2UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC2UCFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIUC2UCFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIUC2UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIUC2UCFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIUC2UCFF self) -> itkBayesianClassifierImageFilterVIUC2UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF2IF2') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIUC2UCFF self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF2IF2_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIUC2UCFF self) -> itkImageToImageFilterIF2IF2_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF2') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIUC2UCFF self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUC2UCFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUC2UCFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC2UCFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUC2UCFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC2UCFF

        Create a new object of the class itkBayesianClassifierImageFilterVIUC2UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIUC2UCFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIUC2UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC2UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC2UCFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_Clone, None, itkBayesianClassifierImageFilterVIUC2UCFF)
itkBayesianClassifierImageFilterVIUC2UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUC2UCFF)
itkBayesianClassifierImageFilterVIUC2UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUC2UCFF)
itkBayesianClassifierImageFilterVIUC2UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_SetPriors, None, itkBayesianClassifierImageFilterVIUC2UCFF)
itkBayesianClassifierImageFilterVIUC2UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUC2UCFF)
itkBayesianClassifierImageFilterVIUC2UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUC2UCFF)
itkBayesianClassifierImageFilterVIUC2UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_swigregister
itkBayesianClassifierImageFilterVIUC2UCFF_swigregister(itkBayesianClassifierImageFilterVIUC2UCFF)

def itkBayesianClassifierImageFilterVIUC2UCFF___New_orig__() -> "itkBayesianClassifierImageFilterVIUC2UCFF_Pointer":
    """itkBayesianClassifierImageFilterVIUC2UCFF___New_orig__() -> itkBayesianClassifierImageFilterVIUC2UCFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIUC2UCFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUC2UCFF *":
    """itkBayesianClassifierImageFilterVIUC2UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2UCFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_cast(obj)

class itkBayesianClassifierImageFilterVIUC2USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC2USFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIUC2USFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIUC2USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIUC2USFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIUC2USFF self) -> itkBayesianClassifierImageFilterVIUC2USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF2IF2') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIUC2USFF self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF2IF2_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIUC2USFF self) -> itkImageToImageFilterIF2IF2_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF2') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIUC2USFF self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUC2USFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUC2USFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC2USFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUC2USFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC2USFF

        Create a new object of the class itkBayesianClassifierImageFilterVIUC2USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIUC2USFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIUC2USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC2USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC2USFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_Clone, None, itkBayesianClassifierImageFilterVIUC2USFF)
itkBayesianClassifierImageFilterVIUC2USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUC2USFF)
itkBayesianClassifierImageFilterVIUC2USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUC2USFF)
itkBayesianClassifierImageFilterVIUC2USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_SetPriors, None, itkBayesianClassifierImageFilterVIUC2USFF)
itkBayesianClassifierImageFilterVIUC2USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUC2USFF)
itkBayesianClassifierImageFilterVIUC2USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUC2USFF)
itkBayesianClassifierImageFilterVIUC2USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_swigregister
itkBayesianClassifierImageFilterVIUC2USFF_swigregister(itkBayesianClassifierImageFilterVIUC2USFF)

def itkBayesianClassifierImageFilterVIUC2USFF___New_orig__() -> "itkBayesianClassifierImageFilterVIUC2USFF_Pointer":
    """itkBayesianClassifierImageFilterVIUC2USFF___New_orig__() -> itkBayesianClassifierImageFilterVIUC2USFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF___New_orig__()

def itkBayesianClassifierImageFilterVIUC2USFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUC2USFF *":
    """itkBayesianClassifierImageFilterVIUC2USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2USFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_cast(obj)

class itkBayesianClassifierImageFilterVIUC3SSFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ISS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC3SSFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIUC3SSFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIUC3SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIUC3SSFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIUC3SSFF self) -> itkBayesianClassifierImageFilterVIUC3SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF3IF3') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIUC3SSFF self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF3IF3_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIUC3SSFF self) -> itkImageToImageFilterIF3IF3_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF3') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIUC3SSFF self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUC3SSFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUC3SSFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC3SSFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUC3SSFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3SSFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC3SSFF

        Create a new object of the class itkBayesianClassifierImageFilterVIUC3SSFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIUC3SSFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIUC3SSFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC3SSFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC3SSFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_Clone, None, itkBayesianClassifierImageFilterVIUC3SSFF)
itkBayesianClassifierImageFilterVIUC3SSFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUC3SSFF)
itkBayesianClassifierImageFilterVIUC3SSFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUC3SSFF)
itkBayesianClassifierImageFilterVIUC3SSFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_SetPriors, None, itkBayesianClassifierImageFilterVIUC3SSFF)
itkBayesianClassifierImageFilterVIUC3SSFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUC3SSFF)
itkBayesianClassifierImageFilterVIUC3SSFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUC3SSFF)
itkBayesianClassifierImageFilterVIUC3SSFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_swigregister
itkBayesianClassifierImageFilterVIUC3SSFF_swigregister(itkBayesianClassifierImageFilterVIUC3SSFF)

def itkBayesianClassifierImageFilterVIUC3SSFF___New_orig__() -> "itkBayesianClassifierImageFilterVIUC3SSFF_Pointer":
    """itkBayesianClassifierImageFilterVIUC3SSFF___New_orig__() -> itkBayesianClassifierImageFilterVIUC3SSFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF___New_orig__()

def itkBayesianClassifierImageFilterVIUC3SSFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUC3SSFF *":
    """itkBayesianClassifierImageFilterVIUC3SSFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3SSFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3SSFF_cast(obj)

class itkBayesianClassifierImageFilterVIUC3UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC3UCFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIUC3UCFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIUC3UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIUC3UCFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIUC3UCFF self) -> itkBayesianClassifierImageFilterVIUC3UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF3IF3') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIUC3UCFF self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF3IF3_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIUC3UCFF self) -> itkImageToImageFilterIF3IF3_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF3') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIUC3UCFF self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUC3UCFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUC3UCFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC3UCFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUC3UCFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC3UCFF

        Create a new object of the class itkBayesianClassifierImageFilterVIUC3UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIUC3UCFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIUC3UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC3UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC3UCFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_Clone, None, itkBayesianClassifierImageFilterVIUC3UCFF)
itkBayesianClassifierImageFilterVIUC3UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUC3UCFF)
itkBayesianClassifierImageFilterVIUC3UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUC3UCFF)
itkBayesianClassifierImageFilterVIUC3UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_SetPriors, None, itkBayesianClassifierImageFilterVIUC3UCFF)
itkBayesianClassifierImageFilterVIUC3UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUC3UCFF)
itkBayesianClassifierImageFilterVIUC3UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUC3UCFF)
itkBayesianClassifierImageFilterVIUC3UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_swigregister
itkBayesianClassifierImageFilterVIUC3UCFF_swigregister(itkBayesianClassifierImageFilterVIUC3UCFF)

def itkBayesianClassifierImageFilterVIUC3UCFF___New_orig__() -> "itkBayesianClassifierImageFilterVIUC3UCFF_Pointer":
    """itkBayesianClassifierImageFilterVIUC3UCFF___New_orig__() -> itkBayesianClassifierImageFilterVIUC3UCFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIUC3UCFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUC3UCFF *":
    """itkBayesianClassifierImageFilterVIUC3UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3UCFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_cast(obj)

class itkBayesianClassifierImageFilterVIUC3USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC3USFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIUC3USFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIUC3USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIUC3USFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIUC3USFF self) -> itkBayesianClassifierImageFilterVIUC3USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF3IF3') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIUC3USFF self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF3IF3_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIUC3USFF self) -> itkImageToImageFilterIF3IF3_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF3') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIUC3USFF self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUC3USFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUC3USFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC3USFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUC3USFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC3USFF

        Create a new object of the class itkBayesianClassifierImageFilterVIUC3USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIUC3USFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIUC3USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC3USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC3USFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_Clone, None, itkBayesianClassifierImageFilterVIUC3USFF)
itkBayesianClassifierImageFilterVIUC3USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUC3USFF)
itkBayesianClassifierImageFilterVIUC3USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUC3USFF)
itkBayesianClassifierImageFilterVIUC3USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_SetPriors, None, itkBayesianClassifierImageFilterVIUC3USFF)
itkBayesianClassifierImageFilterVIUC3USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUC3USFF)
itkBayesianClassifierImageFilterVIUC3USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUC3USFF)
itkBayesianClassifierImageFilterVIUC3USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_swigregister
itkBayesianClassifierImageFilterVIUC3USFF_swigregister(itkBayesianClassifierImageFilterVIUC3USFF)

def itkBayesianClassifierImageFilterVIUC3USFF___New_orig__() -> "itkBayesianClassifierImageFilterVIUC3USFF_Pointer":
    """itkBayesianClassifierImageFilterVIUC3USFF___New_orig__() -> itkBayesianClassifierImageFilterVIUC3USFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF___New_orig__()

def itkBayesianClassifierImageFilterVIUC3USFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUC3USFF *":
    """itkBayesianClassifierImageFilterVIUC3USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3USFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_cast(obj)

class itkBayesianClassifierImageFilterVIUS2SSFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ISS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS2SSFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIUS2SSFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIUS2SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIUS2SSFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIUS2SSFF self) -> itkBayesianClassifierImageFilterVIUS2SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF2IF2') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIUS2SSFF self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF2IF2_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIUS2SSFF self) -> itkImageToImageFilterIF2IF2_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF2') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIUS2SSFF self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUS2SSFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUS2SSFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS2SSFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUS2SSFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2SSFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS2SSFF

        Create a new object of the class itkBayesianClassifierImageFilterVIUS2SSFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIUS2SSFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIUS2SSFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS2SSFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS2SSFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_Clone, None, itkBayesianClassifierImageFilterVIUS2SSFF)
itkBayesianClassifierImageFilterVIUS2SSFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUS2SSFF)
itkBayesianClassifierImageFilterVIUS2SSFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUS2SSFF)
itkBayesianClassifierImageFilterVIUS2SSFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_SetPriors, None, itkBayesianClassifierImageFilterVIUS2SSFF)
itkBayesianClassifierImageFilterVIUS2SSFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUS2SSFF)
itkBayesianClassifierImageFilterVIUS2SSFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUS2SSFF)
itkBayesianClassifierImageFilterVIUS2SSFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_swigregister
itkBayesianClassifierImageFilterVIUS2SSFF_swigregister(itkBayesianClassifierImageFilterVIUS2SSFF)

def itkBayesianClassifierImageFilterVIUS2SSFF___New_orig__() -> "itkBayesianClassifierImageFilterVIUS2SSFF_Pointer":
    """itkBayesianClassifierImageFilterVIUS2SSFF___New_orig__() -> itkBayesianClassifierImageFilterVIUS2SSFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF___New_orig__()

def itkBayesianClassifierImageFilterVIUS2SSFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUS2SSFF *":
    """itkBayesianClassifierImageFilterVIUS2SSFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2SSFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2SSFF_cast(obj)

class itkBayesianClassifierImageFilterVIUS2UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS2UCFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIUS2UCFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIUS2UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIUS2UCFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIUS2UCFF self) -> itkBayesianClassifierImageFilterVIUS2UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF2IF2') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIUS2UCFF self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF2IF2_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIUS2UCFF self) -> itkImageToImageFilterIF2IF2_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF2') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIUS2UCFF self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUS2UCFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUS2UCFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS2UCFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUS2UCFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS2UCFF

        Create a new object of the class itkBayesianClassifierImageFilterVIUS2UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIUS2UCFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIUS2UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS2UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS2UCFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_Clone, None, itkBayesianClassifierImageFilterVIUS2UCFF)
itkBayesianClassifierImageFilterVIUS2UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUS2UCFF)
itkBayesianClassifierImageFilterVIUS2UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUS2UCFF)
itkBayesianClassifierImageFilterVIUS2UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_SetPriors, None, itkBayesianClassifierImageFilterVIUS2UCFF)
itkBayesianClassifierImageFilterVIUS2UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUS2UCFF)
itkBayesianClassifierImageFilterVIUS2UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUS2UCFF)
itkBayesianClassifierImageFilterVIUS2UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_swigregister
itkBayesianClassifierImageFilterVIUS2UCFF_swigregister(itkBayesianClassifierImageFilterVIUS2UCFF)

def itkBayesianClassifierImageFilterVIUS2UCFF___New_orig__() -> "itkBayesianClassifierImageFilterVIUS2UCFF_Pointer":
    """itkBayesianClassifierImageFilterVIUS2UCFF___New_orig__() -> itkBayesianClassifierImageFilterVIUS2UCFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIUS2UCFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUS2UCFF *":
    """itkBayesianClassifierImageFilterVIUS2UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2UCFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_cast(obj)

class itkBayesianClassifierImageFilterVIUS2USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS2USFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIUS2USFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIUS2USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIUS2USFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIUS2USFF self) -> itkBayesianClassifierImageFilterVIUS2USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF2IF2') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIUS2USFF self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF2IF2_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIUS2USFF self) -> itkImageToImageFilterIF2IF2_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF2') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIUS2USFF self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUS2USFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUS2USFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS2USFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUS2USFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS2USFF

        Create a new object of the class itkBayesianClassifierImageFilterVIUS2USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIUS2USFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIUS2USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS2USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS2USFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_Clone, None, itkBayesianClassifierImageFilterVIUS2USFF)
itkBayesianClassifierImageFilterVIUS2USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUS2USFF)
itkBayesianClassifierImageFilterVIUS2USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUS2USFF)
itkBayesianClassifierImageFilterVIUS2USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_SetPriors, None, itkBayesianClassifierImageFilterVIUS2USFF)
itkBayesianClassifierImageFilterVIUS2USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUS2USFF)
itkBayesianClassifierImageFilterVIUS2USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUS2USFF)
itkBayesianClassifierImageFilterVIUS2USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_swigregister
itkBayesianClassifierImageFilterVIUS2USFF_swigregister(itkBayesianClassifierImageFilterVIUS2USFF)

def itkBayesianClassifierImageFilterVIUS2USFF___New_orig__() -> "itkBayesianClassifierImageFilterVIUS2USFF_Pointer":
    """itkBayesianClassifierImageFilterVIUS2USFF___New_orig__() -> itkBayesianClassifierImageFilterVIUS2USFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF___New_orig__()

def itkBayesianClassifierImageFilterVIUS2USFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUS2USFF *":
    """itkBayesianClassifierImageFilterVIUS2USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2USFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_cast(obj)

class itkBayesianClassifierImageFilterVIUS3SSFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ISS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS3SSFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIUS3SSFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIUS3SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIUS3SSFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIUS3SSFF self) -> itkBayesianClassifierImageFilterVIUS3SSFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF3IF3') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIUS3SSFF self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF3IF3_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIUS3SSFF self) -> itkImageToImageFilterIF3IF3_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF3') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIUS3SSFF self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUS3SSFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUS3SSFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS3SSFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUS3SSFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3SSFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS3SSFF

        Create a new object of the class itkBayesianClassifierImageFilterVIUS3SSFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIUS3SSFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIUS3SSFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS3SSFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS3SSFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_Clone, None, itkBayesianClassifierImageFilterVIUS3SSFF)
itkBayesianClassifierImageFilterVIUS3SSFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUS3SSFF)
itkBayesianClassifierImageFilterVIUS3SSFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUS3SSFF)
itkBayesianClassifierImageFilterVIUS3SSFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_SetPriors, None, itkBayesianClassifierImageFilterVIUS3SSFF)
itkBayesianClassifierImageFilterVIUS3SSFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUS3SSFF)
itkBayesianClassifierImageFilterVIUS3SSFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUS3SSFF)
itkBayesianClassifierImageFilterVIUS3SSFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_swigregister
itkBayesianClassifierImageFilterVIUS3SSFF_swigregister(itkBayesianClassifierImageFilterVIUS3SSFF)

def itkBayesianClassifierImageFilterVIUS3SSFF___New_orig__() -> "itkBayesianClassifierImageFilterVIUS3SSFF_Pointer":
    """itkBayesianClassifierImageFilterVIUS3SSFF___New_orig__() -> itkBayesianClassifierImageFilterVIUS3SSFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF___New_orig__()

def itkBayesianClassifierImageFilterVIUS3SSFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUS3SSFF *":
    """itkBayesianClassifierImageFilterVIUS3SSFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3SSFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3SSFF_cast(obj)

class itkBayesianClassifierImageFilterVIUS3UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS3UCFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIUS3UCFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIUS3UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIUS3UCFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIUS3UCFF self) -> itkBayesianClassifierImageFilterVIUS3UCFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF3IF3') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIUS3UCFF self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF3IF3_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIUS3UCFF self) -> itkImageToImageFilterIF3IF3_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF3') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIUS3UCFF self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUS3UCFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUS3UCFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS3UCFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUS3UCFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS3UCFF

        Create a new object of the class itkBayesianClassifierImageFilterVIUS3UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIUS3UCFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIUS3UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS3UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS3UCFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_Clone, None, itkBayesianClassifierImageFilterVIUS3UCFF)
itkBayesianClassifierImageFilterVIUS3UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUS3UCFF)
itkBayesianClassifierImageFilterVIUS3UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUS3UCFF)
itkBayesianClassifierImageFilterVIUS3UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_SetPriors, None, itkBayesianClassifierImageFilterVIUS3UCFF)
itkBayesianClassifierImageFilterVIUS3UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUS3UCFF)
itkBayesianClassifierImageFilterVIUS3UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUS3UCFF)
itkBayesianClassifierImageFilterVIUS3UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_swigregister
itkBayesianClassifierImageFilterVIUS3UCFF_swigregister(itkBayesianClassifierImageFilterVIUS3UCFF)

def itkBayesianClassifierImageFilterVIUS3UCFF___New_orig__() -> "itkBayesianClassifierImageFilterVIUS3UCFF_Pointer":
    """itkBayesianClassifierImageFilterVIUS3UCFF___New_orig__() -> itkBayesianClassifierImageFilterVIUS3UCFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIUS3UCFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUS3UCFF *":
    """itkBayesianClassifierImageFilterVIUS3UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3UCFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_cast(obj)

class itkBayesianClassifierImageFilterVIUS3USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS3USFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBayesianClassifierImageFilterVIUS3USFF_Pointer":
        """__New_orig__() -> itkBayesianClassifierImageFilterVIUS3USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBayesianClassifierImageFilterVIUS3USFF_Pointer":
        """Clone(itkBayesianClassifierImageFilterVIUS3USFF self) -> itkBayesianClassifierImageFilterVIUS3USFF_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_Clone(self)


    def SetSmoothingFilter(self, arg0: 'itkImageToImageFilterIF3IF3') -> "void":
        """SetSmoothingFilter(itkBayesianClassifierImageFilterVIUS3USFF self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_SetSmoothingFilter(self, arg0)


    def GetSmoothingFilter(self) -> "itkImageToImageFilterIF3IF3_Pointer":
        """GetSmoothingFilter(itkBayesianClassifierImageFilterVIUS3USFF self) -> itkImageToImageFilterIF3IF3_Pointer"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_GetSmoothingFilter(self)


    def SetPriors(self, arg0: 'itkVectorImageF3') -> "void":
        """SetPriors(itkBayesianClassifierImageFilterVIUS3USFF self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_SetPriors(self, arg0)


    def SetNumberOfSmoothingIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUS3USFF self, unsigned int const _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_SetNumberOfSmoothingIterations(self, _arg)


    def GetNumberOfSmoothingIterations(self) -> "unsigned int":
        """GetNumberOfSmoothingIterations(itkBayesianClassifierImageFilterVIUS3USFF self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_GetNumberOfSmoothingIterations(self)

    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS3USFF

    def cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUS3USFF *":
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS3USFF

        Create a new object of the class itkBayesianClassifierImageFilterVIUS3USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierImageFilterVIUS3USFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierImageFilterVIUS3USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS3USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS3USFF.Clone = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_Clone, None, itkBayesianClassifierImageFilterVIUS3USFF)
itkBayesianClassifierImageFilterVIUS3USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_SetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUS3USFF)
itkBayesianClassifierImageFilterVIUS3USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_GetSmoothingFilter, None, itkBayesianClassifierImageFilterVIUS3USFF)
itkBayesianClassifierImageFilterVIUS3USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_SetPriors, None, itkBayesianClassifierImageFilterVIUS3USFF)
itkBayesianClassifierImageFilterVIUS3USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_SetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUS3USFF)
itkBayesianClassifierImageFilterVIUS3USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_GetNumberOfSmoothingIterations, None, itkBayesianClassifierImageFilterVIUS3USFF)
itkBayesianClassifierImageFilterVIUS3USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_swigregister
itkBayesianClassifierImageFilterVIUS3USFF_swigregister(itkBayesianClassifierImageFilterVIUS3USFF)

def itkBayesianClassifierImageFilterVIUS3USFF___New_orig__() -> "itkBayesianClassifierImageFilterVIUS3USFF_Pointer":
    """itkBayesianClassifierImageFilterVIUS3USFF___New_orig__() -> itkBayesianClassifierImageFilterVIUS3USFF_Pointer"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF___New_orig__()

def itkBayesianClassifierImageFilterVIUS3USFF_cast(obj: 'itkLightObject') -> "itkBayesianClassifierImageFilterVIUS3USFF *":
    """itkBayesianClassifierImageFilterVIUS3USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3USFF"""
    return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_cast(obj)


def bayesian_classifier_image_filter(*args, **kwargs):
    """Procedural interface for BayesianClassifierImageFilter"""
    import itk
    instance = itk.BayesianClassifierImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def bayesian_classifier_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.BayesianClassifierImageFilter, itkTemplate.itkTemplate):
        bayesian_classifier_image_filter.__doc__ = itk.BayesianClassifierImageFilter.values()[0].__doc__
    else:
        bayesian_classifier_image_filter.__doc__ = itk.BayesianClassifierImageFilter.__doc__




