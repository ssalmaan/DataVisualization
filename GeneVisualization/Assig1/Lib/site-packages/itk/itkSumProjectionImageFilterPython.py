# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkSumProjectionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSumProjectionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkSumProjectionImageFilterPython
            return _itkSumProjectionImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSumProjectionImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSumProjectionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSumProjectionImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterBPython

def itkSumProjectionImageFilterIF3IF2_New():
  return itkSumProjectionImageFilterIF3IF2.New()


def itkSumProjectionImageFilterIF3IF2_Superclass_New():
  return itkSumProjectionImageFilterIF3IF2_Superclass.New()


def itkSumProjectionImageFilterIUS3IUS2_New():
  return itkSumProjectionImageFilterIUS3IUS2.New()


def itkSumProjectionImageFilterIUS3IUS2_Superclass_New():
  return itkSumProjectionImageFilterIUS3IUS2_Superclass.New()


def itkSumProjectionImageFilterIUC3IUC2_New():
  return itkSumProjectionImageFilterIUC3IUC2.New()


def itkSumProjectionImageFilterIUC3IUC2_Superclass_New():
  return itkSumProjectionImageFilterIUC3IUC2_Superclass.New()


def itkSumProjectionImageFilterISS3ISS2_New():
  return itkSumProjectionImageFilterISS3ISS2.New()


def itkSumProjectionImageFilterISS3ISS2_Superclass_New():
  return itkSumProjectionImageFilterISS3ISS2_Superclass.New()


def itkSumProjectionImageFilterIF3IF3_New():
  return itkSumProjectionImageFilterIF3IF3.New()


def itkSumProjectionImageFilterIF3IF3_Superclass_New():
  return itkSumProjectionImageFilterIF3IF3_Superclass.New()


def itkSumProjectionImageFilterIF2IF2_New():
  return itkSumProjectionImageFilterIF2IF2.New()


def itkSumProjectionImageFilterIF2IF2_Superclass_New():
  return itkSumProjectionImageFilterIF2IF2_Superclass.New()


def itkSumProjectionImageFilterIUS3IUS3_New():
  return itkSumProjectionImageFilterIUS3IUS3.New()


def itkSumProjectionImageFilterIUS3IUS3_Superclass_New():
  return itkSumProjectionImageFilterIUS3IUS3_Superclass.New()


def itkSumProjectionImageFilterIUS2IUS2_New():
  return itkSumProjectionImageFilterIUS2IUS2.New()


def itkSumProjectionImageFilterIUS2IUS2_Superclass_New():
  return itkSumProjectionImageFilterIUS2IUS2_Superclass.New()


def itkSumProjectionImageFilterIUC3IUC3_New():
  return itkSumProjectionImageFilterIUC3IUC3.New()


def itkSumProjectionImageFilterIUC3IUC3_Superclass_New():
  return itkSumProjectionImageFilterIUC3IUC3_Superclass.New()


def itkSumProjectionImageFilterIUC2IUC2_New():
  return itkSumProjectionImageFilterIUC2IUC2.New()


def itkSumProjectionImageFilterIUC2IUC2_Superclass_New():
  return itkSumProjectionImageFilterIUC2IUC2_Superclass.New()


def itkSumProjectionImageFilterISS3ISS3_New():
  return itkSumProjectionImageFilterISS3ISS3.New()


def itkSumProjectionImageFilterISS3ISS3_Superclass_New():
  return itkSumProjectionImageFilterISS3ISS3_Superclass.New()


def itkSumProjectionImageFilterISS2ISS2_New():
  return itkSumProjectionImageFilterISS2ISS2.New()


def itkSumProjectionImageFilterISS2ISS2_Superclass_New():
  return itkSumProjectionImageFilterISS2ISS2_Superclass.New()

class itkSumProjectionImageFilterIF2IF2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkSumProjectionImageFilterIF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIF2IF2_Superclass_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIF2IF2_Superclass_Pointer":
        """Clone(itkSumProjectionImageFilterIF2IF2_Superclass self) -> itkSumProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_Clone(self)

    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkSumProjectionImageFilterIF2IF2_Superclass self, unsigned int const _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkSumProjectionImageFilterIF2IF2_Superclass self) -> unsigned int const &"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIF2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIF2IF2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkSumProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIF2IF2_Superclass.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_Clone, None, itkSumProjectionImageFilterIF2IF2_Superclass)
itkSumProjectionImageFilterIF2IF2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension, None, itkSumProjectionImageFilterIF2IF2_Superclass)
itkSumProjectionImageFilterIF2IF2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension, None, itkSumProjectionImageFilterIF2IF2_Superclass)
itkSumProjectionImageFilterIF2IF2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_swigregister
itkSumProjectionImageFilterIF2IF2_Superclass_swigregister(itkSumProjectionImageFilterIF2IF2_Superclass)

def itkSumProjectionImageFilterIF2IF2_Superclass___New_orig__() -> "itkSumProjectionImageFilterIF2IF2_Superclass_Pointer":
    """itkSumProjectionImageFilterIF2IF2_Superclass___New_orig__() -> itkSumProjectionImageFilterIF2IF2_Superclass_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass___New_orig__()

def itkSumProjectionImageFilterIF2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIF2IF2_Superclass *":
    """itkSumProjectionImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIF2IF2_Superclass"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_cast(obj)

class itkSumProjectionImageFilterIF3IF2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2):
    """Proxy of C++ itkSumProjectionImageFilterIF3IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIF3IF2_Superclass_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIF3IF2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIF3IF2_Superclass_Pointer":
        """Clone(itkSumProjectionImageFilterIF3IF2_Superclass self) -> itkSumProjectionImageFilterIF3IF2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_Clone(self)

    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkSumProjectionImageFilterIF3IF2_Superclass self, unsigned int const _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkSumProjectionImageFilterIF3IF2_Superclass self) -> unsigned int const &"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF3IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIF3IF2_Superclass *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF3IF2_Superclass

        Create a new object of the class itkSumProjectionImageFilterIF3IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIF3IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIF3IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIF3IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIF3IF2_Superclass.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_Clone, None, itkSumProjectionImageFilterIF3IF2_Superclass)
itkSumProjectionImageFilterIF3IF2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension, None, itkSumProjectionImageFilterIF3IF2_Superclass)
itkSumProjectionImageFilterIF3IF2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension, None, itkSumProjectionImageFilterIF3IF2_Superclass)
itkSumProjectionImageFilterIF3IF2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_swigregister
itkSumProjectionImageFilterIF3IF2_Superclass_swigregister(itkSumProjectionImageFilterIF3IF2_Superclass)

def itkSumProjectionImageFilterIF3IF2_Superclass___New_orig__() -> "itkSumProjectionImageFilterIF3IF2_Superclass_Pointer":
    """itkSumProjectionImageFilterIF3IF2_Superclass___New_orig__() -> itkSumProjectionImageFilterIF3IF2_Superclass_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass___New_orig__()

def itkSumProjectionImageFilterIF3IF2_Superclass_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIF3IF2_Superclass *":
    """itkSumProjectionImageFilterIF3IF2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF2_Superclass"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_cast(obj)

class itkSumProjectionImageFilterIF3IF3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkSumProjectionImageFilterIF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIF3IF3_Superclass_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIF3IF3_Superclass_Pointer":
        """Clone(itkSumProjectionImageFilterIF3IF3_Superclass self) -> itkSumProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_Clone(self)

    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkSumProjectionImageFilterIF3IF3_Superclass self, unsigned int const _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkSumProjectionImageFilterIF3IF3_Superclass self) -> unsigned int const &"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIF3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkSumProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIF3IF3_Superclass.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_Clone, None, itkSumProjectionImageFilterIF3IF3_Superclass)
itkSumProjectionImageFilterIF3IF3_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension, None, itkSumProjectionImageFilterIF3IF3_Superclass)
itkSumProjectionImageFilterIF3IF3_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension, None, itkSumProjectionImageFilterIF3IF3_Superclass)
itkSumProjectionImageFilterIF3IF3_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_swigregister
itkSumProjectionImageFilterIF3IF3_Superclass_swigregister(itkSumProjectionImageFilterIF3IF3_Superclass)

def itkSumProjectionImageFilterIF3IF3_Superclass___New_orig__() -> "itkSumProjectionImageFilterIF3IF3_Superclass_Pointer":
    """itkSumProjectionImageFilterIF3IF3_Superclass___New_orig__() -> itkSumProjectionImageFilterIF3IF3_Superclass_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass___New_orig__()

def itkSumProjectionImageFilterIF3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIF3IF3_Superclass *":
    """itkSumProjectionImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF3_Superclass"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_cast(obj)

class itkSumProjectionImageFilterISS2ISS2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkSumProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterISS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterISS2ISS2_Superclass_Pointer":
        """Clone(itkSumProjectionImageFilterISS2ISS2_Superclass self) -> itkSumProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_Clone(self)

    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkSumProjectionImageFilterISS2ISS2_Superclass self, unsigned int const _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkSumProjectionImageFilterISS2ISS2_Superclass self) -> unsigned int const &"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterISS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterISS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterISS2ISS2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkSumProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterISS2ISS2_Superclass.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_Clone, None, itkSumProjectionImageFilterISS2ISS2_Superclass)
itkSumProjectionImageFilterISS2ISS2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension, None, itkSumProjectionImageFilterISS2ISS2_Superclass)
itkSumProjectionImageFilterISS2ISS2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension, None, itkSumProjectionImageFilterISS2ISS2_Superclass)
itkSumProjectionImageFilterISS2ISS2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_swigregister
itkSumProjectionImageFilterISS2ISS2_Superclass_swigregister(itkSumProjectionImageFilterISS2ISS2_Superclass)

def itkSumProjectionImageFilterISS2ISS2_Superclass___New_orig__() -> "itkSumProjectionImageFilterISS2ISS2_Superclass_Pointer":
    """itkSumProjectionImageFilterISS2ISS2_Superclass___New_orig__() -> itkSumProjectionImageFilterISS2ISS2_Superclass_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass___New_orig__()

def itkSumProjectionImageFilterISS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterISS2ISS2_Superclass *":
    """itkSumProjectionImageFilterISS2ISS2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterISS2ISS2_Superclass"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_cast(obj)

class itkSumProjectionImageFilterISS3ISS2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    """Proxy of C++ itkSumProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterISS3ISS2_Superclass_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterISS3ISS2_Superclass_Pointer":
        """Clone(itkSumProjectionImageFilterISS3ISS2_Superclass self) -> itkSumProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_Clone(self)

    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkSumProjectionImageFilterISS3ISS2_Superclass self, unsigned int const _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkSumProjectionImageFilterISS3ISS2_Superclass self) -> unsigned int const &"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterISS3ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterISS3ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterISS3ISS2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkSumProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterISS3ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterISS3ISS2_Superclass.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_Clone, None, itkSumProjectionImageFilterISS3ISS2_Superclass)
itkSumProjectionImageFilterISS3ISS2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension, None, itkSumProjectionImageFilterISS3ISS2_Superclass)
itkSumProjectionImageFilterISS3ISS2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension, None, itkSumProjectionImageFilterISS3ISS2_Superclass)
itkSumProjectionImageFilterISS3ISS2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_swigregister
itkSumProjectionImageFilterISS3ISS2_Superclass_swigregister(itkSumProjectionImageFilterISS3ISS2_Superclass)

def itkSumProjectionImageFilterISS3ISS2_Superclass___New_orig__() -> "itkSumProjectionImageFilterISS3ISS2_Superclass_Pointer":
    """itkSumProjectionImageFilterISS3ISS2_Superclass___New_orig__() -> itkSumProjectionImageFilterISS3ISS2_Superclass_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass___New_orig__()

def itkSumProjectionImageFilterISS3ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterISS3ISS2_Superclass *":
    """itkSumProjectionImageFilterISS3ISS2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterISS3ISS2_Superclass"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_cast(obj)

class itkSumProjectionImageFilterISS3ISS3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkSumProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterISS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterISS3ISS3_Superclass_Pointer":
        """Clone(itkSumProjectionImageFilterISS3ISS3_Superclass self) -> itkSumProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_Clone(self)

    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkSumProjectionImageFilterISS3ISS3_Superclass self, unsigned int const _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkSumProjectionImageFilterISS3ISS3_Superclass self) -> unsigned int const &"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterISS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterISS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterISS3ISS3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkSumProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterISS3ISS3_Superclass.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_Clone, None, itkSumProjectionImageFilterISS3ISS3_Superclass)
itkSumProjectionImageFilterISS3ISS3_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension, None, itkSumProjectionImageFilterISS3ISS3_Superclass)
itkSumProjectionImageFilterISS3ISS3_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension, None, itkSumProjectionImageFilterISS3ISS3_Superclass)
itkSumProjectionImageFilterISS3ISS3_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_swigregister
itkSumProjectionImageFilterISS3ISS3_Superclass_swigregister(itkSumProjectionImageFilterISS3ISS3_Superclass)

def itkSumProjectionImageFilterISS3ISS3_Superclass___New_orig__() -> "itkSumProjectionImageFilterISS3ISS3_Superclass_Pointer":
    """itkSumProjectionImageFilterISS3ISS3_Superclass___New_orig__() -> itkSumProjectionImageFilterISS3ISS3_Superclass_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass___New_orig__()

def itkSumProjectionImageFilterISS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterISS3ISS3_Superclass *":
    """itkSumProjectionImageFilterISS3ISS3_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterISS3ISS3_Superclass"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_cast(obj)

class itkSumProjectionImageFilterIUC2IUC2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkSumProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIUC2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIUC2IUC2_Superclass_Pointer":
        """Clone(itkSumProjectionImageFilterIUC2IUC2_Superclass self) -> itkSumProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_Clone(self)

    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkSumProjectionImageFilterIUC2IUC2_Superclass self, unsigned int const _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkSumProjectionImageFilterIUC2IUC2_Superclass self) -> unsigned int const &"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUC2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC2IUC2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkSumProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUC2IUC2_Superclass.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_Clone, None, itkSumProjectionImageFilterIUC2IUC2_Superclass)
itkSumProjectionImageFilterIUC2IUC2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension, None, itkSumProjectionImageFilterIUC2IUC2_Superclass)
itkSumProjectionImageFilterIUC2IUC2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension, None, itkSumProjectionImageFilterIUC2IUC2_Superclass)
itkSumProjectionImageFilterIUC2IUC2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_swigregister
itkSumProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkSumProjectionImageFilterIUC2IUC2_Superclass)

def itkSumProjectionImageFilterIUC2IUC2_Superclass___New_orig__() -> "itkSumProjectionImageFilterIUC2IUC2_Superclass_Pointer":
    """itkSumProjectionImageFilterIUC2IUC2_Superclass___New_orig__() -> itkSumProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

def itkSumProjectionImageFilterIUC2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUC2IUC2_Superclass *":
    """itkSumProjectionImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC2IUC2_Superclass"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_cast(obj)

class itkSumProjectionImageFilterIUC3IUC2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    """Proxy of C++ itkSumProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIUC3IUC2_Superclass_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIUC3IUC2_Superclass_Pointer":
        """Clone(itkSumProjectionImageFilterIUC3IUC2_Superclass self) -> itkSumProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_Clone(self)

    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkSumProjectionImageFilterIUC3IUC2_Superclass self, unsigned int const _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkSumProjectionImageFilterIUC3IUC2_Superclass self) -> unsigned int const &"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC3IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUC3IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkSumProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUC3IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUC3IUC2_Superclass.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_Clone, None, itkSumProjectionImageFilterIUC3IUC2_Superclass)
itkSumProjectionImageFilterIUC3IUC2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension, None, itkSumProjectionImageFilterIUC3IUC2_Superclass)
itkSumProjectionImageFilterIUC3IUC2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension, None, itkSumProjectionImageFilterIUC3IUC2_Superclass)
itkSumProjectionImageFilterIUC3IUC2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_swigregister
itkSumProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkSumProjectionImageFilterIUC3IUC2_Superclass)

def itkSumProjectionImageFilterIUC3IUC2_Superclass___New_orig__() -> "itkSumProjectionImageFilterIUC3IUC2_Superclass_Pointer":
    """itkSumProjectionImageFilterIUC3IUC2_Superclass___New_orig__() -> itkSumProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

def itkSumProjectionImageFilterIUC3IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUC3IUC2_Superclass *":
    """itkSumProjectionImageFilterIUC3IUC2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC2_Superclass"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_cast(obj)

class itkSumProjectionImageFilterIUC3IUC3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkSumProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIUC3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIUC3IUC3_Superclass_Pointer":
        """Clone(itkSumProjectionImageFilterIUC3IUC3_Superclass self) -> itkSumProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_Clone(self)

    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkSumProjectionImageFilterIUC3IUC3_Superclass self, unsigned int const _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkSumProjectionImageFilterIUC3IUC3_Superclass self) -> unsigned int const &"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUC3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkSumProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUC3IUC3_Superclass.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_Clone, None, itkSumProjectionImageFilterIUC3IUC3_Superclass)
itkSumProjectionImageFilterIUC3IUC3_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension, None, itkSumProjectionImageFilterIUC3IUC3_Superclass)
itkSumProjectionImageFilterIUC3IUC3_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension, None, itkSumProjectionImageFilterIUC3IUC3_Superclass)
itkSumProjectionImageFilterIUC3IUC3_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_swigregister
itkSumProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkSumProjectionImageFilterIUC3IUC3_Superclass)

def itkSumProjectionImageFilterIUC3IUC3_Superclass___New_orig__() -> "itkSumProjectionImageFilterIUC3IUC3_Superclass_Pointer":
    """itkSumProjectionImageFilterIUC3IUC3_Superclass___New_orig__() -> itkSumProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

def itkSumProjectionImageFilterIUC3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUC3IUC3_Superclass *":
    """itkSumProjectionImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC3_Superclass"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_cast(obj)

class itkSumProjectionImageFilterIUS2IUS2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkSumProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIUS2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIUS2IUS2_Superclass_Pointer":
        """Clone(itkSumProjectionImageFilterIUS2IUS2_Superclass self) -> itkSumProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_Clone(self)

    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkSumProjectionImageFilterIUS2IUS2_Superclass self, unsigned int const _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkSumProjectionImageFilterIUS2IUS2_Superclass self) -> unsigned int const &"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUS2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS2IUS2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkSumProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUS2IUS2_Superclass.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_Clone, None, itkSumProjectionImageFilterIUS2IUS2_Superclass)
itkSumProjectionImageFilterIUS2IUS2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension, None, itkSumProjectionImageFilterIUS2IUS2_Superclass)
itkSumProjectionImageFilterIUS2IUS2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension, None, itkSumProjectionImageFilterIUS2IUS2_Superclass)
itkSumProjectionImageFilterIUS2IUS2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_swigregister
itkSumProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkSumProjectionImageFilterIUS2IUS2_Superclass)

def itkSumProjectionImageFilterIUS2IUS2_Superclass___New_orig__() -> "itkSumProjectionImageFilterIUS2IUS2_Superclass_Pointer":
    """itkSumProjectionImageFilterIUS2IUS2_Superclass___New_orig__() -> itkSumProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

def itkSumProjectionImageFilterIUS2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUS2IUS2_Superclass *":
    """itkSumProjectionImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS2IUS2_Superclass"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_cast(obj)

class itkSumProjectionImageFilterIUS3IUS2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    """Proxy of C++ itkSumProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIUS3IUS2_Superclass_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIUS3IUS2_Superclass_Pointer":
        """Clone(itkSumProjectionImageFilterIUS3IUS2_Superclass self) -> itkSumProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_Clone(self)

    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkSumProjectionImageFilterIUS3IUS2_Superclass self, unsigned int const _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkSumProjectionImageFilterIUS3IUS2_Superclass self) -> unsigned int const &"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS3IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUS3IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkSumProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUS3IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUS3IUS2_Superclass.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_Clone, None, itkSumProjectionImageFilterIUS3IUS2_Superclass)
itkSumProjectionImageFilterIUS3IUS2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension, None, itkSumProjectionImageFilterIUS3IUS2_Superclass)
itkSumProjectionImageFilterIUS3IUS2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension, None, itkSumProjectionImageFilterIUS3IUS2_Superclass)
itkSumProjectionImageFilterIUS3IUS2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_swigregister
itkSumProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkSumProjectionImageFilterIUS3IUS2_Superclass)

def itkSumProjectionImageFilterIUS3IUS2_Superclass___New_orig__() -> "itkSumProjectionImageFilterIUS3IUS2_Superclass_Pointer":
    """itkSumProjectionImageFilterIUS3IUS2_Superclass___New_orig__() -> itkSumProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

def itkSumProjectionImageFilterIUS3IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUS3IUS2_Superclass *":
    """itkSumProjectionImageFilterIUS3IUS2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS2_Superclass"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_cast(obj)

class itkSumProjectionImageFilterIUS3IUS3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkSumProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIUS3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIUS3IUS3_Superclass_Pointer":
        """Clone(itkSumProjectionImageFilterIUS3IUS3_Superclass self) -> itkSumProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_Clone(self)

    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkSumProjectionImageFilterIUS3IUS3_Superclass self, unsigned int const _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkSumProjectionImageFilterIUS3IUS3_Superclass self) -> unsigned int const &"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUS3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkSumProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUS3IUS3_Superclass.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_Clone, None, itkSumProjectionImageFilterIUS3IUS3_Superclass)
itkSumProjectionImageFilterIUS3IUS3_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension, None, itkSumProjectionImageFilterIUS3IUS3_Superclass)
itkSumProjectionImageFilterIUS3IUS3_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension, None, itkSumProjectionImageFilterIUS3IUS3_Superclass)
itkSumProjectionImageFilterIUS3IUS3_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_swigregister
itkSumProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkSumProjectionImageFilterIUS3IUS3_Superclass)

def itkSumProjectionImageFilterIUS3IUS3_Superclass___New_orig__() -> "itkSumProjectionImageFilterIUS3IUS3_Superclass_Pointer":
    """itkSumProjectionImageFilterIUS3IUS3_Superclass___New_orig__() -> itkSumProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

def itkSumProjectionImageFilterIUS3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUS3IUS3_Superclass *":
    """itkSumProjectionImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS3_Superclass"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_cast(obj)

class itkSumProjectionImageFilterIF2IF2(itkSumProjectionImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIF2IF2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIF2IF2_Pointer":
        """Clone(itkSumProjectionImageFilterIF2IF2 self) -> itkSumProjectionImageFilterIF2IF2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Clone(self)

    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIF2IF2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF2IF2

        Create a new object of the class itkSumProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIF2IF2.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Clone, None, itkSumProjectionImageFilterIF2IF2)
itkSumProjectionImageFilterIF2IF2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_swigregister
itkSumProjectionImageFilterIF2IF2_swigregister(itkSumProjectionImageFilterIF2IF2)

def itkSumProjectionImageFilterIF2IF2___New_orig__() -> "itkSumProjectionImageFilterIF2IF2_Pointer":
    """itkSumProjectionImageFilterIF2IF2___New_orig__() -> itkSumProjectionImageFilterIF2IF2_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2___New_orig__()

def itkSumProjectionImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIF2IF2 *":
    """itkSumProjectionImageFilterIF2IF2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIF2IF2"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_cast(obj)

class itkSumProjectionImageFilterIF3IF2(itkSumProjectionImageFilterIF3IF2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIF3IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIF3IF2_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIF3IF2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIF3IF2_Pointer":
        """Clone(itkSumProjectionImageFilterIF3IF2 self) -> itkSumProjectionImageFilterIF3IF2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Clone(self)

    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF3IF2

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIF3IF2 *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF3IF2

        Create a new object of the class itkSumProjectionImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIF3IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIF3IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIF3IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIF3IF2.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Clone, None, itkSumProjectionImageFilterIF3IF2)
itkSumProjectionImageFilterIF3IF2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_swigregister
itkSumProjectionImageFilterIF3IF2_swigregister(itkSumProjectionImageFilterIF3IF2)

def itkSumProjectionImageFilterIF3IF2___New_orig__() -> "itkSumProjectionImageFilterIF3IF2_Pointer":
    """itkSumProjectionImageFilterIF3IF2___New_orig__() -> itkSumProjectionImageFilterIF3IF2_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2___New_orig__()

def itkSumProjectionImageFilterIF3IF2_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIF3IF2 *":
    """itkSumProjectionImageFilterIF3IF2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF2"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_cast(obj)

class itkSumProjectionImageFilterIF3IF3(itkSumProjectionImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIF3IF3_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIF3IF3_Pointer":
        """Clone(itkSumProjectionImageFilterIF3IF3 self) -> itkSumProjectionImageFilterIF3IF3_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Clone(self)

    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF3IF3

        Create a new object of the class itkSumProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIF3IF3.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Clone, None, itkSumProjectionImageFilterIF3IF3)
itkSumProjectionImageFilterIF3IF3_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_swigregister
itkSumProjectionImageFilterIF3IF3_swigregister(itkSumProjectionImageFilterIF3IF3)

def itkSumProjectionImageFilterIF3IF3___New_orig__() -> "itkSumProjectionImageFilterIF3IF3_Pointer":
    """itkSumProjectionImageFilterIF3IF3___New_orig__() -> itkSumProjectionImageFilterIF3IF3_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3___New_orig__()

def itkSumProjectionImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIF3IF3 *":
    """itkSumProjectionImageFilterIF3IF3_cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF3"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_cast(obj)

class itkSumProjectionImageFilterISS2ISS2(itkSumProjectionImageFilterISS2ISS2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterISS2ISS2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterISS2ISS2_Pointer":
        """Clone(itkSumProjectionImageFilterISS2ISS2 self) -> itkSumProjectionImageFilterISS2ISS2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Clone(self)

    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterISS2ISS2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterISS2ISS2

        Create a new object of the class itkSumProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterISS2ISS2.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Clone, None, itkSumProjectionImageFilterISS2ISS2)
itkSumProjectionImageFilterISS2ISS2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_swigregister
itkSumProjectionImageFilterISS2ISS2_swigregister(itkSumProjectionImageFilterISS2ISS2)

def itkSumProjectionImageFilterISS2ISS2___New_orig__() -> "itkSumProjectionImageFilterISS2ISS2_Pointer":
    """itkSumProjectionImageFilterISS2ISS2___New_orig__() -> itkSumProjectionImageFilterISS2ISS2_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2___New_orig__()

def itkSumProjectionImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterISS2ISS2 *":
    """itkSumProjectionImageFilterISS2ISS2_cast(itkLightObject obj) -> itkSumProjectionImageFilterISS2ISS2"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_cast(obj)

class itkSumProjectionImageFilterISS3ISS2(itkSumProjectionImageFilterISS3ISS2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterISS3ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterISS3ISS2_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterISS3ISS2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterISS3ISS2_Pointer":
        """Clone(itkSumProjectionImageFilterISS3ISS2 self) -> itkSumProjectionImageFilterISS3ISS2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Clone(self)

    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterISS3ISS2

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterISS3ISS2 *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterISS3ISS2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterISS3ISS2

        Create a new object of the class itkSumProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterISS3ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterISS3ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterISS3ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterISS3ISS2.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Clone, None, itkSumProjectionImageFilterISS3ISS2)
itkSumProjectionImageFilterISS3ISS2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_swigregister
itkSumProjectionImageFilterISS3ISS2_swigregister(itkSumProjectionImageFilterISS3ISS2)

def itkSumProjectionImageFilterISS3ISS2___New_orig__() -> "itkSumProjectionImageFilterISS3ISS2_Pointer":
    """itkSumProjectionImageFilterISS3ISS2___New_orig__() -> itkSumProjectionImageFilterISS3ISS2_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2___New_orig__()

def itkSumProjectionImageFilterISS3ISS2_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterISS3ISS2 *":
    """itkSumProjectionImageFilterISS3ISS2_cast(itkLightObject obj) -> itkSumProjectionImageFilterISS3ISS2"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_cast(obj)

class itkSumProjectionImageFilterISS3ISS3(itkSumProjectionImageFilterISS3ISS3_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterISS3ISS3_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterISS3ISS3_Pointer":
        """Clone(itkSumProjectionImageFilterISS3ISS3 self) -> itkSumProjectionImageFilterISS3ISS3_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Clone(self)

    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterISS3ISS3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterISS3ISS3

        Create a new object of the class itkSumProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterISS3ISS3.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Clone, None, itkSumProjectionImageFilterISS3ISS3)
itkSumProjectionImageFilterISS3ISS3_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_swigregister
itkSumProjectionImageFilterISS3ISS3_swigregister(itkSumProjectionImageFilterISS3ISS3)

def itkSumProjectionImageFilterISS3ISS3___New_orig__() -> "itkSumProjectionImageFilterISS3ISS3_Pointer":
    """itkSumProjectionImageFilterISS3ISS3___New_orig__() -> itkSumProjectionImageFilterISS3ISS3_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3___New_orig__()

def itkSumProjectionImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterISS3ISS3 *":
    """itkSumProjectionImageFilterISS3ISS3_cast(itkLightObject obj) -> itkSumProjectionImageFilterISS3ISS3"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_cast(obj)

class itkSumProjectionImageFilterIUC2IUC2(itkSumProjectionImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIUC2IUC2_Pointer":
        """Clone(itkSumProjectionImageFilterIUC2IUC2 self) -> itkSumProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Clone(self)

    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC2IUC2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC2IUC2

        Create a new object of the class itkSumProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUC2IUC2.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Clone, None, itkSumProjectionImageFilterIUC2IUC2)
itkSumProjectionImageFilterIUC2IUC2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_swigregister
itkSumProjectionImageFilterIUC2IUC2_swigregister(itkSumProjectionImageFilterIUC2IUC2)

def itkSumProjectionImageFilterIUC2IUC2___New_orig__() -> "itkSumProjectionImageFilterIUC2IUC2_Pointer":
    """itkSumProjectionImageFilterIUC2IUC2___New_orig__() -> itkSumProjectionImageFilterIUC2IUC2_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2___New_orig__()

def itkSumProjectionImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUC2IUC2 *":
    """itkSumProjectionImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC2IUC2"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_cast(obj)

class itkSumProjectionImageFilterIUC3IUC2(itkSumProjectionImageFilterIUC3IUC2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUC3IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIUC3IUC2_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIUC3IUC2_Pointer":
        """Clone(itkSumProjectionImageFilterIUC3IUC2 self) -> itkSumProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Clone(self)

    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC3IUC2

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUC3IUC2 *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC3IUC2

        Create a new object of the class itkSumProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUC3IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUC3IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUC3IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUC3IUC2.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Clone, None, itkSumProjectionImageFilterIUC3IUC2)
itkSumProjectionImageFilterIUC3IUC2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_swigregister
itkSumProjectionImageFilterIUC3IUC2_swigregister(itkSumProjectionImageFilterIUC3IUC2)

def itkSumProjectionImageFilterIUC3IUC2___New_orig__() -> "itkSumProjectionImageFilterIUC3IUC2_Pointer":
    """itkSumProjectionImageFilterIUC3IUC2___New_orig__() -> itkSumProjectionImageFilterIUC3IUC2_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2___New_orig__()

def itkSumProjectionImageFilterIUC3IUC2_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUC3IUC2 *":
    """itkSumProjectionImageFilterIUC3IUC2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC2"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_cast(obj)

class itkSumProjectionImageFilterIUC3IUC3(itkSumProjectionImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIUC3IUC3_Pointer":
        """Clone(itkSumProjectionImageFilterIUC3IUC3 self) -> itkSumProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Clone(self)

    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC3IUC3

        Create a new object of the class itkSumProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUC3IUC3.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Clone, None, itkSumProjectionImageFilterIUC3IUC3)
itkSumProjectionImageFilterIUC3IUC3_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_swigregister
itkSumProjectionImageFilterIUC3IUC3_swigregister(itkSumProjectionImageFilterIUC3IUC3)

def itkSumProjectionImageFilterIUC3IUC3___New_orig__() -> "itkSumProjectionImageFilterIUC3IUC3_Pointer":
    """itkSumProjectionImageFilterIUC3IUC3___New_orig__() -> itkSumProjectionImageFilterIUC3IUC3_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3___New_orig__()

def itkSumProjectionImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUC3IUC3 *":
    """itkSumProjectionImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC3"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_cast(obj)

class itkSumProjectionImageFilterIUS2IUS2(itkSumProjectionImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIUS2IUS2_Pointer":
        """Clone(itkSumProjectionImageFilterIUS2IUS2 self) -> itkSumProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Clone(self)

    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS2IUS2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS2IUS2

        Create a new object of the class itkSumProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUS2IUS2.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Clone, None, itkSumProjectionImageFilterIUS2IUS2)
itkSumProjectionImageFilterIUS2IUS2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_swigregister
itkSumProjectionImageFilterIUS2IUS2_swigregister(itkSumProjectionImageFilterIUS2IUS2)

def itkSumProjectionImageFilterIUS2IUS2___New_orig__() -> "itkSumProjectionImageFilterIUS2IUS2_Pointer":
    """itkSumProjectionImageFilterIUS2IUS2___New_orig__() -> itkSumProjectionImageFilterIUS2IUS2_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2___New_orig__()

def itkSumProjectionImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUS2IUS2 *":
    """itkSumProjectionImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS2IUS2"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_cast(obj)

class itkSumProjectionImageFilterIUS3IUS2(itkSumProjectionImageFilterIUS3IUS2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUS3IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIUS3IUS2_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIUS3IUS2_Pointer":
        """Clone(itkSumProjectionImageFilterIUS3IUS2 self) -> itkSumProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Clone(self)

    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS3IUS2

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUS3IUS2 *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS3IUS2

        Create a new object of the class itkSumProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUS3IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUS3IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUS3IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUS3IUS2.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Clone, None, itkSumProjectionImageFilterIUS3IUS2)
itkSumProjectionImageFilterIUS3IUS2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_swigregister
itkSumProjectionImageFilterIUS3IUS2_swigregister(itkSumProjectionImageFilterIUS3IUS2)

def itkSumProjectionImageFilterIUS3IUS2___New_orig__() -> "itkSumProjectionImageFilterIUS3IUS2_Pointer":
    """itkSumProjectionImageFilterIUS3IUS2___New_orig__() -> itkSumProjectionImageFilterIUS3IUS2_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2___New_orig__()

def itkSumProjectionImageFilterIUS3IUS2_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUS3IUS2 *":
    """itkSumProjectionImageFilterIUS3IUS2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS2"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_cast(obj)

class itkSumProjectionImageFilterIUS3IUS3(itkSumProjectionImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSumProjectionImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkSumProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSumProjectionImageFilterIUS3IUS3_Pointer":
        """Clone(itkSumProjectionImageFilterIUS3IUS3 self) -> itkSumProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Clone(self)

    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS3IUS3

        Create a new object of the class itkSumProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUS3IUS3.Clone = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Clone, None, itkSumProjectionImageFilterIUS3IUS3)
itkSumProjectionImageFilterIUS3IUS3_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_swigregister
itkSumProjectionImageFilterIUS3IUS3_swigregister(itkSumProjectionImageFilterIUS3IUS3)

def itkSumProjectionImageFilterIUS3IUS3___New_orig__() -> "itkSumProjectionImageFilterIUS3IUS3_Pointer":
    """itkSumProjectionImageFilterIUS3IUS3___New_orig__() -> itkSumProjectionImageFilterIUS3IUS3_Pointer"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3___New_orig__()

def itkSumProjectionImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkSumProjectionImageFilterIUS3IUS3 *":
    """itkSumProjectionImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS3"""
    return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_cast(obj)


def sum_projection_image_filter(*args, **kwargs):
    """Procedural interface for SumProjectionImageFilter"""
    import itk
    instance = itk.SumProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def sum_projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.SumProjectionImageFilter, itkTemplate.itkTemplate):
        sum_projection_image_filter.__doc__ = itk.SumProjectionImageFilter.values()[0].__doc__
    else:
        sum_projection_image_filter.__doc__ = itk.SumProjectionImageFilter.__doc__

def projection_image_filter(*args, **kwargs):
    """Procedural interface for ProjectionImageFilter"""
    import itk
    instance = itk.ProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        projection_image_filter.__doc__ = itk.ProjectionImageFilter.values()[0].__doc__
    else:
        projection_image_filter.__doc__ = itk.ProjectionImageFilter.__doc__




