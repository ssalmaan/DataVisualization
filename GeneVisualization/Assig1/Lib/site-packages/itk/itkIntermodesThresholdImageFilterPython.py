# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkIntermodesThresholdImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkIntermodesThresholdImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkIntermodesThresholdImageFilterPython
            return _itkIntermodesThresholdImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkIntermodesThresholdImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkIntermodesThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkIntermodesThresholdImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkHistogramThresholdImageFilterPython
import itkHistogramThresholdCalculatorPython
import itkHistogramPython
import itkSamplePython
import itkArrayPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkSimpleDataObjectDecoratorPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkCovariantVectorPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkIntermodesThresholdImageFilterIF3IUS3_New():
  return itkIntermodesThresholdImageFilterIF3IUS3.New()


def itkIntermodesThresholdImageFilterIF2IUS2_New():
  return itkIntermodesThresholdImageFilterIF2IUS2.New()


def itkIntermodesThresholdImageFilterIF3IUC3_New():
  return itkIntermodesThresholdImageFilterIF3IUC3.New()


def itkIntermodesThresholdImageFilterIF2IUC2_New():
  return itkIntermodesThresholdImageFilterIF2IUC2.New()


def itkIntermodesThresholdImageFilterIF3ISS3_New():
  return itkIntermodesThresholdImageFilterIF3ISS3.New()


def itkIntermodesThresholdImageFilterIF2ISS2_New():
  return itkIntermodesThresholdImageFilterIF2ISS2.New()


def itkIntermodesThresholdImageFilterIUS3IUS3_New():
  return itkIntermodesThresholdImageFilterIUS3IUS3.New()


def itkIntermodesThresholdImageFilterIUS2IUS2_New():
  return itkIntermodesThresholdImageFilterIUS2IUS2.New()


def itkIntermodesThresholdImageFilterIUS3IUC3_New():
  return itkIntermodesThresholdImageFilterIUS3IUC3.New()


def itkIntermodesThresholdImageFilterIUS2IUC2_New():
  return itkIntermodesThresholdImageFilterIUS2IUC2.New()


def itkIntermodesThresholdImageFilterIUS3ISS3_New():
  return itkIntermodesThresholdImageFilterIUS3ISS3.New()


def itkIntermodesThresholdImageFilterIUS2ISS2_New():
  return itkIntermodesThresholdImageFilterIUS2ISS2.New()


def itkIntermodesThresholdImageFilterIUC3IUS3_New():
  return itkIntermodesThresholdImageFilterIUC3IUS3.New()


def itkIntermodesThresholdImageFilterIUC2IUS2_New():
  return itkIntermodesThresholdImageFilterIUC2IUS2.New()


def itkIntermodesThresholdImageFilterIUC3IUC3_New():
  return itkIntermodesThresholdImageFilterIUC3IUC3.New()


def itkIntermodesThresholdImageFilterIUC2IUC2_New():
  return itkIntermodesThresholdImageFilterIUC2IUC2.New()


def itkIntermodesThresholdImageFilterIUC3ISS3_New():
  return itkIntermodesThresholdImageFilterIUC3ISS3.New()


def itkIntermodesThresholdImageFilterIUC2ISS2_New():
  return itkIntermodesThresholdImageFilterIUC2ISS2.New()


def itkIntermodesThresholdImageFilterISS3IUS3_New():
  return itkIntermodesThresholdImageFilterISS3IUS3.New()


def itkIntermodesThresholdImageFilterISS2IUS2_New():
  return itkIntermodesThresholdImageFilterISS2IUS2.New()


def itkIntermodesThresholdImageFilterISS3IUC3_New():
  return itkIntermodesThresholdImageFilterISS3IUC3.New()


def itkIntermodesThresholdImageFilterISS2IUC2_New():
  return itkIntermodesThresholdImageFilterISS2IUC2.New()


def itkIntermodesThresholdImageFilterISS3ISS3_New():
  return itkIntermodesThresholdImageFilterISS3ISS3.New()


def itkIntermodesThresholdImageFilterISS2ISS2_New():
  return itkIntermodesThresholdImageFilterISS2ISS2.New()

class itkIntermodesThresholdImageFilterIF2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    """Proxy of C++ itkIntermodesThresholdImageFilterIF2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIF2ISS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIF2ISS2_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIF2ISS2 self) -> itkIntermodesThresholdImageFilterIF2ISS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIF2ISS2 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIF2ISS2 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIF2ISS2 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIF2ISS2 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIF2ISS2"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIF2ISS2

        Create a new object of the class itkIntermodesThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIF2ISS2.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2_Clone, None, itkIntermodesThresholdImageFilterIF2ISS2)
itkIntermodesThresholdImageFilterIF2ISS2.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIF2ISS2)
itkIntermodesThresholdImageFilterIF2ISS2.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIF2ISS2)
itkIntermodesThresholdImageFilterIF2ISS2.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2_SetUseInterMode, None, itkIntermodesThresholdImageFilterIF2ISS2)
itkIntermodesThresholdImageFilterIF2ISS2.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2_GetUseInterMode, None, itkIntermodesThresholdImageFilterIF2ISS2)
itkIntermodesThresholdImageFilterIF2ISS2_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2_swigregister
itkIntermodesThresholdImageFilterIF2ISS2_swigregister(itkIntermodesThresholdImageFilterIF2ISS2)

def itkIntermodesThresholdImageFilterIF2ISS2___New_orig__() -> "itkIntermodesThresholdImageFilterIF2ISS2_Pointer":
    """itkIntermodesThresholdImageFilterIF2ISS2___New_orig__() -> itkIntermodesThresholdImageFilterIF2ISS2_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2___New_orig__()

def itkIntermodesThresholdImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIF2ISS2 *":
    """itkIntermodesThresholdImageFilterIF2ISS2_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIF2ISS2"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2ISS2_cast(obj)

class itkIntermodesThresholdImageFilterIF2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    """Proxy of C++ itkIntermodesThresholdImageFilterIF2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIF2IUC2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIF2IUC2_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIF2IUC2 self) -> itkIntermodesThresholdImageFilterIF2IUC2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIF2IUC2 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIF2IUC2 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIF2IUC2 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIF2IUC2 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIF2IUC2"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIF2IUC2

        Create a new object of the class itkIntermodesThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIF2IUC2.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2_Clone, None, itkIntermodesThresholdImageFilterIF2IUC2)
itkIntermodesThresholdImageFilterIF2IUC2.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIF2IUC2)
itkIntermodesThresholdImageFilterIF2IUC2.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIF2IUC2)
itkIntermodesThresholdImageFilterIF2IUC2.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2_SetUseInterMode, None, itkIntermodesThresholdImageFilterIF2IUC2)
itkIntermodesThresholdImageFilterIF2IUC2.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2_GetUseInterMode, None, itkIntermodesThresholdImageFilterIF2IUC2)
itkIntermodesThresholdImageFilterIF2IUC2_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2_swigregister
itkIntermodesThresholdImageFilterIF2IUC2_swigregister(itkIntermodesThresholdImageFilterIF2IUC2)

def itkIntermodesThresholdImageFilterIF2IUC2___New_orig__() -> "itkIntermodesThresholdImageFilterIF2IUC2_Pointer":
    """itkIntermodesThresholdImageFilterIF2IUC2___New_orig__() -> itkIntermodesThresholdImageFilterIF2IUC2_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2___New_orig__()

def itkIntermodesThresholdImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIF2IUC2 *":
    """itkIntermodesThresholdImageFilterIF2IUC2_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIF2IUC2"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUC2_cast(obj)

class itkIntermodesThresholdImageFilterIF2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    """Proxy of C++ itkIntermodesThresholdImageFilterIF2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIF2IUS2_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIF2IUS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIF2IUS2_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIF2IUS2 self) -> itkIntermodesThresholdImageFilterIF2IUS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIF2IUS2 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIF2IUS2 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIF2IUS2 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIF2IUS2 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIF2IUS2

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIF2IUS2 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIF2IUS2"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIF2IUS2

        Create a new object of the class itkIntermodesThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIF2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIF2IUS2.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2_Clone, None, itkIntermodesThresholdImageFilterIF2IUS2)
itkIntermodesThresholdImageFilterIF2IUS2.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIF2IUS2)
itkIntermodesThresholdImageFilterIF2IUS2.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIF2IUS2)
itkIntermodesThresholdImageFilterIF2IUS2.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2_SetUseInterMode, None, itkIntermodesThresholdImageFilterIF2IUS2)
itkIntermodesThresholdImageFilterIF2IUS2.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2_GetUseInterMode, None, itkIntermodesThresholdImageFilterIF2IUS2)
itkIntermodesThresholdImageFilterIF2IUS2_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2_swigregister
itkIntermodesThresholdImageFilterIF2IUS2_swigregister(itkIntermodesThresholdImageFilterIF2IUS2)

def itkIntermodesThresholdImageFilterIF2IUS2___New_orig__() -> "itkIntermodesThresholdImageFilterIF2IUS2_Pointer":
    """itkIntermodesThresholdImageFilterIF2IUS2___New_orig__() -> itkIntermodesThresholdImageFilterIF2IUS2_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2___New_orig__()

def itkIntermodesThresholdImageFilterIF2IUS2_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIF2IUS2 *":
    """itkIntermodesThresholdImageFilterIF2IUS2_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIF2IUS2"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF2IUS2_cast(obj)

class itkIntermodesThresholdImageFilterIF3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    """Proxy of C++ itkIntermodesThresholdImageFilterIF3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIF3ISS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIF3ISS3_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIF3ISS3 self) -> itkIntermodesThresholdImageFilterIF3ISS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIF3ISS3 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIF3ISS3 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIF3ISS3 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIF3ISS3 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIF3ISS3"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIF3ISS3

        Create a new object of the class itkIntermodesThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIF3ISS3.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3_Clone, None, itkIntermodesThresholdImageFilterIF3ISS3)
itkIntermodesThresholdImageFilterIF3ISS3.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIF3ISS3)
itkIntermodesThresholdImageFilterIF3ISS3.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIF3ISS3)
itkIntermodesThresholdImageFilterIF3ISS3.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3_SetUseInterMode, None, itkIntermodesThresholdImageFilterIF3ISS3)
itkIntermodesThresholdImageFilterIF3ISS3.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3_GetUseInterMode, None, itkIntermodesThresholdImageFilterIF3ISS3)
itkIntermodesThresholdImageFilterIF3ISS3_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3_swigregister
itkIntermodesThresholdImageFilterIF3ISS3_swigregister(itkIntermodesThresholdImageFilterIF3ISS3)

def itkIntermodesThresholdImageFilterIF3ISS3___New_orig__() -> "itkIntermodesThresholdImageFilterIF3ISS3_Pointer":
    """itkIntermodesThresholdImageFilterIF3ISS3___New_orig__() -> itkIntermodesThresholdImageFilterIF3ISS3_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3___New_orig__()

def itkIntermodesThresholdImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIF3ISS3 *":
    """itkIntermodesThresholdImageFilterIF3ISS3_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIF3ISS3"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3ISS3_cast(obj)

class itkIntermodesThresholdImageFilterIF3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    """Proxy of C++ itkIntermodesThresholdImageFilterIF3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIF3IUC3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIF3IUC3_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIF3IUC3 self) -> itkIntermodesThresholdImageFilterIF3IUC3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIF3IUC3 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIF3IUC3 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIF3IUC3 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIF3IUC3 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIF3IUC3"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIF3IUC3

        Create a new object of the class itkIntermodesThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIF3IUC3.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3_Clone, None, itkIntermodesThresholdImageFilterIF3IUC3)
itkIntermodesThresholdImageFilterIF3IUC3.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIF3IUC3)
itkIntermodesThresholdImageFilterIF3IUC3.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIF3IUC3)
itkIntermodesThresholdImageFilterIF3IUC3.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3_SetUseInterMode, None, itkIntermodesThresholdImageFilterIF3IUC3)
itkIntermodesThresholdImageFilterIF3IUC3.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3_GetUseInterMode, None, itkIntermodesThresholdImageFilterIF3IUC3)
itkIntermodesThresholdImageFilterIF3IUC3_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3_swigregister
itkIntermodesThresholdImageFilterIF3IUC3_swigregister(itkIntermodesThresholdImageFilterIF3IUC3)

def itkIntermodesThresholdImageFilterIF3IUC3___New_orig__() -> "itkIntermodesThresholdImageFilterIF3IUC3_Pointer":
    """itkIntermodesThresholdImageFilterIF3IUC3___New_orig__() -> itkIntermodesThresholdImageFilterIF3IUC3_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3___New_orig__()

def itkIntermodesThresholdImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIF3IUC3 *":
    """itkIntermodesThresholdImageFilterIF3IUC3_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIF3IUC3"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUC3_cast(obj)

class itkIntermodesThresholdImageFilterIF3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    """Proxy of C++ itkIntermodesThresholdImageFilterIF3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIF3IUS3_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIF3IUS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIF3IUS3_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIF3IUS3 self) -> itkIntermodesThresholdImageFilterIF3IUS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIF3IUS3 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIF3IUS3 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIF3IUS3 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIF3IUS3 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIF3IUS3

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIF3IUS3 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIF3IUS3"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIF3IUS3

        Create a new object of the class itkIntermodesThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIF3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIF3IUS3.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3_Clone, None, itkIntermodesThresholdImageFilterIF3IUS3)
itkIntermodesThresholdImageFilterIF3IUS3.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIF3IUS3)
itkIntermodesThresholdImageFilterIF3IUS3.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIF3IUS3)
itkIntermodesThresholdImageFilterIF3IUS3.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3_SetUseInterMode, None, itkIntermodesThresholdImageFilterIF3IUS3)
itkIntermodesThresholdImageFilterIF3IUS3.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3_GetUseInterMode, None, itkIntermodesThresholdImageFilterIF3IUS3)
itkIntermodesThresholdImageFilterIF3IUS3_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3_swigregister
itkIntermodesThresholdImageFilterIF3IUS3_swigregister(itkIntermodesThresholdImageFilterIF3IUS3)

def itkIntermodesThresholdImageFilterIF3IUS3___New_orig__() -> "itkIntermodesThresholdImageFilterIF3IUS3_Pointer":
    """itkIntermodesThresholdImageFilterIF3IUS3___New_orig__() -> itkIntermodesThresholdImageFilterIF3IUS3_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3___New_orig__()

def itkIntermodesThresholdImageFilterIF3IUS3_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIF3IUS3 *":
    """itkIntermodesThresholdImageFilterIF3IUS3_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIF3IUS3"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIF3IUS3_cast(obj)

class itkIntermodesThresholdImageFilterISS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    """Proxy of C++ itkIntermodesThresholdImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterISS2ISS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterISS2ISS2_Pointer":
        """Clone(itkIntermodesThresholdImageFilterISS2ISS2 self) -> itkIntermodesThresholdImageFilterISS2ISS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterISS2ISS2 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterISS2ISS2 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterISS2ISS2 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterISS2ISS2 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterISS2ISS2"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterISS2ISS2

        Create a new object of the class itkIntermodesThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterISS2ISS2.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2_Clone, None, itkIntermodesThresholdImageFilterISS2ISS2)
itkIntermodesThresholdImageFilterISS2ISS2.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterISS2ISS2)
itkIntermodesThresholdImageFilterISS2ISS2.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterISS2ISS2)
itkIntermodesThresholdImageFilterISS2ISS2.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2_SetUseInterMode, None, itkIntermodesThresholdImageFilterISS2ISS2)
itkIntermodesThresholdImageFilterISS2ISS2.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2_GetUseInterMode, None, itkIntermodesThresholdImageFilterISS2ISS2)
itkIntermodesThresholdImageFilterISS2ISS2_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2_swigregister
itkIntermodesThresholdImageFilterISS2ISS2_swigregister(itkIntermodesThresholdImageFilterISS2ISS2)

def itkIntermodesThresholdImageFilterISS2ISS2___New_orig__() -> "itkIntermodesThresholdImageFilterISS2ISS2_Pointer":
    """itkIntermodesThresholdImageFilterISS2ISS2___New_orig__() -> itkIntermodesThresholdImageFilterISS2ISS2_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2___New_orig__()

def itkIntermodesThresholdImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterISS2ISS2 *":
    """itkIntermodesThresholdImageFilterISS2ISS2_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterISS2ISS2"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2ISS2_cast(obj)

class itkIntermodesThresholdImageFilterISS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    """Proxy of C++ itkIntermodesThresholdImageFilterISS2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterISS2IUC2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterISS2IUC2_Pointer":
        """Clone(itkIntermodesThresholdImageFilterISS2IUC2 self) -> itkIntermodesThresholdImageFilterISS2IUC2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterISS2IUC2 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterISS2IUC2 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterISS2IUC2 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterISS2IUC2 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterISS2IUC2"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterISS2IUC2

        Create a new object of the class itkIntermodesThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterISS2IUC2.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2_Clone, None, itkIntermodesThresholdImageFilterISS2IUC2)
itkIntermodesThresholdImageFilterISS2IUC2.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterISS2IUC2)
itkIntermodesThresholdImageFilterISS2IUC2.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterISS2IUC2)
itkIntermodesThresholdImageFilterISS2IUC2.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2_SetUseInterMode, None, itkIntermodesThresholdImageFilterISS2IUC2)
itkIntermodesThresholdImageFilterISS2IUC2.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2_GetUseInterMode, None, itkIntermodesThresholdImageFilterISS2IUC2)
itkIntermodesThresholdImageFilterISS2IUC2_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2_swigregister
itkIntermodesThresholdImageFilterISS2IUC2_swigregister(itkIntermodesThresholdImageFilterISS2IUC2)

def itkIntermodesThresholdImageFilterISS2IUC2___New_orig__() -> "itkIntermodesThresholdImageFilterISS2IUC2_Pointer":
    """itkIntermodesThresholdImageFilterISS2IUC2___New_orig__() -> itkIntermodesThresholdImageFilterISS2IUC2_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2___New_orig__()

def itkIntermodesThresholdImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterISS2IUC2 *":
    """itkIntermodesThresholdImageFilterISS2IUC2_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterISS2IUC2"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUC2_cast(obj)

class itkIntermodesThresholdImageFilterISS2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    """Proxy of C++ itkIntermodesThresholdImageFilterISS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterISS2IUS2_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterISS2IUS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterISS2IUS2_Pointer":
        """Clone(itkIntermodesThresholdImageFilterISS2IUS2 self) -> itkIntermodesThresholdImageFilterISS2IUS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterISS2IUS2 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterISS2IUS2 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterISS2IUS2 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterISS2IUS2 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterISS2IUS2

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterISS2IUS2 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterISS2IUS2"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterISS2IUS2

        Create a new object of the class itkIntermodesThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterISS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterISS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterISS2IUS2.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2_Clone, None, itkIntermodesThresholdImageFilterISS2IUS2)
itkIntermodesThresholdImageFilterISS2IUS2.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterISS2IUS2)
itkIntermodesThresholdImageFilterISS2IUS2.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterISS2IUS2)
itkIntermodesThresholdImageFilterISS2IUS2.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2_SetUseInterMode, None, itkIntermodesThresholdImageFilterISS2IUS2)
itkIntermodesThresholdImageFilterISS2IUS2.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2_GetUseInterMode, None, itkIntermodesThresholdImageFilterISS2IUS2)
itkIntermodesThresholdImageFilterISS2IUS2_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2_swigregister
itkIntermodesThresholdImageFilterISS2IUS2_swigregister(itkIntermodesThresholdImageFilterISS2IUS2)

def itkIntermodesThresholdImageFilterISS2IUS2___New_orig__() -> "itkIntermodesThresholdImageFilterISS2IUS2_Pointer":
    """itkIntermodesThresholdImageFilterISS2IUS2___New_orig__() -> itkIntermodesThresholdImageFilterISS2IUS2_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2___New_orig__()

def itkIntermodesThresholdImageFilterISS2IUS2_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterISS2IUS2 *":
    """itkIntermodesThresholdImageFilterISS2IUS2_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterISS2IUS2"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS2IUS2_cast(obj)

class itkIntermodesThresholdImageFilterISS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    """Proxy of C++ itkIntermodesThresholdImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterISS3ISS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterISS3ISS3_Pointer":
        """Clone(itkIntermodesThresholdImageFilterISS3ISS3 self) -> itkIntermodesThresholdImageFilterISS3ISS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterISS3ISS3 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterISS3ISS3 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterISS3ISS3 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterISS3ISS3 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterISS3ISS3"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterISS3ISS3

        Create a new object of the class itkIntermodesThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterISS3ISS3.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3_Clone, None, itkIntermodesThresholdImageFilterISS3ISS3)
itkIntermodesThresholdImageFilterISS3ISS3.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterISS3ISS3)
itkIntermodesThresholdImageFilterISS3ISS3.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterISS3ISS3)
itkIntermodesThresholdImageFilterISS3ISS3.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3_SetUseInterMode, None, itkIntermodesThresholdImageFilterISS3ISS3)
itkIntermodesThresholdImageFilterISS3ISS3.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3_GetUseInterMode, None, itkIntermodesThresholdImageFilterISS3ISS3)
itkIntermodesThresholdImageFilterISS3ISS3_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3_swigregister
itkIntermodesThresholdImageFilterISS3ISS3_swigregister(itkIntermodesThresholdImageFilterISS3ISS3)

def itkIntermodesThresholdImageFilterISS3ISS3___New_orig__() -> "itkIntermodesThresholdImageFilterISS3ISS3_Pointer":
    """itkIntermodesThresholdImageFilterISS3ISS3___New_orig__() -> itkIntermodesThresholdImageFilterISS3ISS3_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3___New_orig__()

def itkIntermodesThresholdImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterISS3ISS3 *":
    """itkIntermodesThresholdImageFilterISS3ISS3_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterISS3ISS3"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3ISS3_cast(obj)

class itkIntermodesThresholdImageFilterISS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    """Proxy of C++ itkIntermodesThresholdImageFilterISS3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterISS3IUC3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterISS3IUC3_Pointer":
        """Clone(itkIntermodesThresholdImageFilterISS3IUC3 self) -> itkIntermodesThresholdImageFilterISS3IUC3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterISS3IUC3 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterISS3IUC3 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterISS3IUC3 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterISS3IUC3 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterISS3IUC3"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterISS3IUC3

        Create a new object of the class itkIntermodesThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterISS3IUC3.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3_Clone, None, itkIntermodesThresholdImageFilterISS3IUC3)
itkIntermodesThresholdImageFilterISS3IUC3.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterISS3IUC3)
itkIntermodesThresholdImageFilterISS3IUC3.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterISS3IUC3)
itkIntermodesThresholdImageFilterISS3IUC3.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3_SetUseInterMode, None, itkIntermodesThresholdImageFilterISS3IUC3)
itkIntermodesThresholdImageFilterISS3IUC3.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3_GetUseInterMode, None, itkIntermodesThresholdImageFilterISS3IUC3)
itkIntermodesThresholdImageFilterISS3IUC3_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3_swigregister
itkIntermodesThresholdImageFilterISS3IUC3_swigregister(itkIntermodesThresholdImageFilterISS3IUC3)

def itkIntermodesThresholdImageFilterISS3IUC3___New_orig__() -> "itkIntermodesThresholdImageFilterISS3IUC3_Pointer":
    """itkIntermodesThresholdImageFilterISS3IUC3___New_orig__() -> itkIntermodesThresholdImageFilterISS3IUC3_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3___New_orig__()

def itkIntermodesThresholdImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterISS3IUC3 *":
    """itkIntermodesThresholdImageFilterISS3IUC3_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterISS3IUC3"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUC3_cast(obj)

class itkIntermodesThresholdImageFilterISS3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    """Proxy of C++ itkIntermodesThresholdImageFilterISS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterISS3IUS3_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterISS3IUS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterISS3IUS3_Pointer":
        """Clone(itkIntermodesThresholdImageFilterISS3IUS3 self) -> itkIntermodesThresholdImageFilterISS3IUS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterISS3IUS3 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterISS3IUS3 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterISS3IUS3 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterISS3IUS3 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterISS3IUS3

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterISS3IUS3 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterISS3IUS3"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterISS3IUS3

        Create a new object of the class itkIntermodesThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterISS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterISS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterISS3IUS3.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3_Clone, None, itkIntermodesThresholdImageFilterISS3IUS3)
itkIntermodesThresholdImageFilterISS3IUS3.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterISS3IUS3)
itkIntermodesThresholdImageFilterISS3IUS3.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterISS3IUS3)
itkIntermodesThresholdImageFilterISS3IUS3.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3_SetUseInterMode, None, itkIntermodesThresholdImageFilterISS3IUS3)
itkIntermodesThresholdImageFilterISS3IUS3.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3_GetUseInterMode, None, itkIntermodesThresholdImageFilterISS3IUS3)
itkIntermodesThresholdImageFilterISS3IUS3_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3_swigregister
itkIntermodesThresholdImageFilterISS3IUS3_swigregister(itkIntermodesThresholdImageFilterISS3IUS3)

def itkIntermodesThresholdImageFilterISS3IUS3___New_orig__() -> "itkIntermodesThresholdImageFilterISS3IUS3_Pointer":
    """itkIntermodesThresholdImageFilterISS3IUS3___New_orig__() -> itkIntermodesThresholdImageFilterISS3IUS3_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3___New_orig__()

def itkIntermodesThresholdImageFilterISS3IUS3_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterISS3IUS3 *":
    """itkIntermodesThresholdImageFilterISS3IUS3_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterISS3IUS3"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterISS3IUS3_cast(obj)

class itkIntermodesThresholdImageFilterIUC2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    """Proxy of C++ itkIntermodesThresholdImageFilterIUC2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIUC2ISS2_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIUC2ISS2 self) -> itkIntermodesThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUC2ISS2 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUC2ISS2 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIUC2ISS2 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIUC2ISS2 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUC2ISS2"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIUC2ISS2

        Create a new object of the class itkIntermodesThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIUC2ISS2.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2_Clone, None, itkIntermodesThresholdImageFilterIUC2ISS2)
itkIntermodesThresholdImageFilterIUC2ISS2.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUC2ISS2)
itkIntermodesThresholdImageFilterIUC2ISS2.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUC2ISS2)
itkIntermodesThresholdImageFilterIUC2ISS2.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2_SetUseInterMode, None, itkIntermodesThresholdImageFilterIUC2ISS2)
itkIntermodesThresholdImageFilterIUC2ISS2.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2_GetUseInterMode, None, itkIntermodesThresholdImageFilterIUC2ISS2)
itkIntermodesThresholdImageFilterIUC2ISS2_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2_swigregister
itkIntermodesThresholdImageFilterIUC2ISS2_swigregister(itkIntermodesThresholdImageFilterIUC2ISS2)

def itkIntermodesThresholdImageFilterIUC2ISS2___New_orig__() -> "itkIntermodesThresholdImageFilterIUC2ISS2_Pointer":
    """itkIntermodesThresholdImageFilterIUC2ISS2___New_orig__() -> itkIntermodesThresholdImageFilterIUC2ISS2_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2___New_orig__()

def itkIntermodesThresholdImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUC2ISS2 *":
    """itkIntermodesThresholdImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUC2ISS2"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2ISS2_cast(obj)

class itkIntermodesThresholdImageFilterIUC2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    """Proxy of C++ itkIntermodesThresholdImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIUC2IUC2_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIUC2IUC2 self) -> itkIntermodesThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUC2IUC2 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUC2IUC2 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIUC2IUC2 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIUC2IUC2 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUC2IUC2"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIUC2IUC2

        Create a new object of the class itkIntermodesThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIUC2IUC2.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2_Clone, None, itkIntermodesThresholdImageFilterIUC2IUC2)
itkIntermodesThresholdImageFilterIUC2IUC2.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUC2IUC2)
itkIntermodesThresholdImageFilterIUC2IUC2.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUC2IUC2)
itkIntermodesThresholdImageFilterIUC2IUC2.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2_SetUseInterMode, None, itkIntermodesThresholdImageFilterIUC2IUC2)
itkIntermodesThresholdImageFilterIUC2IUC2.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2_GetUseInterMode, None, itkIntermodesThresholdImageFilterIUC2IUC2)
itkIntermodesThresholdImageFilterIUC2IUC2_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2_swigregister
itkIntermodesThresholdImageFilterIUC2IUC2_swigregister(itkIntermodesThresholdImageFilterIUC2IUC2)

def itkIntermodesThresholdImageFilterIUC2IUC2___New_orig__() -> "itkIntermodesThresholdImageFilterIUC2IUC2_Pointer":
    """itkIntermodesThresholdImageFilterIUC2IUC2___New_orig__() -> itkIntermodesThresholdImageFilterIUC2IUC2_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2___New_orig__()

def itkIntermodesThresholdImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUC2IUC2 *":
    """itkIntermodesThresholdImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUC2IUC2"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUC2_cast(obj)

class itkIntermodesThresholdImageFilterIUC2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    """Proxy of C++ itkIntermodesThresholdImageFilterIUC2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIUC2IUS2_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIUC2IUS2_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIUC2IUS2 self) -> itkIntermodesThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUC2IUS2 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUC2IUS2 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIUC2IUS2 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIUC2IUS2 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIUC2IUS2

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUC2IUS2 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUC2IUS2"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIUC2IUS2

        Create a new object of the class itkIntermodesThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIUC2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIUC2IUS2.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2_Clone, None, itkIntermodesThresholdImageFilterIUC2IUS2)
itkIntermodesThresholdImageFilterIUC2IUS2.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUC2IUS2)
itkIntermodesThresholdImageFilterIUC2IUS2.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUC2IUS2)
itkIntermodesThresholdImageFilterIUC2IUS2.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2_SetUseInterMode, None, itkIntermodesThresholdImageFilterIUC2IUS2)
itkIntermodesThresholdImageFilterIUC2IUS2.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2_GetUseInterMode, None, itkIntermodesThresholdImageFilterIUC2IUS2)
itkIntermodesThresholdImageFilterIUC2IUS2_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2_swigregister
itkIntermodesThresholdImageFilterIUC2IUS2_swigregister(itkIntermodesThresholdImageFilterIUC2IUS2)

def itkIntermodesThresholdImageFilterIUC2IUS2___New_orig__() -> "itkIntermodesThresholdImageFilterIUC2IUS2_Pointer":
    """itkIntermodesThresholdImageFilterIUC2IUS2___New_orig__() -> itkIntermodesThresholdImageFilterIUC2IUS2_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2___New_orig__()

def itkIntermodesThresholdImageFilterIUC2IUS2_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUC2IUS2 *":
    """itkIntermodesThresholdImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUC2IUS2"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC2IUS2_cast(obj)

class itkIntermodesThresholdImageFilterIUC3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    """Proxy of C++ itkIntermodesThresholdImageFilterIUC3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIUC3ISS3_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIUC3ISS3 self) -> itkIntermodesThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUC3ISS3 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUC3ISS3 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIUC3ISS3 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIUC3ISS3 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUC3ISS3"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIUC3ISS3

        Create a new object of the class itkIntermodesThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIUC3ISS3.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3_Clone, None, itkIntermodesThresholdImageFilterIUC3ISS3)
itkIntermodesThresholdImageFilterIUC3ISS3.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUC3ISS3)
itkIntermodesThresholdImageFilterIUC3ISS3.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUC3ISS3)
itkIntermodesThresholdImageFilterIUC3ISS3.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3_SetUseInterMode, None, itkIntermodesThresholdImageFilterIUC3ISS3)
itkIntermodesThresholdImageFilterIUC3ISS3.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3_GetUseInterMode, None, itkIntermodesThresholdImageFilterIUC3ISS3)
itkIntermodesThresholdImageFilterIUC3ISS3_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3_swigregister
itkIntermodesThresholdImageFilterIUC3ISS3_swigregister(itkIntermodesThresholdImageFilterIUC3ISS3)

def itkIntermodesThresholdImageFilterIUC3ISS3___New_orig__() -> "itkIntermodesThresholdImageFilterIUC3ISS3_Pointer":
    """itkIntermodesThresholdImageFilterIUC3ISS3___New_orig__() -> itkIntermodesThresholdImageFilterIUC3ISS3_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3___New_orig__()

def itkIntermodesThresholdImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUC3ISS3 *":
    """itkIntermodesThresholdImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUC3ISS3"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3ISS3_cast(obj)

class itkIntermodesThresholdImageFilterIUC3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    """Proxy of C++ itkIntermodesThresholdImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIUC3IUC3_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIUC3IUC3 self) -> itkIntermodesThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUC3IUC3 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUC3IUC3 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIUC3IUC3 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIUC3IUC3 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUC3IUC3"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIUC3IUC3

        Create a new object of the class itkIntermodesThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIUC3IUC3.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3_Clone, None, itkIntermodesThresholdImageFilterIUC3IUC3)
itkIntermodesThresholdImageFilterIUC3IUC3.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUC3IUC3)
itkIntermodesThresholdImageFilterIUC3IUC3.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUC3IUC3)
itkIntermodesThresholdImageFilterIUC3IUC3.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3_SetUseInterMode, None, itkIntermodesThresholdImageFilterIUC3IUC3)
itkIntermodesThresholdImageFilterIUC3IUC3.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3_GetUseInterMode, None, itkIntermodesThresholdImageFilterIUC3IUC3)
itkIntermodesThresholdImageFilterIUC3IUC3_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3_swigregister
itkIntermodesThresholdImageFilterIUC3IUC3_swigregister(itkIntermodesThresholdImageFilterIUC3IUC3)

def itkIntermodesThresholdImageFilterIUC3IUC3___New_orig__() -> "itkIntermodesThresholdImageFilterIUC3IUC3_Pointer":
    """itkIntermodesThresholdImageFilterIUC3IUC3___New_orig__() -> itkIntermodesThresholdImageFilterIUC3IUC3_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3___New_orig__()

def itkIntermodesThresholdImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUC3IUC3 *":
    """itkIntermodesThresholdImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUC3IUC3"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUC3_cast(obj)

class itkIntermodesThresholdImageFilterIUC3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    """Proxy of C++ itkIntermodesThresholdImageFilterIUC3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIUC3IUS3_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIUC3IUS3_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIUC3IUS3 self) -> itkIntermodesThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUC3IUS3 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUC3IUS3 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIUC3IUS3 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIUC3IUS3 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIUC3IUS3

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUC3IUS3 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUC3IUS3"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIUC3IUS3

        Create a new object of the class itkIntermodesThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIUC3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIUC3IUS3.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3_Clone, None, itkIntermodesThresholdImageFilterIUC3IUS3)
itkIntermodesThresholdImageFilterIUC3IUS3.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUC3IUS3)
itkIntermodesThresholdImageFilterIUC3IUS3.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUC3IUS3)
itkIntermodesThresholdImageFilterIUC3IUS3.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3_SetUseInterMode, None, itkIntermodesThresholdImageFilterIUC3IUS3)
itkIntermodesThresholdImageFilterIUC3IUS3.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3_GetUseInterMode, None, itkIntermodesThresholdImageFilterIUC3IUS3)
itkIntermodesThresholdImageFilterIUC3IUS3_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3_swigregister
itkIntermodesThresholdImageFilterIUC3IUS3_swigregister(itkIntermodesThresholdImageFilterIUC3IUS3)

def itkIntermodesThresholdImageFilterIUC3IUS3___New_orig__() -> "itkIntermodesThresholdImageFilterIUC3IUS3_Pointer":
    """itkIntermodesThresholdImageFilterIUC3IUS3___New_orig__() -> itkIntermodesThresholdImageFilterIUC3IUS3_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3___New_orig__()

def itkIntermodesThresholdImageFilterIUC3IUS3_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUC3IUS3 *":
    """itkIntermodesThresholdImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUC3IUS3"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUC3IUS3_cast(obj)

class itkIntermodesThresholdImageFilterIUS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    """Proxy of C++ itkIntermodesThresholdImageFilterIUS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIUS2ISS2_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIUS2ISS2_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIUS2ISS2 self) -> itkIntermodesThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUS2ISS2 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUS2ISS2 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIUS2ISS2 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIUS2ISS2 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIUS2ISS2

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUS2ISS2 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUS2ISS2"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIUS2ISS2

        Create a new object of the class itkIntermodesThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIUS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIUS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIUS2ISS2.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2_Clone, None, itkIntermodesThresholdImageFilterIUS2ISS2)
itkIntermodesThresholdImageFilterIUS2ISS2.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUS2ISS2)
itkIntermodesThresholdImageFilterIUS2ISS2.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUS2ISS2)
itkIntermodesThresholdImageFilterIUS2ISS2.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2_SetUseInterMode, None, itkIntermodesThresholdImageFilterIUS2ISS2)
itkIntermodesThresholdImageFilterIUS2ISS2.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2_GetUseInterMode, None, itkIntermodesThresholdImageFilterIUS2ISS2)
itkIntermodesThresholdImageFilterIUS2ISS2_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2_swigregister
itkIntermodesThresholdImageFilterIUS2ISS2_swigregister(itkIntermodesThresholdImageFilterIUS2ISS2)

def itkIntermodesThresholdImageFilterIUS2ISS2___New_orig__() -> "itkIntermodesThresholdImageFilterIUS2ISS2_Pointer":
    """itkIntermodesThresholdImageFilterIUS2ISS2___New_orig__() -> itkIntermodesThresholdImageFilterIUS2ISS2_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2___New_orig__()

def itkIntermodesThresholdImageFilterIUS2ISS2_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUS2ISS2 *":
    """itkIntermodesThresholdImageFilterIUS2ISS2_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUS2ISS2"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2ISS2_cast(obj)

class itkIntermodesThresholdImageFilterIUS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    """Proxy of C++ itkIntermodesThresholdImageFilterIUS2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIUS2IUC2_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIUS2IUC2_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIUS2IUC2 self) -> itkIntermodesThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUS2IUC2 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUS2IUC2 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIUS2IUC2 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIUS2IUC2 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIUS2IUC2

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUS2IUC2 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUS2IUC2"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIUS2IUC2

        Create a new object of the class itkIntermodesThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIUS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIUS2IUC2.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2_Clone, None, itkIntermodesThresholdImageFilterIUS2IUC2)
itkIntermodesThresholdImageFilterIUS2IUC2.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUS2IUC2)
itkIntermodesThresholdImageFilterIUS2IUC2.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUS2IUC2)
itkIntermodesThresholdImageFilterIUS2IUC2.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2_SetUseInterMode, None, itkIntermodesThresholdImageFilterIUS2IUC2)
itkIntermodesThresholdImageFilterIUS2IUC2.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2_GetUseInterMode, None, itkIntermodesThresholdImageFilterIUS2IUC2)
itkIntermodesThresholdImageFilterIUS2IUC2_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2_swigregister
itkIntermodesThresholdImageFilterIUS2IUC2_swigregister(itkIntermodesThresholdImageFilterIUS2IUC2)

def itkIntermodesThresholdImageFilterIUS2IUC2___New_orig__() -> "itkIntermodesThresholdImageFilterIUS2IUC2_Pointer":
    """itkIntermodesThresholdImageFilterIUS2IUC2___New_orig__() -> itkIntermodesThresholdImageFilterIUS2IUC2_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2___New_orig__()

def itkIntermodesThresholdImageFilterIUS2IUC2_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUS2IUC2 *":
    """itkIntermodesThresholdImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUS2IUC2"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUC2_cast(obj)

class itkIntermodesThresholdImageFilterIUS2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    """Proxy of C++ itkIntermodesThresholdImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIUS2IUS2_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIUS2IUS2 self) -> itkIntermodesThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUS2IUS2 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUS2IUS2 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIUS2IUS2 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIUS2IUS2 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUS2IUS2"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIUS2IUS2

        Create a new object of the class itkIntermodesThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIUS2IUS2.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2_Clone, None, itkIntermodesThresholdImageFilterIUS2IUS2)
itkIntermodesThresholdImageFilterIUS2IUS2.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUS2IUS2)
itkIntermodesThresholdImageFilterIUS2IUS2.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUS2IUS2)
itkIntermodesThresholdImageFilterIUS2IUS2.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2_SetUseInterMode, None, itkIntermodesThresholdImageFilterIUS2IUS2)
itkIntermodesThresholdImageFilterIUS2IUS2.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2_GetUseInterMode, None, itkIntermodesThresholdImageFilterIUS2IUS2)
itkIntermodesThresholdImageFilterIUS2IUS2_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2_swigregister
itkIntermodesThresholdImageFilterIUS2IUS2_swigregister(itkIntermodesThresholdImageFilterIUS2IUS2)

def itkIntermodesThresholdImageFilterIUS2IUS2___New_orig__() -> "itkIntermodesThresholdImageFilterIUS2IUS2_Pointer":
    """itkIntermodesThresholdImageFilterIUS2IUS2___New_orig__() -> itkIntermodesThresholdImageFilterIUS2IUS2_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2___New_orig__()

def itkIntermodesThresholdImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUS2IUS2 *":
    """itkIntermodesThresholdImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUS2IUS2"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS2IUS2_cast(obj)

class itkIntermodesThresholdImageFilterIUS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    """Proxy of C++ itkIntermodesThresholdImageFilterIUS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIUS3ISS3_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIUS3ISS3_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIUS3ISS3 self) -> itkIntermodesThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUS3ISS3 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUS3ISS3 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIUS3ISS3 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIUS3ISS3 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIUS3ISS3

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUS3ISS3 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUS3ISS3"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIUS3ISS3

        Create a new object of the class itkIntermodesThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIUS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIUS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIUS3ISS3.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3_Clone, None, itkIntermodesThresholdImageFilterIUS3ISS3)
itkIntermodesThresholdImageFilterIUS3ISS3.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUS3ISS3)
itkIntermodesThresholdImageFilterIUS3ISS3.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUS3ISS3)
itkIntermodesThresholdImageFilterIUS3ISS3.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3_SetUseInterMode, None, itkIntermodesThresholdImageFilterIUS3ISS3)
itkIntermodesThresholdImageFilterIUS3ISS3.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3_GetUseInterMode, None, itkIntermodesThresholdImageFilterIUS3ISS3)
itkIntermodesThresholdImageFilterIUS3ISS3_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3_swigregister
itkIntermodesThresholdImageFilterIUS3ISS3_swigregister(itkIntermodesThresholdImageFilterIUS3ISS3)

def itkIntermodesThresholdImageFilterIUS3ISS3___New_orig__() -> "itkIntermodesThresholdImageFilterIUS3ISS3_Pointer":
    """itkIntermodesThresholdImageFilterIUS3ISS3___New_orig__() -> itkIntermodesThresholdImageFilterIUS3ISS3_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3___New_orig__()

def itkIntermodesThresholdImageFilterIUS3ISS3_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUS3ISS3 *":
    """itkIntermodesThresholdImageFilterIUS3ISS3_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUS3ISS3"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3ISS3_cast(obj)

class itkIntermodesThresholdImageFilterIUS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    """Proxy of C++ itkIntermodesThresholdImageFilterIUS3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIUS3IUC3_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIUS3IUC3_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIUS3IUC3 self) -> itkIntermodesThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUS3IUC3 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUS3IUC3 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIUS3IUC3 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIUS3IUC3 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIUS3IUC3

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUS3IUC3 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUS3IUC3"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIUS3IUC3

        Create a new object of the class itkIntermodesThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIUS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIUS3IUC3.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3_Clone, None, itkIntermodesThresholdImageFilterIUS3IUC3)
itkIntermodesThresholdImageFilterIUS3IUC3.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUS3IUC3)
itkIntermodesThresholdImageFilterIUS3IUC3.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUS3IUC3)
itkIntermodesThresholdImageFilterIUS3IUC3.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3_SetUseInterMode, None, itkIntermodesThresholdImageFilterIUS3IUC3)
itkIntermodesThresholdImageFilterIUS3IUC3.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3_GetUseInterMode, None, itkIntermodesThresholdImageFilterIUS3IUC3)
itkIntermodesThresholdImageFilterIUS3IUC3_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3_swigregister
itkIntermodesThresholdImageFilterIUS3IUC3_swigregister(itkIntermodesThresholdImageFilterIUS3IUC3)

def itkIntermodesThresholdImageFilterIUS3IUC3___New_orig__() -> "itkIntermodesThresholdImageFilterIUS3IUC3_Pointer":
    """itkIntermodesThresholdImageFilterIUS3IUC3___New_orig__() -> itkIntermodesThresholdImageFilterIUS3IUC3_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3___New_orig__()

def itkIntermodesThresholdImageFilterIUS3IUC3_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUS3IUC3 *":
    """itkIntermodesThresholdImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUS3IUC3"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUC3_cast(obj)

class itkIntermodesThresholdImageFilterIUS3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    """Proxy of C++ itkIntermodesThresholdImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntermodesThresholdImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkIntermodesThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntermodesThresholdImageFilterIUS3IUS3_Pointer":
        """Clone(itkIntermodesThresholdImageFilterIUS3IUS3 self) -> itkIntermodesThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3_Clone(self)


    def SetMaximumSmoothingIterations(self, maxSmoothingIterations: 'unsigned long long') -> "void":
        """SetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUS3IUS3 self, unsigned long long maxSmoothingIterations)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3_SetMaximumSmoothingIterations(self, maxSmoothingIterations)


    def GetMaximumSmoothingIterations(self) -> "unsigned long long":
        """GetMaximumSmoothingIterations(itkIntermodesThresholdImageFilterIUS3IUS3 self) -> unsigned long long"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3_GetMaximumSmoothingIterations(self)


    def SetUseInterMode(self, useIntermode: 'bool') -> "void":
        """SetUseInterMode(itkIntermodesThresholdImageFilterIUS3IUS3 self, bool useIntermode)"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3_SetUseInterMode(self, useIntermode)


    def GetUseInterMode(self) -> "bool":
        """GetUseInterMode(itkIntermodesThresholdImageFilterIUS3IUS3 self) -> bool"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3_GetUseInterMode(self)

    __swig_destroy__ = _itkIntermodesThresholdImageFilterPython.delete_itkIntermodesThresholdImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUS3IUS3"""
        return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntermodesThresholdImageFilterIUS3IUS3

        Create a new object of the class itkIntermodesThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntermodesThresholdImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntermodesThresholdImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntermodesThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntermodesThresholdImageFilterIUS3IUS3.Clone = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3_Clone, None, itkIntermodesThresholdImageFilterIUS3IUS3)
itkIntermodesThresholdImageFilterIUS3IUS3.SetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3_SetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUS3IUS3)
itkIntermodesThresholdImageFilterIUS3IUS3.GetMaximumSmoothingIterations = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3_GetMaximumSmoothingIterations, None, itkIntermodesThresholdImageFilterIUS3IUS3)
itkIntermodesThresholdImageFilterIUS3IUS3.SetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3_SetUseInterMode, None, itkIntermodesThresholdImageFilterIUS3IUS3)
itkIntermodesThresholdImageFilterIUS3IUS3.GetUseInterMode = new_instancemethod(_itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3_GetUseInterMode, None, itkIntermodesThresholdImageFilterIUS3IUS3)
itkIntermodesThresholdImageFilterIUS3IUS3_swigregister = _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3_swigregister
itkIntermodesThresholdImageFilterIUS3IUS3_swigregister(itkIntermodesThresholdImageFilterIUS3IUS3)

def itkIntermodesThresholdImageFilterIUS3IUS3___New_orig__() -> "itkIntermodesThresholdImageFilterIUS3IUS3_Pointer":
    """itkIntermodesThresholdImageFilterIUS3IUS3___New_orig__() -> itkIntermodesThresholdImageFilterIUS3IUS3_Pointer"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3___New_orig__()

def itkIntermodesThresholdImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkIntermodesThresholdImageFilterIUS3IUS3 *":
    """itkIntermodesThresholdImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkIntermodesThresholdImageFilterIUS3IUS3"""
    return _itkIntermodesThresholdImageFilterPython.itkIntermodesThresholdImageFilterIUS3IUS3_cast(obj)


def intermodes_threshold_image_filter(*args, **kwargs):
    """Procedural interface for IntermodesThresholdImageFilter"""
    import itk
    instance = itk.IntermodesThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def intermodes_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.IntermodesThresholdImageFilter, itkTemplate.itkTemplate):
        intermodes_threshold_image_filter.__doc__ = itk.IntermodesThresholdImageFilter.values()[0].__doc__
    else:
        intermodes_threshold_image_filter.__doc__ = itk.IntermodesThresholdImageFilter.__doc__




