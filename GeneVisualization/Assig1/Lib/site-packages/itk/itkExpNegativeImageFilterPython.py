# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkExpNegativeImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkExpNegativeImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkExpNegativeImageFilterPython
            return _itkExpNegativeImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkExpNegativeImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkExpNegativeImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkExpNegativeImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImageRegionPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython

def itkExpNegativeImageFilterIF3IF3_New():
  return itkExpNegativeImageFilterIF3IF3.New()


def itkExpNegativeImageFilterIF3IF3_Superclass_New():
  return itkExpNegativeImageFilterIF3IF3_Superclass.New()


def itkExpNegativeImageFilterIF2IF2_New():
  return itkExpNegativeImageFilterIF2IF2.New()


def itkExpNegativeImageFilterIF2IF2_Superclass_New():
  return itkExpNegativeImageFilterIF2IF2_Superclass.New()


def itkExpNegativeImageFilterIUS3IUS3_New():
  return itkExpNegativeImageFilterIUS3IUS3.New()


def itkExpNegativeImageFilterIUS3IUS3_Superclass_New():
  return itkExpNegativeImageFilterIUS3IUS3_Superclass.New()


def itkExpNegativeImageFilterIUS2IUS2_New():
  return itkExpNegativeImageFilterIUS2IUS2.New()


def itkExpNegativeImageFilterIUS2IUS2_Superclass_New():
  return itkExpNegativeImageFilterIUS2IUS2_Superclass.New()


def itkExpNegativeImageFilterIUC3IUC3_New():
  return itkExpNegativeImageFilterIUC3IUC3.New()


def itkExpNegativeImageFilterIUC3IUC3_Superclass_New():
  return itkExpNegativeImageFilterIUC3IUC3_Superclass.New()


def itkExpNegativeImageFilterIUC2IUC2_New():
  return itkExpNegativeImageFilterIUC2IUC2.New()


def itkExpNegativeImageFilterIUC2IUC2_Superclass_New():
  return itkExpNegativeImageFilterIUC2IUC2_Superclass.New()


def itkExpNegativeImageFilterISS3ISS3_New():
  return itkExpNegativeImageFilterISS3ISS3.New()


def itkExpNegativeImageFilterISS3ISS3_Superclass_New():
  return itkExpNegativeImageFilterISS3ISS3_Superclass.New()


def itkExpNegativeImageFilterISS2ISS2_New():
  return itkExpNegativeImageFilterISS2ISS2.New()


def itkExpNegativeImageFilterISS2ISS2_Superclass_New():
  return itkExpNegativeImageFilterISS2ISS2_Superclass.New()

class itkExpNegativeImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkExpNegativeImageFilterIF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterIF2IF2_Superclass_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterIF2IF2_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterIF2IF2_Superclass_Pointer":
        """Clone(itkExpNegativeImageFilterIF2IF2_Superclass self) -> itkExpNegativeImageFilterIF2IF2_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::ExpNegative< float,float > const &":
        """
        GetFunctor(itkExpNegativeImageFilterIF2IF2_Superclass self) -> itk::Functor::ExpNegative< float,float >
        GetFunctor(itkExpNegativeImageFilterIF2IF2_Superclass self) -> itk::Functor::ExpNegative< float,float > const &
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::ExpNegative< float,float > const &') -> "void":
        """SetFunctor(itkExpNegativeImageFilterIF2IF2_Superclass self, itk::Functor::ExpNegative< float,float > const & functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIF2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIF2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIF2IF2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIF2IF2_Superclass

        Create a new object of the class itkExpNegativeImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterIF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIF2IF2_Superclass.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_Clone, None, itkExpNegativeImageFilterIF2IF2_Superclass)
itkExpNegativeImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_GetFunctor, None, itkExpNegativeImageFilterIF2IF2_Superclass)
itkExpNegativeImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_SetFunctor, None, itkExpNegativeImageFilterIF2IF2_Superclass)
itkExpNegativeImageFilterIF2IF2_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_swigregister
itkExpNegativeImageFilterIF2IF2_Superclass_swigregister(itkExpNegativeImageFilterIF2IF2_Superclass)

def itkExpNegativeImageFilterIF2IF2_Superclass___New_orig__() -> "itkExpNegativeImageFilterIF2IF2_Superclass_Pointer":
    """itkExpNegativeImageFilterIF2IF2_Superclass___New_orig__() -> itkExpNegativeImageFilterIF2IF2_Superclass_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass___New_orig__()

def itkExpNegativeImageFilterIF2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIF2IF2_Superclass *":
    """itkExpNegativeImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIF2IF2_Superclass"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_cast(obj)

class itkExpNegativeImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkExpNegativeImageFilterIF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterIF3IF3_Superclass_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterIF3IF3_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterIF3IF3_Superclass_Pointer":
        """Clone(itkExpNegativeImageFilterIF3IF3_Superclass self) -> itkExpNegativeImageFilterIF3IF3_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::ExpNegative< float,float > const &":
        """
        GetFunctor(itkExpNegativeImageFilterIF3IF3_Superclass self) -> itk::Functor::ExpNegative< float,float >
        GetFunctor(itkExpNegativeImageFilterIF3IF3_Superclass self) -> itk::Functor::ExpNegative< float,float > const &
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::ExpNegative< float,float > const &') -> "void":
        """SetFunctor(itkExpNegativeImageFilterIF3IF3_Superclass self, itk::Functor::ExpNegative< float,float > const & functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIF3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIF3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIF3IF3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIF3IF3_Superclass

        Create a new object of the class itkExpNegativeImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterIF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIF3IF3_Superclass.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_Clone, None, itkExpNegativeImageFilterIF3IF3_Superclass)
itkExpNegativeImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_GetFunctor, None, itkExpNegativeImageFilterIF3IF3_Superclass)
itkExpNegativeImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_SetFunctor, None, itkExpNegativeImageFilterIF3IF3_Superclass)
itkExpNegativeImageFilterIF3IF3_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_swigregister
itkExpNegativeImageFilterIF3IF3_Superclass_swigregister(itkExpNegativeImageFilterIF3IF3_Superclass)

def itkExpNegativeImageFilterIF3IF3_Superclass___New_orig__() -> "itkExpNegativeImageFilterIF3IF3_Superclass_Pointer":
    """itkExpNegativeImageFilterIF3IF3_Superclass___New_orig__() -> itkExpNegativeImageFilterIF3IF3_Superclass_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass___New_orig__()

def itkExpNegativeImageFilterIF3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIF3IF3_Superclass *":
    """itkExpNegativeImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIF3IF3_Superclass"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_cast(obj)

class itkExpNegativeImageFilterISS2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    """Proxy of C++ itkExpNegativeImageFilterISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterISS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterISS2ISS2_Superclass_Pointer":
        """Clone(itkExpNegativeImageFilterISS2ISS2_Superclass self) -> itkExpNegativeImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::ExpNegative< short,short > const &":
        """
        GetFunctor(itkExpNegativeImageFilterISS2ISS2_Superclass self) -> itk::Functor::ExpNegative< short,short >
        GetFunctor(itkExpNegativeImageFilterISS2ISS2_Superclass self) -> itk::Functor::ExpNegative< short,short > const &
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::ExpNegative< short,short > const &') -> "void":
        """SetFunctor(itkExpNegativeImageFilterISS2ISS2_Superclass self, itk::Functor::ExpNegative< short,short > const & functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterISS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterISS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterISS2ISS2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterISS2ISS2_Superclass

        Create a new object of the class itkExpNegativeImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterISS2ISS2_Superclass.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_Superclass_Clone, None, itkExpNegativeImageFilterISS2ISS2_Superclass)
itkExpNegativeImageFilterISS2ISS2_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_Superclass_GetFunctor, None, itkExpNegativeImageFilterISS2ISS2_Superclass)
itkExpNegativeImageFilterISS2ISS2_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_Superclass_SetFunctor, None, itkExpNegativeImageFilterISS2ISS2_Superclass)
itkExpNegativeImageFilterISS2ISS2_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_Superclass_swigregister
itkExpNegativeImageFilterISS2ISS2_Superclass_swigregister(itkExpNegativeImageFilterISS2ISS2_Superclass)

def itkExpNegativeImageFilterISS2ISS2_Superclass___New_orig__() -> "itkExpNegativeImageFilterISS2ISS2_Superclass_Pointer":
    """itkExpNegativeImageFilterISS2ISS2_Superclass___New_orig__() -> itkExpNegativeImageFilterISS2ISS2_Superclass_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_Superclass___New_orig__()

def itkExpNegativeImageFilterISS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterISS2ISS2_Superclass *":
    """itkExpNegativeImageFilterISS2ISS2_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterISS2ISS2_Superclass"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_Superclass_cast(obj)

class itkExpNegativeImageFilterISS3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    """Proxy of C++ itkExpNegativeImageFilterISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterISS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterISS3ISS3_Superclass_Pointer":
        """Clone(itkExpNegativeImageFilterISS3ISS3_Superclass self) -> itkExpNegativeImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::ExpNegative< short,short > const &":
        """
        GetFunctor(itkExpNegativeImageFilterISS3ISS3_Superclass self) -> itk::Functor::ExpNegative< short,short >
        GetFunctor(itkExpNegativeImageFilterISS3ISS3_Superclass self) -> itk::Functor::ExpNegative< short,short > const &
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::ExpNegative< short,short > const &') -> "void":
        """SetFunctor(itkExpNegativeImageFilterISS3ISS3_Superclass self, itk::Functor::ExpNegative< short,short > const & functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterISS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterISS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterISS3ISS3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterISS3ISS3_Superclass

        Create a new object of the class itkExpNegativeImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterISS3ISS3_Superclass.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_Superclass_Clone, None, itkExpNegativeImageFilterISS3ISS3_Superclass)
itkExpNegativeImageFilterISS3ISS3_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_Superclass_GetFunctor, None, itkExpNegativeImageFilterISS3ISS3_Superclass)
itkExpNegativeImageFilterISS3ISS3_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_Superclass_SetFunctor, None, itkExpNegativeImageFilterISS3ISS3_Superclass)
itkExpNegativeImageFilterISS3ISS3_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_Superclass_swigregister
itkExpNegativeImageFilterISS3ISS3_Superclass_swigregister(itkExpNegativeImageFilterISS3ISS3_Superclass)

def itkExpNegativeImageFilterISS3ISS3_Superclass___New_orig__() -> "itkExpNegativeImageFilterISS3ISS3_Superclass_Pointer":
    """itkExpNegativeImageFilterISS3ISS3_Superclass___New_orig__() -> itkExpNegativeImageFilterISS3ISS3_Superclass_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_Superclass___New_orig__()

def itkExpNegativeImageFilterISS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterISS3ISS3_Superclass *":
    """itkExpNegativeImageFilterISS3ISS3_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterISS3ISS3_Superclass"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_Superclass_cast(obj)

class itkExpNegativeImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkExpNegativeImageFilterIUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterIUC2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterIUC2IUC2_Superclass_Pointer":
        """Clone(itkExpNegativeImageFilterIUC2IUC2_Superclass self) -> itkExpNegativeImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::ExpNegative< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkExpNegativeImageFilterIUC2IUC2_Superclass self) -> itk::Functor::ExpNegative< unsigned char,unsigned char >
        GetFunctor(itkExpNegativeImageFilterIUC2IUC2_Superclass self) -> itk::Functor::ExpNegative< unsigned char,unsigned char > const &
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::ExpNegative< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkExpNegativeImageFilterIUC2IUC2_Superclass self, itk::Functor::ExpNegative< unsigned char,unsigned char > const & functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUC2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUC2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC2IUC2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkExpNegativeImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUC2IUC2_Superclass.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_Clone, None, itkExpNegativeImageFilterIUC2IUC2_Superclass)
itkExpNegativeImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_GetFunctor, None, itkExpNegativeImageFilterIUC2IUC2_Superclass)
itkExpNegativeImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_SetFunctor, None, itkExpNegativeImageFilterIUC2IUC2_Superclass)
itkExpNegativeImageFilterIUC2IUC2_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_swigregister
itkExpNegativeImageFilterIUC2IUC2_Superclass_swigregister(itkExpNegativeImageFilterIUC2IUC2_Superclass)

def itkExpNegativeImageFilterIUC2IUC2_Superclass___New_orig__() -> "itkExpNegativeImageFilterIUC2IUC2_Superclass_Pointer":
    """itkExpNegativeImageFilterIUC2IUC2_Superclass___New_orig__() -> itkExpNegativeImageFilterIUC2IUC2_Superclass_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass___New_orig__()

def itkExpNegativeImageFilterIUC2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUC2IUC2_Superclass *":
    """itkExpNegativeImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC2IUC2_Superclass"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_cast(obj)

class itkExpNegativeImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkExpNegativeImageFilterIUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterIUC3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterIUC3IUC3_Superclass_Pointer":
        """Clone(itkExpNegativeImageFilterIUC3IUC3_Superclass self) -> itkExpNegativeImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::ExpNegative< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkExpNegativeImageFilterIUC3IUC3_Superclass self) -> itk::Functor::ExpNegative< unsigned char,unsigned char >
        GetFunctor(itkExpNegativeImageFilterIUC3IUC3_Superclass self) -> itk::Functor::ExpNegative< unsigned char,unsigned char > const &
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::ExpNegative< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkExpNegativeImageFilterIUC3IUC3_Superclass self, itk::Functor::ExpNegative< unsigned char,unsigned char > const & functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUC3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUC3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC3IUC3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkExpNegativeImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUC3IUC3_Superclass.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_Clone, None, itkExpNegativeImageFilterIUC3IUC3_Superclass)
itkExpNegativeImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_GetFunctor, None, itkExpNegativeImageFilterIUC3IUC3_Superclass)
itkExpNegativeImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_SetFunctor, None, itkExpNegativeImageFilterIUC3IUC3_Superclass)
itkExpNegativeImageFilterIUC3IUC3_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_swigregister
itkExpNegativeImageFilterIUC3IUC3_Superclass_swigregister(itkExpNegativeImageFilterIUC3IUC3_Superclass)

def itkExpNegativeImageFilterIUC3IUC3_Superclass___New_orig__() -> "itkExpNegativeImageFilterIUC3IUC3_Superclass_Pointer":
    """itkExpNegativeImageFilterIUC3IUC3_Superclass___New_orig__() -> itkExpNegativeImageFilterIUC3IUC3_Superclass_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass___New_orig__()

def itkExpNegativeImageFilterIUC3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUC3IUC3_Superclass *":
    """itkExpNegativeImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC3IUC3_Superclass"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_cast(obj)

class itkExpNegativeImageFilterIUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkExpNegativeImageFilterIUS2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterIUS2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterIUS2IUS2_Superclass_Pointer":
        """Clone(itkExpNegativeImageFilterIUS2IUS2_Superclass self) -> itkExpNegativeImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::ExpNegative< unsigned short,unsigned short > const &":
        """
        GetFunctor(itkExpNegativeImageFilterIUS2IUS2_Superclass self) -> itk::Functor::ExpNegative< unsigned short,unsigned short >
        GetFunctor(itkExpNegativeImageFilterIUS2IUS2_Superclass self) -> itk::Functor::ExpNegative< unsigned short,unsigned short > const &
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::ExpNegative< unsigned short,unsigned short > const &') -> "void":
        """SetFunctor(itkExpNegativeImageFilterIUS2IUS2_Superclass self, itk::Functor::ExpNegative< unsigned short,unsigned short > const & functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUS2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUS2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS2IUS2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkExpNegativeImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUS2IUS2_Superclass.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_Clone, None, itkExpNegativeImageFilterIUS2IUS2_Superclass)
itkExpNegativeImageFilterIUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_GetFunctor, None, itkExpNegativeImageFilterIUS2IUS2_Superclass)
itkExpNegativeImageFilterIUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_SetFunctor, None, itkExpNegativeImageFilterIUS2IUS2_Superclass)
itkExpNegativeImageFilterIUS2IUS2_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_swigregister
itkExpNegativeImageFilterIUS2IUS2_Superclass_swigregister(itkExpNegativeImageFilterIUS2IUS2_Superclass)

def itkExpNegativeImageFilterIUS2IUS2_Superclass___New_orig__() -> "itkExpNegativeImageFilterIUS2IUS2_Superclass_Pointer":
    """itkExpNegativeImageFilterIUS2IUS2_Superclass___New_orig__() -> itkExpNegativeImageFilterIUS2IUS2_Superclass_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass___New_orig__()

def itkExpNegativeImageFilterIUS2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUS2IUS2_Superclass *":
    """itkExpNegativeImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS2IUS2_Superclass"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_cast(obj)

class itkExpNegativeImageFilterIUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkExpNegativeImageFilterIUS3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterIUS3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterIUS3IUS3_Superclass_Pointer":
        """Clone(itkExpNegativeImageFilterIUS3IUS3_Superclass self) -> itkExpNegativeImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::ExpNegative< unsigned short,unsigned short > const &":
        """
        GetFunctor(itkExpNegativeImageFilterIUS3IUS3_Superclass self) -> itk::Functor::ExpNegative< unsigned short,unsigned short >
        GetFunctor(itkExpNegativeImageFilterIUS3IUS3_Superclass self) -> itk::Functor::ExpNegative< unsigned short,unsigned short > const &
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::ExpNegative< unsigned short,unsigned short > const &') -> "void":
        """SetFunctor(itkExpNegativeImageFilterIUS3IUS3_Superclass self, itk::Functor::ExpNegative< unsigned short,unsigned short > const & functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUS3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUS3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS3IUS3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkExpNegativeImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUS3IUS3_Superclass.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_Clone, None, itkExpNegativeImageFilterIUS3IUS3_Superclass)
itkExpNegativeImageFilterIUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_GetFunctor, None, itkExpNegativeImageFilterIUS3IUS3_Superclass)
itkExpNegativeImageFilterIUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_SetFunctor, None, itkExpNegativeImageFilterIUS3IUS3_Superclass)
itkExpNegativeImageFilterIUS3IUS3_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_swigregister
itkExpNegativeImageFilterIUS3IUS3_Superclass_swigregister(itkExpNegativeImageFilterIUS3IUS3_Superclass)

def itkExpNegativeImageFilterIUS3IUS3_Superclass___New_orig__() -> "itkExpNegativeImageFilterIUS3IUS3_Superclass_Pointer":
    """itkExpNegativeImageFilterIUS3IUS3_Superclass___New_orig__() -> itkExpNegativeImageFilterIUS3IUS3_Superclass_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass___New_orig__()

def itkExpNegativeImageFilterIUS3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUS3IUS3_Superclass *":
    """itkExpNegativeImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS3IUS3_Superclass"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_cast(obj)

class itkExpNegativeImageFilterIF2IF2(itkExpNegativeImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterIF2IF2_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterIF2IF2_Pointer":
        """Clone(itkExpNegativeImageFilterIF2IF2 self) -> itkExpNegativeImageFilterIF2IF2_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Clone(self)


    def SetFactor(self, factor: 'double') -> "void":
        """SetFactor(itkExpNegativeImageFilterIF2IF2 self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_SetFactor(self, factor)


    def GetFactor(self) -> "double":
        """GetFactor(itkExpNegativeImageFilterIF2IF2 self) -> double"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_GetFactor(self)

    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIF2IF2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIF2IF2

        Create a new object of the class itkExpNegativeImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIF2IF2.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Clone, None, itkExpNegativeImageFilterIF2IF2)
itkExpNegativeImageFilterIF2IF2.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_SetFactor, None, itkExpNegativeImageFilterIF2IF2)
itkExpNegativeImageFilterIF2IF2.GetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_GetFactor, None, itkExpNegativeImageFilterIF2IF2)
itkExpNegativeImageFilterIF2IF2_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_swigregister
itkExpNegativeImageFilterIF2IF2_swigregister(itkExpNegativeImageFilterIF2IF2)

def itkExpNegativeImageFilterIF2IF2___New_orig__() -> "itkExpNegativeImageFilterIF2IF2_Pointer":
    """itkExpNegativeImageFilterIF2IF2___New_orig__() -> itkExpNegativeImageFilterIF2IF2_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2___New_orig__()

def itkExpNegativeImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIF2IF2 *":
    """itkExpNegativeImageFilterIF2IF2_cast(itkLightObject obj) -> itkExpNegativeImageFilterIF2IF2"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_cast(obj)

class itkExpNegativeImageFilterIF3IF3(itkExpNegativeImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterIF3IF3_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterIF3IF3_Pointer":
        """Clone(itkExpNegativeImageFilterIF3IF3 self) -> itkExpNegativeImageFilterIF3IF3_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Clone(self)


    def SetFactor(self, factor: 'double') -> "void":
        """SetFactor(itkExpNegativeImageFilterIF3IF3 self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_SetFactor(self, factor)


    def GetFactor(self) -> "double":
        """GetFactor(itkExpNegativeImageFilterIF3IF3 self) -> double"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_GetFactor(self)

    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIF3IF3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIF3IF3

        Create a new object of the class itkExpNegativeImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIF3IF3.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Clone, None, itkExpNegativeImageFilterIF3IF3)
itkExpNegativeImageFilterIF3IF3.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_SetFactor, None, itkExpNegativeImageFilterIF3IF3)
itkExpNegativeImageFilterIF3IF3.GetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_GetFactor, None, itkExpNegativeImageFilterIF3IF3)
itkExpNegativeImageFilterIF3IF3_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_swigregister
itkExpNegativeImageFilterIF3IF3_swigregister(itkExpNegativeImageFilterIF3IF3)

def itkExpNegativeImageFilterIF3IF3___New_orig__() -> "itkExpNegativeImageFilterIF3IF3_Pointer":
    """itkExpNegativeImageFilterIF3IF3___New_orig__() -> itkExpNegativeImageFilterIF3IF3_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3___New_orig__()

def itkExpNegativeImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIF3IF3 *":
    """itkExpNegativeImageFilterIF3IF3_cast(itkLightObject obj) -> itkExpNegativeImageFilterIF3IF3"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_cast(obj)

class itkExpNegativeImageFilterISS2ISS2(itkExpNegativeImageFilterISS2ISS2_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterISS2ISS2_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterISS2ISS2_Pointer":
        """Clone(itkExpNegativeImageFilterISS2ISS2 self) -> itkExpNegativeImageFilterISS2ISS2_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_Clone(self)


    def SetFactor(self, factor: 'double') -> "void":
        """SetFactor(itkExpNegativeImageFilterISS2ISS2 self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_SetFactor(self, factor)


    def GetFactor(self) -> "double":
        """GetFactor(itkExpNegativeImageFilterISS2ISS2 self) -> double"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_GetFactor(self)

    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterISS2ISS2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterISS2ISS2

        Create a new object of the class itkExpNegativeImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterISS2ISS2.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_Clone, None, itkExpNegativeImageFilterISS2ISS2)
itkExpNegativeImageFilterISS2ISS2.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_SetFactor, None, itkExpNegativeImageFilterISS2ISS2)
itkExpNegativeImageFilterISS2ISS2.GetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_GetFactor, None, itkExpNegativeImageFilterISS2ISS2)
itkExpNegativeImageFilterISS2ISS2_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_swigregister
itkExpNegativeImageFilterISS2ISS2_swigregister(itkExpNegativeImageFilterISS2ISS2)

def itkExpNegativeImageFilterISS2ISS2___New_orig__() -> "itkExpNegativeImageFilterISS2ISS2_Pointer":
    """itkExpNegativeImageFilterISS2ISS2___New_orig__() -> itkExpNegativeImageFilterISS2ISS2_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2___New_orig__()

def itkExpNegativeImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterISS2ISS2 *":
    """itkExpNegativeImageFilterISS2ISS2_cast(itkLightObject obj) -> itkExpNegativeImageFilterISS2ISS2"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS2ISS2_cast(obj)

class itkExpNegativeImageFilterISS3ISS3(itkExpNegativeImageFilterISS3ISS3_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterISS3ISS3_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterISS3ISS3_Pointer":
        """Clone(itkExpNegativeImageFilterISS3ISS3 self) -> itkExpNegativeImageFilterISS3ISS3_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_Clone(self)


    def SetFactor(self, factor: 'double') -> "void":
        """SetFactor(itkExpNegativeImageFilterISS3ISS3 self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_SetFactor(self, factor)


    def GetFactor(self) -> "double":
        """GetFactor(itkExpNegativeImageFilterISS3ISS3 self) -> double"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_GetFactor(self)

    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterISS3ISS3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterISS3ISS3

        Create a new object of the class itkExpNegativeImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterISS3ISS3.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_Clone, None, itkExpNegativeImageFilterISS3ISS3)
itkExpNegativeImageFilterISS3ISS3.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_SetFactor, None, itkExpNegativeImageFilterISS3ISS3)
itkExpNegativeImageFilterISS3ISS3.GetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_GetFactor, None, itkExpNegativeImageFilterISS3ISS3)
itkExpNegativeImageFilterISS3ISS3_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_swigregister
itkExpNegativeImageFilterISS3ISS3_swigregister(itkExpNegativeImageFilterISS3ISS3)

def itkExpNegativeImageFilterISS3ISS3___New_orig__() -> "itkExpNegativeImageFilterISS3ISS3_Pointer":
    """itkExpNegativeImageFilterISS3ISS3___New_orig__() -> itkExpNegativeImageFilterISS3ISS3_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3___New_orig__()

def itkExpNegativeImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterISS3ISS3 *":
    """itkExpNegativeImageFilterISS3ISS3_cast(itkLightObject obj) -> itkExpNegativeImageFilterISS3ISS3"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterISS3ISS3_cast(obj)

class itkExpNegativeImageFilterIUC2IUC2(itkExpNegativeImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterIUC2IUC2_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterIUC2IUC2_Pointer":
        """Clone(itkExpNegativeImageFilterIUC2IUC2 self) -> itkExpNegativeImageFilterIUC2IUC2_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Clone(self)


    def SetFactor(self, factor: 'double') -> "void":
        """SetFactor(itkExpNegativeImageFilterIUC2IUC2 self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_SetFactor(self, factor)


    def GetFactor(self) -> "double":
        """GetFactor(itkExpNegativeImageFilterIUC2IUC2 self) -> double"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_GetFactor(self)

    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC2IUC2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUC2IUC2

        Create a new object of the class itkExpNegativeImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUC2IUC2.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Clone, None, itkExpNegativeImageFilterIUC2IUC2)
itkExpNegativeImageFilterIUC2IUC2.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_SetFactor, None, itkExpNegativeImageFilterIUC2IUC2)
itkExpNegativeImageFilterIUC2IUC2.GetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_GetFactor, None, itkExpNegativeImageFilterIUC2IUC2)
itkExpNegativeImageFilterIUC2IUC2_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_swigregister
itkExpNegativeImageFilterIUC2IUC2_swigregister(itkExpNegativeImageFilterIUC2IUC2)

def itkExpNegativeImageFilterIUC2IUC2___New_orig__() -> "itkExpNegativeImageFilterIUC2IUC2_Pointer":
    """itkExpNegativeImageFilterIUC2IUC2___New_orig__() -> itkExpNegativeImageFilterIUC2IUC2_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2___New_orig__()

def itkExpNegativeImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUC2IUC2 *":
    """itkExpNegativeImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC2IUC2"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_cast(obj)

class itkExpNegativeImageFilterIUC3IUC3(itkExpNegativeImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterIUC3IUC3_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterIUC3IUC3_Pointer":
        """Clone(itkExpNegativeImageFilterIUC3IUC3 self) -> itkExpNegativeImageFilterIUC3IUC3_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Clone(self)


    def SetFactor(self, factor: 'double') -> "void":
        """SetFactor(itkExpNegativeImageFilterIUC3IUC3 self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_SetFactor(self, factor)


    def GetFactor(self) -> "double":
        """GetFactor(itkExpNegativeImageFilterIUC3IUC3 self) -> double"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_GetFactor(self)

    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC3IUC3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUC3IUC3

        Create a new object of the class itkExpNegativeImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUC3IUC3.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Clone, None, itkExpNegativeImageFilterIUC3IUC3)
itkExpNegativeImageFilterIUC3IUC3.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_SetFactor, None, itkExpNegativeImageFilterIUC3IUC3)
itkExpNegativeImageFilterIUC3IUC3.GetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_GetFactor, None, itkExpNegativeImageFilterIUC3IUC3)
itkExpNegativeImageFilterIUC3IUC3_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_swigregister
itkExpNegativeImageFilterIUC3IUC3_swigregister(itkExpNegativeImageFilterIUC3IUC3)

def itkExpNegativeImageFilterIUC3IUC3___New_orig__() -> "itkExpNegativeImageFilterIUC3IUC3_Pointer":
    """itkExpNegativeImageFilterIUC3IUC3___New_orig__() -> itkExpNegativeImageFilterIUC3IUC3_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3___New_orig__()

def itkExpNegativeImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUC3IUC3 *":
    """itkExpNegativeImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC3IUC3"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_cast(obj)

class itkExpNegativeImageFilterIUS2IUS2(itkExpNegativeImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterIUS2IUS2_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterIUS2IUS2_Pointer":
        """Clone(itkExpNegativeImageFilterIUS2IUS2 self) -> itkExpNegativeImageFilterIUS2IUS2_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Clone(self)


    def SetFactor(self, factor: 'double') -> "void":
        """SetFactor(itkExpNegativeImageFilterIUS2IUS2 self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_SetFactor(self, factor)


    def GetFactor(self) -> "double":
        """GetFactor(itkExpNegativeImageFilterIUS2IUS2 self) -> double"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_GetFactor(self)

    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS2IUS2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUS2IUS2

        Create a new object of the class itkExpNegativeImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUS2IUS2.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Clone, None, itkExpNegativeImageFilterIUS2IUS2)
itkExpNegativeImageFilterIUS2IUS2.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_SetFactor, None, itkExpNegativeImageFilterIUS2IUS2)
itkExpNegativeImageFilterIUS2IUS2.GetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_GetFactor, None, itkExpNegativeImageFilterIUS2IUS2)
itkExpNegativeImageFilterIUS2IUS2_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_swigregister
itkExpNegativeImageFilterIUS2IUS2_swigregister(itkExpNegativeImageFilterIUS2IUS2)

def itkExpNegativeImageFilterIUS2IUS2___New_orig__() -> "itkExpNegativeImageFilterIUS2IUS2_Pointer":
    """itkExpNegativeImageFilterIUS2IUS2___New_orig__() -> itkExpNegativeImageFilterIUS2IUS2_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2___New_orig__()

def itkExpNegativeImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUS2IUS2 *":
    """itkExpNegativeImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS2IUS2"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_cast(obj)

class itkExpNegativeImageFilterIUS3IUS3(itkExpNegativeImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkExpNegativeImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkExpNegativeImageFilterIUS3IUS3_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkExpNegativeImageFilterIUS3IUS3_Pointer":
        """Clone(itkExpNegativeImageFilterIUS3IUS3 self) -> itkExpNegativeImageFilterIUS3IUS3_Pointer"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Clone(self)


    def SetFactor(self, factor: 'double') -> "void":
        """SetFactor(itkExpNegativeImageFilterIUS3IUS3 self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_SetFactor(self, factor)


    def GetFactor(self) -> "double":
        """GetFactor(itkExpNegativeImageFilterIUS3IUS3 self) -> double"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_GetFactor(self)

    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS3IUS3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUS3IUS3

        Create a new object of the class itkExpNegativeImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpNegativeImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExpNegativeImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUS3IUS3.Clone = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Clone, None, itkExpNegativeImageFilterIUS3IUS3)
itkExpNegativeImageFilterIUS3IUS3.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_SetFactor, None, itkExpNegativeImageFilterIUS3IUS3)
itkExpNegativeImageFilterIUS3IUS3.GetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_GetFactor, None, itkExpNegativeImageFilterIUS3IUS3)
itkExpNegativeImageFilterIUS3IUS3_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_swigregister
itkExpNegativeImageFilterIUS3IUS3_swigregister(itkExpNegativeImageFilterIUS3IUS3)

def itkExpNegativeImageFilterIUS3IUS3___New_orig__() -> "itkExpNegativeImageFilterIUS3IUS3_Pointer":
    """itkExpNegativeImageFilterIUS3IUS3___New_orig__() -> itkExpNegativeImageFilterIUS3IUS3_Pointer"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3___New_orig__()

def itkExpNegativeImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkExpNegativeImageFilterIUS3IUS3 *":
    """itkExpNegativeImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS3IUS3"""
    return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_cast(obj)


def unary_functor_image_filter(*args, **kwargs):
    """Procedural interface for UnaryFunctorImageFilter"""
    import itk
    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.UnaryFunctorImageFilter, itkTemplate.itkTemplate):
        unary_functor_image_filter.__doc__ = itk.UnaryFunctorImageFilter.values()[0].__doc__
    else:
        unary_functor_image_filter.__doc__ = itk.UnaryFunctorImageFilter.__doc__

def exp_negative_image_filter(*args, **kwargs):
    """Procedural interface for ExpNegativeImageFilter"""
    import itk
    instance = itk.ExpNegativeImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def exp_negative_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ExpNegativeImageFilter, itkTemplate.itkTemplate):
        exp_negative_image_filter.__doc__ = itk.ExpNegativeImageFilter.values()[0].__doc__
    else:
        exp_negative_image_filter.__doc__ = itk.ExpNegativeImageFilter.__doc__




