# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkSymmetricEigenAnalysisImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSymmetricEigenAnalysisImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkSymmetricEigenAnalysisImageFilterPython
            return _itkSymmetricEigenAnalysisImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSymmetricEigenAnalysisImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSymmetricEigenAnalysisImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSymmetricEigenAnalysisImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageRegionPython
import itkIndexPython
import itkSizePython
import pyBasePython
import itkOffsetPython
import ITKCommonBasePython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkSymmetricEigenAnalysisImageFilterISSRTD33_New():
  return itkSymmetricEigenAnalysisImageFilterISSRTD33.New()


def itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_New():
  return itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass.New()


def itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_New():
  return itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass.New()


def itkSymmetricEigenAnalysisImageFilterISSRTD22_New():
  return itkSymmetricEigenAnalysisImageFilterISSRTD22.New()


def itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_New():
  return itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass.New()


def itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_New():
  return itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass.New()

class itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ISSRTD22):
    """Proxy of C++ itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInPlace(self, _arg: 'bool const') -> "void":
        """SetInPlace(itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass self, bool const _arg)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_SetInPlace(self, _arg)


    def GetInPlace(self) -> "bool":
        """GetInPlace(itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass self) -> bool"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_GetInPlace(self)


    def InPlaceOn(self) -> "void":
        """InPlaceOn(itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass self)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_InPlaceOn(self)


    def InPlaceOff(self) -> "void":
        """InPlaceOff(itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass self)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_InPlaceOff(self)


    def CanRunInPlace(self) -> "bool":
        """CanRunInPlace(itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass self) -> bool"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_CanRunInPlace(self)

    __swig_destroy__ = _itkSymmetricEigenAnalysisImageFilterPython.delete_itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass

    def cast(obj: 'itkLightObject') -> "itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass *":
        """cast(itkLightObject obj) -> itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass

        Create a new object of the class itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass.SetInPlace = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_SetInPlace, None, itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass.GetInPlace = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_GetInPlace, None, itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass.InPlaceOn = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_InPlaceOn, None, itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass.InPlaceOff = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_InPlaceOff, None, itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass.CanRunInPlace = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_CanRunInPlace, None, itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_swigregister = _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_swigregister
itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_swigregister(itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass)

def itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_cast(obj: 'itkLightObject') -> "itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass *":
    """itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_cast(itkLightObject obj) -> itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass"""
    return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass_cast(obj)

class itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ISSRTD33):
    """Proxy of C++ itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInPlace(self, _arg: 'bool const') -> "void":
        """SetInPlace(itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass self, bool const _arg)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_SetInPlace(self, _arg)


    def GetInPlace(self) -> "bool":
        """GetInPlace(itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass self) -> bool"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_GetInPlace(self)


    def InPlaceOn(self) -> "void":
        """InPlaceOn(itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass self)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_InPlaceOn(self)


    def InPlaceOff(self) -> "void":
        """InPlaceOff(itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass self)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_InPlaceOff(self)


    def CanRunInPlace(self) -> "bool":
        """CanRunInPlace(itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass self) -> bool"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_CanRunInPlace(self)

    __swig_destroy__ = _itkSymmetricEigenAnalysisImageFilterPython.delete_itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass

    def cast(obj: 'itkLightObject') -> "itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass *":
        """cast(itkLightObject obj) -> itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass

        Create a new object of the class itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass.SetInPlace = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_SetInPlace, None, itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass.GetInPlace = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_GetInPlace, None, itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass.InPlaceOn = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_InPlaceOn, None, itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass.InPlaceOff = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_InPlaceOff, None, itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass.CanRunInPlace = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_CanRunInPlace, None, itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_swigregister = _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_swigregister
itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_swigregister(itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass)

def itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_cast(obj: 'itkLightObject') -> "itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass *":
    """itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_cast(itkLightObject obj) -> itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass"""
    return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass_cast(obj)

class itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass(itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Superclass):
    """Proxy of C++ itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Pointer":
        """__New_orig__() -> itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Pointer"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Pointer":
        """Clone(itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass self) -> itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Pointer"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,2 >,itk::SymmetricSecondRankTensor< double,2 > > const &":
        """
        GetFunctor(itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass self) -> itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,2 >,itk::SymmetricSecondRankTensor< double,2 > >
        GetFunctor(itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass self) -> itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,2 >,itk::SymmetricSecondRankTensor< double,2 > > const &
        """
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,2 >,itk::SymmetricSecondRankTensor< double,2 > > const &') -> "void":
        """SetFunctor(itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass self, itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,2 >,itk::SymmetricSecondRankTensor< double,2 > > const & functor)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkSymmetricEigenAnalysisImageFilterPython.delete_itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass

    def cast(obj: 'itkLightObject') -> "itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass *":
        """cast(itkLightObject obj) -> itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass

        Create a new object of the class itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass.Clone = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Clone, None, itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass.GetFunctor = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_GetFunctor, None, itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass.SetFunctor = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_SetFunctor, None, itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_swigregister = _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_swigregister
itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_swigregister(itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass)

def itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass___New_orig__() -> "itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Pointer":
    """itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass___New_orig__() -> itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_Pointer"""
    return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass___New_orig__()

def itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_cast(obj: 'itkLightObject') -> "itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass *":
    """itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_cast(itkLightObject obj) -> itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass"""
    return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass_cast(obj)

class itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass(itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Superclass):
    """Proxy of C++ itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Pointer":
        """__New_orig__() -> itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Pointer"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Pointer":
        """Clone(itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass self) -> itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Pointer"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,3 >,itk::SymmetricSecondRankTensor< double,3 > > const &":
        """
        GetFunctor(itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass self) -> itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,3 >,itk::SymmetricSecondRankTensor< double,3 > >
        GetFunctor(itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass self) -> itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,3 >,itk::SymmetricSecondRankTensor< double,3 > > const &
        """
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,3 >,itk::SymmetricSecondRankTensor< double,3 > > const &') -> "void":
        """SetFunctor(itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass self, itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,3 >,itk::SymmetricSecondRankTensor< double,3 > > const & functor)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkSymmetricEigenAnalysisImageFilterPython.delete_itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass

    def cast(obj: 'itkLightObject') -> "itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass *":
        """cast(itkLightObject obj) -> itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass

        Create a new object of the class itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass.Clone = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Clone, None, itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass.GetFunctor = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_GetFunctor, None, itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass.SetFunctor = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_SetFunctor, None, itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass)
itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_swigregister = _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_swigregister
itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_swigregister(itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass)

def itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass___New_orig__() -> "itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Pointer":
    """itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass___New_orig__() -> itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_Pointer"""
    return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass___New_orig__()

def itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_cast(obj: 'itkLightObject') -> "itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass *":
    """itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_cast(itkLightObject obj) -> itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass"""
    return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass_cast(obj)

class itkSymmetricEigenAnalysisImageFilterISSRTD22(itkSymmetricEigenAnalysisImageFilterISSRTD22_Superclass):
    """Proxy of C++ itkSymmetricEigenAnalysisImageFilterISSRTD22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def OrderEigenValuesBy(self, order: 'itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,2 >,itk::SymmetricSecondRankTensor< double,2 > >::EigenValueOrderType') -> "void":
        """OrderEigenValuesBy(itkSymmetricEigenAnalysisImageFilterISSRTD22 self, itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,2 >,itk::SymmetricSecondRankTensor< double,2 > >::EigenValueOrderType order)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_OrderEigenValuesBy(self, order)


    def __New_orig__() -> "itkSymmetricEigenAnalysisImageFilterISSRTD22_Pointer":
        """__New_orig__() -> itkSymmetricEigenAnalysisImageFilterISSRTD22_Pointer"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSymmetricEigenAnalysisImageFilterISSRTD22_Pointer":
        """Clone(itkSymmetricEigenAnalysisImageFilterISSRTD22 self) -> itkSymmetricEigenAnalysisImageFilterISSRTD22_Pointer"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Clone(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkSymmetricEigenAnalysisImageFilterISSRTD22 self, ostream os, itkIndent indent)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_PrintSelf(self, os, indent)


    def SetDimension(self, p: 'unsigned int') -> "void":
        """SetDimension(itkSymmetricEigenAnalysisImageFilterISSRTD22 self, unsigned int p)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_SetDimension(self, p)


    def GetDimension(self) -> "unsigned int":
        """GetDimension(itkSymmetricEigenAnalysisImageFilterISSRTD22 self) -> unsigned int"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_GetDimension(self)

    InputHasNumericTraitsCheck = _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSymmetricEigenAnalysisImageFilterPython.delete_itkSymmetricEigenAnalysisImageFilterISSRTD22

    def cast(obj: 'itkLightObject') -> "itkSymmetricEigenAnalysisImageFilterISSRTD22 *":
        """cast(itkLightObject obj) -> itkSymmetricEigenAnalysisImageFilterISSRTD22"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSymmetricEigenAnalysisImageFilterISSRTD22

        Create a new object of the class itkSymmetricEigenAnalysisImageFilterISSRTD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricEigenAnalysisImageFilterISSRTD22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSymmetricEigenAnalysisImageFilterISSRTD22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSymmetricEigenAnalysisImageFilterISSRTD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSymmetricEigenAnalysisImageFilterISSRTD22.OrderEigenValuesBy = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_OrderEigenValuesBy, None, itkSymmetricEigenAnalysisImageFilterISSRTD22)
itkSymmetricEigenAnalysisImageFilterISSRTD22.Clone = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_Clone, None, itkSymmetricEigenAnalysisImageFilterISSRTD22)
itkSymmetricEigenAnalysisImageFilterISSRTD22.PrintSelf = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_PrintSelf, None, itkSymmetricEigenAnalysisImageFilterISSRTD22)
itkSymmetricEigenAnalysisImageFilterISSRTD22.SetDimension = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_SetDimension, None, itkSymmetricEigenAnalysisImageFilterISSRTD22)
itkSymmetricEigenAnalysisImageFilterISSRTD22.GetDimension = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_GetDimension, None, itkSymmetricEigenAnalysisImageFilterISSRTD22)
itkSymmetricEigenAnalysisImageFilterISSRTD22_swigregister = _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_swigregister
itkSymmetricEigenAnalysisImageFilterISSRTD22_swigregister(itkSymmetricEigenAnalysisImageFilterISSRTD22)

def itkSymmetricEigenAnalysisImageFilterISSRTD22___New_orig__() -> "itkSymmetricEigenAnalysisImageFilterISSRTD22_Pointer":
    """itkSymmetricEigenAnalysisImageFilterISSRTD22___New_orig__() -> itkSymmetricEigenAnalysisImageFilterISSRTD22_Pointer"""
    return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22___New_orig__()

def itkSymmetricEigenAnalysisImageFilterISSRTD22_cast(obj: 'itkLightObject') -> "itkSymmetricEigenAnalysisImageFilterISSRTD22 *":
    """itkSymmetricEigenAnalysisImageFilterISSRTD22_cast(itkLightObject obj) -> itkSymmetricEigenAnalysisImageFilterISSRTD22"""
    return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD22_cast(obj)

class itkSymmetricEigenAnalysisImageFilterISSRTD33(itkSymmetricEigenAnalysisImageFilterISSRTD33_Superclass):
    """Proxy of C++ itkSymmetricEigenAnalysisImageFilterISSRTD33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def OrderEigenValuesBy(self, order: 'itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,3 >,itk::SymmetricSecondRankTensor< double,3 > >::EigenValueOrderType') -> "void":
        """OrderEigenValuesBy(itkSymmetricEigenAnalysisImageFilterISSRTD33 self, itk::Functor::SymmetricEigenAnalysisFunction< itk::SymmetricSecondRankTensor< double,3 >,itk::SymmetricSecondRankTensor< double,3 > >::EigenValueOrderType order)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_OrderEigenValuesBy(self, order)


    def __New_orig__() -> "itkSymmetricEigenAnalysisImageFilterISSRTD33_Pointer":
        """__New_orig__() -> itkSymmetricEigenAnalysisImageFilterISSRTD33_Pointer"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSymmetricEigenAnalysisImageFilterISSRTD33_Pointer":
        """Clone(itkSymmetricEigenAnalysisImageFilterISSRTD33 self) -> itkSymmetricEigenAnalysisImageFilterISSRTD33_Pointer"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Clone(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkSymmetricEigenAnalysisImageFilterISSRTD33 self, ostream os, itkIndent indent)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_PrintSelf(self, os, indent)


    def SetDimension(self, p: 'unsigned int') -> "void":
        """SetDimension(itkSymmetricEigenAnalysisImageFilterISSRTD33 self, unsigned int p)"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_SetDimension(self, p)


    def GetDimension(self) -> "unsigned int":
        """GetDimension(itkSymmetricEigenAnalysisImageFilterISSRTD33 self) -> unsigned int"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_GetDimension(self)

    InputHasNumericTraitsCheck = _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkSymmetricEigenAnalysisImageFilterPython.delete_itkSymmetricEigenAnalysisImageFilterISSRTD33

    def cast(obj: 'itkLightObject') -> "itkSymmetricEigenAnalysisImageFilterISSRTD33 *":
        """cast(itkLightObject obj) -> itkSymmetricEigenAnalysisImageFilterISSRTD33"""
        return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSymmetricEigenAnalysisImageFilterISSRTD33

        Create a new object of the class itkSymmetricEigenAnalysisImageFilterISSRTD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricEigenAnalysisImageFilterISSRTD33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSymmetricEigenAnalysisImageFilterISSRTD33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSymmetricEigenAnalysisImageFilterISSRTD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSymmetricEigenAnalysisImageFilterISSRTD33.OrderEigenValuesBy = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_OrderEigenValuesBy, None, itkSymmetricEigenAnalysisImageFilterISSRTD33)
itkSymmetricEigenAnalysisImageFilterISSRTD33.Clone = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_Clone, None, itkSymmetricEigenAnalysisImageFilterISSRTD33)
itkSymmetricEigenAnalysisImageFilterISSRTD33.PrintSelf = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_PrintSelf, None, itkSymmetricEigenAnalysisImageFilterISSRTD33)
itkSymmetricEigenAnalysisImageFilterISSRTD33.SetDimension = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_SetDimension, None, itkSymmetricEigenAnalysisImageFilterISSRTD33)
itkSymmetricEigenAnalysisImageFilterISSRTD33.GetDimension = new_instancemethod(_itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_GetDimension, None, itkSymmetricEigenAnalysisImageFilterISSRTD33)
itkSymmetricEigenAnalysisImageFilterISSRTD33_swigregister = _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_swigregister
itkSymmetricEigenAnalysisImageFilterISSRTD33_swigregister(itkSymmetricEigenAnalysisImageFilterISSRTD33)

def itkSymmetricEigenAnalysisImageFilterISSRTD33___New_orig__() -> "itkSymmetricEigenAnalysisImageFilterISSRTD33_Pointer":
    """itkSymmetricEigenAnalysisImageFilterISSRTD33___New_orig__() -> itkSymmetricEigenAnalysisImageFilterISSRTD33_Pointer"""
    return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33___New_orig__()

def itkSymmetricEigenAnalysisImageFilterISSRTD33_cast(obj: 'itkLightObject') -> "itkSymmetricEigenAnalysisImageFilterISSRTD33 *":
    """itkSymmetricEigenAnalysisImageFilterISSRTD33_cast(itkLightObject obj) -> itkSymmetricEigenAnalysisImageFilterISSRTD33"""
    return _itkSymmetricEigenAnalysisImageFilterPython.itkSymmetricEigenAnalysisImageFilterISSRTD33_cast(obj)


def unary_functor_image_filter(*args, **kwargs):
    """Procedural interface for UnaryFunctorImageFilter"""
    import itk
    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.UnaryFunctorImageFilter, itkTemplate.itkTemplate):
        unary_functor_image_filter.__doc__ = itk.UnaryFunctorImageFilter.values()[0].__doc__
    else:
        unary_functor_image_filter.__doc__ = itk.UnaryFunctorImageFilter.__doc__

def in_place_image_filter(*args, **kwargs):
    """Procedural interface for InPlaceImageFilter"""
    import itk
    instance = itk.InPlaceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def in_place_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.InPlaceImageFilter, itkTemplate.itkTemplate):
        in_place_image_filter.__doc__ = itk.InPlaceImageFilter.values()[0].__doc__
    else:
        in_place_image_filter.__doc__ = itk.InPlaceImageFilter.__doc__

def symmetric_eigen_analysis_image_filter(*args, **kwargs):
    """Procedural interface for SymmetricEigenAnalysisImageFilter"""
    import itk
    instance = itk.SymmetricEigenAnalysisImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def symmetric_eigen_analysis_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.SymmetricEigenAnalysisImageFilter, itkTemplate.itkTemplate):
        symmetric_eigen_analysis_image_filter.__doc__ = itk.SymmetricEigenAnalysisImageFilter.values()[0].__doc__
    else:
        symmetric_eigen_analysis_image_filter.__doc__ = itk.SymmetricEigenAnalysisImageFilter.__doc__




