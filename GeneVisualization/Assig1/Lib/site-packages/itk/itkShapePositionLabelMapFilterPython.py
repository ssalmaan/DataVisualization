# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkShapePositionLabelMapFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkShapePositionLabelMapFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkShapePositionLabelMapFilterPython
            return _itkShapePositionLabelMapFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkShapePositionLabelMapFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkShapePositionLabelMapFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkShapePositionLabelMapFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkInPlaceLabelMapFilterPython
import ITKCommonBasePython
import pyBasePython
import ITKLabelMapBasePython
import itkImageSourceCommonPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImagePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkStatisticsLabelObjectPython
import itkShapeLabelObjectPython
import itkLabelObjectPython
import itkLabelObjectLinePython
import itkAffineTransformPython
import itkTransformBasePython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkDiffusionTensor3DPython
import itkMatrixOffsetTransformBasePython
import itkHistogramPython
import itkSamplePython
import itkImageSourcePython
import itkVectorImagePython
import itkImageToImageFilterCommonPython
import itkLabelMapFilterPython

def itkShapePositionLabelMapFilterLM3_New():
  return itkShapePositionLabelMapFilterLM3.New()


def itkShapePositionLabelMapFilterLM2_New():
  return itkShapePositionLabelMapFilterLM2.New()

class itkShapePositionLabelMapFilterLM2(itkInPlaceLabelMapFilterPython.itkInPlaceLabelMapFilterLM2):
    """Proxy of C++ itkShapePositionLabelMapFilterLM2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShapePositionLabelMapFilterLM2_Pointer":
        """__New_orig__() -> itkShapePositionLabelMapFilterLM2_Pointer"""
        return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShapePositionLabelMapFilterLM2_Pointer":
        """Clone(itkShapePositionLabelMapFilterLM2 self) -> itkShapePositionLabelMapFilterLM2_Pointer"""
        return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM2_Clone(self)


    def GetAttribute(self) -> "unsigned int":
        """GetAttribute(itkShapePositionLabelMapFilterLM2 self) -> unsigned int"""
        return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM2_GetAttribute(self)


    def SetAttribute(self, *args) -> "void":
        """
        SetAttribute(itkShapePositionLabelMapFilterLM2 self, unsigned int const _arg)
        SetAttribute(itkShapePositionLabelMapFilterLM2 self, std::string const & s)
        """
        return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM2_SetAttribute(self, *args)

    __swig_destroy__ = _itkShapePositionLabelMapFilterPython.delete_itkShapePositionLabelMapFilterLM2

    def cast(obj: 'itkLightObject') -> "itkShapePositionLabelMapFilterLM2 *":
        """cast(itkLightObject obj) -> itkShapePositionLabelMapFilterLM2"""
        return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShapePositionLabelMapFilterLM2

        Create a new object of the class itkShapePositionLabelMapFilterLM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShapePositionLabelMapFilterLM2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShapePositionLabelMapFilterLM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShapePositionLabelMapFilterLM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShapePositionLabelMapFilterLM2.Clone = new_instancemethod(_itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM2_Clone, None, itkShapePositionLabelMapFilterLM2)
itkShapePositionLabelMapFilterLM2.GetAttribute = new_instancemethod(_itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM2_GetAttribute, None, itkShapePositionLabelMapFilterLM2)
itkShapePositionLabelMapFilterLM2.SetAttribute = new_instancemethod(_itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM2_SetAttribute, None, itkShapePositionLabelMapFilterLM2)
itkShapePositionLabelMapFilterLM2_swigregister = _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM2_swigregister
itkShapePositionLabelMapFilterLM2_swigregister(itkShapePositionLabelMapFilterLM2)

def itkShapePositionLabelMapFilterLM2___New_orig__() -> "itkShapePositionLabelMapFilterLM2_Pointer":
    """itkShapePositionLabelMapFilterLM2___New_orig__() -> itkShapePositionLabelMapFilterLM2_Pointer"""
    return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM2___New_orig__()

def itkShapePositionLabelMapFilterLM2_cast(obj: 'itkLightObject') -> "itkShapePositionLabelMapFilterLM2 *":
    """itkShapePositionLabelMapFilterLM2_cast(itkLightObject obj) -> itkShapePositionLabelMapFilterLM2"""
    return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM2_cast(obj)

class itkShapePositionLabelMapFilterLM3(itkInPlaceLabelMapFilterPython.itkInPlaceLabelMapFilterLM3):
    """Proxy of C++ itkShapePositionLabelMapFilterLM3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShapePositionLabelMapFilterLM3_Pointer":
        """__New_orig__() -> itkShapePositionLabelMapFilterLM3_Pointer"""
        return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShapePositionLabelMapFilterLM3_Pointer":
        """Clone(itkShapePositionLabelMapFilterLM3 self) -> itkShapePositionLabelMapFilterLM3_Pointer"""
        return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM3_Clone(self)


    def GetAttribute(self) -> "unsigned int":
        """GetAttribute(itkShapePositionLabelMapFilterLM3 self) -> unsigned int"""
        return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM3_GetAttribute(self)


    def SetAttribute(self, *args) -> "void":
        """
        SetAttribute(itkShapePositionLabelMapFilterLM3 self, unsigned int const _arg)
        SetAttribute(itkShapePositionLabelMapFilterLM3 self, std::string const & s)
        """
        return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM3_SetAttribute(self, *args)

    __swig_destroy__ = _itkShapePositionLabelMapFilterPython.delete_itkShapePositionLabelMapFilterLM3

    def cast(obj: 'itkLightObject') -> "itkShapePositionLabelMapFilterLM3 *":
        """cast(itkLightObject obj) -> itkShapePositionLabelMapFilterLM3"""
        return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShapePositionLabelMapFilterLM3

        Create a new object of the class itkShapePositionLabelMapFilterLM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShapePositionLabelMapFilterLM3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShapePositionLabelMapFilterLM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShapePositionLabelMapFilterLM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShapePositionLabelMapFilterLM3.Clone = new_instancemethod(_itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM3_Clone, None, itkShapePositionLabelMapFilterLM3)
itkShapePositionLabelMapFilterLM3.GetAttribute = new_instancemethod(_itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM3_GetAttribute, None, itkShapePositionLabelMapFilterLM3)
itkShapePositionLabelMapFilterLM3.SetAttribute = new_instancemethod(_itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM3_SetAttribute, None, itkShapePositionLabelMapFilterLM3)
itkShapePositionLabelMapFilterLM3_swigregister = _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM3_swigregister
itkShapePositionLabelMapFilterLM3_swigregister(itkShapePositionLabelMapFilterLM3)

def itkShapePositionLabelMapFilterLM3___New_orig__() -> "itkShapePositionLabelMapFilterLM3_Pointer":
    """itkShapePositionLabelMapFilterLM3___New_orig__() -> itkShapePositionLabelMapFilterLM3_Pointer"""
    return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM3___New_orig__()

def itkShapePositionLabelMapFilterLM3_cast(obj: 'itkLightObject') -> "itkShapePositionLabelMapFilterLM3 *":
    """itkShapePositionLabelMapFilterLM3_cast(itkLightObject obj) -> itkShapePositionLabelMapFilterLM3"""
    return _itkShapePositionLabelMapFilterPython.itkShapePositionLabelMapFilterLM3_cast(obj)


def shape_position_label_map_filter(*args, **kwargs):
    """Procedural interface for ShapePositionLabelMapFilter"""
    import itk
    instance = itk.ShapePositionLabelMapFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def shape_position_label_map_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ShapePositionLabelMapFilter, itkTemplate.itkTemplate):
        shape_position_label_map_filter.__doc__ = itk.ShapePositionLabelMapFilter.values()[0].__doc__
    else:
        shape_position_label_map_filter.__doc__ = itk.ShapePositionLabelMapFilter.__doc__




