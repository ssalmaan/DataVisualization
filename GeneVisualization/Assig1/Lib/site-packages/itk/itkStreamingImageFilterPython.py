# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkStreamingImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkStreamingImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkStreamingImageFilterPython
            return _itkStreamingImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkStreamingImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkStreamingImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkStreamingImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkStreamingImageFilterIF3IF3_New():
  return itkStreamingImageFilterIF3IF3.New()


def itkStreamingImageFilterIF2IF2_New():
  return itkStreamingImageFilterIF2IF2.New()


def itkStreamingImageFilterIUS3IUS3_New():
  return itkStreamingImageFilterIUS3IUS3.New()


def itkStreamingImageFilterIUS2IUS2_New():
  return itkStreamingImageFilterIUS2IUS2.New()


def itkStreamingImageFilterIUC3IUC3_New():
  return itkStreamingImageFilterIUC3IUC3.New()


def itkStreamingImageFilterIUC2IUC2_New():
  return itkStreamingImageFilterIUC2IUC2.New()


def itkStreamingImageFilterISS3ISS3_New():
  return itkStreamingImageFilterISS3ISS3.New()


def itkStreamingImageFilterISS2ISS2_New():
  return itkStreamingImageFilterISS2ISS2.New()

class itkStreamingImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkStreamingImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkStreamingImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkStreamingImageFilterIF2IF2_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkStreamingImageFilterIF2IF2_Pointer":
        """Clone(itkStreamingImageFilterIF2IF2 self) -> itkStreamingImageFilterIF2IF2_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_Clone(self)


    def SetNumberOfStreamDivisions(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfStreamDivisions(itkStreamingImageFilterIF2IF2 self, unsigned int const _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_SetNumberOfStreamDivisions(self, _arg)


    def GetNumberOfStreamDivisions(self) -> "unsigned int const &":
        """GetNumberOfStreamDivisions(itkStreamingImageFilterIF2IF2 self) -> unsigned int const &"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_GetNumberOfStreamDivisions(self)


    def SetRegionSplitter(self, _arg: 'itkImageRegionSplitterBase') -> "void":
        """SetRegionSplitter(itkStreamingImageFilterIF2IF2 self, itkImageRegionSplitterBase _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_SetRegionSplitter(self, _arg)


    def GetModifiableRegionSplitter(self) -> "itkImageRegionSplitterBase *":
        """GetModifiableRegionSplitter(itkStreamingImageFilterIF2IF2 self) -> itkImageRegionSplitterBase"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_GetModifiableRegionSplitter(self)


    def GetRegionSplitter(self, *args) -> "itkImageRegionSplitterBase *":
        """
        GetRegionSplitter(itkStreamingImageFilterIF2IF2 self) -> itkImageRegionSplitterBase
        GetRegionSplitter(itkStreamingImageFilterIF2IF2 self) -> itkImageRegionSplitterBase
        """
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_GetRegionSplitter(self, *args)

    SameDimensionCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkStreamingImageFilterPython.delete_itkStreamingImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkStreamingImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkStreamingImageFilterIF2IF2"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStreamingImageFilterIF2IF2

        Create a new object of the class itkStreamingImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStreamingImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStreamingImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStreamingImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStreamingImageFilterIF2IF2.Clone = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_Clone, None, itkStreamingImageFilterIF2IF2)
itkStreamingImageFilterIF2IF2.SetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_SetNumberOfStreamDivisions, None, itkStreamingImageFilterIF2IF2)
itkStreamingImageFilterIF2IF2.GetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_GetNumberOfStreamDivisions, None, itkStreamingImageFilterIF2IF2)
itkStreamingImageFilterIF2IF2.SetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_SetRegionSplitter, None, itkStreamingImageFilterIF2IF2)
itkStreamingImageFilterIF2IF2.GetModifiableRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_GetModifiableRegionSplitter, None, itkStreamingImageFilterIF2IF2)
itkStreamingImageFilterIF2IF2.GetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_GetRegionSplitter, None, itkStreamingImageFilterIF2IF2)
itkStreamingImageFilterIF2IF2_swigregister = _itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_swigregister
itkStreamingImageFilterIF2IF2_swigregister(itkStreamingImageFilterIF2IF2)

def itkStreamingImageFilterIF2IF2___New_orig__() -> "itkStreamingImageFilterIF2IF2_Pointer":
    """itkStreamingImageFilterIF2IF2___New_orig__() -> itkStreamingImageFilterIF2IF2_Pointer"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2___New_orig__()

def itkStreamingImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkStreamingImageFilterIF2IF2 *":
    """itkStreamingImageFilterIF2IF2_cast(itkLightObject obj) -> itkStreamingImageFilterIF2IF2"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterIF2IF2_cast(obj)

class itkStreamingImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkStreamingImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkStreamingImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkStreamingImageFilterIF3IF3_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkStreamingImageFilterIF3IF3_Pointer":
        """Clone(itkStreamingImageFilterIF3IF3 self) -> itkStreamingImageFilterIF3IF3_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_Clone(self)


    def SetNumberOfStreamDivisions(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfStreamDivisions(itkStreamingImageFilterIF3IF3 self, unsigned int const _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_SetNumberOfStreamDivisions(self, _arg)


    def GetNumberOfStreamDivisions(self) -> "unsigned int const &":
        """GetNumberOfStreamDivisions(itkStreamingImageFilterIF3IF3 self) -> unsigned int const &"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_GetNumberOfStreamDivisions(self)


    def SetRegionSplitter(self, _arg: 'itkImageRegionSplitterBase') -> "void":
        """SetRegionSplitter(itkStreamingImageFilterIF3IF3 self, itkImageRegionSplitterBase _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_SetRegionSplitter(self, _arg)


    def GetModifiableRegionSplitter(self) -> "itkImageRegionSplitterBase *":
        """GetModifiableRegionSplitter(itkStreamingImageFilterIF3IF3 self) -> itkImageRegionSplitterBase"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_GetModifiableRegionSplitter(self)


    def GetRegionSplitter(self, *args) -> "itkImageRegionSplitterBase *":
        """
        GetRegionSplitter(itkStreamingImageFilterIF3IF3 self) -> itkImageRegionSplitterBase
        GetRegionSplitter(itkStreamingImageFilterIF3IF3 self) -> itkImageRegionSplitterBase
        """
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_GetRegionSplitter(self, *args)

    SameDimensionCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkStreamingImageFilterPython.delete_itkStreamingImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkStreamingImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkStreamingImageFilterIF3IF3"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStreamingImageFilterIF3IF3

        Create a new object of the class itkStreamingImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStreamingImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStreamingImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStreamingImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStreamingImageFilterIF3IF3.Clone = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_Clone, None, itkStreamingImageFilterIF3IF3)
itkStreamingImageFilterIF3IF3.SetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_SetNumberOfStreamDivisions, None, itkStreamingImageFilterIF3IF3)
itkStreamingImageFilterIF3IF3.GetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_GetNumberOfStreamDivisions, None, itkStreamingImageFilterIF3IF3)
itkStreamingImageFilterIF3IF3.SetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_SetRegionSplitter, None, itkStreamingImageFilterIF3IF3)
itkStreamingImageFilterIF3IF3.GetModifiableRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_GetModifiableRegionSplitter, None, itkStreamingImageFilterIF3IF3)
itkStreamingImageFilterIF3IF3.GetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_GetRegionSplitter, None, itkStreamingImageFilterIF3IF3)
itkStreamingImageFilterIF3IF3_swigregister = _itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_swigregister
itkStreamingImageFilterIF3IF3_swigregister(itkStreamingImageFilterIF3IF3)

def itkStreamingImageFilterIF3IF3___New_orig__() -> "itkStreamingImageFilterIF3IF3_Pointer":
    """itkStreamingImageFilterIF3IF3___New_orig__() -> itkStreamingImageFilterIF3IF3_Pointer"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3___New_orig__()

def itkStreamingImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkStreamingImageFilterIF3IF3 *":
    """itkStreamingImageFilterIF3IF3_cast(itkLightObject obj) -> itkStreamingImageFilterIF3IF3"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterIF3IF3_cast(obj)

class itkStreamingImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkStreamingImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkStreamingImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkStreamingImageFilterISS2ISS2_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkStreamingImageFilterISS2ISS2_Pointer":
        """Clone(itkStreamingImageFilterISS2ISS2 self) -> itkStreamingImageFilterISS2ISS2_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_Clone(self)


    def SetNumberOfStreamDivisions(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfStreamDivisions(itkStreamingImageFilterISS2ISS2 self, unsigned int const _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_SetNumberOfStreamDivisions(self, _arg)


    def GetNumberOfStreamDivisions(self) -> "unsigned int const &":
        """GetNumberOfStreamDivisions(itkStreamingImageFilterISS2ISS2 self) -> unsigned int const &"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_GetNumberOfStreamDivisions(self)


    def SetRegionSplitter(self, _arg: 'itkImageRegionSplitterBase') -> "void":
        """SetRegionSplitter(itkStreamingImageFilterISS2ISS2 self, itkImageRegionSplitterBase _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_SetRegionSplitter(self, _arg)


    def GetModifiableRegionSplitter(self) -> "itkImageRegionSplitterBase *":
        """GetModifiableRegionSplitter(itkStreamingImageFilterISS2ISS2 self) -> itkImageRegionSplitterBase"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_GetModifiableRegionSplitter(self)


    def GetRegionSplitter(self, *args) -> "itkImageRegionSplitterBase *":
        """
        GetRegionSplitter(itkStreamingImageFilterISS2ISS2 self) -> itkImageRegionSplitterBase
        GetRegionSplitter(itkStreamingImageFilterISS2ISS2 self) -> itkImageRegionSplitterBase
        """
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_GetRegionSplitter(self, *args)

    SameDimensionCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkStreamingImageFilterPython.delete_itkStreamingImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkStreamingImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkStreamingImageFilterISS2ISS2"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStreamingImageFilterISS2ISS2

        Create a new object of the class itkStreamingImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStreamingImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStreamingImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStreamingImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStreamingImageFilterISS2ISS2.Clone = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_Clone, None, itkStreamingImageFilterISS2ISS2)
itkStreamingImageFilterISS2ISS2.SetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_SetNumberOfStreamDivisions, None, itkStreamingImageFilterISS2ISS2)
itkStreamingImageFilterISS2ISS2.GetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_GetNumberOfStreamDivisions, None, itkStreamingImageFilterISS2ISS2)
itkStreamingImageFilterISS2ISS2.SetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_SetRegionSplitter, None, itkStreamingImageFilterISS2ISS2)
itkStreamingImageFilterISS2ISS2.GetModifiableRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_GetModifiableRegionSplitter, None, itkStreamingImageFilterISS2ISS2)
itkStreamingImageFilterISS2ISS2.GetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_GetRegionSplitter, None, itkStreamingImageFilterISS2ISS2)
itkStreamingImageFilterISS2ISS2_swigregister = _itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_swigregister
itkStreamingImageFilterISS2ISS2_swigregister(itkStreamingImageFilterISS2ISS2)

def itkStreamingImageFilterISS2ISS2___New_orig__() -> "itkStreamingImageFilterISS2ISS2_Pointer":
    """itkStreamingImageFilterISS2ISS2___New_orig__() -> itkStreamingImageFilterISS2ISS2_Pointer"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2___New_orig__()

def itkStreamingImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkStreamingImageFilterISS2ISS2 *":
    """itkStreamingImageFilterISS2ISS2_cast(itkLightObject obj) -> itkStreamingImageFilterISS2ISS2"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterISS2ISS2_cast(obj)

class itkStreamingImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkStreamingImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkStreamingImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkStreamingImageFilterISS3ISS3_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkStreamingImageFilterISS3ISS3_Pointer":
        """Clone(itkStreamingImageFilterISS3ISS3 self) -> itkStreamingImageFilterISS3ISS3_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_Clone(self)


    def SetNumberOfStreamDivisions(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfStreamDivisions(itkStreamingImageFilterISS3ISS3 self, unsigned int const _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_SetNumberOfStreamDivisions(self, _arg)


    def GetNumberOfStreamDivisions(self) -> "unsigned int const &":
        """GetNumberOfStreamDivisions(itkStreamingImageFilterISS3ISS3 self) -> unsigned int const &"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_GetNumberOfStreamDivisions(self)


    def SetRegionSplitter(self, _arg: 'itkImageRegionSplitterBase') -> "void":
        """SetRegionSplitter(itkStreamingImageFilterISS3ISS3 self, itkImageRegionSplitterBase _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_SetRegionSplitter(self, _arg)


    def GetModifiableRegionSplitter(self) -> "itkImageRegionSplitterBase *":
        """GetModifiableRegionSplitter(itkStreamingImageFilterISS3ISS3 self) -> itkImageRegionSplitterBase"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_GetModifiableRegionSplitter(self)


    def GetRegionSplitter(self, *args) -> "itkImageRegionSplitterBase *":
        """
        GetRegionSplitter(itkStreamingImageFilterISS3ISS3 self) -> itkImageRegionSplitterBase
        GetRegionSplitter(itkStreamingImageFilterISS3ISS3 self) -> itkImageRegionSplitterBase
        """
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_GetRegionSplitter(self, *args)

    SameDimensionCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkStreamingImageFilterPython.delete_itkStreamingImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkStreamingImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkStreamingImageFilterISS3ISS3"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStreamingImageFilterISS3ISS3

        Create a new object of the class itkStreamingImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStreamingImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStreamingImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStreamingImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStreamingImageFilterISS3ISS3.Clone = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_Clone, None, itkStreamingImageFilterISS3ISS3)
itkStreamingImageFilterISS3ISS3.SetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_SetNumberOfStreamDivisions, None, itkStreamingImageFilterISS3ISS3)
itkStreamingImageFilterISS3ISS3.GetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_GetNumberOfStreamDivisions, None, itkStreamingImageFilterISS3ISS3)
itkStreamingImageFilterISS3ISS3.SetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_SetRegionSplitter, None, itkStreamingImageFilterISS3ISS3)
itkStreamingImageFilterISS3ISS3.GetModifiableRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_GetModifiableRegionSplitter, None, itkStreamingImageFilterISS3ISS3)
itkStreamingImageFilterISS3ISS3.GetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_GetRegionSplitter, None, itkStreamingImageFilterISS3ISS3)
itkStreamingImageFilterISS3ISS3_swigregister = _itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_swigregister
itkStreamingImageFilterISS3ISS3_swigregister(itkStreamingImageFilterISS3ISS3)

def itkStreamingImageFilterISS3ISS3___New_orig__() -> "itkStreamingImageFilterISS3ISS3_Pointer":
    """itkStreamingImageFilterISS3ISS3___New_orig__() -> itkStreamingImageFilterISS3ISS3_Pointer"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3___New_orig__()

def itkStreamingImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkStreamingImageFilterISS3ISS3 *":
    """itkStreamingImageFilterISS3ISS3_cast(itkLightObject obj) -> itkStreamingImageFilterISS3ISS3"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterISS3ISS3_cast(obj)

class itkStreamingImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkStreamingImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkStreamingImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkStreamingImageFilterIUC2IUC2_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkStreamingImageFilterIUC2IUC2_Pointer":
        """Clone(itkStreamingImageFilterIUC2IUC2 self) -> itkStreamingImageFilterIUC2IUC2_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_Clone(self)


    def SetNumberOfStreamDivisions(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfStreamDivisions(itkStreamingImageFilterIUC2IUC2 self, unsigned int const _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_SetNumberOfStreamDivisions(self, _arg)


    def GetNumberOfStreamDivisions(self) -> "unsigned int const &":
        """GetNumberOfStreamDivisions(itkStreamingImageFilterIUC2IUC2 self) -> unsigned int const &"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_GetNumberOfStreamDivisions(self)


    def SetRegionSplitter(self, _arg: 'itkImageRegionSplitterBase') -> "void":
        """SetRegionSplitter(itkStreamingImageFilterIUC2IUC2 self, itkImageRegionSplitterBase _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_SetRegionSplitter(self, _arg)


    def GetModifiableRegionSplitter(self) -> "itkImageRegionSplitterBase *":
        """GetModifiableRegionSplitter(itkStreamingImageFilterIUC2IUC2 self) -> itkImageRegionSplitterBase"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_GetModifiableRegionSplitter(self)


    def GetRegionSplitter(self, *args) -> "itkImageRegionSplitterBase *":
        """
        GetRegionSplitter(itkStreamingImageFilterIUC2IUC2 self) -> itkImageRegionSplitterBase
        GetRegionSplitter(itkStreamingImageFilterIUC2IUC2 self) -> itkImageRegionSplitterBase
        """
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_GetRegionSplitter(self, *args)

    SameDimensionCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkStreamingImageFilterPython.delete_itkStreamingImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkStreamingImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkStreamingImageFilterIUC2IUC2"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStreamingImageFilterIUC2IUC2

        Create a new object of the class itkStreamingImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStreamingImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStreamingImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStreamingImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStreamingImageFilterIUC2IUC2.Clone = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_Clone, None, itkStreamingImageFilterIUC2IUC2)
itkStreamingImageFilterIUC2IUC2.SetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_SetNumberOfStreamDivisions, None, itkStreamingImageFilterIUC2IUC2)
itkStreamingImageFilterIUC2IUC2.GetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_GetNumberOfStreamDivisions, None, itkStreamingImageFilterIUC2IUC2)
itkStreamingImageFilterIUC2IUC2.SetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_SetRegionSplitter, None, itkStreamingImageFilterIUC2IUC2)
itkStreamingImageFilterIUC2IUC2.GetModifiableRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_GetModifiableRegionSplitter, None, itkStreamingImageFilterIUC2IUC2)
itkStreamingImageFilterIUC2IUC2.GetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_GetRegionSplitter, None, itkStreamingImageFilterIUC2IUC2)
itkStreamingImageFilterIUC2IUC2_swigregister = _itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_swigregister
itkStreamingImageFilterIUC2IUC2_swigregister(itkStreamingImageFilterIUC2IUC2)

def itkStreamingImageFilterIUC2IUC2___New_orig__() -> "itkStreamingImageFilterIUC2IUC2_Pointer":
    """itkStreamingImageFilterIUC2IUC2___New_orig__() -> itkStreamingImageFilterIUC2IUC2_Pointer"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2___New_orig__()

def itkStreamingImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkStreamingImageFilterIUC2IUC2 *":
    """itkStreamingImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkStreamingImageFilterIUC2IUC2"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC2IUC2_cast(obj)

class itkStreamingImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkStreamingImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkStreamingImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkStreamingImageFilterIUC3IUC3_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkStreamingImageFilterIUC3IUC3_Pointer":
        """Clone(itkStreamingImageFilterIUC3IUC3 self) -> itkStreamingImageFilterIUC3IUC3_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_Clone(self)


    def SetNumberOfStreamDivisions(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfStreamDivisions(itkStreamingImageFilterIUC3IUC3 self, unsigned int const _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_SetNumberOfStreamDivisions(self, _arg)


    def GetNumberOfStreamDivisions(self) -> "unsigned int const &":
        """GetNumberOfStreamDivisions(itkStreamingImageFilterIUC3IUC3 self) -> unsigned int const &"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_GetNumberOfStreamDivisions(self)


    def SetRegionSplitter(self, _arg: 'itkImageRegionSplitterBase') -> "void":
        """SetRegionSplitter(itkStreamingImageFilterIUC3IUC3 self, itkImageRegionSplitterBase _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_SetRegionSplitter(self, _arg)


    def GetModifiableRegionSplitter(self) -> "itkImageRegionSplitterBase *":
        """GetModifiableRegionSplitter(itkStreamingImageFilterIUC3IUC3 self) -> itkImageRegionSplitterBase"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_GetModifiableRegionSplitter(self)


    def GetRegionSplitter(self, *args) -> "itkImageRegionSplitterBase *":
        """
        GetRegionSplitter(itkStreamingImageFilterIUC3IUC3 self) -> itkImageRegionSplitterBase
        GetRegionSplitter(itkStreamingImageFilterIUC3IUC3 self) -> itkImageRegionSplitterBase
        """
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_GetRegionSplitter(self, *args)

    SameDimensionCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkStreamingImageFilterPython.delete_itkStreamingImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkStreamingImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkStreamingImageFilterIUC3IUC3"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStreamingImageFilterIUC3IUC3

        Create a new object of the class itkStreamingImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStreamingImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStreamingImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStreamingImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStreamingImageFilterIUC3IUC3.Clone = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_Clone, None, itkStreamingImageFilterIUC3IUC3)
itkStreamingImageFilterIUC3IUC3.SetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_SetNumberOfStreamDivisions, None, itkStreamingImageFilterIUC3IUC3)
itkStreamingImageFilterIUC3IUC3.GetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_GetNumberOfStreamDivisions, None, itkStreamingImageFilterIUC3IUC3)
itkStreamingImageFilterIUC3IUC3.SetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_SetRegionSplitter, None, itkStreamingImageFilterIUC3IUC3)
itkStreamingImageFilterIUC3IUC3.GetModifiableRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_GetModifiableRegionSplitter, None, itkStreamingImageFilterIUC3IUC3)
itkStreamingImageFilterIUC3IUC3.GetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_GetRegionSplitter, None, itkStreamingImageFilterIUC3IUC3)
itkStreamingImageFilterIUC3IUC3_swigregister = _itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_swigregister
itkStreamingImageFilterIUC3IUC3_swigregister(itkStreamingImageFilterIUC3IUC3)

def itkStreamingImageFilterIUC3IUC3___New_orig__() -> "itkStreamingImageFilterIUC3IUC3_Pointer":
    """itkStreamingImageFilterIUC3IUC3___New_orig__() -> itkStreamingImageFilterIUC3IUC3_Pointer"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3___New_orig__()

def itkStreamingImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkStreamingImageFilterIUC3IUC3 *":
    """itkStreamingImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkStreamingImageFilterIUC3IUC3"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterIUC3IUC3_cast(obj)

class itkStreamingImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkStreamingImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkStreamingImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkStreamingImageFilterIUS2IUS2_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkStreamingImageFilterIUS2IUS2_Pointer":
        """Clone(itkStreamingImageFilterIUS2IUS2 self) -> itkStreamingImageFilterIUS2IUS2_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_Clone(self)


    def SetNumberOfStreamDivisions(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfStreamDivisions(itkStreamingImageFilterIUS2IUS2 self, unsigned int const _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_SetNumberOfStreamDivisions(self, _arg)


    def GetNumberOfStreamDivisions(self) -> "unsigned int const &":
        """GetNumberOfStreamDivisions(itkStreamingImageFilterIUS2IUS2 self) -> unsigned int const &"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_GetNumberOfStreamDivisions(self)


    def SetRegionSplitter(self, _arg: 'itkImageRegionSplitterBase') -> "void":
        """SetRegionSplitter(itkStreamingImageFilterIUS2IUS2 self, itkImageRegionSplitterBase _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_SetRegionSplitter(self, _arg)


    def GetModifiableRegionSplitter(self) -> "itkImageRegionSplitterBase *":
        """GetModifiableRegionSplitter(itkStreamingImageFilterIUS2IUS2 self) -> itkImageRegionSplitterBase"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_GetModifiableRegionSplitter(self)


    def GetRegionSplitter(self, *args) -> "itkImageRegionSplitterBase *":
        """
        GetRegionSplitter(itkStreamingImageFilterIUS2IUS2 self) -> itkImageRegionSplitterBase
        GetRegionSplitter(itkStreamingImageFilterIUS2IUS2 self) -> itkImageRegionSplitterBase
        """
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_GetRegionSplitter(self, *args)

    SameDimensionCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkStreamingImageFilterPython.delete_itkStreamingImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkStreamingImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkStreamingImageFilterIUS2IUS2"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStreamingImageFilterIUS2IUS2

        Create a new object of the class itkStreamingImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStreamingImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStreamingImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStreamingImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStreamingImageFilterIUS2IUS2.Clone = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_Clone, None, itkStreamingImageFilterIUS2IUS2)
itkStreamingImageFilterIUS2IUS2.SetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_SetNumberOfStreamDivisions, None, itkStreamingImageFilterIUS2IUS2)
itkStreamingImageFilterIUS2IUS2.GetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_GetNumberOfStreamDivisions, None, itkStreamingImageFilterIUS2IUS2)
itkStreamingImageFilterIUS2IUS2.SetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_SetRegionSplitter, None, itkStreamingImageFilterIUS2IUS2)
itkStreamingImageFilterIUS2IUS2.GetModifiableRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_GetModifiableRegionSplitter, None, itkStreamingImageFilterIUS2IUS2)
itkStreamingImageFilterIUS2IUS2.GetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_GetRegionSplitter, None, itkStreamingImageFilterIUS2IUS2)
itkStreamingImageFilterIUS2IUS2_swigregister = _itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_swigregister
itkStreamingImageFilterIUS2IUS2_swigregister(itkStreamingImageFilterIUS2IUS2)

def itkStreamingImageFilterIUS2IUS2___New_orig__() -> "itkStreamingImageFilterIUS2IUS2_Pointer":
    """itkStreamingImageFilterIUS2IUS2___New_orig__() -> itkStreamingImageFilterIUS2IUS2_Pointer"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2___New_orig__()

def itkStreamingImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkStreamingImageFilterIUS2IUS2 *":
    """itkStreamingImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkStreamingImageFilterIUS2IUS2"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS2IUS2_cast(obj)

class itkStreamingImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkStreamingImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkStreamingImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkStreamingImageFilterIUS3IUS3_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkStreamingImageFilterIUS3IUS3_Pointer":
        """Clone(itkStreamingImageFilterIUS3IUS3 self) -> itkStreamingImageFilterIUS3IUS3_Pointer"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_Clone(self)


    def SetNumberOfStreamDivisions(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfStreamDivisions(itkStreamingImageFilterIUS3IUS3 self, unsigned int const _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_SetNumberOfStreamDivisions(self, _arg)


    def GetNumberOfStreamDivisions(self) -> "unsigned int const &":
        """GetNumberOfStreamDivisions(itkStreamingImageFilterIUS3IUS3 self) -> unsigned int const &"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_GetNumberOfStreamDivisions(self)


    def SetRegionSplitter(self, _arg: 'itkImageRegionSplitterBase') -> "void":
        """SetRegionSplitter(itkStreamingImageFilterIUS3IUS3 self, itkImageRegionSplitterBase _arg)"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_SetRegionSplitter(self, _arg)


    def GetModifiableRegionSplitter(self) -> "itkImageRegionSplitterBase *":
        """GetModifiableRegionSplitter(itkStreamingImageFilterIUS3IUS3 self) -> itkImageRegionSplitterBase"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_GetModifiableRegionSplitter(self)


    def GetRegionSplitter(self, *args) -> "itkImageRegionSplitterBase *":
        """
        GetRegionSplitter(itkStreamingImageFilterIUS3IUS3 self) -> itkImageRegionSplitterBase
        GetRegionSplitter(itkStreamingImageFilterIUS3IUS3 self) -> itkImageRegionSplitterBase
        """
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_GetRegionSplitter(self, *args)

    SameDimensionCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkStreamingImageFilterPython.delete_itkStreamingImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkStreamingImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkStreamingImageFilterIUS3IUS3"""
        return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStreamingImageFilterIUS3IUS3

        Create a new object of the class itkStreamingImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStreamingImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStreamingImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStreamingImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStreamingImageFilterIUS3IUS3.Clone = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_Clone, None, itkStreamingImageFilterIUS3IUS3)
itkStreamingImageFilterIUS3IUS3.SetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_SetNumberOfStreamDivisions, None, itkStreamingImageFilterIUS3IUS3)
itkStreamingImageFilterIUS3IUS3.GetNumberOfStreamDivisions = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_GetNumberOfStreamDivisions, None, itkStreamingImageFilterIUS3IUS3)
itkStreamingImageFilterIUS3IUS3.SetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_SetRegionSplitter, None, itkStreamingImageFilterIUS3IUS3)
itkStreamingImageFilterIUS3IUS3.GetModifiableRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_GetModifiableRegionSplitter, None, itkStreamingImageFilterIUS3IUS3)
itkStreamingImageFilterIUS3IUS3.GetRegionSplitter = new_instancemethod(_itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_GetRegionSplitter, None, itkStreamingImageFilterIUS3IUS3)
itkStreamingImageFilterIUS3IUS3_swigregister = _itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_swigregister
itkStreamingImageFilterIUS3IUS3_swigregister(itkStreamingImageFilterIUS3IUS3)

def itkStreamingImageFilterIUS3IUS3___New_orig__() -> "itkStreamingImageFilterIUS3IUS3_Pointer":
    """itkStreamingImageFilterIUS3IUS3___New_orig__() -> itkStreamingImageFilterIUS3IUS3_Pointer"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3___New_orig__()

def itkStreamingImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkStreamingImageFilterIUS3IUS3 *":
    """itkStreamingImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkStreamingImageFilterIUS3IUS3"""
    return _itkStreamingImageFilterPython.itkStreamingImageFilterIUS3IUS3_cast(obj)


def streaming_image_filter(*args, **kwargs):
    """Procedural interface for StreamingImageFilter"""
    import itk
    instance = itk.StreamingImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def streaming_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.StreamingImageFilter, itkTemplate.itkTemplate):
        streaming_image_filter.__doc__ = itk.StreamingImageFilter.values()[0].__doc__
    else:
        streaming_image_filter.__doc__ = itk.StreamingImageFilter.__doc__




