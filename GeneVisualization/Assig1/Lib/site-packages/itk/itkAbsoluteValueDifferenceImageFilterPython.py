# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkAbsoluteValueDifferenceImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkAbsoluteValueDifferenceImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkAbsoluteValueDifferenceImageFilterPython
            return _itkAbsoluteValueDifferenceImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkAbsoluteValueDifferenceImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkAbsoluteValueDifferenceImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkAbsoluteValueDifferenceImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkBinaryGeneratorImageFilterPython
import itkInPlaceImageFilterBPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkSimpleDataObjectDecoratorPython
import itkArrayPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython

def itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_New():
  return itkAbsoluteValueDifferenceImageFilterIF3IF3IF3.New()


def itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_New():
  return itkAbsoluteValueDifferenceImageFilterIF2IF2IF2.New()


def itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_New():
  return itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3.New()


def itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_New():
  return itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2.New()


def itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_New():
  return itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3.New()


def itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_New():
  return itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2.New()


def itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_New():
  return itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3.New()


def itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_New():
  return itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2.New()

class itkAbsoluteValueDifferenceImageFilterIF2IF2IF2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2):
    """Proxy of C++ itkAbsoluteValueDifferenceImageFilterIF2IF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_Pointer":
        """__New_orig__() -> itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF2IF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_Pointer":
        """Clone(itkAbsoluteValueDifferenceImageFilterIF2IF2IF2 self) -> itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_Clone(self)

    Input1CovertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_Input1CovertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_Input2ConvertibleToDoubleCheck
    DoubleCovertibleToOutputCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_DoubleCovertibleToOutputCheck
    __swig_destroy__ = _itkAbsoluteValueDifferenceImageFilterPython.delete_itkAbsoluteValueDifferenceImageFilterIF2IF2IF2

    def cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterIF2IF2IF2 *":
        """cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterIF2IF2IF2"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAbsoluteValueDifferenceImageFilterIF2IF2IF2

        Create a new object of the class itkAbsoluteValueDifferenceImageFilterIF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAbsoluteValueDifferenceImageFilterIF2IF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAbsoluteValueDifferenceImageFilterIF2IF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsoluteValueDifferenceImageFilterIF2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsoluteValueDifferenceImageFilterIF2IF2IF2.Clone = new_instancemethod(_itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_Clone, None, itkAbsoluteValueDifferenceImageFilterIF2IF2IF2)
itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_swigregister = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_swigregister
itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_swigregister(itkAbsoluteValueDifferenceImageFilterIF2IF2IF2)

def itkAbsoluteValueDifferenceImageFilterIF2IF2IF2___New_orig__() -> "itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_Pointer":
    """itkAbsoluteValueDifferenceImageFilterIF2IF2IF2___New_orig__() -> itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_Pointer"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF2IF2IF2___New_orig__()

def itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterIF2IF2IF2 *":
    """itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterIF2IF2IF2"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF2IF2IF2_cast(obj)

class itkAbsoluteValueDifferenceImageFilterIF3IF3IF3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3):
    """Proxy of C++ itkAbsoluteValueDifferenceImageFilterIF3IF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_Pointer":
        """__New_orig__() -> itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF3IF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_Pointer":
        """Clone(itkAbsoluteValueDifferenceImageFilterIF3IF3IF3 self) -> itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_Clone(self)

    Input1CovertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_Input1CovertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_Input2ConvertibleToDoubleCheck
    DoubleCovertibleToOutputCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_DoubleCovertibleToOutputCheck
    __swig_destroy__ = _itkAbsoluteValueDifferenceImageFilterPython.delete_itkAbsoluteValueDifferenceImageFilterIF3IF3IF3

    def cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterIF3IF3IF3 *":
        """cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterIF3IF3IF3"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAbsoluteValueDifferenceImageFilterIF3IF3IF3

        Create a new object of the class itkAbsoluteValueDifferenceImageFilterIF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAbsoluteValueDifferenceImageFilterIF3IF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAbsoluteValueDifferenceImageFilterIF3IF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsoluteValueDifferenceImageFilterIF3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsoluteValueDifferenceImageFilterIF3IF3IF3.Clone = new_instancemethod(_itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_Clone, None, itkAbsoluteValueDifferenceImageFilterIF3IF3IF3)
itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_swigregister = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_swigregister
itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_swigregister(itkAbsoluteValueDifferenceImageFilterIF3IF3IF3)

def itkAbsoluteValueDifferenceImageFilterIF3IF3IF3___New_orig__() -> "itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_Pointer":
    """itkAbsoluteValueDifferenceImageFilterIF3IF3IF3___New_orig__() -> itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_Pointer"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF3IF3IF3___New_orig__()

def itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterIF3IF3IF3 *":
    """itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterIF3IF3IF3"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIF3IF3IF3_cast(obj)

class itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2):
    """Proxy of C++ itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_Pointer":
        """__New_orig__() -> itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_Pointer":
        """Clone(itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2 self) -> itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_Clone(self)

    Input1CovertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_Input1CovertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_Input2ConvertibleToDoubleCheck
    DoubleCovertibleToOutputCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_DoubleCovertibleToOutputCheck
    __swig_destroy__ = _itkAbsoluteValueDifferenceImageFilterPython.delete_itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2 *":
        """cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2

        Create a new object of the class itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2.Clone = new_instancemethod(_itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_Clone, None, itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2)
itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_swigregister = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_swigregister
itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_swigregister(itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2)

def itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2___New_orig__() -> "itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_Pointer":
    """itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2___New_orig__() -> itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_Pointer"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2___New_orig__()

def itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2 *":
    """itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS2ISS2ISS2_cast(obj)

class itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3):
    """Proxy of C++ itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_Pointer":
        """__New_orig__() -> itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_Pointer":
        """Clone(itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3 self) -> itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_Clone(self)

    Input1CovertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_Input1CovertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_Input2ConvertibleToDoubleCheck
    DoubleCovertibleToOutputCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_DoubleCovertibleToOutputCheck
    __swig_destroy__ = _itkAbsoluteValueDifferenceImageFilterPython.delete_itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3 *":
        """cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3

        Create a new object of the class itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3.Clone = new_instancemethod(_itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_Clone, None, itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3)
itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_swigregister = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_swigregister
itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_swigregister(itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3)

def itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3___New_orig__() -> "itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_Pointer":
    """itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3___New_orig__() -> itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_Pointer"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3___New_orig__()

def itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3 *":
    """itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterISS3ISS3ISS3_cast(obj)

class itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2):
    """Proxy of C++ itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_Pointer":
        """__New_orig__() -> itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_Pointer":
        """Clone(itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2 self) -> itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_Clone(self)

    Input1CovertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_Input1CovertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_Input2ConvertibleToDoubleCheck
    DoubleCovertibleToOutputCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_DoubleCovertibleToOutputCheck
    __swig_destroy__ = _itkAbsoluteValueDifferenceImageFilterPython.delete_itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2 *":
        """cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2

        Create a new object of the class itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2.Clone = new_instancemethod(_itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_Clone, None, itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2)
itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_swigregister = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_swigregister
itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_swigregister(itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2)

def itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2___New_orig__() -> "itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_Pointer":
    """itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2___New_orig__() -> itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_Pointer"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2___New_orig__()

def itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2 *":
    """itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC2IUC2IUC2_cast(obj)

class itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3):
    """Proxy of C++ itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_Pointer":
        """__New_orig__() -> itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_Pointer":
        """Clone(itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3 self) -> itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_Clone(self)

    Input1CovertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_Input1CovertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_Input2ConvertibleToDoubleCheck
    DoubleCovertibleToOutputCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_DoubleCovertibleToOutputCheck
    __swig_destroy__ = _itkAbsoluteValueDifferenceImageFilterPython.delete_itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3 *":
        """cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3

        Create a new object of the class itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3.Clone = new_instancemethod(_itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_Clone, None, itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3)
itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_swigregister = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_swigregister
itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_swigregister(itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3)

def itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3___New_orig__() -> "itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_Pointer":
    """itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3___New_orig__() -> itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_Pointer"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3___New_orig__()

def itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3 *":
    """itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUC3IUC3IUC3_cast(obj)

class itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2):
    """Proxy of C++ itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_Pointer":
        """__New_orig__() -> itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_Pointer":
        """Clone(itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2 self) -> itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_Clone(self)

    Input1CovertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_Input1CovertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_Input2ConvertibleToDoubleCheck
    DoubleCovertibleToOutputCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_DoubleCovertibleToOutputCheck
    __swig_destroy__ = _itkAbsoluteValueDifferenceImageFilterPython.delete_itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2 *":
        """cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2

        Create a new object of the class itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2.Clone = new_instancemethod(_itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_Clone, None, itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2)
itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_swigregister = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_swigregister
itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_swigregister(itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2)

def itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2___New_orig__() -> "itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_Pointer":
    """itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2___New_orig__() -> itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_Pointer"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2___New_orig__()

def itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2 *":
    """itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS2IUS2IUS2_cast(obj)

class itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3):
    """Proxy of C++ itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_Pointer":
        """__New_orig__() -> itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_Pointer":
        """Clone(itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3 self) -> itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_Clone(self)

    Input1CovertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_Input1CovertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_Input2ConvertibleToDoubleCheck
    DoubleCovertibleToOutputCheck = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_DoubleCovertibleToOutputCheck
    __swig_destroy__ = _itkAbsoluteValueDifferenceImageFilterPython.delete_itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3 *":
        """cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3"""
        return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3

        Create a new object of the class itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3.Clone = new_instancemethod(_itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_Clone, None, itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3)
itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_swigregister = _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_swigregister
itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_swigregister(itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3)

def itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3___New_orig__() -> "itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_Pointer":
    """itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3___New_orig__() -> itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_Pointer"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3___New_orig__()

def itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_cast(obj: 'itkLightObject') -> "itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3 *":
    """itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_cast(itkLightObject obj) -> itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3"""
    return _itkAbsoluteValueDifferenceImageFilterPython.itkAbsoluteValueDifferenceImageFilterIUS3IUS3IUS3_cast(obj)


def absolute_value_difference_image_filter(*args, **kwargs):
    """Procedural interface for AbsoluteValueDifferenceImageFilter"""
    import itk
    instance = itk.AbsoluteValueDifferenceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def absolute_value_difference_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.AbsoluteValueDifferenceImageFilter, itkTemplate.itkTemplate):
        absolute_value_difference_image_filter.__doc__ = itk.AbsoluteValueDifferenceImageFilter.values()[0].__doc__
    else:
        absolute_value_difference_image_filter.__doc__ = itk.AbsoluteValueDifferenceImageFilter.__doc__




