# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _ITKFastMarchingBasePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ITKFastMarchingBasePython', [dirname(__file__)])
        except ImportError:
            import _ITKFastMarchingBasePython
            return _ITKFastMarchingBasePython
        if fp is not None:
            try:
                _mod = imp.load_module('_ITKFastMarchingBasePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ITKFastMarchingBasePython = swig_import_helper()
    del swig_import_helper
else:
    import _ITKFastMarchingBasePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFastMarchingStoppingCriterionBasePython
import ITKCommonBasePython
import pyBasePython
import itkNodePairPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImagePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkLevelSetNodePython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkFastMarchingBaseIF3IF3_New():
  return itkFastMarchingBaseIF3IF3.New()


def itkFastMarchingBaseIF2IF2_New():
  return itkFastMarchingBaseIF2IF2.New()


def itkVectorContainerULLNPI3F_New():
  return itkVectorContainerULLNPI3F.New()


def itkVectorContainerUILSNF3_New():
  return itkVectorContainerUILSNF3.New()


def itkVectorContainerULLNPI3US_New():
  return itkVectorContainerULLNPI3US.New()


def itkVectorContainerUILSNUS3_New():
  return itkVectorContainerUILSNUS3.New()


def itkVectorContainerULLNPI3UC_New():
  return itkVectorContainerULLNPI3UC.New()


def itkVectorContainerUILSNUC3_New():
  return itkVectorContainerUILSNUC3.New()


def itkVectorContainerULLNPI3SS_New():
  return itkVectorContainerULLNPI3SS.New()


def itkVectorContainerUILSNSS3_New():
  return itkVectorContainerUILSNSS3.New()


def itkVectorContainerULLNPI2F_New():
  return itkVectorContainerULLNPI2F.New()


def itkVectorContainerUILSNF2_New():
  return itkVectorContainerUILSNF2.New()


def itkVectorContainerULLNPI2US_New():
  return itkVectorContainerULLNPI2US.New()


def itkVectorContainerUILSNUS2_New():
  return itkVectorContainerUILSNUS2.New()


def itkVectorContainerULLNPI2UC_New():
  return itkVectorContainerULLNPI2UC.New()


def itkVectorContainerUILSNUC2_New():
  return itkVectorContainerUILSNUC2.New()


def itkVectorContainerULLNPI2SS_New():
  return itkVectorContainerULLNPI2SS.New()


def itkVectorContainerUILSNSS2_New():
  return itkVectorContainerUILSNSS2.New()

class itkFastMarchingBaseIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkFastMarchingBaseIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Nothing = _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_Nothing
    NoHandles = _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_NoHandles
    Strict = _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_Strict

    def SetTopologyCheck(self, _arg: 'itkFastMarchingBaseIF2IF2::TopologyCheckType const') -> "void":
        """SetTopologyCheck(itkFastMarchingBaseIF2IF2 self, itkFastMarchingBaseIF2IF2::TopologyCheckType const _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetTopologyCheck(self, _arg)


    def GetTopologyCheck(self) -> "itkFastMarchingBaseIF2IF2::TopologyCheckType const &":
        """GetTopologyCheck(itkFastMarchingBaseIF2IF2 self) -> itkFastMarchingBaseIF2IF2::TopologyCheckType const &"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetTopologyCheck(self)


    def SetTrialPoints(self, _arg: 'itkVectorContainerULLNPI2F') -> "void":
        """SetTrialPoints(itkFastMarchingBaseIF2IF2 self, itkVectorContainerULLNPI2F _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetTrialPoints(self, _arg)


    def GetModifiableTrialPoints(self) -> "itkVectorContainerULLNPI2F *":
        """GetModifiableTrialPoints(itkFastMarchingBaseIF2IF2 self) -> itkVectorContainerULLNPI2F"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableTrialPoints(self)


    def GetTrialPoints(self, *args) -> "itkVectorContainerULLNPI2F *":
        """
        GetTrialPoints(itkFastMarchingBaseIF2IF2 self) -> itkVectorContainerULLNPI2F
        GetTrialPoints(itkFastMarchingBaseIF2IF2 self) -> itkVectorContainerULLNPI2F
        """
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetTrialPoints(self, *args)


    def SetAlivePoints(self, _arg: 'itkVectorContainerULLNPI2F') -> "void":
        """SetAlivePoints(itkFastMarchingBaseIF2IF2 self, itkVectorContainerULLNPI2F _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetAlivePoints(self, _arg)


    def GetModifiableAlivePoints(self) -> "itkVectorContainerULLNPI2F *":
        """GetModifiableAlivePoints(itkFastMarchingBaseIF2IF2 self) -> itkVectorContainerULLNPI2F"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableAlivePoints(self)


    def GetAlivePoints(self, *args) -> "itkVectorContainerULLNPI2F *":
        """
        GetAlivePoints(itkFastMarchingBaseIF2IF2 self) -> itkVectorContainerULLNPI2F
        GetAlivePoints(itkFastMarchingBaseIF2IF2 self) -> itkVectorContainerULLNPI2F
        """
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetAlivePoints(self, *args)


    def SetProcessedPoints(self, _arg: 'itkVectorContainerULLNPI2F') -> "void":
        """SetProcessedPoints(itkFastMarchingBaseIF2IF2 self, itkVectorContainerULLNPI2F _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetProcessedPoints(self, _arg)


    def GetModifiableProcessedPoints(self) -> "itkVectorContainerULLNPI2F *":
        """GetModifiableProcessedPoints(itkFastMarchingBaseIF2IF2 self) -> itkVectorContainerULLNPI2F"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableProcessedPoints(self)


    def GetProcessedPoints(self, *args) -> "itkVectorContainerULLNPI2F *":
        """
        GetProcessedPoints(itkFastMarchingBaseIF2IF2 self) -> itkVectorContainerULLNPI2F
        GetProcessedPoints(itkFastMarchingBaseIF2IF2 self) -> itkVectorContainerULLNPI2F
        """
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetProcessedPoints(self, *args)


    def SetForbiddenPoints(self, _arg: 'itkVectorContainerULLNPI2F') -> "void":
        """SetForbiddenPoints(itkFastMarchingBaseIF2IF2 self, itkVectorContainerULLNPI2F _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetForbiddenPoints(self, _arg)


    def GetModifiableForbiddenPoints(self) -> "itkVectorContainerULLNPI2F *":
        """GetModifiableForbiddenPoints(itkFastMarchingBaseIF2IF2 self) -> itkVectorContainerULLNPI2F"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableForbiddenPoints(self)


    def GetForbiddenPoints(self, *args) -> "itkVectorContainerULLNPI2F *":
        """
        GetForbiddenPoints(itkFastMarchingBaseIF2IF2 self) -> itkVectorContainerULLNPI2F
        GetForbiddenPoints(itkFastMarchingBaseIF2IF2 self) -> itkVectorContainerULLNPI2F
        """
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetForbiddenPoints(self, *args)


    def SetStoppingCriterion(self, _arg: 'itkFastMarchingStoppingCriterionBaseIF2IF2') -> "void":
        """SetStoppingCriterion(itkFastMarchingBaseIF2IF2 self, itkFastMarchingStoppingCriterionBaseIF2IF2 _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetStoppingCriterion(self, _arg)


    def GetModifiableStoppingCriterion(self) -> "itkFastMarchingStoppingCriterionBaseIF2IF2 *":
        """GetModifiableStoppingCriterion(itkFastMarchingBaseIF2IF2 self) -> itkFastMarchingStoppingCriterionBaseIF2IF2"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableStoppingCriterion(self)


    def GetStoppingCriterion(self, *args) -> "itkFastMarchingStoppingCriterionBaseIF2IF2 *":
        """
        GetStoppingCriterion(itkFastMarchingBaseIF2IF2 self) -> itkFastMarchingStoppingCriterionBaseIF2IF2
        GetStoppingCriterion(itkFastMarchingBaseIF2IF2 self) -> itkFastMarchingStoppingCriterionBaseIF2IF2
        """
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetStoppingCriterion(self, *args)


    def GetSpeedConstant(self) -> "double":
        """GetSpeedConstant(itkFastMarchingBaseIF2IF2 self) -> double"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetSpeedConstant(self)


    def SetSpeedConstant(self, _arg: 'double const') -> "void":
        """SetSpeedConstant(itkFastMarchingBaseIF2IF2 self, double const _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetSpeedConstant(self, _arg)


    def GetNormalizationFactor(self) -> "double":
        """GetNormalizationFactor(itkFastMarchingBaseIF2IF2 self) -> double"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetNormalizationFactor(self)


    def SetNormalizationFactor(self, _arg: 'double const') -> "void":
        """SetNormalizationFactor(itkFastMarchingBaseIF2IF2 self, double const _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetNormalizationFactor(self, _arg)


    def GetTargetReachedValue(self) -> "float":
        """GetTargetReachedValue(itkFastMarchingBaseIF2IF2 self) -> float"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetTargetReachedValue(self)


    def SetCollectPoints(self, _arg: 'bool const') -> "void":
        """SetCollectPoints(itkFastMarchingBaseIF2IF2 self, bool const _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetCollectPoints(self, _arg)


    def GetCollectPoints(self) -> "bool const &":
        """GetCollectPoints(itkFastMarchingBaseIF2IF2 self) -> bool const &"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetCollectPoints(self)


    def CollectPointsOn(self) -> "void":
        """CollectPointsOn(itkFastMarchingBaseIF2IF2 self)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_CollectPointsOn(self)


    def CollectPointsOff(self) -> "void":
        """CollectPointsOff(itkFastMarchingBaseIF2IF2 self)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_CollectPointsOff(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseIF2IF2

    def cast(obj: 'itkLightObject') -> "itkFastMarchingBaseIF2IF2 *":
        """cast(itkLightObject obj) -> itkFastMarchingBaseIF2IF2"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFastMarchingBaseIF2IF2

        Create a new object of the class itkFastMarchingBaseIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingBaseIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFastMarchingBaseIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFastMarchingBaseIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFastMarchingBaseIF2IF2.SetTopologyCheck = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetTopologyCheck, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetTopologyCheck = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetTopologyCheck, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.SetTrialPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetTrialPoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetModifiableTrialPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableTrialPoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetTrialPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetTrialPoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.SetAlivePoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetAlivePoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetModifiableAlivePoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableAlivePoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetAlivePoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetAlivePoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.SetProcessedPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetProcessedPoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetModifiableProcessedPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableProcessedPoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetProcessedPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetProcessedPoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.SetForbiddenPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetForbiddenPoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetModifiableForbiddenPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableForbiddenPoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetForbiddenPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetForbiddenPoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.SetStoppingCriterion = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetStoppingCriterion, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetModifiableStoppingCriterion = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableStoppingCriterion, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetStoppingCriterion = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetStoppingCriterion, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetSpeedConstant = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetSpeedConstant, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.SetSpeedConstant = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetSpeedConstant, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetNormalizationFactor = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetNormalizationFactor, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.SetNormalizationFactor = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetNormalizationFactor, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetTargetReachedValue = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetTargetReachedValue, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.SetCollectPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetCollectPoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.GetCollectPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetCollectPoints, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.CollectPointsOn = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_CollectPointsOn, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2.CollectPointsOff = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_CollectPointsOff, None, itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2_swigregister = _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_swigregister
itkFastMarchingBaseIF2IF2_swigregister(itkFastMarchingBaseIF2IF2)

def itkFastMarchingBaseIF2IF2_cast(obj: 'itkLightObject') -> "itkFastMarchingBaseIF2IF2 *":
    """itkFastMarchingBaseIF2IF2_cast(itkLightObject obj) -> itkFastMarchingBaseIF2IF2"""
    return _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_cast(obj)

class itkFastMarchingBaseIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkFastMarchingBaseIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Nothing = _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_Nothing
    NoHandles = _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_NoHandles
    Strict = _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_Strict

    def SetTopologyCheck(self, _arg: 'itkFastMarchingBaseIF3IF3::TopologyCheckType const') -> "void":
        """SetTopologyCheck(itkFastMarchingBaseIF3IF3 self, itkFastMarchingBaseIF3IF3::TopologyCheckType const _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetTopologyCheck(self, _arg)


    def GetTopologyCheck(self) -> "itkFastMarchingBaseIF3IF3::TopologyCheckType const &":
        """GetTopologyCheck(itkFastMarchingBaseIF3IF3 self) -> itkFastMarchingBaseIF3IF3::TopologyCheckType const &"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetTopologyCheck(self)


    def SetTrialPoints(self, _arg: 'itkVectorContainerULLNPI3F') -> "void":
        """SetTrialPoints(itkFastMarchingBaseIF3IF3 self, itkVectorContainerULLNPI3F _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetTrialPoints(self, _arg)


    def GetModifiableTrialPoints(self) -> "itkVectorContainerULLNPI3F *":
        """GetModifiableTrialPoints(itkFastMarchingBaseIF3IF3 self) -> itkVectorContainerULLNPI3F"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableTrialPoints(self)


    def GetTrialPoints(self, *args) -> "itkVectorContainerULLNPI3F *":
        """
        GetTrialPoints(itkFastMarchingBaseIF3IF3 self) -> itkVectorContainerULLNPI3F
        GetTrialPoints(itkFastMarchingBaseIF3IF3 self) -> itkVectorContainerULLNPI3F
        """
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetTrialPoints(self, *args)


    def SetAlivePoints(self, _arg: 'itkVectorContainerULLNPI3F') -> "void":
        """SetAlivePoints(itkFastMarchingBaseIF3IF3 self, itkVectorContainerULLNPI3F _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetAlivePoints(self, _arg)


    def GetModifiableAlivePoints(self) -> "itkVectorContainerULLNPI3F *":
        """GetModifiableAlivePoints(itkFastMarchingBaseIF3IF3 self) -> itkVectorContainerULLNPI3F"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableAlivePoints(self)


    def GetAlivePoints(self, *args) -> "itkVectorContainerULLNPI3F *":
        """
        GetAlivePoints(itkFastMarchingBaseIF3IF3 self) -> itkVectorContainerULLNPI3F
        GetAlivePoints(itkFastMarchingBaseIF3IF3 self) -> itkVectorContainerULLNPI3F
        """
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetAlivePoints(self, *args)


    def SetProcessedPoints(self, _arg: 'itkVectorContainerULLNPI3F') -> "void":
        """SetProcessedPoints(itkFastMarchingBaseIF3IF3 self, itkVectorContainerULLNPI3F _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetProcessedPoints(self, _arg)


    def GetModifiableProcessedPoints(self) -> "itkVectorContainerULLNPI3F *":
        """GetModifiableProcessedPoints(itkFastMarchingBaseIF3IF3 self) -> itkVectorContainerULLNPI3F"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableProcessedPoints(self)


    def GetProcessedPoints(self, *args) -> "itkVectorContainerULLNPI3F *":
        """
        GetProcessedPoints(itkFastMarchingBaseIF3IF3 self) -> itkVectorContainerULLNPI3F
        GetProcessedPoints(itkFastMarchingBaseIF3IF3 self) -> itkVectorContainerULLNPI3F
        """
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetProcessedPoints(self, *args)


    def SetForbiddenPoints(self, _arg: 'itkVectorContainerULLNPI3F') -> "void":
        """SetForbiddenPoints(itkFastMarchingBaseIF3IF3 self, itkVectorContainerULLNPI3F _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetForbiddenPoints(self, _arg)


    def GetModifiableForbiddenPoints(self) -> "itkVectorContainerULLNPI3F *":
        """GetModifiableForbiddenPoints(itkFastMarchingBaseIF3IF3 self) -> itkVectorContainerULLNPI3F"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableForbiddenPoints(self)


    def GetForbiddenPoints(self, *args) -> "itkVectorContainerULLNPI3F *":
        """
        GetForbiddenPoints(itkFastMarchingBaseIF3IF3 self) -> itkVectorContainerULLNPI3F
        GetForbiddenPoints(itkFastMarchingBaseIF3IF3 self) -> itkVectorContainerULLNPI3F
        """
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetForbiddenPoints(self, *args)


    def SetStoppingCriterion(self, _arg: 'itkFastMarchingStoppingCriterionBaseIF3IF3') -> "void":
        """SetStoppingCriterion(itkFastMarchingBaseIF3IF3 self, itkFastMarchingStoppingCriterionBaseIF3IF3 _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetStoppingCriterion(self, _arg)


    def GetModifiableStoppingCriterion(self) -> "itkFastMarchingStoppingCriterionBaseIF3IF3 *":
        """GetModifiableStoppingCriterion(itkFastMarchingBaseIF3IF3 self) -> itkFastMarchingStoppingCriterionBaseIF3IF3"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableStoppingCriterion(self)


    def GetStoppingCriterion(self, *args) -> "itkFastMarchingStoppingCriterionBaseIF3IF3 *":
        """
        GetStoppingCriterion(itkFastMarchingBaseIF3IF3 self) -> itkFastMarchingStoppingCriterionBaseIF3IF3
        GetStoppingCriterion(itkFastMarchingBaseIF3IF3 self) -> itkFastMarchingStoppingCriterionBaseIF3IF3
        """
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetStoppingCriterion(self, *args)


    def GetSpeedConstant(self) -> "double":
        """GetSpeedConstant(itkFastMarchingBaseIF3IF3 self) -> double"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetSpeedConstant(self)


    def SetSpeedConstant(self, _arg: 'double const') -> "void":
        """SetSpeedConstant(itkFastMarchingBaseIF3IF3 self, double const _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetSpeedConstant(self, _arg)


    def GetNormalizationFactor(self) -> "double":
        """GetNormalizationFactor(itkFastMarchingBaseIF3IF3 self) -> double"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetNormalizationFactor(self)


    def SetNormalizationFactor(self, _arg: 'double const') -> "void":
        """SetNormalizationFactor(itkFastMarchingBaseIF3IF3 self, double const _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetNormalizationFactor(self, _arg)


    def GetTargetReachedValue(self) -> "float":
        """GetTargetReachedValue(itkFastMarchingBaseIF3IF3 self) -> float"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetTargetReachedValue(self)


    def SetCollectPoints(self, _arg: 'bool const') -> "void":
        """SetCollectPoints(itkFastMarchingBaseIF3IF3 self, bool const _arg)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetCollectPoints(self, _arg)


    def GetCollectPoints(self) -> "bool const &":
        """GetCollectPoints(itkFastMarchingBaseIF3IF3 self) -> bool const &"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetCollectPoints(self)


    def CollectPointsOn(self) -> "void":
        """CollectPointsOn(itkFastMarchingBaseIF3IF3 self)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_CollectPointsOn(self)


    def CollectPointsOff(self) -> "void":
        """CollectPointsOff(itkFastMarchingBaseIF3IF3 self)"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_CollectPointsOff(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseIF3IF3

    def cast(obj: 'itkLightObject') -> "itkFastMarchingBaseIF3IF3 *":
        """cast(itkLightObject obj) -> itkFastMarchingBaseIF3IF3"""
        return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFastMarchingBaseIF3IF3

        Create a new object of the class itkFastMarchingBaseIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingBaseIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFastMarchingBaseIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFastMarchingBaseIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFastMarchingBaseIF3IF3.SetTopologyCheck = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetTopologyCheck, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetTopologyCheck = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetTopologyCheck, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.SetTrialPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetTrialPoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetModifiableTrialPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableTrialPoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetTrialPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetTrialPoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.SetAlivePoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetAlivePoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetModifiableAlivePoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableAlivePoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetAlivePoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetAlivePoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.SetProcessedPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetProcessedPoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetModifiableProcessedPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableProcessedPoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetProcessedPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetProcessedPoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.SetForbiddenPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetForbiddenPoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetModifiableForbiddenPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableForbiddenPoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetForbiddenPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetForbiddenPoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.SetStoppingCriterion = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetStoppingCriterion, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetModifiableStoppingCriterion = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableStoppingCriterion, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetStoppingCriterion = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetStoppingCriterion, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetSpeedConstant = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetSpeedConstant, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.SetSpeedConstant = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetSpeedConstant, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetNormalizationFactor = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetNormalizationFactor, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.SetNormalizationFactor = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetNormalizationFactor, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetTargetReachedValue = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetTargetReachedValue, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.SetCollectPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetCollectPoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.GetCollectPoints = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetCollectPoints, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.CollectPointsOn = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_CollectPointsOn, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3.CollectPointsOff = new_instancemethod(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_CollectPointsOff, None, itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3_swigregister = _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_swigregister
itkFastMarchingBaseIF3IF3_swigregister(itkFastMarchingBaseIF3IF3)

def itkFastMarchingBaseIF3IF3_cast(obj: 'itkLightObject') -> "itkFastMarchingBaseIF3IF3 *":
    """itkFastMarchingBaseIF3IF3_cast(itkLightObject obj) -> itkFastMarchingBaseIF3IF3"""
    return _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_cast(obj)

class itkVectorContainerUILSNF2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerUILSNF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerUILSNF2_Pointer":
        """__New_orig__() -> itkVectorContainerUILSNF2_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerUILSNF2_Pointer":
        """Clone(itkVectorContainerUILSNF2 self) -> itkVectorContainerUILSNF2_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkLevelSetNodeF2,std::allocator< itkLevelSetNodeF2 > > &":
        """CastToSTLContainer(itkVectorContainerUILSNF2 self) -> std::vector< itkLevelSetNodeF2,std::allocator< itkLevelSetNodeF2 > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkLevelSetNodeF2,std::allocator< itkLevelSetNodeF2 > > const &":
        """CastToSTLConstContainer(itkVectorContainerUILSNF2 self) -> std::vector< itkLevelSetNodeF2,std::allocator< itkLevelSetNodeF2 > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkLevelSetNodeF2 const &":
        """
        ElementAt(itkVectorContainerUILSNF2 self, unsigned int arg0) -> itkLevelSetNodeF2
        ElementAt(itkVectorContainerUILSNF2 self, unsigned int arg0) -> itkLevelSetNodeF2
        """
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned int') -> "itkLevelSetNodeF2 &":
        """CreateElementAt(itkVectorContainerUILSNF2 self, unsigned int arg0) -> itkLevelSetNodeF2"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned int') -> "itkLevelSetNodeF2":
        """GetElement(itkVectorContainerUILSNF2 self, unsigned int arg0) -> itkLevelSetNodeF2"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeF2') -> "void":
        """SetElement(itkVectorContainerUILSNF2 self, unsigned int arg0, itkLevelSetNodeF2 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeF2') -> "void":
        """InsertElement(itkVectorContainerUILSNF2 self, unsigned int arg0, itkLevelSetNodeF2 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned int') -> "bool":
        """IndexExists(itkVectorContainerUILSNF2 self, unsigned int arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeF2') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerUILSNF2 self, unsigned int arg0, itkLevelSetNodeF2 arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned int') -> "void":
        """CreateIndex(itkVectorContainerUILSNF2 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned int') -> "void":
        """DeleteIndex(itkVectorContainerUILSNF2 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned int":
        """Size(itkVectorContainerUILSNF2 self) -> unsigned int"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Size(self)


    def Reserve(self, arg0: 'unsigned int') -> "void":
        """Reserve(itkVectorContainerUILSNF2 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerUILSNF2 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerUILSNF2 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNF2

    def cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNF2 *":
        """cast(itkLightObject obj) -> itkVectorContainerUILSNF2"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNF2

        Create a new object of the class itkVectorContainerUILSNF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerUILSNF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerUILSNF2.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Clone, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CastToSTLContainer, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CastToSTLConstContainer, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_ElementAt, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CreateElementAt, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_GetElement, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_SetElement, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_InsertElement, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_IndexExists, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_GetElementIfIndexExists, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CreateIndex, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_DeleteIndex, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Size, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Reserve, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Squeeze, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Initialize, None, itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2_swigregister = _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_swigregister
itkVectorContainerUILSNF2_swigregister(itkVectorContainerUILSNF2)

def itkVectorContainerUILSNF2___New_orig__() -> "itkVectorContainerUILSNF2_Pointer":
    """itkVectorContainerUILSNF2___New_orig__() -> itkVectorContainerUILSNF2_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2___New_orig__()

def itkVectorContainerUILSNF2_cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNF2 *":
    """itkVectorContainerUILSNF2_cast(itkLightObject obj) -> itkVectorContainerUILSNF2"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_cast(obj)

class itkVectorContainerUILSNF3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerUILSNF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerUILSNF3_Pointer":
        """__New_orig__() -> itkVectorContainerUILSNF3_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerUILSNF3_Pointer":
        """Clone(itkVectorContainerUILSNF3 self) -> itkVectorContainerUILSNF3_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkLevelSetNodeF3,std::allocator< itkLevelSetNodeF3 > > &":
        """CastToSTLContainer(itkVectorContainerUILSNF3 self) -> std::vector< itkLevelSetNodeF3,std::allocator< itkLevelSetNodeF3 > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkLevelSetNodeF3,std::allocator< itkLevelSetNodeF3 > > const &":
        """CastToSTLConstContainer(itkVectorContainerUILSNF3 self) -> std::vector< itkLevelSetNodeF3,std::allocator< itkLevelSetNodeF3 > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkLevelSetNodeF3 const &":
        """
        ElementAt(itkVectorContainerUILSNF3 self, unsigned int arg0) -> itkLevelSetNodeF3
        ElementAt(itkVectorContainerUILSNF3 self, unsigned int arg0) -> itkLevelSetNodeF3
        """
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned int') -> "itkLevelSetNodeF3 &":
        """CreateElementAt(itkVectorContainerUILSNF3 self, unsigned int arg0) -> itkLevelSetNodeF3"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned int') -> "itkLevelSetNodeF3":
        """GetElement(itkVectorContainerUILSNF3 self, unsigned int arg0) -> itkLevelSetNodeF3"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeF3') -> "void":
        """SetElement(itkVectorContainerUILSNF3 self, unsigned int arg0, itkLevelSetNodeF3 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeF3') -> "void":
        """InsertElement(itkVectorContainerUILSNF3 self, unsigned int arg0, itkLevelSetNodeF3 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned int') -> "bool":
        """IndexExists(itkVectorContainerUILSNF3 self, unsigned int arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeF3') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerUILSNF3 self, unsigned int arg0, itkLevelSetNodeF3 arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned int') -> "void":
        """CreateIndex(itkVectorContainerUILSNF3 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned int') -> "void":
        """DeleteIndex(itkVectorContainerUILSNF3 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned int":
        """Size(itkVectorContainerUILSNF3 self) -> unsigned int"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Size(self)


    def Reserve(self, arg0: 'unsigned int') -> "void":
        """Reserve(itkVectorContainerUILSNF3 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerUILSNF3 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerUILSNF3 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNF3

    def cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNF3 *":
        """cast(itkLightObject obj) -> itkVectorContainerUILSNF3"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNF3

        Create a new object of the class itkVectorContainerUILSNF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerUILSNF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerUILSNF3.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Clone, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CastToSTLContainer, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CastToSTLConstContainer, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_ElementAt, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CreateElementAt, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_GetElement, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_SetElement, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_InsertElement, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_IndexExists, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_GetElementIfIndexExists, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CreateIndex, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_DeleteIndex, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Size, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Reserve, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Squeeze, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Initialize, None, itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3_swigregister = _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_swigregister
itkVectorContainerUILSNF3_swigregister(itkVectorContainerUILSNF3)

def itkVectorContainerUILSNF3___New_orig__() -> "itkVectorContainerUILSNF3_Pointer":
    """itkVectorContainerUILSNF3___New_orig__() -> itkVectorContainerUILSNF3_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3___New_orig__()

def itkVectorContainerUILSNF3_cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNF3 *":
    """itkVectorContainerUILSNF3_cast(itkLightObject obj) -> itkVectorContainerUILSNF3"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_cast(obj)

class itkVectorContainerUILSNSS2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerUILSNSS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerUILSNSS2_Pointer":
        """__New_orig__() -> itkVectorContainerUILSNSS2_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerUILSNSS2_Pointer":
        """Clone(itkVectorContainerUILSNSS2 self) -> itkVectorContainerUILSNSS2_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkLevelSetNodeSS2,std::allocator< itkLevelSetNodeSS2 > > &":
        """CastToSTLContainer(itkVectorContainerUILSNSS2 self) -> std::vector< itkLevelSetNodeSS2,std::allocator< itkLevelSetNodeSS2 > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkLevelSetNodeSS2,std::allocator< itkLevelSetNodeSS2 > > const &":
        """CastToSTLConstContainer(itkVectorContainerUILSNSS2 self) -> std::vector< itkLevelSetNodeSS2,std::allocator< itkLevelSetNodeSS2 > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkLevelSetNodeSS2 const &":
        """
        ElementAt(itkVectorContainerUILSNSS2 self, unsigned int arg0) -> itkLevelSetNodeSS2
        ElementAt(itkVectorContainerUILSNSS2 self, unsigned int arg0) -> itkLevelSetNodeSS2
        """
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned int') -> "itkLevelSetNodeSS2 &":
        """CreateElementAt(itkVectorContainerUILSNSS2 self, unsigned int arg0) -> itkLevelSetNodeSS2"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned int') -> "itkLevelSetNodeSS2":
        """GetElement(itkVectorContainerUILSNSS2 self, unsigned int arg0) -> itkLevelSetNodeSS2"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeSS2') -> "void":
        """SetElement(itkVectorContainerUILSNSS2 self, unsigned int arg0, itkLevelSetNodeSS2 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeSS2') -> "void":
        """InsertElement(itkVectorContainerUILSNSS2 self, unsigned int arg0, itkLevelSetNodeSS2 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned int') -> "bool":
        """IndexExists(itkVectorContainerUILSNSS2 self, unsigned int arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeSS2') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerUILSNSS2 self, unsigned int arg0, itkLevelSetNodeSS2 arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned int') -> "void":
        """CreateIndex(itkVectorContainerUILSNSS2 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned int') -> "void":
        """DeleteIndex(itkVectorContainerUILSNSS2 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned int":
        """Size(itkVectorContainerUILSNSS2 self) -> unsigned int"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Size(self)


    def Reserve(self, arg0: 'unsigned int') -> "void":
        """Reserve(itkVectorContainerUILSNSS2 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerUILSNSS2 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerUILSNSS2 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNSS2

    def cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNSS2 *":
        """cast(itkLightObject obj) -> itkVectorContainerUILSNSS2"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNSS2

        Create a new object of the class itkVectorContainerUILSNSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNSS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNSS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerUILSNSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerUILSNSS2.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Clone, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CastToSTLContainer, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CastToSTLConstContainer, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_ElementAt, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CreateElementAt, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_GetElement, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_SetElement, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_InsertElement, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_IndexExists, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_GetElementIfIndexExists, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CreateIndex, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_DeleteIndex, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Size, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Reserve, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Squeeze, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Initialize, None, itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2_swigregister = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_swigregister
itkVectorContainerUILSNSS2_swigregister(itkVectorContainerUILSNSS2)

def itkVectorContainerUILSNSS2___New_orig__() -> "itkVectorContainerUILSNSS2_Pointer":
    """itkVectorContainerUILSNSS2___New_orig__() -> itkVectorContainerUILSNSS2_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2___New_orig__()

def itkVectorContainerUILSNSS2_cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNSS2 *":
    """itkVectorContainerUILSNSS2_cast(itkLightObject obj) -> itkVectorContainerUILSNSS2"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_cast(obj)

class itkVectorContainerUILSNSS3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerUILSNSS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerUILSNSS3_Pointer":
        """__New_orig__() -> itkVectorContainerUILSNSS3_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerUILSNSS3_Pointer":
        """Clone(itkVectorContainerUILSNSS3 self) -> itkVectorContainerUILSNSS3_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkLevelSetNodeSS3,std::allocator< itkLevelSetNodeSS3 > > &":
        """CastToSTLContainer(itkVectorContainerUILSNSS3 self) -> std::vector< itkLevelSetNodeSS3,std::allocator< itkLevelSetNodeSS3 > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkLevelSetNodeSS3,std::allocator< itkLevelSetNodeSS3 > > const &":
        """CastToSTLConstContainer(itkVectorContainerUILSNSS3 self) -> std::vector< itkLevelSetNodeSS3,std::allocator< itkLevelSetNodeSS3 > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkLevelSetNodeSS3 const &":
        """
        ElementAt(itkVectorContainerUILSNSS3 self, unsigned int arg0) -> itkLevelSetNodeSS3
        ElementAt(itkVectorContainerUILSNSS3 self, unsigned int arg0) -> itkLevelSetNodeSS3
        """
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned int') -> "itkLevelSetNodeSS3 &":
        """CreateElementAt(itkVectorContainerUILSNSS3 self, unsigned int arg0) -> itkLevelSetNodeSS3"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned int') -> "itkLevelSetNodeSS3":
        """GetElement(itkVectorContainerUILSNSS3 self, unsigned int arg0) -> itkLevelSetNodeSS3"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeSS3') -> "void":
        """SetElement(itkVectorContainerUILSNSS3 self, unsigned int arg0, itkLevelSetNodeSS3 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeSS3') -> "void":
        """InsertElement(itkVectorContainerUILSNSS3 self, unsigned int arg0, itkLevelSetNodeSS3 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned int') -> "bool":
        """IndexExists(itkVectorContainerUILSNSS3 self, unsigned int arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeSS3') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerUILSNSS3 self, unsigned int arg0, itkLevelSetNodeSS3 arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned int') -> "void":
        """CreateIndex(itkVectorContainerUILSNSS3 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned int') -> "void":
        """DeleteIndex(itkVectorContainerUILSNSS3 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned int":
        """Size(itkVectorContainerUILSNSS3 self) -> unsigned int"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Size(self)


    def Reserve(self, arg0: 'unsigned int') -> "void":
        """Reserve(itkVectorContainerUILSNSS3 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerUILSNSS3 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerUILSNSS3 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNSS3

    def cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNSS3 *":
        """cast(itkLightObject obj) -> itkVectorContainerUILSNSS3"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNSS3

        Create a new object of the class itkVectorContainerUILSNSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerUILSNSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerUILSNSS3.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Clone, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CastToSTLContainer, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CastToSTLConstContainer, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_ElementAt, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CreateElementAt, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_GetElement, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_SetElement, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_InsertElement, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_IndexExists, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_GetElementIfIndexExists, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CreateIndex, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_DeleteIndex, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Size, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Reserve, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Squeeze, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Initialize, None, itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3_swigregister = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_swigregister
itkVectorContainerUILSNSS3_swigregister(itkVectorContainerUILSNSS3)

def itkVectorContainerUILSNSS3___New_orig__() -> "itkVectorContainerUILSNSS3_Pointer":
    """itkVectorContainerUILSNSS3___New_orig__() -> itkVectorContainerUILSNSS3_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3___New_orig__()

def itkVectorContainerUILSNSS3_cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNSS3 *":
    """itkVectorContainerUILSNSS3_cast(itkLightObject obj) -> itkVectorContainerUILSNSS3"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_cast(obj)

class itkVectorContainerUILSNUC2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerUILSNUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerUILSNUC2_Pointer":
        """__New_orig__() -> itkVectorContainerUILSNUC2_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerUILSNUC2_Pointer":
        """Clone(itkVectorContainerUILSNUC2 self) -> itkVectorContainerUILSNUC2_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkLevelSetNodeUC2,std::allocator< itkLevelSetNodeUC2 > > &":
        """CastToSTLContainer(itkVectorContainerUILSNUC2 self) -> std::vector< itkLevelSetNodeUC2,std::allocator< itkLevelSetNodeUC2 > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkLevelSetNodeUC2,std::allocator< itkLevelSetNodeUC2 > > const &":
        """CastToSTLConstContainer(itkVectorContainerUILSNUC2 self) -> std::vector< itkLevelSetNodeUC2,std::allocator< itkLevelSetNodeUC2 > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkLevelSetNodeUC2 const &":
        """
        ElementAt(itkVectorContainerUILSNUC2 self, unsigned int arg0) -> itkLevelSetNodeUC2
        ElementAt(itkVectorContainerUILSNUC2 self, unsigned int arg0) -> itkLevelSetNodeUC2
        """
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned int') -> "itkLevelSetNodeUC2 &":
        """CreateElementAt(itkVectorContainerUILSNUC2 self, unsigned int arg0) -> itkLevelSetNodeUC2"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned int') -> "itkLevelSetNodeUC2":
        """GetElement(itkVectorContainerUILSNUC2 self, unsigned int arg0) -> itkLevelSetNodeUC2"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeUC2') -> "void":
        """SetElement(itkVectorContainerUILSNUC2 self, unsigned int arg0, itkLevelSetNodeUC2 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeUC2') -> "void":
        """InsertElement(itkVectorContainerUILSNUC2 self, unsigned int arg0, itkLevelSetNodeUC2 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned int') -> "bool":
        """IndexExists(itkVectorContainerUILSNUC2 self, unsigned int arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeUC2') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerUILSNUC2 self, unsigned int arg0, itkLevelSetNodeUC2 arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned int') -> "void":
        """CreateIndex(itkVectorContainerUILSNUC2 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned int') -> "void":
        """DeleteIndex(itkVectorContainerUILSNUC2 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned int":
        """Size(itkVectorContainerUILSNUC2 self) -> unsigned int"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Size(self)


    def Reserve(self, arg0: 'unsigned int') -> "void":
        """Reserve(itkVectorContainerUILSNUC2 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerUILSNUC2 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerUILSNUC2 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUC2

    def cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNUC2 *":
        """cast(itkLightObject obj) -> itkVectorContainerUILSNUC2"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUC2

        Create a new object of the class itkVectorContainerUILSNUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerUILSNUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerUILSNUC2.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Clone, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CastToSTLContainer, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CastToSTLConstContainer, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_ElementAt, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CreateElementAt, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_GetElement, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_SetElement, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_InsertElement, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_IndexExists, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_GetElementIfIndexExists, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CreateIndex, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_DeleteIndex, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Size, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Reserve, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Squeeze, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Initialize, None, itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2_swigregister = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_swigregister
itkVectorContainerUILSNUC2_swigregister(itkVectorContainerUILSNUC2)

def itkVectorContainerUILSNUC2___New_orig__() -> "itkVectorContainerUILSNUC2_Pointer":
    """itkVectorContainerUILSNUC2___New_orig__() -> itkVectorContainerUILSNUC2_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2___New_orig__()

def itkVectorContainerUILSNUC2_cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNUC2 *":
    """itkVectorContainerUILSNUC2_cast(itkLightObject obj) -> itkVectorContainerUILSNUC2"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_cast(obj)

class itkVectorContainerUILSNUC3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerUILSNUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerUILSNUC3_Pointer":
        """__New_orig__() -> itkVectorContainerUILSNUC3_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerUILSNUC3_Pointer":
        """Clone(itkVectorContainerUILSNUC3 self) -> itkVectorContainerUILSNUC3_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkLevelSetNodeUC3,std::allocator< itkLevelSetNodeUC3 > > &":
        """CastToSTLContainer(itkVectorContainerUILSNUC3 self) -> std::vector< itkLevelSetNodeUC3,std::allocator< itkLevelSetNodeUC3 > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkLevelSetNodeUC3,std::allocator< itkLevelSetNodeUC3 > > const &":
        """CastToSTLConstContainer(itkVectorContainerUILSNUC3 self) -> std::vector< itkLevelSetNodeUC3,std::allocator< itkLevelSetNodeUC3 > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkLevelSetNodeUC3 const &":
        """
        ElementAt(itkVectorContainerUILSNUC3 self, unsigned int arg0) -> itkLevelSetNodeUC3
        ElementAt(itkVectorContainerUILSNUC3 self, unsigned int arg0) -> itkLevelSetNodeUC3
        """
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned int') -> "itkLevelSetNodeUC3 &":
        """CreateElementAt(itkVectorContainerUILSNUC3 self, unsigned int arg0) -> itkLevelSetNodeUC3"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned int') -> "itkLevelSetNodeUC3":
        """GetElement(itkVectorContainerUILSNUC3 self, unsigned int arg0) -> itkLevelSetNodeUC3"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeUC3') -> "void":
        """SetElement(itkVectorContainerUILSNUC3 self, unsigned int arg0, itkLevelSetNodeUC3 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeUC3') -> "void":
        """InsertElement(itkVectorContainerUILSNUC3 self, unsigned int arg0, itkLevelSetNodeUC3 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned int') -> "bool":
        """IndexExists(itkVectorContainerUILSNUC3 self, unsigned int arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeUC3') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerUILSNUC3 self, unsigned int arg0, itkLevelSetNodeUC3 arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned int') -> "void":
        """CreateIndex(itkVectorContainerUILSNUC3 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned int') -> "void":
        """DeleteIndex(itkVectorContainerUILSNUC3 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned int":
        """Size(itkVectorContainerUILSNUC3 self) -> unsigned int"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Size(self)


    def Reserve(self, arg0: 'unsigned int') -> "void":
        """Reserve(itkVectorContainerUILSNUC3 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerUILSNUC3 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerUILSNUC3 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUC3

    def cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNUC3 *":
        """cast(itkLightObject obj) -> itkVectorContainerUILSNUC3"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUC3

        Create a new object of the class itkVectorContainerUILSNUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerUILSNUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerUILSNUC3.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Clone, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CastToSTLContainer, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CastToSTLConstContainer, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_ElementAt, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CreateElementAt, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_GetElement, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_SetElement, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_InsertElement, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_IndexExists, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_GetElementIfIndexExists, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CreateIndex, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_DeleteIndex, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Size, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Reserve, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Squeeze, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Initialize, None, itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3_swigregister = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_swigregister
itkVectorContainerUILSNUC3_swigregister(itkVectorContainerUILSNUC3)

def itkVectorContainerUILSNUC3___New_orig__() -> "itkVectorContainerUILSNUC3_Pointer":
    """itkVectorContainerUILSNUC3___New_orig__() -> itkVectorContainerUILSNUC3_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3___New_orig__()

def itkVectorContainerUILSNUC3_cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNUC3 *":
    """itkVectorContainerUILSNUC3_cast(itkLightObject obj) -> itkVectorContainerUILSNUC3"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_cast(obj)

class itkVectorContainerUILSNUS2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerUILSNUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerUILSNUS2_Pointer":
        """__New_orig__() -> itkVectorContainerUILSNUS2_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerUILSNUS2_Pointer":
        """Clone(itkVectorContainerUILSNUS2 self) -> itkVectorContainerUILSNUS2_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkLevelSetNodeUS2,std::allocator< itkLevelSetNodeUS2 > > &":
        """CastToSTLContainer(itkVectorContainerUILSNUS2 self) -> std::vector< itkLevelSetNodeUS2,std::allocator< itkLevelSetNodeUS2 > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkLevelSetNodeUS2,std::allocator< itkLevelSetNodeUS2 > > const &":
        """CastToSTLConstContainer(itkVectorContainerUILSNUS2 self) -> std::vector< itkLevelSetNodeUS2,std::allocator< itkLevelSetNodeUS2 > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkLevelSetNodeUS2 const &":
        """
        ElementAt(itkVectorContainerUILSNUS2 self, unsigned int arg0) -> itkLevelSetNodeUS2
        ElementAt(itkVectorContainerUILSNUS2 self, unsigned int arg0) -> itkLevelSetNodeUS2
        """
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned int') -> "itkLevelSetNodeUS2 &":
        """CreateElementAt(itkVectorContainerUILSNUS2 self, unsigned int arg0) -> itkLevelSetNodeUS2"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned int') -> "itkLevelSetNodeUS2":
        """GetElement(itkVectorContainerUILSNUS2 self, unsigned int arg0) -> itkLevelSetNodeUS2"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeUS2') -> "void":
        """SetElement(itkVectorContainerUILSNUS2 self, unsigned int arg0, itkLevelSetNodeUS2 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeUS2') -> "void":
        """InsertElement(itkVectorContainerUILSNUS2 self, unsigned int arg0, itkLevelSetNodeUS2 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned int') -> "bool":
        """IndexExists(itkVectorContainerUILSNUS2 self, unsigned int arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeUS2') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerUILSNUS2 self, unsigned int arg0, itkLevelSetNodeUS2 arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned int') -> "void":
        """CreateIndex(itkVectorContainerUILSNUS2 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned int') -> "void":
        """DeleteIndex(itkVectorContainerUILSNUS2 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned int":
        """Size(itkVectorContainerUILSNUS2 self) -> unsigned int"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Size(self)


    def Reserve(self, arg0: 'unsigned int') -> "void":
        """Reserve(itkVectorContainerUILSNUS2 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerUILSNUS2 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerUILSNUS2 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUS2

    def cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNUS2 *":
        """cast(itkLightObject obj) -> itkVectorContainerUILSNUS2"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUS2

        Create a new object of the class itkVectorContainerUILSNUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerUILSNUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerUILSNUS2.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Clone, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CastToSTLContainer, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CastToSTLConstContainer, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_ElementAt, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CreateElementAt, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_GetElement, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_SetElement, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_InsertElement, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_IndexExists, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_GetElementIfIndexExists, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CreateIndex, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_DeleteIndex, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Size, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Reserve, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Squeeze, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Initialize, None, itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2_swigregister = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_swigregister
itkVectorContainerUILSNUS2_swigregister(itkVectorContainerUILSNUS2)

def itkVectorContainerUILSNUS2___New_orig__() -> "itkVectorContainerUILSNUS2_Pointer":
    """itkVectorContainerUILSNUS2___New_orig__() -> itkVectorContainerUILSNUS2_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2___New_orig__()

def itkVectorContainerUILSNUS2_cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNUS2 *":
    """itkVectorContainerUILSNUS2_cast(itkLightObject obj) -> itkVectorContainerUILSNUS2"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_cast(obj)

class itkVectorContainerUILSNUS3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerUILSNUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerUILSNUS3_Pointer":
        """__New_orig__() -> itkVectorContainerUILSNUS3_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerUILSNUS3_Pointer":
        """Clone(itkVectorContainerUILSNUS3 self) -> itkVectorContainerUILSNUS3_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkLevelSetNodeUS3,std::allocator< itkLevelSetNodeUS3 > > &":
        """CastToSTLContainer(itkVectorContainerUILSNUS3 self) -> std::vector< itkLevelSetNodeUS3,std::allocator< itkLevelSetNodeUS3 > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkLevelSetNodeUS3,std::allocator< itkLevelSetNodeUS3 > > const &":
        """CastToSTLConstContainer(itkVectorContainerUILSNUS3 self) -> std::vector< itkLevelSetNodeUS3,std::allocator< itkLevelSetNodeUS3 > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkLevelSetNodeUS3 const &":
        """
        ElementAt(itkVectorContainerUILSNUS3 self, unsigned int arg0) -> itkLevelSetNodeUS3
        ElementAt(itkVectorContainerUILSNUS3 self, unsigned int arg0) -> itkLevelSetNodeUS3
        """
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned int') -> "itkLevelSetNodeUS3 &":
        """CreateElementAt(itkVectorContainerUILSNUS3 self, unsigned int arg0) -> itkLevelSetNodeUS3"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned int') -> "itkLevelSetNodeUS3":
        """GetElement(itkVectorContainerUILSNUS3 self, unsigned int arg0) -> itkLevelSetNodeUS3"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeUS3') -> "void":
        """SetElement(itkVectorContainerUILSNUS3 self, unsigned int arg0, itkLevelSetNodeUS3 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeUS3') -> "void":
        """InsertElement(itkVectorContainerUILSNUS3 self, unsigned int arg0, itkLevelSetNodeUS3 arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned int') -> "bool":
        """IndexExists(itkVectorContainerUILSNUS3 self, unsigned int arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned int', arg1: 'itkLevelSetNodeUS3') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerUILSNUS3 self, unsigned int arg0, itkLevelSetNodeUS3 arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned int') -> "void":
        """CreateIndex(itkVectorContainerUILSNUS3 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned int') -> "void":
        """DeleteIndex(itkVectorContainerUILSNUS3 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned int":
        """Size(itkVectorContainerUILSNUS3 self) -> unsigned int"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Size(self)


    def Reserve(self, arg0: 'unsigned int') -> "void":
        """Reserve(itkVectorContainerUILSNUS3 self, unsigned int arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerUILSNUS3 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerUILSNUS3 self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUS3

    def cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNUS3 *":
        """cast(itkLightObject obj) -> itkVectorContainerUILSNUS3"""
        return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUS3

        Create a new object of the class itkVectorContainerUILSNUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerUILSNUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerUILSNUS3.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Clone, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CastToSTLContainer, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CastToSTLConstContainer, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_ElementAt, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CreateElementAt, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_GetElement, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_SetElement, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_InsertElement, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_IndexExists, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_GetElementIfIndexExists, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CreateIndex, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_DeleteIndex, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Size, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Reserve, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Squeeze, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Initialize, None, itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3_swigregister = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_swigregister
itkVectorContainerUILSNUS3_swigregister(itkVectorContainerUILSNUS3)

def itkVectorContainerUILSNUS3___New_orig__() -> "itkVectorContainerUILSNUS3_Pointer":
    """itkVectorContainerUILSNUS3___New_orig__() -> itkVectorContainerUILSNUS3_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3___New_orig__()

def itkVectorContainerUILSNUS3_cast(obj: 'itkLightObject') -> "itkVectorContainerUILSNUS3 *":
    """itkVectorContainerUILSNUS3_cast(itkLightObject obj) -> itkVectorContainerUILSNUS3"""
    return _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_cast(obj)

class itkVectorContainerULLNPI2F(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerULLNPI2F class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerULLNPI2F_Pointer":
        """__New_orig__() -> itkVectorContainerULLNPI2F_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerULLNPI2F_Pointer":
        """Clone(itkVectorContainerULLNPI2F self) -> itkVectorContainerULLNPI2F_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkNodePairI2F,std::allocator< itkNodePairI2F > > &":
        """CastToSTLContainer(itkVectorContainerULLNPI2F self) -> std::vector< itkNodePairI2F,std::allocator< itkNodePairI2F > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkNodePairI2F,std::allocator< itkNodePairI2F > > const &":
        """CastToSTLConstContainer(itkVectorContainerULLNPI2F self) -> std::vector< itkNodePairI2F,std::allocator< itkNodePairI2F > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkNodePairI2F const &":
        """
        ElementAt(itkVectorContainerULLNPI2F self, unsigned long long arg0) -> itkNodePairI2F
        ElementAt(itkVectorContainerULLNPI2F self, unsigned long long arg0) -> itkNodePairI2F
        """
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned long long') -> "itkNodePairI2F &":
        """CreateElementAt(itkVectorContainerULLNPI2F self, unsigned long long arg0) -> itkNodePairI2F"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned long long') -> "itkNodePairI2F":
        """GetElement(itkVectorContainerULLNPI2F self, unsigned long long arg0) -> itkNodePairI2F"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI2F') -> "void":
        """SetElement(itkVectorContainerULLNPI2F self, unsigned long long arg0, itkNodePairI2F arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI2F') -> "void":
        """InsertElement(itkVectorContainerULLNPI2F self, unsigned long long arg0, itkNodePairI2F arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned long long') -> "bool":
        """IndexExists(itkVectorContainerULLNPI2F self, unsigned long long arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned long long', arg1: 'itkNodePairI2F') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerULLNPI2F self, unsigned long long arg0, itkNodePairI2F arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned long long') -> "void":
        """CreateIndex(itkVectorContainerULLNPI2F self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned long long') -> "void":
        """DeleteIndex(itkVectorContainerULLNPI2F self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned long long":
        """Size(itkVectorContainerULLNPI2F self) -> unsigned long long"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Size(self)


    def Reserve(self, arg0: 'unsigned long long') -> "void":
        """Reserve(itkVectorContainerULLNPI2F self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerULLNPI2F self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerULLNPI2F self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI2F

    def cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI2F *":
        """cast(itkLightObject obj) -> itkVectorContainerULLNPI2F"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI2F

        Create a new object of the class itkVectorContainerULLNPI2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI2F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI2F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerULLNPI2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerULLNPI2F.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Clone, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_CastToSTLContainer, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_CastToSTLConstContainer, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_ElementAt, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_CreateElementAt, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_GetElement, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_SetElement, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_InsertElement, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_IndexExists, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_GetElementIfIndexExists, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_CreateIndex, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_DeleteIndex, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Size, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Reserve, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Squeeze, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Initialize, None, itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F_swigregister = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_swigregister
itkVectorContainerULLNPI2F_swigregister(itkVectorContainerULLNPI2F)

def itkVectorContainerULLNPI2F___New_orig__() -> "itkVectorContainerULLNPI2F_Pointer":
    """itkVectorContainerULLNPI2F___New_orig__() -> itkVectorContainerULLNPI2F_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F___New_orig__()

def itkVectorContainerULLNPI2F_cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI2F *":
    """itkVectorContainerULLNPI2F_cast(itkLightObject obj) -> itkVectorContainerULLNPI2F"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_cast(obj)

class itkVectorContainerULLNPI2SS(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerULLNPI2SS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerULLNPI2SS_Pointer":
        """__New_orig__() -> itkVectorContainerULLNPI2SS_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerULLNPI2SS_Pointer":
        """Clone(itkVectorContainerULLNPI2SS self) -> itkVectorContainerULLNPI2SS_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkNodePairI2SS,std::allocator< itkNodePairI2SS > > &":
        """CastToSTLContainer(itkVectorContainerULLNPI2SS self) -> std::vector< itkNodePairI2SS,std::allocator< itkNodePairI2SS > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkNodePairI2SS,std::allocator< itkNodePairI2SS > > const &":
        """CastToSTLConstContainer(itkVectorContainerULLNPI2SS self) -> std::vector< itkNodePairI2SS,std::allocator< itkNodePairI2SS > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkNodePairI2SS const &":
        """
        ElementAt(itkVectorContainerULLNPI2SS self, unsigned long long arg0) -> itkNodePairI2SS
        ElementAt(itkVectorContainerULLNPI2SS self, unsigned long long arg0) -> itkNodePairI2SS
        """
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned long long') -> "itkNodePairI2SS &":
        """CreateElementAt(itkVectorContainerULLNPI2SS self, unsigned long long arg0) -> itkNodePairI2SS"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned long long') -> "itkNodePairI2SS":
        """GetElement(itkVectorContainerULLNPI2SS self, unsigned long long arg0) -> itkNodePairI2SS"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI2SS') -> "void":
        """SetElement(itkVectorContainerULLNPI2SS self, unsigned long long arg0, itkNodePairI2SS arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI2SS') -> "void":
        """InsertElement(itkVectorContainerULLNPI2SS self, unsigned long long arg0, itkNodePairI2SS arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned long long') -> "bool":
        """IndexExists(itkVectorContainerULLNPI2SS self, unsigned long long arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned long long', arg1: 'itkNodePairI2SS') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerULLNPI2SS self, unsigned long long arg0, itkNodePairI2SS arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned long long') -> "void":
        """CreateIndex(itkVectorContainerULLNPI2SS self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned long long') -> "void":
        """DeleteIndex(itkVectorContainerULLNPI2SS self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned long long":
        """Size(itkVectorContainerULLNPI2SS self) -> unsigned long long"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Size(self)


    def Reserve(self, arg0: 'unsigned long long') -> "void":
        """Reserve(itkVectorContainerULLNPI2SS self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerULLNPI2SS self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerULLNPI2SS self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI2SS

    def cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI2SS *":
        """cast(itkLightObject obj) -> itkVectorContainerULLNPI2SS"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI2SS

        Create a new object of the class itkVectorContainerULLNPI2SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI2SS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI2SS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerULLNPI2SS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerULLNPI2SS.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Clone, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_CastToSTLContainer, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_CastToSTLConstContainer, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_ElementAt, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_CreateElementAt, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_GetElement, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_SetElement, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_InsertElement, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_IndexExists, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_GetElementIfIndexExists, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_CreateIndex, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_DeleteIndex, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Size, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Reserve, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Squeeze, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Initialize, None, itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS_swigregister = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_swigregister
itkVectorContainerULLNPI2SS_swigregister(itkVectorContainerULLNPI2SS)

def itkVectorContainerULLNPI2SS___New_orig__() -> "itkVectorContainerULLNPI2SS_Pointer":
    """itkVectorContainerULLNPI2SS___New_orig__() -> itkVectorContainerULLNPI2SS_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS___New_orig__()

def itkVectorContainerULLNPI2SS_cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI2SS *":
    """itkVectorContainerULLNPI2SS_cast(itkLightObject obj) -> itkVectorContainerULLNPI2SS"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_cast(obj)

class itkVectorContainerULLNPI2UC(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerULLNPI2UC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerULLNPI2UC_Pointer":
        """__New_orig__() -> itkVectorContainerULLNPI2UC_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerULLNPI2UC_Pointer":
        """Clone(itkVectorContainerULLNPI2UC self) -> itkVectorContainerULLNPI2UC_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkNodePairI2UC,std::allocator< itkNodePairI2UC > > &":
        """CastToSTLContainer(itkVectorContainerULLNPI2UC self) -> std::vector< itkNodePairI2UC,std::allocator< itkNodePairI2UC > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkNodePairI2UC,std::allocator< itkNodePairI2UC > > const &":
        """CastToSTLConstContainer(itkVectorContainerULLNPI2UC self) -> std::vector< itkNodePairI2UC,std::allocator< itkNodePairI2UC > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkNodePairI2UC const &":
        """
        ElementAt(itkVectorContainerULLNPI2UC self, unsigned long long arg0) -> itkNodePairI2UC
        ElementAt(itkVectorContainerULLNPI2UC self, unsigned long long arg0) -> itkNodePairI2UC
        """
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned long long') -> "itkNodePairI2UC &":
        """CreateElementAt(itkVectorContainerULLNPI2UC self, unsigned long long arg0) -> itkNodePairI2UC"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned long long') -> "itkNodePairI2UC":
        """GetElement(itkVectorContainerULLNPI2UC self, unsigned long long arg0) -> itkNodePairI2UC"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI2UC') -> "void":
        """SetElement(itkVectorContainerULLNPI2UC self, unsigned long long arg0, itkNodePairI2UC arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI2UC') -> "void":
        """InsertElement(itkVectorContainerULLNPI2UC self, unsigned long long arg0, itkNodePairI2UC arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned long long') -> "bool":
        """IndexExists(itkVectorContainerULLNPI2UC self, unsigned long long arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned long long', arg1: 'itkNodePairI2UC') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerULLNPI2UC self, unsigned long long arg0, itkNodePairI2UC arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned long long') -> "void":
        """CreateIndex(itkVectorContainerULLNPI2UC self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned long long') -> "void":
        """DeleteIndex(itkVectorContainerULLNPI2UC self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned long long":
        """Size(itkVectorContainerULLNPI2UC self) -> unsigned long long"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Size(self)


    def Reserve(self, arg0: 'unsigned long long') -> "void":
        """Reserve(itkVectorContainerULLNPI2UC self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerULLNPI2UC self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerULLNPI2UC self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI2UC

    def cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI2UC *":
        """cast(itkLightObject obj) -> itkVectorContainerULLNPI2UC"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI2UC

        Create a new object of the class itkVectorContainerULLNPI2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI2UC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI2UC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerULLNPI2UC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerULLNPI2UC.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Clone, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_CastToSTLContainer, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_CastToSTLConstContainer, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_ElementAt, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_CreateElementAt, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_GetElement, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_SetElement, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_InsertElement, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_IndexExists, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_GetElementIfIndexExists, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_CreateIndex, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_DeleteIndex, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Size, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Reserve, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Squeeze, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Initialize, None, itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC_swigregister = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_swigregister
itkVectorContainerULLNPI2UC_swigregister(itkVectorContainerULLNPI2UC)

def itkVectorContainerULLNPI2UC___New_orig__() -> "itkVectorContainerULLNPI2UC_Pointer":
    """itkVectorContainerULLNPI2UC___New_orig__() -> itkVectorContainerULLNPI2UC_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC___New_orig__()

def itkVectorContainerULLNPI2UC_cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI2UC *":
    """itkVectorContainerULLNPI2UC_cast(itkLightObject obj) -> itkVectorContainerULLNPI2UC"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_cast(obj)

class itkVectorContainerULLNPI2US(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerULLNPI2US class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerULLNPI2US_Pointer":
        """__New_orig__() -> itkVectorContainerULLNPI2US_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerULLNPI2US_Pointer":
        """Clone(itkVectorContainerULLNPI2US self) -> itkVectorContainerULLNPI2US_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkNodePairI2US,std::allocator< itkNodePairI2US > > &":
        """CastToSTLContainer(itkVectorContainerULLNPI2US self) -> std::vector< itkNodePairI2US,std::allocator< itkNodePairI2US > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkNodePairI2US,std::allocator< itkNodePairI2US > > const &":
        """CastToSTLConstContainer(itkVectorContainerULLNPI2US self) -> std::vector< itkNodePairI2US,std::allocator< itkNodePairI2US > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkNodePairI2US const &":
        """
        ElementAt(itkVectorContainerULLNPI2US self, unsigned long long arg0) -> itkNodePairI2US
        ElementAt(itkVectorContainerULLNPI2US self, unsigned long long arg0) -> itkNodePairI2US
        """
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned long long') -> "itkNodePairI2US &":
        """CreateElementAt(itkVectorContainerULLNPI2US self, unsigned long long arg0) -> itkNodePairI2US"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned long long') -> "itkNodePairI2US":
        """GetElement(itkVectorContainerULLNPI2US self, unsigned long long arg0) -> itkNodePairI2US"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI2US') -> "void":
        """SetElement(itkVectorContainerULLNPI2US self, unsigned long long arg0, itkNodePairI2US arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI2US') -> "void":
        """InsertElement(itkVectorContainerULLNPI2US self, unsigned long long arg0, itkNodePairI2US arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned long long') -> "bool":
        """IndexExists(itkVectorContainerULLNPI2US self, unsigned long long arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned long long', arg1: 'itkNodePairI2US') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerULLNPI2US self, unsigned long long arg0, itkNodePairI2US arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned long long') -> "void":
        """CreateIndex(itkVectorContainerULLNPI2US self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned long long') -> "void":
        """DeleteIndex(itkVectorContainerULLNPI2US self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned long long":
        """Size(itkVectorContainerULLNPI2US self) -> unsigned long long"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Size(self)


    def Reserve(self, arg0: 'unsigned long long') -> "void":
        """Reserve(itkVectorContainerULLNPI2US self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerULLNPI2US self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerULLNPI2US self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI2US

    def cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI2US *":
        """cast(itkLightObject obj) -> itkVectorContainerULLNPI2US"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI2US

        Create a new object of the class itkVectorContainerULLNPI2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI2US.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI2US.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerULLNPI2US.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerULLNPI2US.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Clone, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_CastToSTLContainer, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_CastToSTLConstContainer, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_ElementAt, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_CreateElementAt, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_GetElement, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_SetElement, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_InsertElement, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_IndexExists, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_GetElementIfIndexExists, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_CreateIndex, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_DeleteIndex, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Size, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Reserve, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Squeeze, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Initialize, None, itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US_swigregister = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_swigregister
itkVectorContainerULLNPI2US_swigregister(itkVectorContainerULLNPI2US)

def itkVectorContainerULLNPI2US___New_orig__() -> "itkVectorContainerULLNPI2US_Pointer":
    """itkVectorContainerULLNPI2US___New_orig__() -> itkVectorContainerULLNPI2US_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US___New_orig__()

def itkVectorContainerULLNPI2US_cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI2US *":
    """itkVectorContainerULLNPI2US_cast(itkLightObject obj) -> itkVectorContainerULLNPI2US"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_cast(obj)

class itkVectorContainerULLNPI3F(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerULLNPI3F class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerULLNPI3F_Pointer":
        """__New_orig__() -> itkVectorContainerULLNPI3F_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerULLNPI3F_Pointer":
        """Clone(itkVectorContainerULLNPI3F self) -> itkVectorContainerULLNPI3F_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkNodePairI3F,std::allocator< itkNodePairI3F > > &":
        """CastToSTLContainer(itkVectorContainerULLNPI3F self) -> std::vector< itkNodePairI3F,std::allocator< itkNodePairI3F > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkNodePairI3F,std::allocator< itkNodePairI3F > > const &":
        """CastToSTLConstContainer(itkVectorContainerULLNPI3F self) -> std::vector< itkNodePairI3F,std::allocator< itkNodePairI3F > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkNodePairI3F const &":
        """
        ElementAt(itkVectorContainerULLNPI3F self, unsigned long long arg0) -> itkNodePairI3F
        ElementAt(itkVectorContainerULLNPI3F self, unsigned long long arg0) -> itkNodePairI3F
        """
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned long long') -> "itkNodePairI3F &":
        """CreateElementAt(itkVectorContainerULLNPI3F self, unsigned long long arg0) -> itkNodePairI3F"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned long long') -> "itkNodePairI3F":
        """GetElement(itkVectorContainerULLNPI3F self, unsigned long long arg0) -> itkNodePairI3F"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI3F') -> "void":
        """SetElement(itkVectorContainerULLNPI3F self, unsigned long long arg0, itkNodePairI3F arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI3F') -> "void":
        """InsertElement(itkVectorContainerULLNPI3F self, unsigned long long arg0, itkNodePairI3F arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned long long') -> "bool":
        """IndexExists(itkVectorContainerULLNPI3F self, unsigned long long arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned long long', arg1: 'itkNodePairI3F') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerULLNPI3F self, unsigned long long arg0, itkNodePairI3F arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned long long') -> "void":
        """CreateIndex(itkVectorContainerULLNPI3F self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned long long') -> "void":
        """DeleteIndex(itkVectorContainerULLNPI3F self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned long long":
        """Size(itkVectorContainerULLNPI3F self) -> unsigned long long"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Size(self)


    def Reserve(self, arg0: 'unsigned long long') -> "void":
        """Reserve(itkVectorContainerULLNPI3F self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerULLNPI3F self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerULLNPI3F self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI3F

    def cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI3F *":
        """cast(itkLightObject obj) -> itkVectorContainerULLNPI3F"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI3F

        Create a new object of the class itkVectorContainerULLNPI3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI3F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerULLNPI3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerULLNPI3F.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Clone, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_CastToSTLContainer, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_CastToSTLConstContainer, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_ElementAt, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_CreateElementAt, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_GetElement, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_SetElement, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_InsertElement, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_IndexExists, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_GetElementIfIndexExists, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_CreateIndex, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_DeleteIndex, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Size, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Reserve, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Squeeze, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Initialize, None, itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F_swigregister = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_swigregister
itkVectorContainerULLNPI3F_swigregister(itkVectorContainerULLNPI3F)

def itkVectorContainerULLNPI3F___New_orig__() -> "itkVectorContainerULLNPI3F_Pointer":
    """itkVectorContainerULLNPI3F___New_orig__() -> itkVectorContainerULLNPI3F_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F___New_orig__()

def itkVectorContainerULLNPI3F_cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI3F *":
    """itkVectorContainerULLNPI3F_cast(itkLightObject obj) -> itkVectorContainerULLNPI3F"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_cast(obj)

class itkVectorContainerULLNPI3SS(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerULLNPI3SS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerULLNPI3SS_Pointer":
        """__New_orig__() -> itkVectorContainerULLNPI3SS_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerULLNPI3SS_Pointer":
        """Clone(itkVectorContainerULLNPI3SS self) -> itkVectorContainerULLNPI3SS_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkNodePairI3SS,std::allocator< itkNodePairI3SS > > &":
        """CastToSTLContainer(itkVectorContainerULLNPI3SS self) -> std::vector< itkNodePairI3SS,std::allocator< itkNodePairI3SS > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkNodePairI3SS,std::allocator< itkNodePairI3SS > > const &":
        """CastToSTLConstContainer(itkVectorContainerULLNPI3SS self) -> std::vector< itkNodePairI3SS,std::allocator< itkNodePairI3SS > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkNodePairI3SS const &":
        """
        ElementAt(itkVectorContainerULLNPI3SS self, unsigned long long arg0) -> itkNodePairI3SS
        ElementAt(itkVectorContainerULLNPI3SS self, unsigned long long arg0) -> itkNodePairI3SS
        """
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned long long') -> "itkNodePairI3SS &":
        """CreateElementAt(itkVectorContainerULLNPI3SS self, unsigned long long arg0) -> itkNodePairI3SS"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned long long') -> "itkNodePairI3SS":
        """GetElement(itkVectorContainerULLNPI3SS self, unsigned long long arg0) -> itkNodePairI3SS"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI3SS') -> "void":
        """SetElement(itkVectorContainerULLNPI3SS self, unsigned long long arg0, itkNodePairI3SS arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI3SS') -> "void":
        """InsertElement(itkVectorContainerULLNPI3SS self, unsigned long long arg0, itkNodePairI3SS arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned long long') -> "bool":
        """IndexExists(itkVectorContainerULLNPI3SS self, unsigned long long arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned long long', arg1: 'itkNodePairI3SS') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerULLNPI3SS self, unsigned long long arg0, itkNodePairI3SS arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned long long') -> "void":
        """CreateIndex(itkVectorContainerULLNPI3SS self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned long long') -> "void":
        """DeleteIndex(itkVectorContainerULLNPI3SS self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned long long":
        """Size(itkVectorContainerULLNPI3SS self) -> unsigned long long"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Size(self)


    def Reserve(self, arg0: 'unsigned long long') -> "void":
        """Reserve(itkVectorContainerULLNPI3SS self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerULLNPI3SS self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerULLNPI3SS self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI3SS

    def cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI3SS *":
        """cast(itkLightObject obj) -> itkVectorContainerULLNPI3SS"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI3SS

        Create a new object of the class itkVectorContainerULLNPI3SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI3SS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI3SS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerULLNPI3SS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerULLNPI3SS.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Clone, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_CastToSTLContainer, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_CastToSTLConstContainer, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_ElementAt, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_CreateElementAt, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_GetElement, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_SetElement, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_InsertElement, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_IndexExists, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_GetElementIfIndexExists, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_CreateIndex, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_DeleteIndex, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Size, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Reserve, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Squeeze, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Initialize, None, itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS_swigregister = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_swigregister
itkVectorContainerULLNPI3SS_swigregister(itkVectorContainerULLNPI3SS)

def itkVectorContainerULLNPI3SS___New_orig__() -> "itkVectorContainerULLNPI3SS_Pointer":
    """itkVectorContainerULLNPI3SS___New_orig__() -> itkVectorContainerULLNPI3SS_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS___New_orig__()

def itkVectorContainerULLNPI3SS_cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI3SS *":
    """itkVectorContainerULLNPI3SS_cast(itkLightObject obj) -> itkVectorContainerULLNPI3SS"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_cast(obj)

class itkVectorContainerULLNPI3UC(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerULLNPI3UC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerULLNPI3UC_Pointer":
        """__New_orig__() -> itkVectorContainerULLNPI3UC_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerULLNPI3UC_Pointer":
        """Clone(itkVectorContainerULLNPI3UC self) -> itkVectorContainerULLNPI3UC_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkNodePairI3UC,std::allocator< itkNodePairI3UC > > &":
        """CastToSTLContainer(itkVectorContainerULLNPI3UC self) -> std::vector< itkNodePairI3UC,std::allocator< itkNodePairI3UC > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkNodePairI3UC,std::allocator< itkNodePairI3UC > > const &":
        """CastToSTLConstContainer(itkVectorContainerULLNPI3UC self) -> std::vector< itkNodePairI3UC,std::allocator< itkNodePairI3UC > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkNodePairI3UC const &":
        """
        ElementAt(itkVectorContainerULLNPI3UC self, unsigned long long arg0) -> itkNodePairI3UC
        ElementAt(itkVectorContainerULLNPI3UC self, unsigned long long arg0) -> itkNodePairI3UC
        """
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned long long') -> "itkNodePairI3UC &":
        """CreateElementAt(itkVectorContainerULLNPI3UC self, unsigned long long arg0) -> itkNodePairI3UC"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned long long') -> "itkNodePairI3UC":
        """GetElement(itkVectorContainerULLNPI3UC self, unsigned long long arg0) -> itkNodePairI3UC"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI3UC') -> "void":
        """SetElement(itkVectorContainerULLNPI3UC self, unsigned long long arg0, itkNodePairI3UC arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI3UC') -> "void":
        """InsertElement(itkVectorContainerULLNPI3UC self, unsigned long long arg0, itkNodePairI3UC arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned long long') -> "bool":
        """IndexExists(itkVectorContainerULLNPI3UC self, unsigned long long arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned long long', arg1: 'itkNodePairI3UC') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerULLNPI3UC self, unsigned long long arg0, itkNodePairI3UC arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned long long') -> "void":
        """CreateIndex(itkVectorContainerULLNPI3UC self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned long long') -> "void":
        """DeleteIndex(itkVectorContainerULLNPI3UC self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned long long":
        """Size(itkVectorContainerULLNPI3UC self) -> unsigned long long"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Size(self)


    def Reserve(self, arg0: 'unsigned long long') -> "void":
        """Reserve(itkVectorContainerULLNPI3UC self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerULLNPI3UC self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerULLNPI3UC self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI3UC

    def cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI3UC *":
        """cast(itkLightObject obj) -> itkVectorContainerULLNPI3UC"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI3UC

        Create a new object of the class itkVectorContainerULLNPI3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI3UC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI3UC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerULLNPI3UC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerULLNPI3UC.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Clone, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_CastToSTLContainer, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_CastToSTLConstContainer, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_ElementAt, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_CreateElementAt, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_GetElement, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_SetElement, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_InsertElement, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_IndexExists, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_GetElementIfIndexExists, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_CreateIndex, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_DeleteIndex, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Size, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Reserve, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Squeeze, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Initialize, None, itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC_swigregister = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_swigregister
itkVectorContainerULLNPI3UC_swigregister(itkVectorContainerULLNPI3UC)

def itkVectorContainerULLNPI3UC___New_orig__() -> "itkVectorContainerULLNPI3UC_Pointer":
    """itkVectorContainerULLNPI3UC___New_orig__() -> itkVectorContainerULLNPI3UC_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC___New_orig__()

def itkVectorContainerULLNPI3UC_cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI3UC *":
    """itkVectorContainerULLNPI3UC_cast(itkLightObject obj) -> itkVectorContainerULLNPI3UC"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_cast(obj)

class itkVectorContainerULLNPI3US(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkVectorContainerULLNPI3US class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVectorContainerULLNPI3US_Pointer":
        """__New_orig__() -> itkVectorContainerULLNPI3US_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVectorContainerULLNPI3US_Pointer":
        """Clone(itkVectorContainerULLNPI3US self) -> itkVectorContainerULLNPI3US_Pointer"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Clone(self)


    def CastToSTLContainer(self) -> "std::vector< itkNodePairI3US,std::allocator< itkNodePairI3US > > &":
        """CastToSTLContainer(itkVectorContainerULLNPI3US self) -> std::vector< itkNodePairI3US,std::allocator< itkNodePairI3US > > &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_CastToSTLContainer(self)


    def CastToSTLConstContainer(self) -> "std::vector< itkNodePairI3US,std::allocator< itkNodePairI3US > > const &":
        """CastToSTLConstContainer(itkVectorContainerULLNPI3US self) -> std::vector< itkNodePairI3US,std::allocator< itkNodePairI3US > > const &"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_CastToSTLConstContainer(self)


    def ElementAt(self, *args) -> "itkNodePairI3US const &":
        """
        ElementAt(itkVectorContainerULLNPI3US self, unsigned long long arg0) -> itkNodePairI3US
        ElementAt(itkVectorContainerULLNPI3US self, unsigned long long arg0) -> itkNodePairI3US
        """
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_ElementAt(self, *args)


    def CreateElementAt(self, arg0: 'unsigned long long') -> "itkNodePairI3US &":
        """CreateElementAt(itkVectorContainerULLNPI3US self, unsigned long long arg0) -> itkNodePairI3US"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_CreateElementAt(self, arg0)


    def GetElement(self, arg0: 'unsigned long long') -> "itkNodePairI3US":
        """GetElement(itkVectorContainerULLNPI3US self, unsigned long long arg0) -> itkNodePairI3US"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_GetElement(self, arg0)


    def SetElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI3US') -> "void":
        """SetElement(itkVectorContainerULLNPI3US self, unsigned long long arg0, itkNodePairI3US arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_SetElement(self, arg0, arg1)


    def InsertElement(self, arg0: 'unsigned long long', arg1: 'itkNodePairI3US') -> "void":
        """InsertElement(itkVectorContainerULLNPI3US self, unsigned long long arg0, itkNodePairI3US arg1)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_InsertElement(self, arg0, arg1)


    def IndexExists(self, arg0: 'unsigned long long') -> "bool":
        """IndexExists(itkVectorContainerULLNPI3US self, unsigned long long arg0) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_IndexExists(self, arg0)


    def GetElementIfIndexExists(self, arg0: 'unsigned long long', arg1: 'itkNodePairI3US') -> "bool":
        """GetElementIfIndexExists(itkVectorContainerULLNPI3US self, unsigned long long arg0, itkNodePairI3US arg1) -> bool"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_GetElementIfIndexExists(self, arg0, arg1)


    def CreateIndex(self, arg0: 'unsigned long long') -> "void":
        """CreateIndex(itkVectorContainerULLNPI3US self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_CreateIndex(self, arg0)


    def DeleteIndex(self, arg0: 'unsigned long long') -> "void":
        """DeleteIndex(itkVectorContainerULLNPI3US self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_DeleteIndex(self, arg0)


    def Size(self) -> "unsigned long long":
        """Size(itkVectorContainerULLNPI3US self) -> unsigned long long"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Size(self)


    def Reserve(self, arg0: 'unsigned long long') -> "void":
        """Reserve(itkVectorContainerULLNPI3US self, unsigned long long arg0)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Reserve(self, arg0)


    def Squeeze(self) -> "void":
        """Squeeze(itkVectorContainerULLNPI3US self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Squeeze(self)


    def Initialize(self) -> "void":
        """Initialize(itkVectorContainerULLNPI3US self)"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Initialize(self)

    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI3US

    def cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI3US *":
        """cast(itkLightObject obj) -> itkVectorContainerULLNPI3US"""
        return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI3US

        Create a new object of the class itkVectorContainerULLNPI3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI3US.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI3US.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorContainerULLNPI3US.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorContainerULLNPI3US.Clone = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Clone, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.CastToSTLContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_CastToSTLContainer, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.CastToSTLConstContainer = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_CastToSTLConstContainer, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.ElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_ElementAt, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.CreateElementAt = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_CreateElementAt, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.GetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_GetElement, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.SetElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_SetElement, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.InsertElement = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_InsertElement, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.IndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_IndexExists, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.GetElementIfIndexExists = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_GetElementIfIndexExists, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.CreateIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_CreateIndex, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.DeleteIndex = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_DeleteIndex, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.Size = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Size, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.Reserve = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Reserve, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.Squeeze = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Squeeze, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US.Initialize = new_instancemethod(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Initialize, None, itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US_swigregister = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_swigregister
itkVectorContainerULLNPI3US_swigregister(itkVectorContainerULLNPI3US)

def itkVectorContainerULLNPI3US___New_orig__() -> "itkVectorContainerULLNPI3US_Pointer":
    """itkVectorContainerULLNPI3US___New_orig__() -> itkVectorContainerULLNPI3US_Pointer"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US___New_orig__()

def itkVectorContainerULLNPI3US_cast(obj: 'itkLightObject') -> "itkVectorContainerULLNPI3US *":
    """itkVectorContainerULLNPI3US_cast(itkLightObject obj) -> itkVectorContainerULLNPI3US"""
    return _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_cast(obj)


def fast_marching_base(*args, **kwargs):
    """Procedural interface for FastMarchingBase"""
    import itk
    instance = itk.FastMarchingBase.New(*args, **kwargs)
    return instance.__internal_call__()

def fast_marching_base_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.FastMarchingBase, itkTemplate.itkTemplate):
        fast_marching_base.__doc__ = itk.FastMarchingBase.values()[0].__doc__
    else:
        fast_marching_base.__doc__ = itk.FastMarchingBase.__doc__




