# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkGDCMImageIOPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkGDCMImageIOPython', [dirname(__file__)])
        except ImportError:
            import _itkGDCMImageIOPython
            return _itkGDCMImageIOPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkGDCMImageIOPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkGDCMImageIOPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkGDCMImageIOPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import ITKIOImageBaseBasePython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython

def itkGDCMSeriesFileNames_New():
  return itkGDCMSeriesFileNames.New()


def itkGDCMImageIOFactory_New():
  return itkGDCMImageIOFactory.New()


def itkGDCMImageIO_New():
  return itkGDCMImageIO.New()

class itkGDCMImageIO(ITKIOImageBaseBasePython.itkImageIOBase):
    """Proxy of C++ itkGDCMImageIO class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGDCMImageIO_Pointer":
        """__New_orig__() -> itkGDCMImageIO_Pointer"""
        return _itkGDCMImageIOPython.itkGDCMImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGDCMImageIO_Pointer":
        """Clone(itkGDCMImageIO self) -> itkGDCMImageIO_Pointer"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_Clone(self)


    def GetInternalComponentType(self) -> "itkImageIOBase::IOComponentType":
        """GetInternalComponentType(itkGDCMImageIO self) -> itkImageIOBase::IOComponentType"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetInternalComponentType(self)


    def SetInternalComponentType(self, _arg: 'itkImageIOBase::IOComponentType const') -> "void":
        """SetInternalComponentType(itkGDCMImageIO self, itkImageIOBase::IOComponentType const _arg)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_SetInternalComponentType(self, _arg)


    def GetRescaleSlope(self) -> "double":
        """GetRescaleSlope(itkGDCMImageIO self) -> double"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetRescaleSlope(self)


    def GetRescaleIntercept(self) -> "double":
        """GetRescaleIntercept(itkGDCMImageIO self) -> double"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetRescaleIntercept(self)


    def GetUIDPrefix(self) -> "char const *":
        """GetUIDPrefix(itkGDCMImageIO self) -> char const *"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetUIDPrefix(self)


    def SetUIDPrefix(self, *args) -> "void":
        """
        SetUIDPrefix(itkGDCMImageIO self, char const * _arg)
        SetUIDPrefix(itkGDCMImageIO self, std::string const & _arg)
        """
        return _itkGDCMImageIOPython.itkGDCMImageIO_SetUIDPrefix(self, *args)


    def GetStudyInstanceUID(self) -> "char const *":
        """GetStudyInstanceUID(itkGDCMImageIO self) -> char const *"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetStudyInstanceUID(self)


    def GetSeriesInstanceUID(self) -> "char const *":
        """GetSeriesInstanceUID(itkGDCMImageIO self) -> char const *"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetSeriesInstanceUID(self)


    def GetFrameOfReferenceInstanceUID(self) -> "char const *":
        """GetFrameOfReferenceInstanceUID(itkGDCMImageIO self) -> char const *"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetFrameOfReferenceInstanceUID(self)


    def SetKeepOriginalUID(self, _arg: 'bool const') -> "void":
        """SetKeepOriginalUID(itkGDCMImageIO self, bool const _arg)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_SetKeepOriginalUID(self, _arg)


    def GetKeepOriginalUID(self) -> "bool":
        """GetKeepOriginalUID(itkGDCMImageIO self) -> bool"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetKeepOriginalUID(self)


    def KeepOriginalUIDOn(self) -> "void":
        """KeepOriginalUIDOn(itkGDCMImageIO self)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_KeepOriginalUIDOn(self)


    def KeepOriginalUIDOff(self) -> "void":
        """KeepOriginalUIDOff(itkGDCMImageIO self)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_KeepOriginalUIDOff(self)


    def SetLoadPrivateTags(self, _arg: 'bool const') -> "void":
        """SetLoadPrivateTags(itkGDCMImageIO self, bool const _arg)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_SetLoadPrivateTags(self, _arg)


    def GetLoadPrivateTags(self) -> "bool":
        """GetLoadPrivateTags(itkGDCMImageIO self) -> bool"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetLoadPrivateTags(self)


    def LoadPrivateTagsOn(self) -> "void":
        """LoadPrivateTagsOn(itkGDCMImageIO self)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_LoadPrivateTagsOn(self)


    def LoadPrivateTagsOff(self) -> "void":
        """LoadPrivateTagsOff(itkGDCMImageIO self)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_LoadPrivateTagsOff(self)


    def GetPatientName(self, name: 'char *') -> "void":
        """GetPatientName(itkGDCMImageIO self, char * name)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetPatientName(self, name)


    def GetPatientID(self, id: 'char *') -> "void":
        """GetPatientID(itkGDCMImageIO self, char * id)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetPatientID(self, id)


    def GetPatientSex(self, sex: 'char *') -> "void":
        """GetPatientSex(itkGDCMImageIO self, char * sex)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetPatientSex(self, sex)


    def GetPatientAge(self, age: 'char *') -> "void":
        """GetPatientAge(itkGDCMImageIO self, char * age)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetPatientAge(self, age)


    def GetStudyID(self, id: 'char *') -> "void":
        """GetStudyID(itkGDCMImageIO self, char * id)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetStudyID(self, id)


    def GetPatientDOB(self, dob: 'char *') -> "void":
        """GetPatientDOB(itkGDCMImageIO self, char * dob)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetPatientDOB(self, dob)


    def GetStudyDescription(self, desc: 'char *') -> "void":
        """GetStudyDescription(itkGDCMImageIO self, char * desc)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetStudyDescription(self, desc)


    def GetBodyPart(self, part: 'char *') -> "void":
        """GetBodyPart(itkGDCMImageIO self, char * part)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetBodyPart(self, part)


    def GetNumberOfSeriesInStudy(self, series: 'char *') -> "void":
        """GetNumberOfSeriesInStudy(itkGDCMImageIO self, char * series)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetNumberOfSeriesInStudy(self, series)


    def GetNumberOfStudyRelatedSeries(self, series: 'char *') -> "void":
        """GetNumberOfStudyRelatedSeries(itkGDCMImageIO self, char * series)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetNumberOfStudyRelatedSeries(self, series)


    def GetStudyDate(self, date: 'char *') -> "void":
        """GetStudyDate(itkGDCMImageIO self, char * date)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetStudyDate(self, date)


    def GetModality(self, modality: 'char *') -> "void":
        """GetModality(itkGDCMImageIO self, char * modality)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetModality(self, modality)


    def GetManufacturer(self, manu: 'char *') -> "void":
        """GetManufacturer(itkGDCMImageIO self, char * manu)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetManufacturer(self, manu)


    def GetInstitution(self, ins: 'char *') -> "void":
        """GetInstitution(itkGDCMImageIO self, char * ins)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetInstitution(self, ins)


    def GetModel(self, model: 'char *') -> "void":
        """GetModel(itkGDCMImageIO self, char * model)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetModel(self, model)


    def GetScanOptions(self, options: 'char *') -> "void":
        """GetScanOptions(itkGDCMImageIO self, char * options)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetScanOptions(self, options)


    def GetValueFromTag(self, tag: 'std::string const &', value: 'std::string &') -> "bool":
        """GetValueFromTag(itkGDCMImageIO self, std::string const & tag, std::string & value) -> bool"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetValueFromTag(self, tag, value)


    def GetLabelFromTag(tag: 'std::string const &', labelId: 'std::string &') -> "std::string &":
        """GetLabelFromTag(std::string const & tag, std::string & labelId) -> bool"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetLabelFromTag(tag, labelId)

    GetLabelFromTag = staticmethod(GetLabelFromTag)

    def SetMaxSizeLoadEntry(self, arg0: 'long const') -> "void":
        """SetMaxSizeLoadEntry(itkGDCMImageIO self, long const arg0)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_SetMaxSizeLoadEntry(self, arg0)


    def SetLoadSequences(self, arg0: 'bool const') -> "void":
        """SetLoadSequences(itkGDCMImageIO self, bool const arg0)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_SetLoadSequences(self, arg0)


    def GetLoadSequences(self) -> "bool":
        """GetLoadSequences(itkGDCMImageIO self) -> bool"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetLoadSequences(self)


    def LoadSequencesOn(self) -> "void":
        """LoadSequencesOn(itkGDCMImageIO self)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_LoadSequencesOn(self)


    def LoadSequencesOff(self) -> "void":
        """LoadSequencesOff(itkGDCMImageIO self)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_LoadSequencesOff(self)


    def SetLoadSequencesDefault(arg0: 'bool') -> "void":
        """SetLoadSequencesDefault(bool arg0)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_SetLoadSequencesDefault(arg0)

    SetLoadSequencesDefault = staticmethod(SetLoadSequencesDefault)

    def LoadSequencesDefaultOn() -> "void":
        """LoadSequencesDefaultOn()"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_LoadSequencesDefaultOn()

    LoadSequencesDefaultOn = staticmethod(LoadSequencesDefaultOn)

    def LoadSequencesDefaultOff() -> "void":
        """LoadSequencesDefaultOff()"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_LoadSequencesDefaultOff()

    LoadSequencesDefaultOff = staticmethod(LoadSequencesDefaultOff)

    def GetLoadSequencesDefault() -> "bool":
        """GetLoadSequencesDefault() -> bool"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetLoadSequencesDefault()

    GetLoadSequencesDefault = staticmethod(GetLoadSequencesDefault)

    def SetLoadPrivateTagsDefault(arg0: 'bool') -> "void":
        """SetLoadPrivateTagsDefault(bool arg0)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_SetLoadPrivateTagsDefault(arg0)

    SetLoadPrivateTagsDefault = staticmethod(SetLoadPrivateTagsDefault)

    def LoadPrivateTagsDefaultOn() -> "void":
        """LoadPrivateTagsDefaultOn()"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_LoadPrivateTagsDefaultOn()

    LoadPrivateTagsDefaultOn = staticmethod(LoadPrivateTagsDefaultOn)

    def LoadPrivateTagsDefaultOff() -> "void":
        """LoadPrivateTagsDefaultOff()"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_LoadPrivateTagsDefaultOff()

    LoadPrivateTagsDefaultOff = staticmethod(LoadPrivateTagsDefaultOff)

    def GetLoadPrivateTagsDefault() -> "bool":
        """GetLoadPrivateTagsDefault() -> bool"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetLoadPrivateTagsDefault()

    GetLoadPrivateTagsDefault = staticmethod(GetLoadPrivateTagsDefault)
    JPEG = _itkGDCMImageIOPython.itkGDCMImageIO_JPEG
    JPEG2000 = _itkGDCMImageIOPython.itkGDCMImageIO_JPEG2000
    JPEGLS = _itkGDCMImageIOPython.itkGDCMImageIO_JPEGLS
    RLE = _itkGDCMImageIOPython.itkGDCMImageIO_RLE

    def SetCompressionType(self, _arg: 'itkGDCMImageIO::TCompressionType const') -> "void":
        """SetCompressionType(itkGDCMImageIO self, itkGDCMImageIO::TCompressionType const _arg)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_SetCompressionType(self, _arg)


    def GetCompressionType(self) -> "itkGDCMImageIO::TCompressionType":
        """GetCompressionType(itkGDCMImageIO self) -> itkGDCMImageIO::TCompressionType"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_GetCompressionType(self)


    def InternalSetCompressor(self, _compressor: 'std::string const &') -> "void":
        """InternalSetCompressor(itkGDCMImageIO self, std::string const & _compressor)"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_InternalSetCompressor(self, _compressor)

    __swig_destroy__ = _itkGDCMImageIOPython.delete_itkGDCMImageIO

    def cast(obj: 'itkLightObject') -> "itkGDCMImageIO *":
        """cast(itkLightObject obj) -> itkGDCMImageIO"""
        return _itkGDCMImageIOPython.itkGDCMImageIO_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGDCMImageIO

        Create a new object of the class itkGDCMImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGDCMImageIO.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGDCMImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGDCMImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGDCMImageIO.Clone = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_Clone, None, itkGDCMImageIO)
itkGDCMImageIO.GetInternalComponentType = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetInternalComponentType, None, itkGDCMImageIO)
itkGDCMImageIO.SetInternalComponentType = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_SetInternalComponentType, None, itkGDCMImageIO)
itkGDCMImageIO.GetRescaleSlope = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetRescaleSlope, None, itkGDCMImageIO)
itkGDCMImageIO.GetRescaleIntercept = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetRescaleIntercept, None, itkGDCMImageIO)
itkGDCMImageIO.GetUIDPrefix = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetUIDPrefix, None, itkGDCMImageIO)
itkGDCMImageIO.SetUIDPrefix = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_SetUIDPrefix, None, itkGDCMImageIO)
itkGDCMImageIO.GetStudyInstanceUID = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetStudyInstanceUID, None, itkGDCMImageIO)
itkGDCMImageIO.GetSeriesInstanceUID = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetSeriesInstanceUID, None, itkGDCMImageIO)
itkGDCMImageIO.GetFrameOfReferenceInstanceUID = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetFrameOfReferenceInstanceUID, None, itkGDCMImageIO)
itkGDCMImageIO.SetKeepOriginalUID = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_SetKeepOriginalUID, None, itkGDCMImageIO)
itkGDCMImageIO.GetKeepOriginalUID = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetKeepOriginalUID, None, itkGDCMImageIO)
itkGDCMImageIO.KeepOriginalUIDOn = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_KeepOriginalUIDOn, None, itkGDCMImageIO)
itkGDCMImageIO.KeepOriginalUIDOff = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_KeepOriginalUIDOff, None, itkGDCMImageIO)
itkGDCMImageIO.SetLoadPrivateTags = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_SetLoadPrivateTags, None, itkGDCMImageIO)
itkGDCMImageIO.GetLoadPrivateTags = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetLoadPrivateTags, None, itkGDCMImageIO)
itkGDCMImageIO.LoadPrivateTagsOn = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_LoadPrivateTagsOn, None, itkGDCMImageIO)
itkGDCMImageIO.LoadPrivateTagsOff = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_LoadPrivateTagsOff, None, itkGDCMImageIO)
itkGDCMImageIO.GetPatientName = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetPatientName, None, itkGDCMImageIO)
itkGDCMImageIO.GetPatientID = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetPatientID, None, itkGDCMImageIO)
itkGDCMImageIO.GetPatientSex = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetPatientSex, None, itkGDCMImageIO)
itkGDCMImageIO.GetPatientAge = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetPatientAge, None, itkGDCMImageIO)
itkGDCMImageIO.GetStudyID = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetStudyID, None, itkGDCMImageIO)
itkGDCMImageIO.GetPatientDOB = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetPatientDOB, None, itkGDCMImageIO)
itkGDCMImageIO.GetStudyDescription = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetStudyDescription, None, itkGDCMImageIO)
itkGDCMImageIO.GetBodyPart = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetBodyPart, None, itkGDCMImageIO)
itkGDCMImageIO.GetNumberOfSeriesInStudy = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetNumberOfSeriesInStudy, None, itkGDCMImageIO)
itkGDCMImageIO.GetNumberOfStudyRelatedSeries = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetNumberOfStudyRelatedSeries, None, itkGDCMImageIO)
itkGDCMImageIO.GetStudyDate = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetStudyDate, None, itkGDCMImageIO)
itkGDCMImageIO.GetModality = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetModality, None, itkGDCMImageIO)
itkGDCMImageIO.GetManufacturer = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetManufacturer, None, itkGDCMImageIO)
itkGDCMImageIO.GetInstitution = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetInstitution, None, itkGDCMImageIO)
itkGDCMImageIO.GetModel = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetModel, None, itkGDCMImageIO)
itkGDCMImageIO.GetScanOptions = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetScanOptions, None, itkGDCMImageIO)
itkGDCMImageIO.GetValueFromTag = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetValueFromTag, None, itkGDCMImageIO)
itkGDCMImageIO.SetMaxSizeLoadEntry = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_SetMaxSizeLoadEntry, None, itkGDCMImageIO)
itkGDCMImageIO.SetLoadSequences = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_SetLoadSequences, None, itkGDCMImageIO)
itkGDCMImageIO.GetLoadSequences = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetLoadSequences, None, itkGDCMImageIO)
itkGDCMImageIO.LoadSequencesOn = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_LoadSequencesOn, None, itkGDCMImageIO)
itkGDCMImageIO.LoadSequencesOff = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_LoadSequencesOff, None, itkGDCMImageIO)
itkGDCMImageIO.SetCompressionType = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_SetCompressionType, None, itkGDCMImageIO)
itkGDCMImageIO.GetCompressionType = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_GetCompressionType, None, itkGDCMImageIO)
itkGDCMImageIO.InternalSetCompressor = new_instancemethod(_itkGDCMImageIOPython.itkGDCMImageIO_InternalSetCompressor, None, itkGDCMImageIO)
itkGDCMImageIO_swigregister = _itkGDCMImageIOPython.itkGDCMImageIO_swigregister
itkGDCMImageIO_swigregister(itkGDCMImageIO)

def itkGDCMImageIO___New_orig__() -> "itkGDCMImageIO_Pointer":
    """itkGDCMImageIO___New_orig__() -> itkGDCMImageIO_Pointer"""
    return _itkGDCMImageIOPython.itkGDCMImageIO___New_orig__()

def itkGDCMImageIO_GetLabelFromTag(tag: 'std::string const &', labelId: 'std::string &') -> "std::string &":
    """itkGDCMImageIO_GetLabelFromTag(std::string const & tag, std::string & labelId) -> bool"""
    return _itkGDCMImageIOPython.itkGDCMImageIO_GetLabelFromTag(tag, labelId)

def itkGDCMImageIO_SetLoadSequencesDefault(arg0: 'bool') -> "void":
    """itkGDCMImageIO_SetLoadSequencesDefault(bool arg0)"""
    return _itkGDCMImageIOPython.itkGDCMImageIO_SetLoadSequencesDefault(arg0)

def itkGDCMImageIO_LoadSequencesDefaultOn() -> "void":
    """itkGDCMImageIO_LoadSequencesDefaultOn()"""
    return _itkGDCMImageIOPython.itkGDCMImageIO_LoadSequencesDefaultOn()

def itkGDCMImageIO_LoadSequencesDefaultOff() -> "void":
    """itkGDCMImageIO_LoadSequencesDefaultOff()"""
    return _itkGDCMImageIOPython.itkGDCMImageIO_LoadSequencesDefaultOff()

def itkGDCMImageIO_GetLoadSequencesDefault() -> "bool":
    """itkGDCMImageIO_GetLoadSequencesDefault() -> bool"""
    return _itkGDCMImageIOPython.itkGDCMImageIO_GetLoadSequencesDefault()

def itkGDCMImageIO_SetLoadPrivateTagsDefault(arg0: 'bool') -> "void":
    """itkGDCMImageIO_SetLoadPrivateTagsDefault(bool arg0)"""
    return _itkGDCMImageIOPython.itkGDCMImageIO_SetLoadPrivateTagsDefault(arg0)

def itkGDCMImageIO_LoadPrivateTagsDefaultOn() -> "void":
    """itkGDCMImageIO_LoadPrivateTagsDefaultOn()"""
    return _itkGDCMImageIOPython.itkGDCMImageIO_LoadPrivateTagsDefaultOn()

def itkGDCMImageIO_LoadPrivateTagsDefaultOff() -> "void":
    """itkGDCMImageIO_LoadPrivateTagsDefaultOff()"""
    return _itkGDCMImageIOPython.itkGDCMImageIO_LoadPrivateTagsDefaultOff()

def itkGDCMImageIO_GetLoadPrivateTagsDefault() -> "bool":
    """itkGDCMImageIO_GetLoadPrivateTagsDefault() -> bool"""
    return _itkGDCMImageIOPython.itkGDCMImageIO_GetLoadPrivateTagsDefault()

def itkGDCMImageIO_cast(obj: 'itkLightObject') -> "itkGDCMImageIO *":
    """itkGDCMImageIO_cast(itkLightObject obj) -> itkGDCMImageIO"""
    return _itkGDCMImageIOPython.itkGDCMImageIO_cast(obj)

class itkGDCMImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkGDCMImageIOFactory class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGDCMImageIOFactory_Pointer":
        """__New_orig__() -> itkGDCMImageIOFactory_Pointer"""
        return _itkGDCMImageIOPython.itkGDCMImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def RegisterOneFactory() -> "void":
        """RegisterOneFactory()"""
        return _itkGDCMImageIOPython.itkGDCMImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _itkGDCMImageIOPython.delete_itkGDCMImageIOFactory

    def cast(obj: 'itkLightObject') -> "itkGDCMImageIOFactory *":
        """cast(itkLightObject obj) -> itkGDCMImageIOFactory"""
        return _itkGDCMImageIOPython.itkGDCMImageIOFactory_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGDCMImageIOFactory

        Create a new object of the class itkGDCMImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGDCMImageIOFactory.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGDCMImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGDCMImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGDCMImageIOFactory_swigregister = _itkGDCMImageIOPython.itkGDCMImageIOFactory_swigregister
itkGDCMImageIOFactory_swigregister(itkGDCMImageIOFactory)

def itkGDCMImageIOFactory___New_orig__() -> "itkGDCMImageIOFactory_Pointer":
    """itkGDCMImageIOFactory___New_orig__() -> itkGDCMImageIOFactory_Pointer"""
    return _itkGDCMImageIOPython.itkGDCMImageIOFactory___New_orig__()

def itkGDCMImageIOFactory_RegisterOneFactory() -> "void":
    """itkGDCMImageIOFactory_RegisterOneFactory()"""
    return _itkGDCMImageIOPython.itkGDCMImageIOFactory_RegisterOneFactory()

def itkGDCMImageIOFactory_cast(obj: 'itkLightObject') -> "itkGDCMImageIOFactory *":
    """itkGDCMImageIOFactory_cast(itkLightObject obj) -> itkGDCMImageIOFactory"""
    return _itkGDCMImageIOPython.itkGDCMImageIOFactory_cast(obj)

class itkGDCMSeriesFileNames(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkGDCMSeriesFileNames class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGDCMSeriesFileNames_Pointer":
        """__New_orig__() -> itkGDCMSeriesFileNames_Pointer"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGDCMSeriesFileNames_Pointer":
        """Clone(itkGDCMSeriesFileNames self) -> itkGDCMSeriesFileNames_Pointer"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_Clone(self)


    def SetInputDirectory(self, *args) -> "void":
        """
        SetInputDirectory(itkGDCMSeriesFileNames self, char const * name)
        SetInputDirectory(itkGDCMSeriesFileNames self, std::string const & name)
        """
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetInputDirectory(self, *args)


    def SetDirectory(self, name: 'std::string const &') -> "void":
        """SetDirectory(itkGDCMSeriesFileNames self, std::string const & name)"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetDirectory(self, name)


    def GetInputFileNames(self) -> "std::vector< std::string,std::allocator< std::string > > const &":
        """GetInputFileNames(itkGDCMSeriesFileNames self) -> vectorstring"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetInputFileNames(self)


    def SetOutputDirectory(self, name: 'std::string const &') -> "void":
        """SetOutputDirectory(itkGDCMSeriesFileNames self, std::string const & name)"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetOutputDirectory(self, name)


    def GetOutputFileNames(self) -> "std::vector< std::string,std::allocator< std::string > > const &":
        """GetOutputFileNames(itkGDCMSeriesFileNames self) -> vectorstring"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetOutputFileNames(self)


    def GetFileNames(self, serie: 'std::string const') -> "std::vector< std::string,std::allocator< std::string > > const &":
        """GetFileNames(itkGDCMSeriesFileNames self, std::string const serie) -> vectorstring"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetFileNames(self, serie)


    def GetSeriesUIDs(self) -> "std::vector< std::string,std::allocator< std::string > > const &":
        """GetSeriesUIDs(itkGDCMSeriesFileNames self) -> vectorstring"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetSeriesUIDs(self)


    def SetRecursive(self, _arg: 'bool const') -> "void":
        """SetRecursive(itkGDCMSeriesFileNames self, bool const _arg)"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetRecursive(self, _arg)


    def GetRecursive(self) -> "bool":
        """GetRecursive(itkGDCMSeriesFileNames self) -> bool"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetRecursive(self)


    def RecursiveOn(self) -> "void":
        """RecursiveOn(itkGDCMSeriesFileNames self)"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_RecursiveOn(self)


    def RecursiveOff(self) -> "void":
        """RecursiveOff(itkGDCMSeriesFileNames self)"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_RecursiveOff(self)


    def SetUseSeriesDetails(self, useSeriesDetails: 'bool') -> "void":
        """SetUseSeriesDetails(itkGDCMSeriesFileNames self, bool useSeriesDetails)"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetUseSeriesDetails(self, useSeriesDetails)


    def GetUseSeriesDetails(self) -> "bool":
        """GetUseSeriesDetails(itkGDCMSeriesFileNames self) -> bool"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetUseSeriesDetails(self)


    def AddSeriesRestriction(self, tag: 'std::string const &') -> "void":
        """AddSeriesRestriction(itkGDCMSeriesFileNames self, std::string const & tag)"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_AddSeriesRestriction(self, tag)


    def SetLoadSequences(self, _arg: 'bool const') -> "void":
        """SetLoadSequences(itkGDCMSeriesFileNames self, bool const _arg)"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetLoadSequences(self, _arg)


    def GetLoadSequences(self) -> "bool":
        """GetLoadSequences(itkGDCMSeriesFileNames self) -> bool"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetLoadSequences(self)


    def LoadSequencesOn(self) -> "void":
        """LoadSequencesOn(itkGDCMSeriesFileNames self)"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_LoadSequencesOn(self)


    def LoadSequencesOff(self) -> "void":
        """LoadSequencesOff(itkGDCMSeriesFileNames self)"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_LoadSequencesOff(self)


    def SetLoadPrivateTags(self, _arg: 'bool const') -> "void":
        """SetLoadPrivateTags(itkGDCMSeriesFileNames self, bool const _arg)"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetLoadPrivateTags(self, _arg)


    def GetLoadPrivateTags(self) -> "bool":
        """GetLoadPrivateTags(itkGDCMSeriesFileNames self) -> bool"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetLoadPrivateTags(self)


    def LoadPrivateTagsOn(self) -> "void":
        """LoadPrivateTagsOn(itkGDCMSeriesFileNames self)"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_LoadPrivateTagsOn(self)


    def LoadPrivateTagsOff(self) -> "void":
        """LoadPrivateTagsOff(itkGDCMSeriesFileNames self)"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_LoadPrivateTagsOff(self)

    __swig_destroy__ = _itkGDCMImageIOPython.delete_itkGDCMSeriesFileNames

    def cast(obj: 'itkLightObject') -> "itkGDCMSeriesFileNames *":
        """cast(itkLightObject obj) -> itkGDCMSeriesFileNames"""
        return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGDCMSeriesFileNames

        Create a new object of the class itkGDCMSeriesFileNames and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGDCMSeriesFileNames.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGDCMSeriesFileNames.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGDCMSeriesFileNames.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGDCMSeriesFileNames.Clone = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_Clone, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.SetInputDirectory = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetInputDirectory, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.SetDirectory = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetDirectory, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetInputFileNames = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetInputFileNames, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.SetOutputDirectory = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetOutputDirectory, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetOutputFileNames = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetOutputFileNames, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetFileNames = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetFileNames, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetSeriesUIDs = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetSeriesUIDs, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.SetRecursive = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetRecursive, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetRecursive = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetRecursive, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.RecursiveOn = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_RecursiveOn, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.RecursiveOff = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_RecursiveOff, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.SetUseSeriesDetails = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetUseSeriesDetails, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetUseSeriesDetails = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetUseSeriesDetails, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.AddSeriesRestriction = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_AddSeriesRestriction, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.SetLoadSequences = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetLoadSequences, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetLoadSequences = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetLoadSequences, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.LoadSequencesOn = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_LoadSequencesOn, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.LoadSequencesOff = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_LoadSequencesOff, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.SetLoadPrivateTags = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_SetLoadPrivateTags, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetLoadPrivateTags = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_GetLoadPrivateTags, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.LoadPrivateTagsOn = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_LoadPrivateTagsOn, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.LoadPrivateTagsOff = new_instancemethod(_itkGDCMImageIOPython.itkGDCMSeriesFileNames_LoadPrivateTagsOff, None, itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames_swigregister = _itkGDCMImageIOPython.itkGDCMSeriesFileNames_swigregister
itkGDCMSeriesFileNames_swigregister(itkGDCMSeriesFileNames)

def itkGDCMSeriesFileNames___New_orig__() -> "itkGDCMSeriesFileNames_Pointer":
    """itkGDCMSeriesFileNames___New_orig__() -> itkGDCMSeriesFileNames_Pointer"""
    return _itkGDCMImageIOPython.itkGDCMSeriesFileNames___New_orig__()

def itkGDCMSeriesFileNames_cast(obj: 'itkLightObject') -> "itkGDCMSeriesFileNames *":
    """itkGDCMSeriesFileNames_cast(itkLightObject obj) -> itkGDCMSeriesFileNames"""
    return _itkGDCMImageIOPython.itkGDCMSeriesFileNames_cast(obj)


def gdcm_series_file_names(*args, **kwargs):
    """Procedural interface for GDCMSeriesFileNames"""
    import itk
    instance = itk.GDCMSeriesFileNames.New(*args, **kwargs)
    return instance.__internal_call__()

def gdcm_series_file_names_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.GDCMSeriesFileNames, itkTemplate.itkTemplate):
        gdcm_series_file_names.__doc__ = itk.GDCMSeriesFileNames.values()[0].__doc__
    else:
        gdcm_series_file_names.__doc__ = itk.GDCMSeriesFileNames.__doc__




