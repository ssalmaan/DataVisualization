# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkLaplacianSharpeningImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkLaplacianSharpeningImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkLaplacianSharpeningImageFilterPython
            return _itkLaplacianSharpeningImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkLaplacianSharpeningImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkLaplacianSharpeningImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkLaplacianSharpeningImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkLaplacianSharpeningImageFilterIF3IF3_New():
  return itkLaplacianSharpeningImageFilterIF3IF3.New()


def itkLaplacianSharpeningImageFilterIF2IF2_New():
  return itkLaplacianSharpeningImageFilterIF2IF2.New()


def itkLaplacianSharpeningImageFilterIUS3IUS3_New():
  return itkLaplacianSharpeningImageFilterIUS3IUS3.New()


def itkLaplacianSharpeningImageFilterIUS2IUS2_New():
  return itkLaplacianSharpeningImageFilterIUS2IUS2.New()


def itkLaplacianSharpeningImageFilterIUC3IUC3_New():
  return itkLaplacianSharpeningImageFilterIUC3IUC3.New()


def itkLaplacianSharpeningImageFilterIUC2IUC2_New():
  return itkLaplacianSharpeningImageFilterIUC2IUC2.New()


def itkLaplacianSharpeningImageFilterISS3ISS3_New():
  return itkLaplacianSharpeningImageFilterISS3ISS3.New()


def itkLaplacianSharpeningImageFilterISS2ISS2_New():
  return itkLaplacianSharpeningImageFilterISS2ISS2.New()

class itkLaplacianSharpeningImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkLaplacianSharpeningImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianSharpeningImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkLaplacianSharpeningImageFilterIF2IF2_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianSharpeningImageFilterIF2IF2_Pointer":
        """Clone(itkLaplacianSharpeningImageFilterIF2IF2 self) -> itkLaplacianSharpeningImageFilterIF2IF2_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_Clone(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkLaplacianSharpeningImageFilterIF2IF2 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_GenerateInputRequestedRegion(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkLaplacianSharpeningImageFilterIF2IF2 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkLaplacianSharpeningImageFilterIF2IF2 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_UseImageSpacingOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkLaplacianSharpeningImageFilterIF2IF2 self, bool const _arg)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkLaplacianSharpeningImageFilterIF2IF2 self) -> bool"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_GetUseImageSpacing(self)

    __swig_destroy__ = _itkLaplacianSharpeningImageFilterPython.delete_itkLaplacianSharpeningImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterIF2IF2"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianSharpeningImageFilterIF2IF2

        Create a new object of the class itkLaplacianSharpeningImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianSharpeningImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianSharpeningImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianSharpeningImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianSharpeningImageFilterIF2IF2.Clone = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_Clone, None, itkLaplacianSharpeningImageFilterIF2IF2)
itkLaplacianSharpeningImageFilterIF2IF2.GenerateInputRequestedRegion = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_GenerateInputRequestedRegion, None, itkLaplacianSharpeningImageFilterIF2IF2)
itkLaplacianSharpeningImageFilterIF2IF2.UseImageSpacingOn = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_UseImageSpacingOn, None, itkLaplacianSharpeningImageFilterIF2IF2)
itkLaplacianSharpeningImageFilterIF2IF2.UseImageSpacingOff = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_UseImageSpacingOff, None, itkLaplacianSharpeningImageFilterIF2IF2)
itkLaplacianSharpeningImageFilterIF2IF2.SetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_SetUseImageSpacing, None, itkLaplacianSharpeningImageFilterIF2IF2)
itkLaplacianSharpeningImageFilterIF2IF2.GetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_GetUseImageSpacing, None, itkLaplacianSharpeningImageFilterIF2IF2)
itkLaplacianSharpeningImageFilterIF2IF2_swigregister = _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_swigregister
itkLaplacianSharpeningImageFilterIF2IF2_swigregister(itkLaplacianSharpeningImageFilterIF2IF2)

def itkLaplacianSharpeningImageFilterIF2IF2___New_orig__() -> "itkLaplacianSharpeningImageFilterIF2IF2_Pointer":
    """itkLaplacianSharpeningImageFilterIF2IF2___New_orig__() -> itkLaplacianSharpeningImageFilterIF2IF2_Pointer"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2___New_orig__()

def itkLaplacianSharpeningImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterIF2IF2 *":
    """itkLaplacianSharpeningImageFilterIF2IF2_cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterIF2IF2"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF2IF2_cast(obj)

class itkLaplacianSharpeningImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkLaplacianSharpeningImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianSharpeningImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkLaplacianSharpeningImageFilterIF3IF3_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianSharpeningImageFilterIF3IF3_Pointer":
        """Clone(itkLaplacianSharpeningImageFilterIF3IF3 self) -> itkLaplacianSharpeningImageFilterIF3IF3_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_Clone(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkLaplacianSharpeningImageFilterIF3IF3 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_GenerateInputRequestedRegion(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkLaplacianSharpeningImageFilterIF3IF3 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkLaplacianSharpeningImageFilterIF3IF3 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_UseImageSpacingOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkLaplacianSharpeningImageFilterIF3IF3 self, bool const _arg)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkLaplacianSharpeningImageFilterIF3IF3 self) -> bool"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_GetUseImageSpacing(self)

    __swig_destroy__ = _itkLaplacianSharpeningImageFilterPython.delete_itkLaplacianSharpeningImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterIF3IF3"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianSharpeningImageFilterIF3IF3

        Create a new object of the class itkLaplacianSharpeningImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianSharpeningImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianSharpeningImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianSharpeningImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianSharpeningImageFilterIF3IF3.Clone = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_Clone, None, itkLaplacianSharpeningImageFilterIF3IF3)
itkLaplacianSharpeningImageFilterIF3IF3.GenerateInputRequestedRegion = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_GenerateInputRequestedRegion, None, itkLaplacianSharpeningImageFilterIF3IF3)
itkLaplacianSharpeningImageFilterIF3IF3.UseImageSpacingOn = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_UseImageSpacingOn, None, itkLaplacianSharpeningImageFilterIF3IF3)
itkLaplacianSharpeningImageFilterIF3IF3.UseImageSpacingOff = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_UseImageSpacingOff, None, itkLaplacianSharpeningImageFilterIF3IF3)
itkLaplacianSharpeningImageFilterIF3IF3.SetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_SetUseImageSpacing, None, itkLaplacianSharpeningImageFilterIF3IF3)
itkLaplacianSharpeningImageFilterIF3IF3.GetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_GetUseImageSpacing, None, itkLaplacianSharpeningImageFilterIF3IF3)
itkLaplacianSharpeningImageFilterIF3IF3_swigregister = _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_swigregister
itkLaplacianSharpeningImageFilterIF3IF3_swigregister(itkLaplacianSharpeningImageFilterIF3IF3)

def itkLaplacianSharpeningImageFilterIF3IF3___New_orig__() -> "itkLaplacianSharpeningImageFilterIF3IF3_Pointer":
    """itkLaplacianSharpeningImageFilterIF3IF3___New_orig__() -> itkLaplacianSharpeningImageFilterIF3IF3_Pointer"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3___New_orig__()

def itkLaplacianSharpeningImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterIF3IF3 *":
    """itkLaplacianSharpeningImageFilterIF3IF3_cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterIF3IF3"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIF3IF3_cast(obj)

class itkLaplacianSharpeningImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkLaplacianSharpeningImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianSharpeningImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkLaplacianSharpeningImageFilterISS2ISS2_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianSharpeningImageFilterISS2ISS2_Pointer":
        """Clone(itkLaplacianSharpeningImageFilterISS2ISS2 self) -> itkLaplacianSharpeningImageFilterISS2ISS2_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_Clone(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkLaplacianSharpeningImageFilterISS2ISS2 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_GenerateInputRequestedRegion(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkLaplacianSharpeningImageFilterISS2ISS2 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkLaplacianSharpeningImageFilterISS2ISS2 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_UseImageSpacingOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkLaplacianSharpeningImageFilterISS2ISS2 self, bool const _arg)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkLaplacianSharpeningImageFilterISS2ISS2 self) -> bool"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_GetUseImageSpacing(self)

    __swig_destroy__ = _itkLaplacianSharpeningImageFilterPython.delete_itkLaplacianSharpeningImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterISS2ISS2"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianSharpeningImageFilterISS2ISS2

        Create a new object of the class itkLaplacianSharpeningImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianSharpeningImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianSharpeningImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianSharpeningImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianSharpeningImageFilterISS2ISS2.Clone = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_Clone, None, itkLaplacianSharpeningImageFilterISS2ISS2)
itkLaplacianSharpeningImageFilterISS2ISS2.GenerateInputRequestedRegion = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_GenerateInputRequestedRegion, None, itkLaplacianSharpeningImageFilterISS2ISS2)
itkLaplacianSharpeningImageFilterISS2ISS2.UseImageSpacingOn = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_UseImageSpacingOn, None, itkLaplacianSharpeningImageFilterISS2ISS2)
itkLaplacianSharpeningImageFilterISS2ISS2.UseImageSpacingOff = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_UseImageSpacingOff, None, itkLaplacianSharpeningImageFilterISS2ISS2)
itkLaplacianSharpeningImageFilterISS2ISS2.SetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_SetUseImageSpacing, None, itkLaplacianSharpeningImageFilterISS2ISS2)
itkLaplacianSharpeningImageFilterISS2ISS2.GetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_GetUseImageSpacing, None, itkLaplacianSharpeningImageFilterISS2ISS2)
itkLaplacianSharpeningImageFilterISS2ISS2_swigregister = _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_swigregister
itkLaplacianSharpeningImageFilterISS2ISS2_swigregister(itkLaplacianSharpeningImageFilterISS2ISS2)

def itkLaplacianSharpeningImageFilterISS2ISS2___New_orig__() -> "itkLaplacianSharpeningImageFilterISS2ISS2_Pointer":
    """itkLaplacianSharpeningImageFilterISS2ISS2___New_orig__() -> itkLaplacianSharpeningImageFilterISS2ISS2_Pointer"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2___New_orig__()

def itkLaplacianSharpeningImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterISS2ISS2 *":
    """itkLaplacianSharpeningImageFilterISS2ISS2_cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterISS2ISS2"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS2ISS2_cast(obj)

class itkLaplacianSharpeningImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkLaplacianSharpeningImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianSharpeningImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkLaplacianSharpeningImageFilterISS3ISS3_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianSharpeningImageFilterISS3ISS3_Pointer":
        """Clone(itkLaplacianSharpeningImageFilterISS3ISS3 self) -> itkLaplacianSharpeningImageFilterISS3ISS3_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_Clone(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkLaplacianSharpeningImageFilterISS3ISS3 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_GenerateInputRequestedRegion(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkLaplacianSharpeningImageFilterISS3ISS3 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkLaplacianSharpeningImageFilterISS3ISS3 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_UseImageSpacingOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkLaplacianSharpeningImageFilterISS3ISS3 self, bool const _arg)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkLaplacianSharpeningImageFilterISS3ISS3 self) -> bool"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_GetUseImageSpacing(self)

    __swig_destroy__ = _itkLaplacianSharpeningImageFilterPython.delete_itkLaplacianSharpeningImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterISS3ISS3"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianSharpeningImageFilterISS3ISS3

        Create a new object of the class itkLaplacianSharpeningImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianSharpeningImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianSharpeningImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianSharpeningImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianSharpeningImageFilterISS3ISS3.Clone = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_Clone, None, itkLaplacianSharpeningImageFilterISS3ISS3)
itkLaplacianSharpeningImageFilterISS3ISS3.GenerateInputRequestedRegion = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_GenerateInputRequestedRegion, None, itkLaplacianSharpeningImageFilterISS3ISS3)
itkLaplacianSharpeningImageFilterISS3ISS3.UseImageSpacingOn = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_UseImageSpacingOn, None, itkLaplacianSharpeningImageFilterISS3ISS3)
itkLaplacianSharpeningImageFilterISS3ISS3.UseImageSpacingOff = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_UseImageSpacingOff, None, itkLaplacianSharpeningImageFilterISS3ISS3)
itkLaplacianSharpeningImageFilterISS3ISS3.SetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_SetUseImageSpacing, None, itkLaplacianSharpeningImageFilterISS3ISS3)
itkLaplacianSharpeningImageFilterISS3ISS3.GetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_GetUseImageSpacing, None, itkLaplacianSharpeningImageFilterISS3ISS3)
itkLaplacianSharpeningImageFilterISS3ISS3_swigregister = _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_swigregister
itkLaplacianSharpeningImageFilterISS3ISS3_swigregister(itkLaplacianSharpeningImageFilterISS3ISS3)

def itkLaplacianSharpeningImageFilterISS3ISS3___New_orig__() -> "itkLaplacianSharpeningImageFilterISS3ISS3_Pointer":
    """itkLaplacianSharpeningImageFilterISS3ISS3___New_orig__() -> itkLaplacianSharpeningImageFilterISS3ISS3_Pointer"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3___New_orig__()

def itkLaplacianSharpeningImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterISS3ISS3 *":
    """itkLaplacianSharpeningImageFilterISS3ISS3_cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterISS3ISS3"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterISS3ISS3_cast(obj)

class itkLaplacianSharpeningImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkLaplacianSharpeningImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianSharpeningImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkLaplacianSharpeningImageFilterIUC2IUC2_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianSharpeningImageFilterIUC2IUC2_Pointer":
        """Clone(itkLaplacianSharpeningImageFilterIUC2IUC2 self) -> itkLaplacianSharpeningImageFilterIUC2IUC2_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_Clone(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkLaplacianSharpeningImageFilterIUC2IUC2 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_GenerateInputRequestedRegion(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkLaplacianSharpeningImageFilterIUC2IUC2 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkLaplacianSharpeningImageFilterIUC2IUC2 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_UseImageSpacingOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkLaplacianSharpeningImageFilterIUC2IUC2 self, bool const _arg)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkLaplacianSharpeningImageFilterIUC2IUC2 self) -> bool"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_GetUseImageSpacing(self)

    __swig_destroy__ = _itkLaplacianSharpeningImageFilterPython.delete_itkLaplacianSharpeningImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterIUC2IUC2"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianSharpeningImageFilterIUC2IUC2

        Create a new object of the class itkLaplacianSharpeningImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianSharpeningImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianSharpeningImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianSharpeningImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianSharpeningImageFilterIUC2IUC2.Clone = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_Clone, None, itkLaplacianSharpeningImageFilterIUC2IUC2)
itkLaplacianSharpeningImageFilterIUC2IUC2.GenerateInputRequestedRegion = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_GenerateInputRequestedRegion, None, itkLaplacianSharpeningImageFilterIUC2IUC2)
itkLaplacianSharpeningImageFilterIUC2IUC2.UseImageSpacingOn = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_UseImageSpacingOn, None, itkLaplacianSharpeningImageFilterIUC2IUC2)
itkLaplacianSharpeningImageFilterIUC2IUC2.UseImageSpacingOff = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_UseImageSpacingOff, None, itkLaplacianSharpeningImageFilterIUC2IUC2)
itkLaplacianSharpeningImageFilterIUC2IUC2.SetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_SetUseImageSpacing, None, itkLaplacianSharpeningImageFilterIUC2IUC2)
itkLaplacianSharpeningImageFilterIUC2IUC2.GetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_GetUseImageSpacing, None, itkLaplacianSharpeningImageFilterIUC2IUC2)
itkLaplacianSharpeningImageFilterIUC2IUC2_swigregister = _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_swigregister
itkLaplacianSharpeningImageFilterIUC2IUC2_swigregister(itkLaplacianSharpeningImageFilterIUC2IUC2)

def itkLaplacianSharpeningImageFilterIUC2IUC2___New_orig__() -> "itkLaplacianSharpeningImageFilterIUC2IUC2_Pointer":
    """itkLaplacianSharpeningImageFilterIUC2IUC2___New_orig__() -> itkLaplacianSharpeningImageFilterIUC2IUC2_Pointer"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2___New_orig__()

def itkLaplacianSharpeningImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterIUC2IUC2 *":
    """itkLaplacianSharpeningImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterIUC2IUC2"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC2IUC2_cast(obj)

class itkLaplacianSharpeningImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkLaplacianSharpeningImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianSharpeningImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkLaplacianSharpeningImageFilterIUC3IUC3_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianSharpeningImageFilterIUC3IUC3_Pointer":
        """Clone(itkLaplacianSharpeningImageFilterIUC3IUC3 self) -> itkLaplacianSharpeningImageFilterIUC3IUC3_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_Clone(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkLaplacianSharpeningImageFilterIUC3IUC3 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_GenerateInputRequestedRegion(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkLaplacianSharpeningImageFilterIUC3IUC3 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkLaplacianSharpeningImageFilterIUC3IUC3 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_UseImageSpacingOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkLaplacianSharpeningImageFilterIUC3IUC3 self, bool const _arg)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkLaplacianSharpeningImageFilterIUC3IUC3 self) -> bool"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_GetUseImageSpacing(self)

    __swig_destroy__ = _itkLaplacianSharpeningImageFilterPython.delete_itkLaplacianSharpeningImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterIUC3IUC3"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianSharpeningImageFilterIUC3IUC3

        Create a new object of the class itkLaplacianSharpeningImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianSharpeningImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianSharpeningImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianSharpeningImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianSharpeningImageFilterIUC3IUC3.Clone = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_Clone, None, itkLaplacianSharpeningImageFilterIUC3IUC3)
itkLaplacianSharpeningImageFilterIUC3IUC3.GenerateInputRequestedRegion = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_GenerateInputRequestedRegion, None, itkLaplacianSharpeningImageFilterIUC3IUC3)
itkLaplacianSharpeningImageFilterIUC3IUC3.UseImageSpacingOn = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_UseImageSpacingOn, None, itkLaplacianSharpeningImageFilterIUC3IUC3)
itkLaplacianSharpeningImageFilterIUC3IUC3.UseImageSpacingOff = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_UseImageSpacingOff, None, itkLaplacianSharpeningImageFilterIUC3IUC3)
itkLaplacianSharpeningImageFilterIUC3IUC3.SetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_SetUseImageSpacing, None, itkLaplacianSharpeningImageFilterIUC3IUC3)
itkLaplacianSharpeningImageFilterIUC3IUC3.GetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_GetUseImageSpacing, None, itkLaplacianSharpeningImageFilterIUC3IUC3)
itkLaplacianSharpeningImageFilterIUC3IUC3_swigregister = _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_swigregister
itkLaplacianSharpeningImageFilterIUC3IUC3_swigregister(itkLaplacianSharpeningImageFilterIUC3IUC3)

def itkLaplacianSharpeningImageFilterIUC3IUC3___New_orig__() -> "itkLaplacianSharpeningImageFilterIUC3IUC3_Pointer":
    """itkLaplacianSharpeningImageFilterIUC3IUC3___New_orig__() -> itkLaplacianSharpeningImageFilterIUC3IUC3_Pointer"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3___New_orig__()

def itkLaplacianSharpeningImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterIUC3IUC3 *":
    """itkLaplacianSharpeningImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterIUC3IUC3"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUC3IUC3_cast(obj)

class itkLaplacianSharpeningImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkLaplacianSharpeningImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianSharpeningImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkLaplacianSharpeningImageFilterIUS2IUS2_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianSharpeningImageFilterIUS2IUS2_Pointer":
        """Clone(itkLaplacianSharpeningImageFilterIUS2IUS2 self) -> itkLaplacianSharpeningImageFilterIUS2IUS2_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_Clone(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkLaplacianSharpeningImageFilterIUS2IUS2 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_GenerateInputRequestedRegion(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkLaplacianSharpeningImageFilterIUS2IUS2 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkLaplacianSharpeningImageFilterIUS2IUS2 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_UseImageSpacingOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkLaplacianSharpeningImageFilterIUS2IUS2 self, bool const _arg)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkLaplacianSharpeningImageFilterIUS2IUS2 self) -> bool"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_GetUseImageSpacing(self)

    __swig_destroy__ = _itkLaplacianSharpeningImageFilterPython.delete_itkLaplacianSharpeningImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterIUS2IUS2"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianSharpeningImageFilterIUS2IUS2

        Create a new object of the class itkLaplacianSharpeningImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianSharpeningImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianSharpeningImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianSharpeningImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianSharpeningImageFilterIUS2IUS2.Clone = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_Clone, None, itkLaplacianSharpeningImageFilterIUS2IUS2)
itkLaplacianSharpeningImageFilterIUS2IUS2.GenerateInputRequestedRegion = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_GenerateInputRequestedRegion, None, itkLaplacianSharpeningImageFilterIUS2IUS2)
itkLaplacianSharpeningImageFilterIUS2IUS2.UseImageSpacingOn = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_UseImageSpacingOn, None, itkLaplacianSharpeningImageFilterIUS2IUS2)
itkLaplacianSharpeningImageFilterIUS2IUS2.UseImageSpacingOff = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_UseImageSpacingOff, None, itkLaplacianSharpeningImageFilterIUS2IUS2)
itkLaplacianSharpeningImageFilterIUS2IUS2.SetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_SetUseImageSpacing, None, itkLaplacianSharpeningImageFilterIUS2IUS2)
itkLaplacianSharpeningImageFilterIUS2IUS2.GetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_GetUseImageSpacing, None, itkLaplacianSharpeningImageFilterIUS2IUS2)
itkLaplacianSharpeningImageFilterIUS2IUS2_swigregister = _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_swigregister
itkLaplacianSharpeningImageFilterIUS2IUS2_swigregister(itkLaplacianSharpeningImageFilterIUS2IUS2)

def itkLaplacianSharpeningImageFilterIUS2IUS2___New_orig__() -> "itkLaplacianSharpeningImageFilterIUS2IUS2_Pointer":
    """itkLaplacianSharpeningImageFilterIUS2IUS2___New_orig__() -> itkLaplacianSharpeningImageFilterIUS2IUS2_Pointer"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2___New_orig__()

def itkLaplacianSharpeningImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterIUS2IUS2 *":
    """itkLaplacianSharpeningImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterIUS2IUS2"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS2IUS2_cast(obj)

class itkLaplacianSharpeningImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkLaplacianSharpeningImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLaplacianSharpeningImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkLaplacianSharpeningImageFilterIUS3IUS3_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLaplacianSharpeningImageFilterIUS3IUS3_Pointer":
        """Clone(itkLaplacianSharpeningImageFilterIUS3IUS3 self) -> itkLaplacianSharpeningImageFilterIUS3IUS3_Pointer"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_Clone(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkLaplacianSharpeningImageFilterIUS3IUS3 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_GenerateInputRequestedRegion(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkLaplacianSharpeningImageFilterIUS3IUS3 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkLaplacianSharpeningImageFilterIUS3IUS3 self)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_UseImageSpacingOff(self)


    def SetUseImageSpacing(self, _arg: 'bool const') -> "void":
        """SetUseImageSpacing(itkLaplacianSharpeningImageFilterIUS3IUS3 self, bool const _arg)"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_SetUseImageSpacing(self, _arg)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkLaplacianSharpeningImageFilterIUS3IUS3 self) -> bool"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_GetUseImageSpacing(self)

    __swig_destroy__ = _itkLaplacianSharpeningImageFilterPython.delete_itkLaplacianSharpeningImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterIUS3IUS3"""
        return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLaplacianSharpeningImageFilterIUS3IUS3

        Create a new object of the class itkLaplacianSharpeningImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLaplacianSharpeningImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLaplacianSharpeningImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLaplacianSharpeningImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLaplacianSharpeningImageFilterIUS3IUS3.Clone = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_Clone, None, itkLaplacianSharpeningImageFilterIUS3IUS3)
itkLaplacianSharpeningImageFilterIUS3IUS3.GenerateInputRequestedRegion = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_GenerateInputRequestedRegion, None, itkLaplacianSharpeningImageFilterIUS3IUS3)
itkLaplacianSharpeningImageFilterIUS3IUS3.UseImageSpacingOn = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_UseImageSpacingOn, None, itkLaplacianSharpeningImageFilterIUS3IUS3)
itkLaplacianSharpeningImageFilterIUS3IUS3.UseImageSpacingOff = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_UseImageSpacingOff, None, itkLaplacianSharpeningImageFilterIUS3IUS3)
itkLaplacianSharpeningImageFilterIUS3IUS3.SetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_SetUseImageSpacing, None, itkLaplacianSharpeningImageFilterIUS3IUS3)
itkLaplacianSharpeningImageFilterIUS3IUS3.GetUseImageSpacing = new_instancemethod(_itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_GetUseImageSpacing, None, itkLaplacianSharpeningImageFilterIUS3IUS3)
itkLaplacianSharpeningImageFilterIUS3IUS3_swigregister = _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_swigregister
itkLaplacianSharpeningImageFilterIUS3IUS3_swigregister(itkLaplacianSharpeningImageFilterIUS3IUS3)

def itkLaplacianSharpeningImageFilterIUS3IUS3___New_orig__() -> "itkLaplacianSharpeningImageFilterIUS3IUS3_Pointer":
    """itkLaplacianSharpeningImageFilterIUS3IUS3___New_orig__() -> itkLaplacianSharpeningImageFilterIUS3IUS3_Pointer"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3___New_orig__()

def itkLaplacianSharpeningImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkLaplacianSharpeningImageFilterIUS3IUS3 *":
    """itkLaplacianSharpeningImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkLaplacianSharpeningImageFilterIUS3IUS3"""
    return _itkLaplacianSharpeningImageFilterPython.itkLaplacianSharpeningImageFilterIUS3IUS3_cast(obj)


def laplacian_sharpening_image_filter(*args, **kwargs):
    """Procedural interface for LaplacianSharpeningImageFilter"""
    import itk
    instance = itk.LaplacianSharpeningImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def laplacian_sharpening_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.LaplacianSharpeningImageFilter, itkTemplate.itkTemplate):
        laplacian_sharpening_image_filter.__doc__ = itk.LaplacianSharpeningImageFilter.values()[0].__doc__
    else:
        laplacian_sharpening_image_filter.__doc__ = itk.LaplacianSharpeningImageFilter.__doc__




