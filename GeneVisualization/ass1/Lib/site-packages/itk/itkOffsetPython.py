# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkOffsetPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkOffsetPython', [dirname(__file__)])
        except ImportError:
            import _itkOffsetPython
            return _itkOffsetPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkOffsetPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkOffsetPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkOffsetPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSizePython
import pyBasePython
class itkOffset1(object):
    """Proxy of C++ itkOffset1 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetOffsetDimension() -> "unsigned int":
        """GetOffsetDimension() -> unsigned int"""
        return _itkOffsetPython.itkOffset1_GetOffsetDimension()

    GetOffsetDimension = staticmethod(GetOffsetDimension)

    def __add__(self, *args) -> "itkOffset1 const":
        """
        __add__(itkOffset1 self, itkOffset1 vec) -> itkOffset1
        __add__(itkOffset1 self, itkSize1 sz) -> itkOffset1
        """
        return _itkOffsetPython.itkOffset1___add__(self, *args)


    def __sub__(self, vec: 'itkOffset1') -> "itkOffset1 const":
        """__sub__(itkOffset1 self, itkOffset1 vec) -> itkOffset1"""
        return _itkOffsetPython.itkOffset1___sub__(self, vec)


    def __iadd__(self, *args) -> "itkOffset1 const &":
        """
        __iadd__(itkOffset1 self, itkSize1 sz) -> itkOffset1
        __iadd__(itkOffset1 self, itkOffset1 vec) -> itkOffset1
        """
        return _itkOffsetPython.itkOffset1___iadd__(self, *args)


    def __isub__(self, *args) -> "itkOffset1 const &":
        """
        __isub__(itkOffset1 self, itkSize1 sz) -> itkOffset1
        __isub__(itkOffset1 self, itkOffset1 vec) -> itkOffset1
        """
        return _itkOffsetPython.itkOffset1___isub__(self, *args)


    def GetOffset(self) -> "long long const *":
        """GetOffset(itkOffset1 self) -> long long const *"""
        return _itkOffsetPython.itkOffset1_GetOffset(self)


    def SetOffset(self, val: 'long long const *') -> "void":
        """SetOffset(itkOffset1 self, long long const * val)"""
        return _itkOffsetPython.itkOffset1_SetOffset(self, val)


    def SetElement(self, element: 'unsigned long', val: 'long long') -> "void":
        """SetElement(itkOffset1 self, unsigned long element, long long val)"""
        return _itkOffsetPython.itkOffset1_SetElement(self, element, val)


    def GetElement(self, element: 'unsigned long') -> "long long":
        """GetElement(itkOffset1 self, unsigned long element) -> long long"""
        return _itkOffsetPython.itkOffset1_GetElement(self, element)


    def Fill(self, value: 'long long') -> "void":
        """Fill(itkOffset1 self, long long value)"""
        return _itkOffsetPython.itkOffset1_Fill(self, value)


    def GetBasisOffset(dim: 'unsigned int') -> "itkOffset1":
        """GetBasisOffset(unsigned int dim) -> itkOffset1"""
        return _itkOffsetPython.itkOffset1_GetBasisOffset(dim)

    GetBasisOffset = staticmethod(GetBasisOffset)

    def assign(self, newValue: 'long long const &') -> "void":
        """assign(itkOffset1 self, long long const & newValue)"""
        return _itkOffsetPython.itkOffset1_assign(self, newValue)


    def swap(self, other: 'itkOffset1') -> "void":
        """swap(itkOffset1 self, itkOffset1 other)"""
        return _itkOffsetPython.itkOffset1_swap(self, other)


    def begin(self, *args) -> "long long const *":
        """
        begin(itkOffset1 self) -> long long
        begin(itkOffset1 self) -> long long const *
        """
        return _itkOffsetPython.itkOffset1_begin(self, *args)


    def end(self, *args) -> "long long const *":
        """
        end(itkOffset1 self) -> long long
        end(itkOffset1 self) -> long long const *
        """
        return _itkOffsetPython.itkOffset1_end(self, *args)


    def rbegin(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rbegin(itkOffset1 self) -> std::reverse_iterator< long long * >
        rbegin(itkOffset1 self) -> std::reverse_iterator< long long const * >
        """
        return _itkOffsetPython.itkOffset1_rbegin(self, *args)


    def rend(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rend(itkOffset1 self) -> std::reverse_iterator< long long * >
        rend(itkOffset1 self) -> std::reverse_iterator< long long const * >
        """
        return _itkOffsetPython.itkOffset1_rend(self, *args)


    def size(self) -> "unsigned int":
        """size(itkOffset1 self) -> unsigned int"""
        return _itkOffsetPython.itkOffset1_size(self)


    def max_size(self) -> "unsigned int":
        """max_size(itkOffset1 self) -> unsigned int"""
        return _itkOffsetPython.itkOffset1_max_size(self)


    def empty(self) -> "bool":
        """empty(itkOffset1 self) -> bool"""
        return _itkOffsetPython.itkOffset1_empty(self)


    def at(self, *args) -> "long long const &":
        """
        at(itkOffset1 self, unsigned int pos) -> long long
        at(itkOffset1 self, unsigned int pos) -> long long const &
        """
        return _itkOffsetPython.itkOffset1_at(self, *args)


    def front(self, *args) -> "long long const &":
        """
        front(itkOffset1 self) -> long long
        front(itkOffset1 self) -> long long const &
        """
        return _itkOffsetPython.itkOffset1_front(self, *args)


    def back(self, *args) -> "long long const &":
        """
        back(itkOffset1 self) -> long long
        back(itkOffset1 self) -> long long const &
        """
        return _itkOffsetPython.itkOffset1_back(self, *args)


    def data(self, *args) -> "long long const *":
        """
        data(itkOffset1 self) -> long long
        data(itkOffset1 self) -> long long const *
        """
        return _itkOffsetPython.itkOffset1_data(self, *args)


    def __init__(self, *args):
        """
        __init__(itkOffset1 self) -> itkOffset1
        __init__(itkOffset1 self, itkOffset1 arg0) -> itkOffset1
        """
        _itkOffsetPython.itkOffset1_swiginit(self, _itkOffsetPython.new_itkOffset1(*args))
    __swig_destroy__ = _itkOffsetPython.delete_itkOffset1

    def __getitem__(self, d: 'unsigned long') -> "long":
        """__getitem__(itkOffset1 self, unsigned long d) -> long"""
        return _itkOffsetPython.itkOffset1___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'long') -> "void":
        """__setitem__(itkOffset1 self, unsigned long d, long v)"""
        return _itkOffsetPython.itkOffset1___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkOffsetPython.itkOffset1___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkOffset1 self) -> std::string"""
        return _itkOffsetPython.itkOffset1___repr__(self)

itkOffset1.__add__ = new_instancemethod(_itkOffsetPython.itkOffset1___add__, None, itkOffset1)
itkOffset1.__sub__ = new_instancemethod(_itkOffsetPython.itkOffset1___sub__, None, itkOffset1)
itkOffset1.__iadd__ = new_instancemethod(_itkOffsetPython.itkOffset1___iadd__, None, itkOffset1)
itkOffset1.__isub__ = new_instancemethod(_itkOffsetPython.itkOffset1___isub__, None, itkOffset1)
itkOffset1.GetOffset = new_instancemethod(_itkOffsetPython.itkOffset1_GetOffset, None, itkOffset1)
itkOffset1.SetOffset = new_instancemethod(_itkOffsetPython.itkOffset1_SetOffset, None, itkOffset1)
itkOffset1.SetElement = new_instancemethod(_itkOffsetPython.itkOffset1_SetElement, None, itkOffset1)
itkOffset1.GetElement = new_instancemethod(_itkOffsetPython.itkOffset1_GetElement, None, itkOffset1)
itkOffset1.Fill = new_instancemethod(_itkOffsetPython.itkOffset1_Fill, None, itkOffset1)
itkOffset1.assign = new_instancemethod(_itkOffsetPython.itkOffset1_assign, None, itkOffset1)
itkOffset1.swap = new_instancemethod(_itkOffsetPython.itkOffset1_swap, None, itkOffset1)
itkOffset1.begin = new_instancemethod(_itkOffsetPython.itkOffset1_begin, None, itkOffset1)
itkOffset1.end = new_instancemethod(_itkOffsetPython.itkOffset1_end, None, itkOffset1)
itkOffset1.rbegin = new_instancemethod(_itkOffsetPython.itkOffset1_rbegin, None, itkOffset1)
itkOffset1.rend = new_instancemethod(_itkOffsetPython.itkOffset1_rend, None, itkOffset1)
itkOffset1.size = new_instancemethod(_itkOffsetPython.itkOffset1_size, None, itkOffset1)
itkOffset1.max_size = new_instancemethod(_itkOffsetPython.itkOffset1_max_size, None, itkOffset1)
itkOffset1.empty = new_instancemethod(_itkOffsetPython.itkOffset1_empty, None, itkOffset1)
itkOffset1.at = new_instancemethod(_itkOffsetPython.itkOffset1_at, None, itkOffset1)
itkOffset1.front = new_instancemethod(_itkOffsetPython.itkOffset1_front, None, itkOffset1)
itkOffset1.back = new_instancemethod(_itkOffsetPython.itkOffset1_back, None, itkOffset1)
itkOffset1.data = new_instancemethod(_itkOffsetPython.itkOffset1_data, None, itkOffset1)
itkOffset1.__getitem__ = new_instancemethod(_itkOffsetPython.itkOffset1___getitem__, None, itkOffset1)
itkOffset1.__setitem__ = new_instancemethod(_itkOffsetPython.itkOffset1___setitem__, None, itkOffset1)
itkOffset1.__repr__ = new_instancemethod(_itkOffsetPython.itkOffset1___repr__, None, itkOffset1)
itkOffset1_swigregister = _itkOffsetPython.itkOffset1_swigregister
itkOffset1_swigregister(itkOffset1)

def itkOffset1_GetOffsetDimension() -> "unsigned int":
    """itkOffset1_GetOffsetDimension() -> unsigned int"""
    return _itkOffsetPython.itkOffset1_GetOffsetDimension()

def itkOffset1_GetBasisOffset(dim: 'unsigned int') -> "itkOffset1":
    """itkOffset1_GetBasisOffset(unsigned int dim) -> itkOffset1"""
    return _itkOffsetPython.itkOffset1_GetBasisOffset(dim)

def itkOffset1___len__() -> "unsigned int":
    """itkOffset1___len__() -> unsigned int"""
    return _itkOffsetPython.itkOffset1___len__()

class itkOffset2(object):
    """Proxy of C++ itkOffset2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetOffsetDimension() -> "unsigned int":
        """GetOffsetDimension() -> unsigned int"""
        return _itkOffsetPython.itkOffset2_GetOffsetDimension()

    GetOffsetDimension = staticmethod(GetOffsetDimension)

    def __add__(self, *args) -> "itkOffset2 const":
        """
        __add__(itkOffset2 self, itkOffset2 vec) -> itkOffset2
        __add__(itkOffset2 self, itkSize2 sz) -> itkOffset2
        """
        return _itkOffsetPython.itkOffset2___add__(self, *args)


    def __sub__(self, vec: 'itkOffset2') -> "itkOffset2 const":
        """__sub__(itkOffset2 self, itkOffset2 vec) -> itkOffset2"""
        return _itkOffsetPython.itkOffset2___sub__(self, vec)


    def __iadd__(self, *args) -> "itkOffset2 const &":
        """
        __iadd__(itkOffset2 self, itkSize2 sz) -> itkOffset2
        __iadd__(itkOffset2 self, itkOffset2 vec) -> itkOffset2
        """
        return _itkOffsetPython.itkOffset2___iadd__(self, *args)


    def __isub__(self, *args) -> "itkOffset2 const &":
        """
        __isub__(itkOffset2 self, itkSize2 sz) -> itkOffset2
        __isub__(itkOffset2 self, itkOffset2 vec) -> itkOffset2
        """
        return _itkOffsetPython.itkOffset2___isub__(self, *args)


    def GetOffset(self) -> "long long const *":
        """GetOffset(itkOffset2 self) -> long long const *"""
        return _itkOffsetPython.itkOffset2_GetOffset(self)


    def SetOffset(self, val: 'long long const *') -> "void":
        """SetOffset(itkOffset2 self, long long const * val)"""
        return _itkOffsetPython.itkOffset2_SetOffset(self, val)


    def SetElement(self, element: 'unsigned long', val: 'long long') -> "void":
        """SetElement(itkOffset2 self, unsigned long element, long long val)"""
        return _itkOffsetPython.itkOffset2_SetElement(self, element, val)


    def GetElement(self, element: 'unsigned long') -> "long long":
        """GetElement(itkOffset2 self, unsigned long element) -> long long"""
        return _itkOffsetPython.itkOffset2_GetElement(self, element)


    def Fill(self, value: 'long long') -> "void":
        """Fill(itkOffset2 self, long long value)"""
        return _itkOffsetPython.itkOffset2_Fill(self, value)


    def GetBasisOffset(dim: 'unsigned int') -> "itkOffset2":
        """GetBasisOffset(unsigned int dim) -> itkOffset2"""
        return _itkOffsetPython.itkOffset2_GetBasisOffset(dim)

    GetBasisOffset = staticmethod(GetBasisOffset)

    def assign(self, newValue: 'long long const &') -> "void":
        """assign(itkOffset2 self, long long const & newValue)"""
        return _itkOffsetPython.itkOffset2_assign(self, newValue)


    def swap(self, other: 'itkOffset2') -> "void":
        """swap(itkOffset2 self, itkOffset2 other)"""
        return _itkOffsetPython.itkOffset2_swap(self, other)


    def begin(self, *args) -> "long long const *":
        """
        begin(itkOffset2 self) -> long long
        begin(itkOffset2 self) -> long long const *
        """
        return _itkOffsetPython.itkOffset2_begin(self, *args)


    def end(self, *args) -> "long long const *":
        """
        end(itkOffset2 self) -> long long
        end(itkOffset2 self) -> long long const *
        """
        return _itkOffsetPython.itkOffset2_end(self, *args)


    def rbegin(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rbegin(itkOffset2 self) -> std::reverse_iterator< long long * >
        rbegin(itkOffset2 self) -> std::reverse_iterator< long long const * >
        """
        return _itkOffsetPython.itkOffset2_rbegin(self, *args)


    def rend(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rend(itkOffset2 self) -> std::reverse_iterator< long long * >
        rend(itkOffset2 self) -> std::reverse_iterator< long long const * >
        """
        return _itkOffsetPython.itkOffset2_rend(self, *args)


    def size(self) -> "unsigned int":
        """size(itkOffset2 self) -> unsigned int"""
        return _itkOffsetPython.itkOffset2_size(self)


    def max_size(self) -> "unsigned int":
        """max_size(itkOffset2 self) -> unsigned int"""
        return _itkOffsetPython.itkOffset2_max_size(self)


    def empty(self) -> "bool":
        """empty(itkOffset2 self) -> bool"""
        return _itkOffsetPython.itkOffset2_empty(self)


    def at(self, *args) -> "long long const &":
        """
        at(itkOffset2 self, unsigned int pos) -> long long
        at(itkOffset2 self, unsigned int pos) -> long long const &
        """
        return _itkOffsetPython.itkOffset2_at(self, *args)


    def front(self, *args) -> "long long const &":
        """
        front(itkOffset2 self) -> long long
        front(itkOffset2 self) -> long long const &
        """
        return _itkOffsetPython.itkOffset2_front(self, *args)


    def back(self, *args) -> "long long const &":
        """
        back(itkOffset2 self) -> long long
        back(itkOffset2 self) -> long long const &
        """
        return _itkOffsetPython.itkOffset2_back(self, *args)


    def data(self, *args) -> "long long const *":
        """
        data(itkOffset2 self) -> long long
        data(itkOffset2 self) -> long long const *
        """
        return _itkOffsetPython.itkOffset2_data(self, *args)


    def __init__(self, *args):
        """
        __init__(itkOffset2 self) -> itkOffset2
        __init__(itkOffset2 self, itkOffset2 arg0) -> itkOffset2
        """
        _itkOffsetPython.itkOffset2_swiginit(self, _itkOffsetPython.new_itkOffset2(*args))
    __swig_destroy__ = _itkOffsetPython.delete_itkOffset2

    def __getitem__(self, d: 'unsigned long') -> "long":
        """__getitem__(itkOffset2 self, unsigned long d) -> long"""
        return _itkOffsetPython.itkOffset2___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'long') -> "void":
        """__setitem__(itkOffset2 self, unsigned long d, long v)"""
        return _itkOffsetPython.itkOffset2___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkOffsetPython.itkOffset2___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkOffset2 self) -> std::string"""
        return _itkOffsetPython.itkOffset2___repr__(self)

itkOffset2.__add__ = new_instancemethod(_itkOffsetPython.itkOffset2___add__, None, itkOffset2)
itkOffset2.__sub__ = new_instancemethod(_itkOffsetPython.itkOffset2___sub__, None, itkOffset2)
itkOffset2.__iadd__ = new_instancemethod(_itkOffsetPython.itkOffset2___iadd__, None, itkOffset2)
itkOffset2.__isub__ = new_instancemethod(_itkOffsetPython.itkOffset2___isub__, None, itkOffset2)
itkOffset2.GetOffset = new_instancemethod(_itkOffsetPython.itkOffset2_GetOffset, None, itkOffset2)
itkOffset2.SetOffset = new_instancemethod(_itkOffsetPython.itkOffset2_SetOffset, None, itkOffset2)
itkOffset2.SetElement = new_instancemethod(_itkOffsetPython.itkOffset2_SetElement, None, itkOffset2)
itkOffset2.GetElement = new_instancemethod(_itkOffsetPython.itkOffset2_GetElement, None, itkOffset2)
itkOffset2.Fill = new_instancemethod(_itkOffsetPython.itkOffset2_Fill, None, itkOffset2)
itkOffset2.assign = new_instancemethod(_itkOffsetPython.itkOffset2_assign, None, itkOffset2)
itkOffset2.swap = new_instancemethod(_itkOffsetPython.itkOffset2_swap, None, itkOffset2)
itkOffset2.begin = new_instancemethod(_itkOffsetPython.itkOffset2_begin, None, itkOffset2)
itkOffset2.end = new_instancemethod(_itkOffsetPython.itkOffset2_end, None, itkOffset2)
itkOffset2.rbegin = new_instancemethod(_itkOffsetPython.itkOffset2_rbegin, None, itkOffset2)
itkOffset2.rend = new_instancemethod(_itkOffsetPython.itkOffset2_rend, None, itkOffset2)
itkOffset2.size = new_instancemethod(_itkOffsetPython.itkOffset2_size, None, itkOffset2)
itkOffset2.max_size = new_instancemethod(_itkOffsetPython.itkOffset2_max_size, None, itkOffset2)
itkOffset2.empty = new_instancemethod(_itkOffsetPython.itkOffset2_empty, None, itkOffset2)
itkOffset2.at = new_instancemethod(_itkOffsetPython.itkOffset2_at, None, itkOffset2)
itkOffset2.front = new_instancemethod(_itkOffsetPython.itkOffset2_front, None, itkOffset2)
itkOffset2.back = new_instancemethod(_itkOffsetPython.itkOffset2_back, None, itkOffset2)
itkOffset2.data = new_instancemethod(_itkOffsetPython.itkOffset2_data, None, itkOffset2)
itkOffset2.__getitem__ = new_instancemethod(_itkOffsetPython.itkOffset2___getitem__, None, itkOffset2)
itkOffset2.__setitem__ = new_instancemethod(_itkOffsetPython.itkOffset2___setitem__, None, itkOffset2)
itkOffset2.__repr__ = new_instancemethod(_itkOffsetPython.itkOffset2___repr__, None, itkOffset2)
itkOffset2_swigregister = _itkOffsetPython.itkOffset2_swigregister
itkOffset2_swigregister(itkOffset2)

def itkOffset2_GetOffsetDimension() -> "unsigned int":
    """itkOffset2_GetOffsetDimension() -> unsigned int"""
    return _itkOffsetPython.itkOffset2_GetOffsetDimension()

def itkOffset2_GetBasisOffset(dim: 'unsigned int') -> "itkOffset2":
    """itkOffset2_GetBasisOffset(unsigned int dim) -> itkOffset2"""
    return _itkOffsetPython.itkOffset2_GetBasisOffset(dim)

def itkOffset2___len__() -> "unsigned int":
    """itkOffset2___len__() -> unsigned int"""
    return _itkOffsetPython.itkOffset2___len__()

class itkOffset3(object):
    """Proxy of C++ itkOffset3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetOffsetDimension() -> "unsigned int":
        """GetOffsetDimension() -> unsigned int"""
        return _itkOffsetPython.itkOffset3_GetOffsetDimension()

    GetOffsetDimension = staticmethod(GetOffsetDimension)

    def __add__(self, *args) -> "itkOffset3 const":
        """
        __add__(itkOffset3 self, itkOffset3 vec) -> itkOffset3
        __add__(itkOffset3 self, itkSize3 sz) -> itkOffset3
        """
        return _itkOffsetPython.itkOffset3___add__(self, *args)


    def __sub__(self, vec: 'itkOffset3') -> "itkOffset3 const":
        """__sub__(itkOffset3 self, itkOffset3 vec) -> itkOffset3"""
        return _itkOffsetPython.itkOffset3___sub__(self, vec)


    def __iadd__(self, *args) -> "itkOffset3 const &":
        """
        __iadd__(itkOffset3 self, itkSize3 sz) -> itkOffset3
        __iadd__(itkOffset3 self, itkOffset3 vec) -> itkOffset3
        """
        return _itkOffsetPython.itkOffset3___iadd__(self, *args)


    def __isub__(self, *args) -> "itkOffset3 const &":
        """
        __isub__(itkOffset3 self, itkSize3 sz) -> itkOffset3
        __isub__(itkOffset3 self, itkOffset3 vec) -> itkOffset3
        """
        return _itkOffsetPython.itkOffset3___isub__(self, *args)


    def GetOffset(self) -> "long long const *":
        """GetOffset(itkOffset3 self) -> long long const *"""
        return _itkOffsetPython.itkOffset3_GetOffset(self)


    def SetOffset(self, val: 'long long const *') -> "void":
        """SetOffset(itkOffset3 self, long long const * val)"""
        return _itkOffsetPython.itkOffset3_SetOffset(self, val)


    def SetElement(self, element: 'unsigned long', val: 'long long') -> "void":
        """SetElement(itkOffset3 self, unsigned long element, long long val)"""
        return _itkOffsetPython.itkOffset3_SetElement(self, element, val)


    def GetElement(self, element: 'unsigned long') -> "long long":
        """GetElement(itkOffset3 self, unsigned long element) -> long long"""
        return _itkOffsetPython.itkOffset3_GetElement(self, element)


    def Fill(self, value: 'long long') -> "void":
        """Fill(itkOffset3 self, long long value)"""
        return _itkOffsetPython.itkOffset3_Fill(self, value)


    def GetBasisOffset(dim: 'unsigned int') -> "itkOffset3":
        """GetBasisOffset(unsigned int dim) -> itkOffset3"""
        return _itkOffsetPython.itkOffset3_GetBasisOffset(dim)

    GetBasisOffset = staticmethod(GetBasisOffset)

    def assign(self, newValue: 'long long const &') -> "void":
        """assign(itkOffset3 self, long long const & newValue)"""
        return _itkOffsetPython.itkOffset3_assign(self, newValue)


    def swap(self, other: 'itkOffset3') -> "void":
        """swap(itkOffset3 self, itkOffset3 other)"""
        return _itkOffsetPython.itkOffset3_swap(self, other)


    def begin(self, *args) -> "long long const *":
        """
        begin(itkOffset3 self) -> long long
        begin(itkOffset3 self) -> long long const *
        """
        return _itkOffsetPython.itkOffset3_begin(self, *args)


    def end(self, *args) -> "long long const *":
        """
        end(itkOffset3 self) -> long long
        end(itkOffset3 self) -> long long const *
        """
        return _itkOffsetPython.itkOffset3_end(self, *args)


    def rbegin(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rbegin(itkOffset3 self) -> std::reverse_iterator< long long * >
        rbegin(itkOffset3 self) -> std::reverse_iterator< long long const * >
        """
        return _itkOffsetPython.itkOffset3_rbegin(self, *args)


    def rend(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rend(itkOffset3 self) -> std::reverse_iterator< long long * >
        rend(itkOffset3 self) -> std::reverse_iterator< long long const * >
        """
        return _itkOffsetPython.itkOffset3_rend(self, *args)


    def size(self) -> "unsigned int":
        """size(itkOffset3 self) -> unsigned int"""
        return _itkOffsetPython.itkOffset3_size(self)


    def max_size(self) -> "unsigned int":
        """max_size(itkOffset3 self) -> unsigned int"""
        return _itkOffsetPython.itkOffset3_max_size(self)


    def empty(self) -> "bool":
        """empty(itkOffset3 self) -> bool"""
        return _itkOffsetPython.itkOffset3_empty(self)


    def at(self, *args) -> "long long const &":
        """
        at(itkOffset3 self, unsigned int pos) -> long long
        at(itkOffset3 self, unsigned int pos) -> long long const &
        """
        return _itkOffsetPython.itkOffset3_at(self, *args)


    def front(self, *args) -> "long long const &":
        """
        front(itkOffset3 self) -> long long
        front(itkOffset3 self) -> long long const &
        """
        return _itkOffsetPython.itkOffset3_front(self, *args)


    def back(self, *args) -> "long long const &":
        """
        back(itkOffset3 self) -> long long
        back(itkOffset3 self) -> long long const &
        """
        return _itkOffsetPython.itkOffset3_back(self, *args)


    def data(self, *args) -> "long long const *":
        """
        data(itkOffset3 self) -> long long
        data(itkOffset3 self) -> long long const *
        """
        return _itkOffsetPython.itkOffset3_data(self, *args)


    def __init__(self, *args):
        """
        __init__(itkOffset3 self) -> itkOffset3
        __init__(itkOffset3 self, itkOffset3 arg0) -> itkOffset3
        """
        _itkOffsetPython.itkOffset3_swiginit(self, _itkOffsetPython.new_itkOffset3(*args))
    __swig_destroy__ = _itkOffsetPython.delete_itkOffset3

    def __getitem__(self, d: 'unsigned long') -> "long":
        """__getitem__(itkOffset3 self, unsigned long d) -> long"""
        return _itkOffsetPython.itkOffset3___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'long') -> "void":
        """__setitem__(itkOffset3 self, unsigned long d, long v)"""
        return _itkOffsetPython.itkOffset3___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkOffsetPython.itkOffset3___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkOffset3 self) -> std::string"""
        return _itkOffsetPython.itkOffset3___repr__(self)

itkOffset3.__add__ = new_instancemethod(_itkOffsetPython.itkOffset3___add__, None, itkOffset3)
itkOffset3.__sub__ = new_instancemethod(_itkOffsetPython.itkOffset3___sub__, None, itkOffset3)
itkOffset3.__iadd__ = new_instancemethod(_itkOffsetPython.itkOffset3___iadd__, None, itkOffset3)
itkOffset3.__isub__ = new_instancemethod(_itkOffsetPython.itkOffset3___isub__, None, itkOffset3)
itkOffset3.GetOffset = new_instancemethod(_itkOffsetPython.itkOffset3_GetOffset, None, itkOffset3)
itkOffset3.SetOffset = new_instancemethod(_itkOffsetPython.itkOffset3_SetOffset, None, itkOffset3)
itkOffset3.SetElement = new_instancemethod(_itkOffsetPython.itkOffset3_SetElement, None, itkOffset3)
itkOffset3.GetElement = new_instancemethod(_itkOffsetPython.itkOffset3_GetElement, None, itkOffset3)
itkOffset3.Fill = new_instancemethod(_itkOffsetPython.itkOffset3_Fill, None, itkOffset3)
itkOffset3.assign = new_instancemethod(_itkOffsetPython.itkOffset3_assign, None, itkOffset3)
itkOffset3.swap = new_instancemethod(_itkOffsetPython.itkOffset3_swap, None, itkOffset3)
itkOffset3.begin = new_instancemethod(_itkOffsetPython.itkOffset3_begin, None, itkOffset3)
itkOffset3.end = new_instancemethod(_itkOffsetPython.itkOffset3_end, None, itkOffset3)
itkOffset3.rbegin = new_instancemethod(_itkOffsetPython.itkOffset3_rbegin, None, itkOffset3)
itkOffset3.rend = new_instancemethod(_itkOffsetPython.itkOffset3_rend, None, itkOffset3)
itkOffset3.size = new_instancemethod(_itkOffsetPython.itkOffset3_size, None, itkOffset3)
itkOffset3.max_size = new_instancemethod(_itkOffsetPython.itkOffset3_max_size, None, itkOffset3)
itkOffset3.empty = new_instancemethod(_itkOffsetPython.itkOffset3_empty, None, itkOffset3)
itkOffset3.at = new_instancemethod(_itkOffsetPython.itkOffset3_at, None, itkOffset3)
itkOffset3.front = new_instancemethod(_itkOffsetPython.itkOffset3_front, None, itkOffset3)
itkOffset3.back = new_instancemethod(_itkOffsetPython.itkOffset3_back, None, itkOffset3)
itkOffset3.data = new_instancemethod(_itkOffsetPython.itkOffset3_data, None, itkOffset3)
itkOffset3.__getitem__ = new_instancemethod(_itkOffsetPython.itkOffset3___getitem__, None, itkOffset3)
itkOffset3.__setitem__ = new_instancemethod(_itkOffsetPython.itkOffset3___setitem__, None, itkOffset3)
itkOffset3.__repr__ = new_instancemethod(_itkOffsetPython.itkOffset3___repr__, None, itkOffset3)
itkOffset3_swigregister = _itkOffsetPython.itkOffset3_swigregister
itkOffset3_swigregister(itkOffset3)

def itkOffset3_GetOffsetDimension() -> "unsigned int":
    """itkOffset3_GetOffsetDimension() -> unsigned int"""
    return _itkOffsetPython.itkOffset3_GetOffsetDimension()

def itkOffset3_GetBasisOffset(dim: 'unsigned int') -> "itkOffset3":
    """itkOffset3_GetBasisOffset(unsigned int dim) -> itkOffset3"""
    return _itkOffsetPython.itkOffset3_GetBasisOffset(dim)

def itkOffset3___len__() -> "unsigned int":
    """itkOffset3___len__() -> unsigned int"""
    return _itkOffsetPython.itkOffset3___len__()

class itkOffset4(object):
    """Proxy of C++ itkOffset4 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetOffsetDimension() -> "unsigned int":
        """GetOffsetDimension() -> unsigned int"""
        return _itkOffsetPython.itkOffset4_GetOffsetDimension()

    GetOffsetDimension = staticmethod(GetOffsetDimension)

    def __add__(self, *args) -> "itkOffset4 const":
        """
        __add__(itkOffset4 self, itkOffset4 vec) -> itkOffset4
        __add__(itkOffset4 self, itkSize4 sz) -> itkOffset4
        """
        return _itkOffsetPython.itkOffset4___add__(self, *args)


    def __sub__(self, vec: 'itkOffset4') -> "itkOffset4 const":
        """__sub__(itkOffset4 self, itkOffset4 vec) -> itkOffset4"""
        return _itkOffsetPython.itkOffset4___sub__(self, vec)


    def __iadd__(self, *args) -> "itkOffset4 const &":
        """
        __iadd__(itkOffset4 self, itkSize4 sz) -> itkOffset4
        __iadd__(itkOffset4 self, itkOffset4 vec) -> itkOffset4
        """
        return _itkOffsetPython.itkOffset4___iadd__(self, *args)


    def __isub__(self, *args) -> "itkOffset4 const &":
        """
        __isub__(itkOffset4 self, itkSize4 sz) -> itkOffset4
        __isub__(itkOffset4 self, itkOffset4 vec) -> itkOffset4
        """
        return _itkOffsetPython.itkOffset4___isub__(self, *args)


    def GetOffset(self) -> "long long const *":
        """GetOffset(itkOffset4 self) -> long long const *"""
        return _itkOffsetPython.itkOffset4_GetOffset(self)


    def SetOffset(self, val: 'long long const *') -> "void":
        """SetOffset(itkOffset4 self, long long const * val)"""
        return _itkOffsetPython.itkOffset4_SetOffset(self, val)


    def SetElement(self, element: 'unsigned long', val: 'long long') -> "void":
        """SetElement(itkOffset4 self, unsigned long element, long long val)"""
        return _itkOffsetPython.itkOffset4_SetElement(self, element, val)


    def GetElement(self, element: 'unsigned long') -> "long long":
        """GetElement(itkOffset4 self, unsigned long element) -> long long"""
        return _itkOffsetPython.itkOffset4_GetElement(self, element)


    def Fill(self, value: 'long long') -> "void":
        """Fill(itkOffset4 self, long long value)"""
        return _itkOffsetPython.itkOffset4_Fill(self, value)


    def GetBasisOffset(dim: 'unsigned int') -> "itkOffset4":
        """GetBasisOffset(unsigned int dim) -> itkOffset4"""
        return _itkOffsetPython.itkOffset4_GetBasisOffset(dim)

    GetBasisOffset = staticmethod(GetBasisOffset)

    def assign(self, newValue: 'long long const &') -> "void":
        """assign(itkOffset4 self, long long const & newValue)"""
        return _itkOffsetPython.itkOffset4_assign(self, newValue)


    def swap(self, other: 'itkOffset4') -> "void":
        """swap(itkOffset4 self, itkOffset4 other)"""
        return _itkOffsetPython.itkOffset4_swap(self, other)


    def begin(self, *args) -> "long long const *":
        """
        begin(itkOffset4 self) -> long long
        begin(itkOffset4 self) -> long long const *
        """
        return _itkOffsetPython.itkOffset4_begin(self, *args)


    def end(self, *args) -> "long long const *":
        """
        end(itkOffset4 self) -> long long
        end(itkOffset4 self) -> long long const *
        """
        return _itkOffsetPython.itkOffset4_end(self, *args)


    def rbegin(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rbegin(itkOffset4 self) -> std::reverse_iterator< long long * >
        rbegin(itkOffset4 self) -> std::reverse_iterator< long long const * >
        """
        return _itkOffsetPython.itkOffset4_rbegin(self, *args)


    def rend(self, *args) -> "std::reverse_iterator< long long const * >":
        """
        rend(itkOffset4 self) -> std::reverse_iterator< long long * >
        rend(itkOffset4 self) -> std::reverse_iterator< long long const * >
        """
        return _itkOffsetPython.itkOffset4_rend(self, *args)


    def size(self) -> "unsigned int":
        """size(itkOffset4 self) -> unsigned int"""
        return _itkOffsetPython.itkOffset4_size(self)


    def max_size(self) -> "unsigned int":
        """max_size(itkOffset4 self) -> unsigned int"""
        return _itkOffsetPython.itkOffset4_max_size(self)


    def empty(self) -> "bool":
        """empty(itkOffset4 self) -> bool"""
        return _itkOffsetPython.itkOffset4_empty(self)


    def at(self, *args) -> "long long const &":
        """
        at(itkOffset4 self, unsigned int pos) -> long long
        at(itkOffset4 self, unsigned int pos) -> long long const &
        """
        return _itkOffsetPython.itkOffset4_at(self, *args)


    def front(self, *args) -> "long long const &":
        """
        front(itkOffset4 self) -> long long
        front(itkOffset4 self) -> long long const &
        """
        return _itkOffsetPython.itkOffset4_front(self, *args)


    def back(self, *args) -> "long long const &":
        """
        back(itkOffset4 self) -> long long
        back(itkOffset4 self) -> long long const &
        """
        return _itkOffsetPython.itkOffset4_back(self, *args)


    def data(self, *args) -> "long long const *":
        """
        data(itkOffset4 self) -> long long
        data(itkOffset4 self) -> long long const *
        """
        return _itkOffsetPython.itkOffset4_data(self, *args)


    def __init__(self, *args):
        """
        __init__(itkOffset4 self) -> itkOffset4
        __init__(itkOffset4 self, itkOffset4 arg0) -> itkOffset4
        """
        _itkOffsetPython.itkOffset4_swiginit(self, _itkOffsetPython.new_itkOffset4(*args))
    __swig_destroy__ = _itkOffsetPython.delete_itkOffset4

    def __getitem__(self, d: 'unsigned long') -> "long":
        """__getitem__(itkOffset4 self, unsigned long d) -> long"""
        return _itkOffsetPython.itkOffset4___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'long') -> "void":
        """__setitem__(itkOffset4 self, unsigned long d, long v)"""
        return _itkOffsetPython.itkOffset4___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkOffsetPython.itkOffset4___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkOffset4 self) -> std::string"""
        return _itkOffsetPython.itkOffset4___repr__(self)

itkOffset4.__add__ = new_instancemethod(_itkOffsetPython.itkOffset4___add__, None, itkOffset4)
itkOffset4.__sub__ = new_instancemethod(_itkOffsetPython.itkOffset4___sub__, None, itkOffset4)
itkOffset4.__iadd__ = new_instancemethod(_itkOffsetPython.itkOffset4___iadd__, None, itkOffset4)
itkOffset4.__isub__ = new_instancemethod(_itkOffsetPython.itkOffset4___isub__, None, itkOffset4)
itkOffset4.GetOffset = new_instancemethod(_itkOffsetPython.itkOffset4_GetOffset, None, itkOffset4)
itkOffset4.SetOffset = new_instancemethod(_itkOffsetPython.itkOffset4_SetOffset, None, itkOffset4)
itkOffset4.SetElement = new_instancemethod(_itkOffsetPython.itkOffset4_SetElement, None, itkOffset4)
itkOffset4.GetElement = new_instancemethod(_itkOffsetPython.itkOffset4_GetElement, None, itkOffset4)
itkOffset4.Fill = new_instancemethod(_itkOffsetPython.itkOffset4_Fill, None, itkOffset4)
itkOffset4.assign = new_instancemethod(_itkOffsetPython.itkOffset4_assign, None, itkOffset4)
itkOffset4.swap = new_instancemethod(_itkOffsetPython.itkOffset4_swap, None, itkOffset4)
itkOffset4.begin = new_instancemethod(_itkOffsetPython.itkOffset4_begin, None, itkOffset4)
itkOffset4.end = new_instancemethod(_itkOffsetPython.itkOffset4_end, None, itkOffset4)
itkOffset4.rbegin = new_instancemethod(_itkOffsetPython.itkOffset4_rbegin, None, itkOffset4)
itkOffset4.rend = new_instancemethod(_itkOffsetPython.itkOffset4_rend, None, itkOffset4)
itkOffset4.size = new_instancemethod(_itkOffsetPython.itkOffset4_size, None, itkOffset4)
itkOffset4.max_size = new_instancemethod(_itkOffsetPython.itkOffset4_max_size, None, itkOffset4)
itkOffset4.empty = new_instancemethod(_itkOffsetPython.itkOffset4_empty, None, itkOffset4)
itkOffset4.at = new_instancemethod(_itkOffsetPython.itkOffset4_at, None, itkOffset4)
itkOffset4.front = new_instancemethod(_itkOffsetPython.itkOffset4_front, None, itkOffset4)
itkOffset4.back = new_instancemethod(_itkOffsetPython.itkOffset4_back, None, itkOffset4)
itkOffset4.data = new_instancemethod(_itkOffsetPython.itkOffset4_data, None, itkOffset4)
itkOffset4.__getitem__ = new_instancemethod(_itkOffsetPython.itkOffset4___getitem__, None, itkOffset4)
itkOffset4.__setitem__ = new_instancemethod(_itkOffsetPython.itkOffset4___setitem__, None, itkOffset4)
itkOffset4.__repr__ = new_instancemethod(_itkOffsetPython.itkOffset4___repr__, None, itkOffset4)
itkOffset4_swigregister = _itkOffsetPython.itkOffset4_swigregister
itkOffset4_swigregister(itkOffset4)

def itkOffset4_GetOffsetDimension() -> "unsigned int":
    """itkOffset4_GetOffsetDimension() -> unsigned int"""
    return _itkOffsetPython.itkOffset4_GetOffsetDimension()

def itkOffset4_GetBasisOffset(dim: 'unsigned int') -> "itkOffset4":
    """itkOffset4_GetBasisOffset(unsigned int dim) -> itkOffset4"""
    return _itkOffsetPython.itkOffset4_GetBasisOffset(dim)

def itkOffset4___len__() -> "unsigned int":
    """itkOffset4___len__() -> unsigned int"""
    return _itkOffsetPython.itkOffset4___len__()



