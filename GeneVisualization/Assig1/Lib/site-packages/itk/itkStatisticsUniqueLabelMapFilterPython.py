# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkStatisticsUniqueLabelMapFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkStatisticsUniqueLabelMapFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkStatisticsUniqueLabelMapFilterPython
            return _itkStatisticsUniqueLabelMapFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkStatisticsUniqueLabelMapFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkStatisticsUniqueLabelMapFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkStatisticsUniqueLabelMapFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkShapeUniqueLabelMapFilterPython
import itkInPlaceLabelMapFilterPython
import ITKCommonBasePython
import pyBasePython
import ITKLabelMapBasePython
import itkImageSourceCommonPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImagePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkStatisticsLabelObjectPython
import itkShapeLabelObjectPython
import itkLabelObjectPython
import itkLabelObjectLinePython
import itkAffineTransformPython
import itkTransformBasePython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkDiffusionTensor3DPython
import itkMatrixOffsetTransformBasePython
import itkHistogramPython
import itkSamplePython
import itkImageSourcePython
import itkVectorImagePython
import itkImageToImageFilterCommonPython
import itkLabelMapFilterPython

def itkStatisticsUniqueLabelMapFilterLM3_New():
  return itkStatisticsUniqueLabelMapFilterLM3.New()


def itkStatisticsUniqueLabelMapFilterLM2_New():
  return itkStatisticsUniqueLabelMapFilterLM2.New()

class itkStatisticsUniqueLabelMapFilterLM2(itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM2):
    """Proxy of C++ itkStatisticsUniqueLabelMapFilterLM2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkStatisticsUniqueLabelMapFilterLM2_Pointer":
        """__New_orig__() -> itkStatisticsUniqueLabelMapFilterLM2_Pointer"""
        return _itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkStatisticsUniqueLabelMapFilterLM2_Pointer":
        """Clone(itkStatisticsUniqueLabelMapFilterLM2 self) -> itkStatisticsUniqueLabelMapFilterLM2_Pointer"""
        return _itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM2_Clone(self)

    __swig_destroy__ = _itkStatisticsUniqueLabelMapFilterPython.delete_itkStatisticsUniqueLabelMapFilterLM2

    def cast(obj: 'itkLightObject') -> "itkStatisticsUniqueLabelMapFilterLM2 *":
        """cast(itkLightObject obj) -> itkStatisticsUniqueLabelMapFilterLM2"""
        return _itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStatisticsUniqueLabelMapFilterLM2

        Create a new object of the class itkStatisticsUniqueLabelMapFilterLM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsUniqueLabelMapFilterLM2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStatisticsUniqueLabelMapFilterLM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStatisticsUniqueLabelMapFilterLM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStatisticsUniqueLabelMapFilterLM2.Clone = new_instancemethod(_itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM2_Clone, None, itkStatisticsUniqueLabelMapFilterLM2)
itkStatisticsUniqueLabelMapFilterLM2_swigregister = _itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM2_swigregister
itkStatisticsUniqueLabelMapFilterLM2_swigregister(itkStatisticsUniqueLabelMapFilterLM2)

def itkStatisticsUniqueLabelMapFilterLM2___New_orig__() -> "itkStatisticsUniqueLabelMapFilterLM2_Pointer":
    """itkStatisticsUniqueLabelMapFilterLM2___New_orig__() -> itkStatisticsUniqueLabelMapFilterLM2_Pointer"""
    return _itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM2___New_orig__()

def itkStatisticsUniqueLabelMapFilterLM2_cast(obj: 'itkLightObject') -> "itkStatisticsUniqueLabelMapFilterLM2 *":
    """itkStatisticsUniqueLabelMapFilterLM2_cast(itkLightObject obj) -> itkStatisticsUniqueLabelMapFilterLM2"""
    return _itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM2_cast(obj)

class itkStatisticsUniqueLabelMapFilterLM3(itkShapeUniqueLabelMapFilterPython.itkShapeUniqueLabelMapFilterLM3):
    """Proxy of C++ itkStatisticsUniqueLabelMapFilterLM3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkStatisticsUniqueLabelMapFilterLM3_Pointer":
        """__New_orig__() -> itkStatisticsUniqueLabelMapFilterLM3_Pointer"""
        return _itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkStatisticsUniqueLabelMapFilterLM3_Pointer":
        """Clone(itkStatisticsUniqueLabelMapFilterLM3 self) -> itkStatisticsUniqueLabelMapFilterLM3_Pointer"""
        return _itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM3_Clone(self)

    __swig_destroy__ = _itkStatisticsUniqueLabelMapFilterPython.delete_itkStatisticsUniqueLabelMapFilterLM3

    def cast(obj: 'itkLightObject') -> "itkStatisticsUniqueLabelMapFilterLM3 *":
        """cast(itkLightObject obj) -> itkStatisticsUniqueLabelMapFilterLM3"""
        return _itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStatisticsUniqueLabelMapFilterLM3

        Create a new object of the class itkStatisticsUniqueLabelMapFilterLM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsUniqueLabelMapFilterLM3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStatisticsUniqueLabelMapFilterLM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStatisticsUniqueLabelMapFilterLM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStatisticsUniqueLabelMapFilterLM3.Clone = new_instancemethod(_itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM3_Clone, None, itkStatisticsUniqueLabelMapFilterLM3)
itkStatisticsUniqueLabelMapFilterLM3_swigregister = _itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM3_swigregister
itkStatisticsUniqueLabelMapFilterLM3_swigregister(itkStatisticsUniqueLabelMapFilterLM3)

def itkStatisticsUniqueLabelMapFilterLM3___New_orig__() -> "itkStatisticsUniqueLabelMapFilterLM3_Pointer":
    """itkStatisticsUniqueLabelMapFilterLM3___New_orig__() -> itkStatisticsUniqueLabelMapFilterLM3_Pointer"""
    return _itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM3___New_orig__()

def itkStatisticsUniqueLabelMapFilterLM3_cast(obj: 'itkLightObject') -> "itkStatisticsUniqueLabelMapFilterLM3 *":
    """itkStatisticsUniqueLabelMapFilterLM3_cast(itkLightObject obj) -> itkStatisticsUniqueLabelMapFilterLM3"""
    return _itkStatisticsUniqueLabelMapFilterPython.itkStatisticsUniqueLabelMapFilterLM3_cast(obj)


def statistics_unique_label_map_filter(*args, **kwargs):
    """Procedural interface for StatisticsUniqueLabelMapFilter"""
    import itk
    instance = itk.StatisticsUniqueLabelMapFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def statistics_unique_label_map_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.StatisticsUniqueLabelMapFilter, itkTemplate.itkTemplate):
        statistics_unique_label_map_filter.__doc__ = itk.StatisticsUniqueLabelMapFilter.values()[0].__doc__
    else:
        statistics_unique_label_map_filter.__doc__ = itk.StatisticsUniqueLabelMapFilter.__doc__




