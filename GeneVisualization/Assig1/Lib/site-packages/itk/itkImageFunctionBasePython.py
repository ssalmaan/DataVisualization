# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkImageFunctionBasePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageFunctionBasePython', [dirname(__file__)])
        except ImportError:
            import _itkImageFunctionBasePython
            return _itkImageFunctionBasePython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageFunctionBasePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageFunctionBasePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageFunctionBasePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFunctionBasePython
import itkArrayPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import itkContinuousIndexPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import itkFixedArrayPython
import itkImagePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import ITKCommonBasePython
import itkImageRegionPython
import itkRGBPixelPython
import itkRGBAPixelPython

def itkImageFunctionIRGBAUC3RGBADD_New():
  return itkImageFunctionIRGBAUC3RGBADD.New()


def itkImageFunctionIRGBUC3RGBDD_New():
  return itkImageFunctionIRGBUC3RGBDD.New()


def itkImageFunctionIRGBAUC3RGBAUCD_New():
  return itkImageFunctionIRGBAUC3RGBAUCD.New()


def itkImageFunctionIRGBUC3RGBUCD_New():
  return itkImageFunctionIRGBUC3RGBUCD.New()


def itkImageFunctionICVF33DD_New():
  return itkImageFunctionICVF33DD.New()


def itkImageFunctionICVF33CVD3D_New():
  return itkImageFunctionICVF33CVD3D.New()


def itkImageFunctionICVF33VD3D_New():
  return itkImageFunctionICVF33VD3D.New()


def itkImageFunctionIVF33DD_New():
  return itkImageFunctionIVF33DD.New()


def itkImageFunctionIVF33CVD3D_New():
  return itkImageFunctionIVF33CVD3D.New()


def itkImageFunctionIVF33VD3D_New():
  return itkImageFunctionIVF33VD3D.New()


def itkImageFunctionIF3DD_New():
  return itkImageFunctionIF3DD.New()


def itkImageFunctionIF3DF_New():
  return itkImageFunctionIF3DF.New()


def itkImageFunctionIUS3DD_New():
  return itkImageFunctionIUS3DD.New()


def itkImageFunctionIUS3DF_New():
  return itkImageFunctionIUS3DF.New()


def itkImageFunctionIUC3DD_New():
  return itkImageFunctionIUC3DD.New()


def itkImageFunctionIUC3DF_New():
  return itkImageFunctionIUC3DF.New()


def itkImageFunctionISS3DD_New():
  return itkImageFunctionISS3DD.New()


def itkImageFunctionISS3DF_New():
  return itkImageFunctionISS3DF.New()


def itkImageFunctionIRGBAUC2RGBADD_New():
  return itkImageFunctionIRGBAUC2RGBADD.New()


def itkImageFunctionIRGBUC2RGBDD_New():
  return itkImageFunctionIRGBUC2RGBDD.New()


def itkImageFunctionIRGBAUC2RGBAUCD_New():
  return itkImageFunctionIRGBAUC2RGBAUCD.New()


def itkImageFunctionIRGBUC2RGBUCD_New():
  return itkImageFunctionIRGBUC2RGBUCD.New()


def itkImageFunctionICVF22DD_New():
  return itkImageFunctionICVF22DD.New()


def itkImageFunctionICVF22CVD2D_New():
  return itkImageFunctionICVF22CVD2D.New()


def itkImageFunctionICVF22VD2D_New():
  return itkImageFunctionICVF22VD2D.New()


def itkImageFunctionIVF22DD_New():
  return itkImageFunctionIVF22DD.New()


def itkImageFunctionIVF22CVD2D_New():
  return itkImageFunctionIVF22CVD2D.New()


def itkImageFunctionIVF22VD2D_New():
  return itkImageFunctionIVF22VD2D.New()


def itkImageFunctionIF2DD_New():
  return itkImageFunctionIF2DD.New()


def itkImageFunctionIF2DF_New():
  return itkImageFunctionIF2DF.New()


def itkImageFunctionIUS2DD_New():
  return itkImageFunctionIUS2DD.New()


def itkImageFunctionIUS2DF_New():
  return itkImageFunctionIUS2DF.New()


def itkImageFunctionIUC2DD_New():
  return itkImageFunctionIUC2DD.New()


def itkImageFunctionIUC2DF_New():
  return itkImageFunctionIUC2DF.New()


def itkImageFunctionISS2DD_New():
  return itkImageFunctionISS2DD.New()


def itkImageFunctionISS2DF_New():
  return itkImageFunctionISS2DF.New()

class itkImageFunctionICVF22CVD2D(itkFunctionBasePython.itkFunctionBasePD2CVD2):
    """Proxy of C++ itkImageFunctionICVF22CVD2D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageCVF22') -> "void":
        """SetInputImage(itkImageFunctionICVF22CVD2D self, itkImageCVF22 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageCVF22 const *":
        """GetInputImage(itkImageFunctionICVF22CVD2D self) -> itkImageCVF22"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "itkCovariantVectorD2":
        """EvaluateAtIndex(itkImageFunctionICVF22CVD2D self, itkIndex2 index) -> itkCovariantVectorD2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "itkCovariantVectorD2":
        """EvaluateAtContinuousIndex(itkImageFunctionICVF22CVD2D self, itkContinuousIndexD2 index) -> itkCovariantVectorD2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionICVF22CVD2D self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionICVF22CVD2D self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionICVF22CVD2D self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionICVF22CVD2D self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionICVF22CVD2D self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionICVF22CVD2D self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionICVF22CVD2D self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionICVF22CVD2D self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionICVF22CVD2D self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionICVF22CVD2D self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionICVF22CVD2D

    def cast(obj: 'itkLightObject') -> "itkImageFunctionICVF22CVD2D *":
        """cast(itkLightObject obj) -> itkImageFunctionICVF22CVD2D"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF22CVD2D

        Create a new object of the class itkImageFunctionICVF22CVD2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionICVF22CVD2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionICVF22CVD2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF22CVD2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionICVF22CVD2D.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_SetInputImage, None, itkImageFunctionICVF22CVD2D)
itkImageFunctionICVF22CVD2D.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetInputImage, None, itkImageFunctionICVF22CVD2D)
itkImageFunctionICVF22CVD2D.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_EvaluateAtIndex, None, itkImageFunctionICVF22CVD2D)
itkImageFunctionICVF22CVD2D.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_EvaluateAtContinuousIndex, None, itkImageFunctionICVF22CVD2D)
itkImageFunctionICVF22CVD2D.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_IsInsideBuffer, None, itkImageFunctionICVF22CVD2D)
itkImageFunctionICVF22CVD2D.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_ConvertPointToNearestIndex, None, itkImageFunctionICVF22CVD2D)
itkImageFunctionICVF22CVD2D.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_ConvertPointToContinuousIndex, None, itkImageFunctionICVF22CVD2D)
itkImageFunctionICVF22CVD2D.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionICVF22CVD2D)
itkImageFunctionICVF22CVD2D.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetStartIndex, None, itkImageFunctionICVF22CVD2D)
itkImageFunctionICVF22CVD2D.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetEndIndex, None, itkImageFunctionICVF22CVD2D)
itkImageFunctionICVF22CVD2D.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetStartContinuousIndex, None, itkImageFunctionICVF22CVD2D)
itkImageFunctionICVF22CVD2D.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetEndContinuousIndex, None, itkImageFunctionICVF22CVD2D)
itkImageFunctionICVF22CVD2D_swigregister = _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_swigregister
itkImageFunctionICVF22CVD2D_swigregister(itkImageFunctionICVF22CVD2D)

def itkImageFunctionICVF22CVD2D_cast(obj: 'itkLightObject') -> "itkImageFunctionICVF22CVD2D *":
    """itkImageFunctionICVF22CVD2D_cast(itkLightObject obj) -> itkImageFunctionICVF22CVD2D"""
    return _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_cast(obj)

class itkImageFunctionICVF22DD(itkFunctionBasePython.itkFunctionBasePD2D):
    """Proxy of C++ itkImageFunctionICVF22DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageCVF22') -> "void":
        """SetInputImage(itkImageFunctionICVF22DD self, itkImageCVF22 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageCVF22 const *":
        """GetInputImage(itkImageFunctionICVF22DD self) -> itkImageCVF22"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "double":
        """EvaluateAtIndex(itkImageFunctionICVF22DD self, itkIndex2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionICVF22DD self, itkContinuousIndexD2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionICVF22DD self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionICVF22DD self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionICVF22DD self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionICVF22DD self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionICVF22DD self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionICVF22DD self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionICVF22DD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionICVF22DD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionICVF22DD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionICVF22DD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionICVF22DD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionICVF22DD *":
        """cast(itkLightObject obj) -> itkImageFunctionICVF22DD"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF22DD

        Create a new object of the class itkImageFunctionICVF22DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionICVF22DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionICVF22DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF22DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionICVF22DD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_SetInputImage, None, itkImageFunctionICVF22DD)
itkImageFunctionICVF22DD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetInputImage, None, itkImageFunctionICVF22DD)
itkImageFunctionICVF22DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_EvaluateAtIndex, None, itkImageFunctionICVF22DD)
itkImageFunctionICVF22DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_EvaluateAtContinuousIndex, None, itkImageFunctionICVF22DD)
itkImageFunctionICVF22DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_IsInsideBuffer, None, itkImageFunctionICVF22DD)
itkImageFunctionICVF22DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_ConvertPointToNearestIndex, None, itkImageFunctionICVF22DD)
itkImageFunctionICVF22DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_ConvertPointToContinuousIndex, None, itkImageFunctionICVF22DD)
itkImageFunctionICVF22DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionICVF22DD)
itkImageFunctionICVF22DD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetStartIndex, None, itkImageFunctionICVF22DD)
itkImageFunctionICVF22DD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetEndIndex, None, itkImageFunctionICVF22DD)
itkImageFunctionICVF22DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetStartContinuousIndex, None, itkImageFunctionICVF22DD)
itkImageFunctionICVF22DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetEndContinuousIndex, None, itkImageFunctionICVF22DD)
itkImageFunctionICVF22DD_swigregister = _itkImageFunctionBasePython.itkImageFunctionICVF22DD_swigregister
itkImageFunctionICVF22DD_swigregister(itkImageFunctionICVF22DD)

def itkImageFunctionICVF22DD_cast(obj: 'itkLightObject') -> "itkImageFunctionICVF22DD *":
    """itkImageFunctionICVF22DD_cast(itkLightObject obj) -> itkImageFunctionICVF22DD"""
    return _itkImageFunctionBasePython.itkImageFunctionICVF22DD_cast(obj)

class itkImageFunctionICVF22VD2D(itkFunctionBasePython.itkFunctionBasePD2VD2):
    """Proxy of C++ itkImageFunctionICVF22VD2D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageCVF22') -> "void":
        """SetInputImage(itkImageFunctionICVF22VD2D self, itkImageCVF22 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageCVF22 const *":
        """GetInputImage(itkImageFunctionICVF22VD2D self) -> itkImageCVF22"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "itkVectorD2":
        """EvaluateAtIndex(itkImageFunctionICVF22VD2D self, itkIndex2 index) -> itkVectorD2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "itkVectorD2":
        """EvaluateAtContinuousIndex(itkImageFunctionICVF22VD2D self, itkContinuousIndexD2 index) -> itkVectorD2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionICVF22VD2D self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionICVF22VD2D self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionICVF22VD2D self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionICVF22VD2D self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionICVF22VD2D self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionICVF22VD2D self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionICVF22VD2D self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionICVF22VD2D self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionICVF22VD2D self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionICVF22VD2D self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionICVF22VD2D

    def cast(obj: 'itkLightObject') -> "itkImageFunctionICVF22VD2D *":
        """cast(itkLightObject obj) -> itkImageFunctionICVF22VD2D"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF22VD2D

        Create a new object of the class itkImageFunctionICVF22VD2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionICVF22VD2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionICVF22VD2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF22VD2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionICVF22VD2D.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_SetInputImage, None, itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetInputImage, None, itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_EvaluateAtIndex, None, itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_EvaluateAtContinuousIndex, None, itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_IsInsideBuffer, None, itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_ConvertPointToNearestIndex, None, itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_ConvertPointToContinuousIndex, None, itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetStartIndex, None, itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetEndIndex, None, itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetStartContinuousIndex, None, itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetEndContinuousIndex, None, itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D_swigregister = _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_swigregister
itkImageFunctionICVF22VD2D_swigregister(itkImageFunctionICVF22VD2D)

def itkImageFunctionICVF22VD2D_cast(obj: 'itkLightObject') -> "itkImageFunctionICVF22VD2D *":
    """itkImageFunctionICVF22VD2D_cast(itkLightObject obj) -> itkImageFunctionICVF22VD2D"""
    return _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_cast(obj)

class itkImageFunctionICVF33CVD3D(itkFunctionBasePython.itkFunctionBasePD3CVD3):
    """Proxy of C++ itkImageFunctionICVF33CVD3D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageCVF33') -> "void":
        """SetInputImage(itkImageFunctionICVF33CVD3D self, itkImageCVF33 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageCVF33 const *":
        """GetInputImage(itkImageFunctionICVF33CVD3D self) -> itkImageCVF33"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "itkCovariantVectorD3":
        """EvaluateAtIndex(itkImageFunctionICVF33CVD3D self, itkIndex3 index) -> itkCovariantVectorD3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "itkCovariantVectorD3":
        """EvaluateAtContinuousIndex(itkImageFunctionICVF33CVD3D self, itkContinuousIndexD3 index) -> itkCovariantVectorD3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionICVF33CVD3D self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionICVF33CVD3D self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionICVF33CVD3D self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionICVF33CVD3D self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionICVF33CVD3D self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionICVF33CVD3D self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionICVF33CVD3D self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionICVF33CVD3D self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionICVF33CVD3D self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionICVF33CVD3D self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionICVF33CVD3D

    def cast(obj: 'itkLightObject') -> "itkImageFunctionICVF33CVD3D *":
        """cast(itkLightObject obj) -> itkImageFunctionICVF33CVD3D"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF33CVD3D

        Create a new object of the class itkImageFunctionICVF33CVD3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionICVF33CVD3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionICVF33CVD3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF33CVD3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionICVF33CVD3D.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_SetInputImage, None, itkImageFunctionICVF33CVD3D)
itkImageFunctionICVF33CVD3D.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetInputImage, None, itkImageFunctionICVF33CVD3D)
itkImageFunctionICVF33CVD3D.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_EvaluateAtIndex, None, itkImageFunctionICVF33CVD3D)
itkImageFunctionICVF33CVD3D.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_EvaluateAtContinuousIndex, None, itkImageFunctionICVF33CVD3D)
itkImageFunctionICVF33CVD3D.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_IsInsideBuffer, None, itkImageFunctionICVF33CVD3D)
itkImageFunctionICVF33CVD3D.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_ConvertPointToNearestIndex, None, itkImageFunctionICVF33CVD3D)
itkImageFunctionICVF33CVD3D.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_ConvertPointToContinuousIndex, None, itkImageFunctionICVF33CVD3D)
itkImageFunctionICVF33CVD3D.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionICVF33CVD3D)
itkImageFunctionICVF33CVD3D.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetStartIndex, None, itkImageFunctionICVF33CVD3D)
itkImageFunctionICVF33CVD3D.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetEndIndex, None, itkImageFunctionICVF33CVD3D)
itkImageFunctionICVF33CVD3D.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetStartContinuousIndex, None, itkImageFunctionICVF33CVD3D)
itkImageFunctionICVF33CVD3D.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetEndContinuousIndex, None, itkImageFunctionICVF33CVD3D)
itkImageFunctionICVF33CVD3D_swigregister = _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_swigregister
itkImageFunctionICVF33CVD3D_swigregister(itkImageFunctionICVF33CVD3D)

def itkImageFunctionICVF33CVD3D_cast(obj: 'itkLightObject') -> "itkImageFunctionICVF33CVD3D *":
    """itkImageFunctionICVF33CVD3D_cast(itkLightObject obj) -> itkImageFunctionICVF33CVD3D"""
    return _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_cast(obj)

class itkImageFunctionICVF33DD(itkFunctionBasePython.itkFunctionBasePD3D):
    """Proxy of C++ itkImageFunctionICVF33DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageCVF33') -> "void":
        """SetInputImage(itkImageFunctionICVF33DD self, itkImageCVF33 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageCVF33 const *":
        """GetInputImage(itkImageFunctionICVF33DD self) -> itkImageCVF33"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "double":
        """EvaluateAtIndex(itkImageFunctionICVF33DD self, itkIndex3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionICVF33DD self, itkContinuousIndexD3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionICVF33DD self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionICVF33DD self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionICVF33DD self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionICVF33DD self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionICVF33DD self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionICVF33DD self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionICVF33DD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionICVF33DD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionICVF33DD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionICVF33DD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionICVF33DD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionICVF33DD *":
        """cast(itkLightObject obj) -> itkImageFunctionICVF33DD"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF33DD

        Create a new object of the class itkImageFunctionICVF33DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionICVF33DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionICVF33DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF33DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionICVF33DD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_SetInputImage, None, itkImageFunctionICVF33DD)
itkImageFunctionICVF33DD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetInputImage, None, itkImageFunctionICVF33DD)
itkImageFunctionICVF33DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_EvaluateAtIndex, None, itkImageFunctionICVF33DD)
itkImageFunctionICVF33DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_EvaluateAtContinuousIndex, None, itkImageFunctionICVF33DD)
itkImageFunctionICVF33DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_IsInsideBuffer, None, itkImageFunctionICVF33DD)
itkImageFunctionICVF33DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_ConvertPointToNearestIndex, None, itkImageFunctionICVF33DD)
itkImageFunctionICVF33DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_ConvertPointToContinuousIndex, None, itkImageFunctionICVF33DD)
itkImageFunctionICVF33DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionICVF33DD)
itkImageFunctionICVF33DD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetStartIndex, None, itkImageFunctionICVF33DD)
itkImageFunctionICVF33DD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetEndIndex, None, itkImageFunctionICVF33DD)
itkImageFunctionICVF33DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetStartContinuousIndex, None, itkImageFunctionICVF33DD)
itkImageFunctionICVF33DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetEndContinuousIndex, None, itkImageFunctionICVF33DD)
itkImageFunctionICVF33DD_swigregister = _itkImageFunctionBasePython.itkImageFunctionICVF33DD_swigregister
itkImageFunctionICVF33DD_swigregister(itkImageFunctionICVF33DD)

def itkImageFunctionICVF33DD_cast(obj: 'itkLightObject') -> "itkImageFunctionICVF33DD *":
    """itkImageFunctionICVF33DD_cast(itkLightObject obj) -> itkImageFunctionICVF33DD"""
    return _itkImageFunctionBasePython.itkImageFunctionICVF33DD_cast(obj)

class itkImageFunctionICVF33VD3D(itkFunctionBasePython.itkFunctionBasePD3VD3):
    """Proxy of C++ itkImageFunctionICVF33VD3D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageCVF33') -> "void":
        """SetInputImage(itkImageFunctionICVF33VD3D self, itkImageCVF33 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageCVF33 const *":
        """GetInputImage(itkImageFunctionICVF33VD3D self) -> itkImageCVF33"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "itkVectorD3":
        """EvaluateAtIndex(itkImageFunctionICVF33VD3D self, itkIndex3 index) -> itkVectorD3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "itkVectorD3":
        """EvaluateAtContinuousIndex(itkImageFunctionICVF33VD3D self, itkContinuousIndexD3 index) -> itkVectorD3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionICVF33VD3D self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionICVF33VD3D self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionICVF33VD3D self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionICVF33VD3D self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionICVF33VD3D self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionICVF33VD3D self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionICVF33VD3D self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionICVF33VD3D self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionICVF33VD3D self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionICVF33VD3D self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionICVF33VD3D

    def cast(obj: 'itkLightObject') -> "itkImageFunctionICVF33VD3D *":
        """cast(itkLightObject obj) -> itkImageFunctionICVF33VD3D"""
        return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF33VD3D

        Create a new object of the class itkImageFunctionICVF33VD3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionICVF33VD3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionICVF33VD3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF33VD3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionICVF33VD3D.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_SetInputImage, None, itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetInputImage, None, itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_EvaluateAtIndex, None, itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_EvaluateAtContinuousIndex, None, itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_IsInsideBuffer, None, itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_ConvertPointToNearestIndex, None, itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_ConvertPointToContinuousIndex, None, itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetStartIndex, None, itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetEndIndex, None, itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetStartContinuousIndex, None, itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetEndContinuousIndex, None, itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D_swigregister = _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_swigregister
itkImageFunctionICVF33VD3D_swigregister(itkImageFunctionICVF33VD3D)

def itkImageFunctionICVF33VD3D_cast(obj: 'itkLightObject') -> "itkImageFunctionICVF33VD3D *":
    """itkImageFunctionICVF33VD3D_cast(itkLightObject obj) -> itkImageFunctionICVF33VD3D"""
    return _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_cast(obj)

class itkImageFunctionIF2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    """Proxy of C++ itkImageFunctionIF2DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageF2') -> "void":
        """SetInputImage(itkImageFunctionIF2DD self, itkImageF2 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageF2 const *":
        """GetInputImage(itkImageFunctionIF2DD self) -> itkImageF2"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "double":
        """EvaluateAtIndex(itkImageFunctionIF2DD self, itkIndex2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIF2DD self, itkContinuousIndexD2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIF2DD self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionIF2DD self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionIF2DD self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIF2DD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIF2DD self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIF2DD self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIF2DD self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionIF2DD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionIF2DD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionIF2DD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionIF2DD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIF2DD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIF2DD *":
        """cast(itkLightObject obj) -> itkImageFunctionIF2DD"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIF2DD

        Create a new object of the class itkImageFunctionIF2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIF2DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIF2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIF2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIF2DD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DD_SetInputImage, None, itkImageFunctionIF2DD)
itkImageFunctionIF2DD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DD_GetInputImage, None, itkImageFunctionIF2DD)
itkImageFunctionIF2DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DD_EvaluateAtIndex, None, itkImageFunctionIF2DD)
itkImageFunctionIF2DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DD_EvaluateAtContinuousIndex, None, itkImageFunctionIF2DD)
itkImageFunctionIF2DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DD_IsInsideBuffer, None, itkImageFunctionIF2DD)
itkImageFunctionIF2DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DD_ConvertPointToNearestIndex, None, itkImageFunctionIF2DD)
itkImageFunctionIF2DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DD_ConvertPointToContinuousIndex, None, itkImageFunctionIF2DD)
itkImageFunctionIF2DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIF2DD)
itkImageFunctionIF2DD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DD_GetStartIndex, None, itkImageFunctionIF2DD)
itkImageFunctionIF2DD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DD_GetEndIndex, None, itkImageFunctionIF2DD)
itkImageFunctionIF2DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DD_GetStartContinuousIndex, None, itkImageFunctionIF2DD)
itkImageFunctionIF2DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DD_GetEndContinuousIndex, None, itkImageFunctionIF2DD)
itkImageFunctionIF2DD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIF2DD_swigregister
itkImageFunctionIF2DD_swigregister(itkImageFunctionIF2DD)

def itkImageFunctionIF2DD_cast(obj: 'itkLightObject') -> "itkImageFunctionIF2DD *":
    """itkImageFunctionIF2DD_cast(itkLightObject obj) -> itkImageFunctionIF2DD"""
    return _itkImageFunctionBasePython.itkImageFunctionIF2DD_cast(obj)

class itkImageFunctionIF2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    """Proxy of C++ itkImageFunctionIF2DF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageF2') -> "void":
        """SetInputImage(itkImageFunctionIF2DF self, itkImageF2 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DF_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageF2 const *":
        """GetInputImage(itkImageFunctionIF2DF self) -> itkImageF2"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DF_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "double":
        """EvaluateAtIndex(itkImageFunctionIF2DF self, itkIndex2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DF_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexF2') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIF2DF self, itkContinuousIndexF2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DF_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIF2DF self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionIF2DF self, itkContinuousIndexF2 index) -> bool
        IsInsideBuffer(itkImageFunctionIF2DF self, itkPointF2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIF2DF_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointF2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIF2DF self, itkPointF2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DF_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointF2', cindex: 'itkContinuousIndexF2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIF2DF self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DF_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexF2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIF2DF self, itkContinuousIndexF2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DF_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionIF2DF self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DF_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionIF2DF self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DF_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexF2 const &":
        """GetStartContinuousIndex(itkImageFunctionIF2DF self) -> itkContinuousIndexF2"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DF_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexF2 const &":
        """GetEndContinuousIndex(itkImageFunctionIF2DF self) -> itkContinuousIndexF2"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIF2DF

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIF2DF *":
        """cast(itkLightObject obj) -> itkImageFunctionIF2DF"""
        return _itkImageFunctionBasePython.itkImageFunctionIF2DF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIF2DF

        Create a new object of the class itkImageFunctionIF2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIF2DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIF2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIF2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIF2DF.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DF_SetInputImage, None, itkImageFunctionIF2DF)
itkImageFunctionIF2DF.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DF_GetInputImage, None, itkImageFunctionIF2DF)
itkImageFunctionIF2DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DF_EvaluateAtIndex, None, itkImageFunctionIF2DF)
itkImageFunctionIF2DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DF_EvaluateAtContinuousIndex, None, itkImageFunctionIF2DF)
itkImageFunctionIF2DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DF_IsInsideBuffer, None, itkImageFunctionIF2DF)
itkImageFunctionIF2DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DF_ConvertPointToNearestIndex, None, itkImageFunctionIF2DF)
itkImageFunctionIF2DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DF_ConvertPointToContinuousIndex, None, itkImageFunctionIF2DF)
itkImageFunctionIF2DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DF_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIF2DF)
itkImageFunctionIF2DF.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DF_GetStartIndex, None, itkImageFunctionIF2DF)
itkImageFunctionIF2DF.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DF_GetEndIndex, None, itkImageFunctionIF2DF)
itkImageFunctionIF2DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DF_GetStartContinuousIndex, None, itkImageFunctionIF2DF)
itkImageFunctionIF2DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF2DF_GetEndContinuousIndex, None, itkImageFunctionIF2DF)
itkImageFunctionIF2DF_swigregister = _itkImageFunctionBasePython.itkImageFunctionIF2DF_swigregister
itkImageFunctionIF2DF_swigregister(itkImageFunctionIF2DF)

def itkImageFunctionIF2DF_cast(obj: 'itkLightObject') -> "itkImageFunctionIF2DF *":
    """itkImageFunctionIF2DF_cast(itkLightObject obj) -> itkImageFunctionIF2DF"""
    return _itkImageFunctionBasePython.itkImageFunctionIF2DF_cast(obj)

class itkImageFunctionIF3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    """Proxy of C++ itkImageFunctionIF3DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageF3') -> "void":
        """SetInputImage(itkImageFunctionIF3DD self, itkImageF3 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageF3 const *":
        """GetInputImage(itkImageFunctionIF3DD self) -> itkImageF3"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "double":
        """EvaluateAtIndex(itkImageFunctionIF3DD self, itkIndex3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIF3DD self, itkContinuousIndexD3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIF3DD self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionIF3DD self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionIF3DD self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIF3DD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIF3DD self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIF3DD self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIF3DD self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionIF3DD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionIF3DD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionIF3DD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionIF3DD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIF3DD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIF3DD *":
        """cast(itkLightObject obj) -> itkImageFunctionIF3DD"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIF3DD

        Create a new object of the class itkImageFunctionIF3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIF3DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIF3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIF3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIF3DD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DD_SetInputImage, None, itkImageFunctionIF3DD)
itkImageFunctionIF3DD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DD_GetInputImage, None, itkImageFunctionIF3DD)
itkImageFunctionIF3DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DD_EvaluateAtIndex, None, itkImageFunctionIF3DD)
itkImageFunctionIF3DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DD_EvaluateAtContinuousIndex, None, itkImageFunctionIF3DD)
itkImageFunctionIF3DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DD_IsInsideBuffer, None, itkImageFunctionIF3DD)
itkImageFunctionIF3DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DD_ConvertPointToNearestIndex, None, itkImageFunctionIF3DD)
itkImageFunctionIF3DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DD_ConvertPointToContinuousIndex, None, itkImageFunctionIF3DD)
itkImageFunctionIF3DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIF3DD)
itkImageFunctionIF3DD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DD_GetStartIndex, None, itkImageFunctionIF3DD)
itkImageFunctionIF3DD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DD_GetEndIndex, None, itkImageFunctionIF3DD)
itkImageFunctionIF3DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DD_GetStartContinuousIndex, None, itkImageFunctionIF3DD)
itkImageFunctionIF3DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DD_GetEndContinuousIndex, None, itkImageFunctionIF3DD)
itkImageFunctionIF3DD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIF3DD_swigregister
itkImageFunctionIF3DD_swigregister(itkImageFunctionIF3DD)

def itkImageFunctionIF3DD_cast(obj: 'itkLightObject') -> "itkImageFunctionIF3DD *":
    """itkImageFunctionIF3DD_cast(itkLightObject obj) -> itkImageFunctionIF3DD"""
    return _itkImageFunctionBasePython.itkImageFunctionIF3DD_cast(obj)

class itkImageFunctionIF3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    """Proxy of C++ itkImageFunctionIF3DF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageF3') -> "void":
        """SetInputImage(itkImageFunctionIF3DF self, itkImageF3 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DF_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageF3 const *":
        """GetInputImage(itkImageFunctionIF3DF self) -> itkImageF3"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DF_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "double":
        """EvaluateAtIndex(itkImageFunctionIF3DF self, itkIndex3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DF_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexF3') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIF3DF self, itkContinuousIndexF3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DF_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIF3DF self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionIF3DF self, itkContinuousIndexF3 index) -> bool
        IsInsideBuffer(itkImageFunctionIF3DF self, itkPointF3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIF3DF_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointF3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIF3DF self, itkPointF3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DF_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointF3', cindex: 'itkContinuousIndexF3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIF3DF self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DF_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexF3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIF3DF self, itkContinuousIndexF3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DF_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionIF3DF self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DF_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionIF3DF self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DF_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexF3 const &":
        """GetStartContinuousIndex(itkImageFunctionIF3DF self) -> itkContinuousIndexF3"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DF_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexF3 const &":
        """GetEndContinuousIndex(itkImageFunctionIF3DF self) -> itkContinuousIndexF3"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIF3DF

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIF3DF *":
        """cast(itkLightObject obj) -> itkImageFunctionIF3DF"""
        return _itkImageFunctionBasePython.itkImageFunctionIF3DF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIF3DF

        Create a new object of the class itkImageFunctionIF3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIF3DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIF3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIF3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIF3DF.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DF_SetInputImage, None, itkImageFunctionIF3DF)
itkImageFunctionIF3DF.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DF_GetInputImage, None, itkImageFunctionIF3DF)
itkImageFunctionIF3DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DF_EvaluateAtIndex, None, itkImageFunctionIF3DF)
itkImageFunctionIF3DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DF_EvaluateAtContinuousIndex, None, itkImageFunctionIF3DF)
itkImageFunctionIF3DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DF_IsInsideBuffer, None, itkImageFunctionIF3DF)
itkImageFunctionIF3DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DF_ConvertPointToNearestIndex, None, itkImageFunctionIF3DF)
itkImageFunctionIF3DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DF_ConvertPointToContinuousIndex, None, itkImageFunctionIF3DF)
itkImageFunctionIF3DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DF_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIF3DF)
itkImageFunctionIF3DF.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DF_GetStartIndex, None, itkImageFunctionIF3DF)
itkImageFunctionIF3DF.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DF_GetEndIndex, None, itkImageFunctionIF3DF)
itkImageFunctionIF3DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DF_GetStartContinuousIndex, None, itkImageFunctionIF3DF)
itkImageFunctionIF3DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIF3DF_GetEndContinuousIndex, None, itkImageFunctionIF3DF)
itkImageFunctionIF3DF_swigregister = _itkImageFunctionBasePython.itkImageFunctionIF3DF_swigregister
itkImageFunctionIF3DF_swigregister(itkImageFunctionIF3DF)

def itkImageFunctionIF3DF_cast(obj: 'itkLightObject') -> "itkImageFunctionIF3DF *":
    """itkImageFunctionIF3DF_cast(itkLightObject obj) -> itkImageFunctionIF3DF"""
    return _itkImageFunctionBasePython.itkImageFunctionIF3DF_cast(obj)

class itkImageFunctionIRGBAUC2RGBADD(itkFunctionBasePython.itkFunctionBasePD2RGBAD):
    """Proxy of C++ itkImageFunctionIRGBAUC2RGBADD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageRGBAUC2') -> "void":
        """SetInputImage(itkImageFunctionIRGBAUC2RGBADD self, itkImageRGBAUC2 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageRGBAUC2 const *":
        """GetInputImage(itkImageFunctionIRGBAUC2RGBADD self) -> itkImageRGBAUC2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "itkRGBAPixelD":
        """EvaluateAtIndex(itkImageFunctionIRGBAUC2RGBADD self, itkIndex2 index) -> itkRGBAPixelD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "itkRGBAPixelD":
        """EvaluateAtContinuousIndex(itkImageFunctionIRGBAUC2RGBADD self, itkContinuousIndexD2 index) -> itkRGBAPixelD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIRGBAUC2RGBADD self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBAUC2RGBADD self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBAUC2RGBADD self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIRGBAUC2RGBADD self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIRGBAUC2RGBADD self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIRGBAUC2RGBADD self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionIRGBAUC2RGBADD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionIRGBAUC2RGBADD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionIRGBAUC2RGBADD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionIRGBAUC2RGBADD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBAUC2RGBADD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBAUC2RGBADD *":
        """cast(itkLightObject obj) -> itkImageFunctionIRGBAUC2RGBADD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBAUC2RGBADD

        Create a new object of the class itkImageFunctionIRGBAUC2RGBADD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBAUC2RGBADD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBAUC2RGBADD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBAUC2RGBADD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIRGBAUC2RGBADD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_SetInputImage, None, itkImageFunctionIRGBAUC2RGBADD)
itkImageFunctionIRGBAUC2RGBADD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetInputImage, None, itkImageFunctionIRGBAUC2RGBADD)
itkImageFunctionIRGBAUC2RGBADD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_EvaluateAtIndex, None, itkImageFunctionIRGBAUC2RGBADD)
itkImageFunctionIRGBAUC2RGBADD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_EvaluateAtContinuousIndex, None, itkImageFunctionIRGBAUC2RGBADD)
itkImageFunctionIRGBAUC2RGBADD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_IsInsideBuffer, None, itkImageFunctionIRGBAUC2RGBADD)
itkImageFunctionIRGBAUC2RGBADD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_ConvertPointToNearestIndex, None, itkImageFunctionIRGBAUC2RGBADD)
itkImageFunctionIRGBAUC2RGBADD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_ConvertPointToContinuousIndex, None, itkImageFunctionIRGBAUC2RGBADD)
itkImageFunctionIRGBAUC2RGBADD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIRGBAUC2RGBADD)
itkImageFunctionIRGBAUC2RGBADD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetStartIndex, None, itkImageFunctionIRGBAUC2RGBADD)
itkImageFunctionIRGBAUC2RGBADD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetEndIndex, None, itkImageFunctionIRGBAUC2RGBADD)
itkImageFunctionIRGBAUC2RGBADD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetStartContinuousIndex, None, itkImageFunctionIRGBAUC2RGBADD)
itkImageFunctionIRGBAUC2RGBADD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetEndContinuousIndex, None, itkImageFunctionIRGBAUC2RGBADD)
itkImageFunctionIRGBAUC2RGBADD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_swigregister
itkImageFunctionIRGBAUC2RGBADD_swigregister(itkImageFunctionIRGBAUC2RGBADD)

def itkImageFunctionIRGBAUC2RGBADD_cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBAUC2RGBADD *":
    """itkImageFunctionIRGBAUC2RGBADD_cast(itkLightObject obj) -> itkImageFunctionIRGBAUC2RGBADD"""
    return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_cast(obj)

class itkImageFunctionIRGBAUC2RGBAUCD(itkFunctionBasePython.itkFunctionBasePD2RGBAUC):
    """Proxy of C++ itkImageFunctionIRGBAUC2RGBAUCD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageRGBAUC2') -> "void":
        """SetInputImage(itkImageFunctionIRGBAUC2RGBAUCD self, itkImageRGBAUC2 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageRGBAUC2 const *":
        """GetInputImage(itkImageFunctionIRGBAUC2RGBAUCD self) -> itkImageRGBAUC2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "itkRGBAPixelUC":
        """EvaluateAtIndex(itkImageFunctionIRGBAUC2RGBAUCD self, itkIndex2 index) -> itkRGBAPixelUC"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "itkRGBAPixelUC":
        """EvaluateAtContinuousIndex(itkImageFunctionIRGBAUC2RGBAUCD self, itkContinuousIndexD2 index) -> itkRGBAPixelUC"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIRGBAUC2RGBAUCD self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBAUC2RGBAUCD self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBAUC2RGBAUCD self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIRGBAUC2RGBAUCD self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIRGBAUC2RGBAUCD self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIRGBAUC2RGBAUCD self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionIRGBAUC2RGBAUCD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionIRGBAUC2RGBAUCD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionIRGBAUC2RGBAUCD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionIRGBAUC2RGBAUCD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBAUC2RGBAUCD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBAUC2RGBAUCD *":
        """cast(itkLightObject obj) -> itkImageFunctionIRGBAUC2RGBAUCD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBAUC2RGBAUCD

        Create a new object of the class itkImageFunctionIRGBAUC2RGBAUCD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBAUC2RGBAUCD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBAUC2RGBAUCD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBAUC2RGBAUCD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIRGBAUC2RGBAUCD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_SetInputImage, None, itkImageFunctionIRGBAUC2RGBAUCD)
itkImageFunctionIRGBAUC2RGBAUCD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetInputImage, None, itkImageFunctionIRGBAUC2RGBAUCD)
itkImageFunctionIRGBAUC2RGBAUCD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_EvaluateAtIndex, None, itkImageFunctionIRGBAUC2RGBAUCD)
itkImageFunctionIRGBAUC2RGBAUCD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_EvaluateAtContinuousIndex, None, itkImageFunctionIRGBAUC2RGBAUCD)
itkImageFunctionIRGBAUC2RGBAUCD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_IsInsideBuffer, None, itkImageFunctionIRGBAUC2RGBAUCD)
itkImageFunctionIRGBAUC2RGBAUCD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_ConvertPointToNearestIndex, None, itkImageFunctionIRGBAUC2RGBAUCD)
itkImageFunctionIRGBAUC2RGBAUCD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_ConvertPointToContinuousIndex, None, itkImageFunctionIRGBAUC2RGBAUCD)
itkImageFunctionIRGBAUC2RGBAUCD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIRGBAUC2RGBAUCD)
itkImageFunctionIRGBAUC2RGBAUCD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetStartIndex, None, itkImageFunctionIRGBAUC2RGBAUCD)
itkImageFunctionIRGBAUC2RGBAUCD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetEndIndex, None, itkImageFunctionIRGBAUC2RGBAUCD)
itkImageFunctionIRGBAUC2RGBAUCD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetStartContinuousIndex, None, itkImageFunctionIRGBAUC2RGBAUCD)
itkImageFunctionIRGBAUC2RGBAUCD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetEndContinuousIndex, None, itkImageFunctionIRGBAUC2RGBAUCD)
itkImageFunctionIRGBAUC2RGBAUCD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_swigregister
itkImageFunctionIRGBAUC2RGBAUCD_swigregister(itkImageFunctionIRGBAUC2RGBAUCD)

def itkImageFunctionIRGBAUC2RGBAUCD_cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBAUC2RGBAUCD *":
    """itkImageFunctionIRGBAUC2RGBAUCD_cast(itkLightObject obj) -> itkImageFunctionIRGBAUC2RGBAUCD"""
    return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_cast(obj)

class itkImageFunctionIRGBAUC3RGBADD(itkFunctionBasePython.itkFunctionBasePD3RGBAD):
    """Proxy of C++ itkImageFunctionIRGBAUC3RGBADD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageRGBAUC3') -> "void":
        """SetInputImage(itkImageFunctionIRGBAUC3RGBADD self, itkImageRGBAUC3 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageRGBAUC3 const *":
        """GetInputImage(itkImageFunctionIRGBAUC3RGBADD self) -> itkImageRGBAUC3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "itkRGBAPixelD":
        """EvaluateAtIndex(itkImageFunctionIRGBAUC3RGBADD self, itkIndex3 index) -> itkRGBAPixelD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "itkRGBAPixelD":
        """EvaluateAtContinuousIndex(itkImageFunctionIRGBAUC3RGBADD self, itkContinuousIndexD3 index) -> itkRGBAPixelD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIRGBAUC3RGBADD self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBAUC3RGBADD self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBAUC3RGBADD self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIRGBAUC3RGBADD self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIRGBAUC3RGBADD self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIRGBAUC3RGBADD self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionIRGBAUC3RGBADD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionIRGBAUC3RGBADD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionIRGBAUC3RGBADD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionIRGBAUC3RGBADD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBAUC3RGBADD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBAUC3RGBADD *":
        """cast(itkLightObject obj) -> itkImageFunctionIRGBAUC3RGBADD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBAUC3RGBADD

        Create a new object of the class itkImageFunctionIRGBAUC3RGBADD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBAUC3RGBADD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBAUC3RGBADD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBAUC3RGBADD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIRGBAUC3RGBADD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_SetInputImage, None, itkImageFunctionIRGBAUC3RGBADD)
itkImageFunctionIRGBAUC3RGBADD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetInputImage, None, itkImageFunctionIRGBAUC3RGBADD)
itkImageFunctionIRGBAUC3RGBADD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_EvaluateAtIndex, None, itkImageFunctionIRGBAUC3RGBADD)
itkImageFunctionIRGBAUC3RGBADD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_EvaluateAtContinuousIndex, None, itkImageFunctionIRGBAUC3RGBADD)
itkImageFunctionIRGBAUC3RGBADD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_IsInsideBuffer, None, itkImageFunctionIRGBAUC3RGBADD)
itkImageFunctionIRGBAUC3RGBADD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_ConvertPointToNearestIndex, None, itkImageFunctionIRGBAUC3RGBADD)
itkImageFunctionIRGBAUC3RGBADD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_ConvertPointToContinuousIndex, None, itkImageFunctionIRGBAUC3RGBADD)
itkImageFunctionIRGBAUC3RGBADD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIRGBAUC3RGBADD)
itkImageFunctionIRGBAUC3RGBADD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetStartIndex, None, itkImageFunctionIRGBAUC3RGBADD)
itkImageFunctionIRGBAUC3RGBADD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetEndIndex, None, itkImageFunctionIRGBAUC3RGBADD)
itkImageFunctionIRGBAUC3RGBADD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetStartContinuousIndex, None, itkImageFunctionIRGBAUC3RGBADD)
itkImageFunctionIRGBAUC3RGBADD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetEndContinuousIndex, None, itkImageFunctionIRGBAUC3RGBADD)
itkImageFunctionIRGBAUC3RGBADD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_swigregister
itkImageFunctionIRGBAUC3RGBADD_swigregister(itkImageFunctionIRGBAUC3RGBADD)

def itkImageFunctionIRGBAUC3RGBADD_cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBAUC3RGBADD *":
    """itkImageFunctionIRGBAUC3RGBADD_cast(itkLightObject obj) -> itkImageFunctionIRGBAUC3RGBADD"""
    return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_cast(obj)

class itkImageFunctionIRGBAUC3RGBAUCD(itkFunctionBasePython.itkFunctionBasePD3RGBAUC):
    """Proxy of C++ itkImageFunctionIRGBAUC3RGBAUCD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageRGBAUC3') -> "void":
        """SetInputImage(itkImageFunctionIRGBAUC3RGBAUCD self, itkImageRGBAUC3 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageRGBAUC3 const *":
        """GetInputImage(itkImageFunctionIRGBAUC3RGBAUCD self) -> itkImageRGBAUC3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "itkRGBAPixelUC":
        """EvaluateAtIndex(itkImageFunctionIRGBAUC3RGBAUCD self, itkIndex3 index) -> itkRGBAPixelUC"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "itkRGBAPixelUC":
        """EvaluateAtContinuousIndex(itkImageFunctionIRGBAUC3RGBAUCD self, itkContinuousIndexD3 index) -> itkRGBAPixelUC"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIRGBAUC3RGBAUCD self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBAUC3RGBAUCD self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBAUC3RGBAUCD self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIRGBAUC3RGBAUCD self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIRGBAUC3RGBAUCD self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIRGBAUC3RGBAUCD self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionIRGBAUC3RGBAUCD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionIRGBAUC3RGBAUCD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionIRGBAUC3RGBAUCD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionIRGBAUC3RGBAUCD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBAUC3RGBAUCD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBAUC3RGBAUCD *":
        """cast(itkLightObject obj) -> itkImageFunctionIRGBAUC3RGBAUCD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBAUC3RGBAUCD

        Create a new object of the class itkImageFunctionIRGBAUC3RGBAUCD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBAUC3RGBAUCD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBAUC3RGBAUCD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBAUC3RGBAUCD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIRGBAUC3RGBAUCD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_SetInputImage, None, itkImageFunctionIRGBAUC3RGBAUCD)
itkImageFunctionIRGBAUC3RGBAUCD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetInputImage, None, itkImageFunctionIRGBAUC3RGBAUCD)
itkImageFunctionIRGBAUC3RGBAUCD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_EvaluateAtIndex, None, itkImageFunctionIRGBAUC3RGBAUCD)
itkImageFunctionIRGBAUC3RGBAUCD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_EvaluateAtContinuousIndex, None, itkImageFunctionIRGBAUC3RGBAUCD)
itkImageFunctionIRGBAUC3RGBAUCD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_IsInsideBuffer, None, itkImageFunctionIRGBAUC3RGBAUCD)
itkImageFunctionIRGBAUC3RGBAUCD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_ConvertPointToNearestIndex, None, itkImageFunctionIRGBAUC3RGBAUCD)
itkImageFunctionIRGBAUC3RGBAUCD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_ConvertPointToContinuousIndex, None, itkImageFunctionIRGBAUC3RGBAUCD)
itkImageFunctionIRGBAUC3RGBAUCD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIRGBAUC3RGBAUCD)
itkImageFunctionIRGBAUC3RGBAUCD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetStartIndex, None, itkImageFunctionIRGBAUC3RGBAUCD)
itkImageFunctionIRGBAUC3RGBAUCD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetEndIndex, None, itkImageFunctionIRGBAUC3RGBAUCD)
itkImageFunctionIRGBAUC3RGBAUCD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetStartContinuousIndex, None, itkImageFunctionIRGBAUC3RGBAUCD)
itkImageFunctionIRGBAUC3RGBAUCD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetEndContinuousIndex, None, itkImageFunctionIRGBAUC3RGBAUCD)
itkImageFunctionIRGBAUC3RGBAUCD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_swigregister
itkImageFunctionIRGBAUC3RGBAUCD_swigregister(itkImageFunctionIRGBAUC3RGBAUCD)

def itkImageFunctionIRGBAUC3RGBAUCD_cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBAUC3RGBAUCD *":
    """itkImageFunctionIRGBAUC3RGBAUCD_cast(itkLightObject obj) -> itkImageFunctionIRGBAUC3RGBAUCD"""
    return _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_cast(obj)

class itkImageFunctionIRGBUC2RGBDD(itkFunctionBasePython.itkFunctionBasePD2RGBD):
    """Proxy of C++ itkImageFunctionIRGBUC2RGBDD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageRGBUC2') -> "void":
        """SetInputImage(itkImageFunctionIRGBUC2RGBDD self, itkImageRGBUC2 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageRGBUC2 const *":
        """GetInputImage(itkImageFunctionIRGBUC2RGBDD self) -> itkImageRGBUC2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "itkRGBPixelD":
        """EvaluateAtIndex(itkImageFunctionIRGBUC2RGBDD self, itkIndex2 index) -> itkRGBPixelD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "itkRGBPixelD":
        """EvaluateAtContinuousIndex(itkImageFunctionIRGBUC2RGBDD self, itkContinuousIndexD2 index) -> itkRGBPixelD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIRGBUC2RGBDD self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBUC2RGBDD self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBUC2RGBDD self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIRGBUC2RGBDD self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIRGBUC2RGBDD self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIRGBUC2RGBDD self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionIRGBUC2RGBDD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionIRGBUC2RGBDD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionIRGBUC2RGBDD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionIRGBUC2RGBDD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBUC2RGBDD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBUC2RGBDD *":
        """cast(itkLightObject obj) -> itkImageFunctionIRGBUC2RGBDD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBUC2RGBDD

        Create a new object of the class itkImageFunctionIRGBUC2RGBDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBUC2RGBDD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBUC2RGBDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBUC2RGBDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIRGBUC2RGBDD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_SetInputImage, None, itkImageFunctionIRGBUC2RGBDD)
itkImageFunctionIRGBUC2RGBDD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetInputImage, None, itkImageFunctionIRGBUC2RGBDD)
itkImageFunctionIRGBUC2RGBDD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_EvaluateAtIndex, None, itkImageFunctionIRGBUC2RGBDD)
itkImageFunctionIRGBUC2RGBDD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_EvaluateAtContinuousIndex, None, itkImageFunctionIRGBUC2RGBDD)
itkImageFunctionIRGBUC2RGBDD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_IsInsideBuffer, None, itkImageFunctionIRGBUC2RGBDD)
itkImageFunctionIRGBUC2RGBDD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_ConvertPointToNearestIndex, None, itkImageFunctionIRGBUC2RGBDD)
itkImageFunctionIRGBUC2RGBDD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_ConvertPointToContinuousIndex, None, itkImageFunctionIRGBUC2RGBDD)
itkImageFunctionIRGBUC2RGBDD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIRGBUC2RGBDD)
itkImageFunctionIRGBUC2RGBDD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetStartIndex, None, itkImageFunctionIRGBUC2RGBDD)
itkImageFunctionIRGBUC2RGBDD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetEndIndex, None, itkImageFunctionIRGBUC2RGBDD)
itkImageFunctionIRGBUC2RGBDD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetStartContinuousIndex, None, itkImageFunctionIRGBUC2RGBDD)
itkImageFunctionIRGBUC2RGBDD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetEndContinuousIndex, None, itkImageFunctionIRGBUC2RGBDD)
itkImageFunctionIRGBUC2RGBDD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_swigregister
itkImageFunctionIRGBUC2RGBDD_swigregister(itkImageFunctionIRGBUC2RGBDD)

def itkImageFunctionIRGBUC2RGBDD_cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBUC2RGBDD *":
    """itkImageFunctionIRGBUC2RGBDD_cast(itkLightObject obj) -> itkImageFunctionIRGBUC2RGBDD"""
    return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_cast(obj)

class itkImageFunctionIRGBUC2RGBUCD(itkFunctionBasePython.itkFunctionBasePD2RGBUC):
    """Proxy of C++ itkImageFunctionIRGBUC2RGBUCD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageRGBUC2') -> "void":
        """SetInputImage(itkImageFunctionIRGBUC2RGBUCD self, itkImageRGBUC2 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageRGBUC2 const *":
        """GetInputImage(itkImageFunctionIRGBUC2RGBUCD self) -> itkImageRGBUC2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "itkRGBPixelUC":
        """EvaluateAtIndex(itkImageFunctionIRGBUC2RGBUCD self, itkIndex2 index) -> itkRGBPixelUC"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "itkRGBPixelUC":
        """EvaluateAtContinuousIndex(itkImageFunctionIRGBUC2RGBUCD self, itkContinuousIndexD2 index) -> itkRGBPixelUC"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIRGBUC2RGBUCD self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBUC2RGBUCD self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBUC2RGBUCD self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIRGBUC2RGBUCD self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIRGBUC2RGBUCD self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIRGBUC2RGBUCD self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionIRGBUC2RGBUCD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionIRGBUC2RGBUCD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionIRGBUC2RGBUCD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionIRGBUC2RGBUCD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBUC2RGBUCD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBUC2RGBUCD *":
        """cast(itkLightObject obj) -> itkImageFunctionIRGBUC2RGBUCD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBUC2RGBUCD

        Create a new object of the class itkImageFunctionIRGBUC2RGBUCD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBUC2RGBUCD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBUC2RGBUCD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBUC2RGBUCD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIRGBUC2RGBUCD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_SetInputImage, None, itkImageFunctionIRGBUC2RGBUCD)
itkImageFunctionIRGBUC2RGBUCD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetInputImage, None, itkImageFunctionIRGBUC2RGBUCD)
itkImageFunctionIRGBUC2RGBUCD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_EvaluateAtIndex, None, itkImageFunctionIRGBUC2RGBUCD)
itkImageFunctionIRGBUC2RGBUCD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_EvaluateAtContinuousIndex, None, itkImageFunctionIRGBUC2RGBUCD)
itkImageFunctionIRGBUC2RGBUCD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_IsInsideBuffer, None, itkImageFunctionIRGBUC2RGBUCD)
itkImageFunctionIRGBUC2RGBUCD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_ConvertPointToNearestIndex, None, itkImageFunctionIRGBUC2RGBUCD)
itkImageFunctionIRGBUC2RGBUCD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_ConvertPointToContinuousIndex, None, itkImageFunctionIRGBUC2RGBUCD)
itkImageFunctionIRGBUC2RGBUCD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIRGBUC2RGBUCD)
itkImageFunctionIRGBUC2RGBUCD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetStartIndex, None, itkImageFunctionIRGBUC2RGBUCD)
itkImageFunctionIRGBUC2RGBUCD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetEndIndex, None, itkImageFunctionIRGBUC2RGBUCD)
itkImageFunctionIRGBUC2RGBUCD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetStartContinuousIndex, None, itkImageFunctionIRGBUC2RGBUCD)
itkImageFunctionIRGBUC2RGBUCD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetEndContinuousIndex, None, itkImageFunctionIRGBUC2RGBUCD)
itkImageFunctionIRGBUC2RGBUCD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_swigregister
itkImageFunctionIRGBUC2RGBUCD_swigregister(itkImageFunctionIRGBUC2RGBUCD)

def itkImageFunctionIRGBUC2RGBUCD_cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBUC2RGBUCD *":
    """itkImageFunctionIRGBUC2RGBUCD_cast(itkLightObject obj) -> itkImageFunctionIRGBUC2RGBUCD"""
    return _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_cast(obj)

class itkImageFunctionIRGBUC3RGBDD(itkFunctionBasePython.itkFunctionBasePD3RGBD):
    """Proxy of C++ itkImageFunctionIRGBUC3RGBDD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageRGBUC3') -> "void":
        """SetInputImage(itkImageFunctionIRGBUC3RGBDD self, itkImageRGBUC3 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageRGBUC3 const *":
        """GetInputImage(itkImageFunctionIRGBUC3RGBDD self) -> itkImageRGBUC3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "itkRGBPixelD":
        """EvaluateAtIndex(itkImageFunctionIRGBUC3RGBDD self, itkIndex3 index) -> itkRGBPixelD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "itkRGBPixelD":
        """EvaluateAtContinuousIndex(itkImageFunctionIRGBUC3RGBDD self, itkContinuousIndexD3 index) -> itkRGBPixelD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIRGBUC3RGBDD self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBUC3RGBDD self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBUC3RGBDD self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIRGBUC3RGBDD self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIRGBUC3RGBDD self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIRGBUC3RGBDD self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionIRGBUC3RGBDD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionIRGBUC3RGBDD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionIRGBUC3RGBDD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionIRGBUC3RGBDD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBUC3RGBDD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBUC3RGBDD *":
        """cast(itkLightObject obj) -> itkImageFunctionIRGBUC3RGBDD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBUC3RGBDD

        Create a new object of the class itkImageFunctionIRGBUC3RGBDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBUC3RGBDD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBUC3RGBDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBUC3RGBDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIRGBUC3RGBDD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_SetInputImage, None, itkImageFunctionIRGBUC3RGBDD)
itkImageFunctionIRGBUC3RGBDD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetInputImage, None, itkImageFunctionIRGBUC3RGBDD)
itkImageFunctionIRGBUC3RGBDD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_EvaluateAtIndex, None, itkImageFunctionIRGBUC3RGBDD)
itkImageFunctionIRGBUC3RGBDD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_EvaluateAtContinuousIndex, None, itkImageFunctionIRGBUC3RGBDD)
itkImageFunctionIRGBUC3RGBDD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_IsInsideBuffer, None, itkImageFunctionIRGBUC3RGBDD)
itkImageFunctionIRGBUC3RGBDD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_ConvertPointToNearestIndex, None, itkImageFunctionIRGBUC3RGBDD)
itkImageFunctionIRGBUC3RGBDD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_ConvertPointToContinuousIndex, None, itkImageFunctionIRGBUC3RGBDD)
itkImageFunctionIRGBUC3RGBDD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIRGBUC3RGBDD)
itkImageFunctionIRGBUC3RGBDD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetStartIndex, None, itkImageFunctionIRGBUC3RGBDD)
itkImageFunctionIRGBUC3RGBDD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetEndIndex, None, itkImageFunctionIRGBUC3RGBDD)
itkImageFunctionIRGBUC3RGBDD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetStartContinuousIndex, None, itkImageFunctionIRGBUC3RGBDD)
itkImageFunctionIRGBUC3RGBDD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetEndContinuousIndex, None, itkImageFunctionIRGBUC3RGBDD)
itkImageFunctionIRGBUC3RGBDD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_swigregister
itkImageFunctionIRGBUC3RGBDD_swigregister(itkImageFunctionIRGBUC3RGBDD)

def itkImageFunctionIRGBUC3RGBDD_cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBUC3RGBDD *":
    """itkImageFunctionIRGBUC3RGBDD_cast(itkLightObject obj) -> itkImageFunctionIRGBUC3RGBDD"""
    return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_cast(obj)

class itkImageFunctionIRGBUC3RGBUCD(itkFunctionBasePython.itkFunctionBasePD3RGBUC):
    """Proxy of C++ itkImageFunctionIRGBUC3RGBUCD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageRGBUC3') -> "void":
        """SetInputImage(itkImageFunctionIRGBUC3RGBUCD self, itkImageRGBUC3 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageRGBUC3 const *":
        """GetInputImage(itkImageFunctionIRGBUC3RGBUCD self) -> itkImageRGBUC3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "itkRGBPixelUC":
        """EvaluateAtIndex(itkImageFunctionIRGBUC3RGBUCD self, itkIndex3 index) -> itkRGBPixelUC"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "itkRGBPixelUC":
        """EvaluateAtContinuousIndex(itkImageFunctionIRGBUC3RGBUCD self, itkContinuousIndexD3 index) -> itkRGBPixelUC"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIRGBUC3RGBUCD self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBUC3RGBUCD self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionIRGBUC3RGBUCD self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIRGBUC3RGBUCD self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIRGBUC3RGBUCD self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIRGBUC3RGBUCD self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionIRGBUC3RGBUCD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionIRGBUC3RGBUCD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionIRGBUC3RGBUCD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionIRGBUC3RGBUCD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBUC3RGBUCD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBUC3RGBUCD *":
        """cast(itkLightObject obj) -> itkImageFunctionIRGBUC3RGBUCD"""
        return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBUC3RGBUCD

        Create a new object of the class itkImageFunctionIRGBUC3RGBUCD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBUC3RGBUCD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBUC3RGBUCD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBUC3RGBUCD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIRGBUC3RGBUCD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_SetInputImage, None, itkImageFunctionIRGBUC3RGBUCD)
itkImageFunctionIRGBUC3RGBUCD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetInputImage, None, itkImageFunctionIRGBUC3RGBUCD)
itkImageFunctionIRGBUC3RGBUCD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_EvaluateAtIndex, None, itkImageFunctionIRGBUC3RGBUCD)
itkImageFunctionIRGBUC3RGBUCD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_EvaluateAtContinuousIndex, None, itkImageFunctionIRGBUC3RGBUCD)
itkImageFunctionIRGBUC3RGBUCD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_IsInsideBuffer, None, itkImageFunctionIRGBUC3RGBUCD)
itkImageFunctionIRGBUC3RGBUCD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_ConvertPointToNearestIndex, None, itkImageFunctionIRGBUC3RGBUCD)
itkImageFunctionIRGBUC3RGBUCD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_ConvertPointToContinuousIndex, None, itkImageFunctionIRGBUC3RGBUCD)
itkImageFunctionIRGBUC3RGBUCD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIRGBUC3RGBUCD)
itkImageFunctionIRGBUC3RGBUCD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetStartIndex, None, itkImageFunctionIRGBUC3RGBUCD)
itkImageFunctionIRGBUC3RGBUCD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetEndIndex, None, itkImageFunctionIRGBUC3RGBUCD)
itkImageFunctionIRGBUC3RGBUCD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetStartContinuousIndex, None, itkImageFunctionIRGBUC3RGBUCD)
itkImageFunctionIRGBUC3RGBUCD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetEndContinuousIndex, None, itkImageFunctionIRGBUC3RGBUCD)
itkImageFunctionIRGBUC3RGBUCD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_swigregister
itkImageFunctionIRGBUC3RGBUCD_swigregister(itkImageFunctionIRGBUC3RGBUCD)

def itkImageFunctionIRGBUC3RGBUCD_cast(obj: 'itkLightObject') -> "itkImageFunctionIRGBUC3RGBUCD *":
    """itkImageFunctionIRGBUC3RGBUCD_cast(itkLightObject obj) -> itkImageFunctionIRGBUC3RGBUCD"""
    return _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_cast(obj)

class itkImageFunctionISS2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    """Proxy of C++ itkImageFunctionISS2DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageSS2') -> "void":
        """SetInputImage(itkImageFunctionISS2DD self, itkImageSS2 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageSS2 const *":
        """GetInputImage(itkImageFunctionISS2DD self) -> itkImageSS2"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "double":
        """EvaluateAtIndex(itkImageFunctionISS2DD self, itkIndex2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionISS2DD self, itkContinuousIndexD2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionISS2DD self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionISS2DD self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionISS2DD self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionISS2DD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionISS2DD self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionISS2DD self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionISS2DD self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionISS2DD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionISS2DD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionISS2DD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionISS2DD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionISS2DD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionISS2DD *":
        """cast(itkLightObject obj) -> itkImageFunctionISS2DD"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionISS2DD

        Create a new object of the class itkImageFunctionISS2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionISS2DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionISS2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionISS2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionISS2DD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DD_SetInputImage, None, itkImageFunctionISS2DD)
itkImageFunctionISS2DD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DD_GetInputImage, None, itkImageFunctionISS2DD)
itkImageFunctionISS2DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DD_EvaluateAtIndex, None, itkImageFunctionISS2DD)
itkImageFunctionISS2DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DD_EvaluateAtContinuousIndex, None, itkImageFunctionISS2DD)
itkImageFunctionISS2DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DD_IsInsideBuffer, None, itkImageFunctionISS2DD)
itkImageFunctionISS2DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DD_ConvertPointToNearestIndex, None, itkImageFunctionISS2DD)
itkImageFunctionISS2DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DD_ConvertPointToContinuousIndex, None, itkImageFunctionISS2DD)
itkImageFunctionISS2DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionISS2DD)
itkImageFunctionISS2DD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DD_GetStartIndex, None, itkImageFunctionISS2DD)
itkImageFunctionISS2DD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DD_GetEndIndex, None, itkImageFunctionISS2DD)
itkImageFunctionISS2DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DD_GetStartContinuousIndex, None, itkImageFunctionISS2DD)
itkImageFunctionISS2DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DD_GetEndContinuousIndex, None, itkImageFunctionISS2DD)
itkImageFunctionISS2DD_swigregister = _itkImageFunctionBasePython.itkImageFunctionISS2DD_swigregister
itkImageFunctionISS2DD_swigregister(itkImageFunctionISS2DD)

def itkImageFunctionISS2DD_cast(obj: 'itkLightObject') -> "itkImageFunctionISS2DD *":
    """itkImageFunctionISS2DD_cast(itkLightObject obj) -> itkImageFunctionISS2DD"""
    return _itkImageFunctionBasePython.itkImageFunctionISS2DD_cast(obj)

class itkImageFunctionISS2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    """Proxy of C++ itkImageFunctionISS2DF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageSS2') -> "void":
        """SetInputImage(itkImageFunctionISS2DF self, itkImageSS2 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DF_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageSS2 const *":
        """GetInputImage(itkImageFunctionISS2DF self) -> itkImageSS2"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DF_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "double":
        """EvaluateAtIndex(itkImageFunctionISS2DF self, itkIndex2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DF_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexF2') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionISS2DF self, itkContinuousIndexF2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DF_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionISS2DF self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionISS2DF self, itkContinuousIndexF2 index) -> bool
        IsInsideBuffer(itkImageFunctionISS2DF self, itkPointF2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionISS2DF_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointF2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionISS2DF self, itkPointF2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DF_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointF2', cindex: 'itkContinuousIndexF2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionISS2DF self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DF_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexF2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionISS2DF self, itkContinuousIndexF2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DF_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionISS2DF self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DF_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionISS2DF self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DF_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexF2 const &":
        """GetStartContinuousIndex(itkImageFunctionISS2DF self) -> itkContinuousIndexF2"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DF_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexF2 const &":
        """GetEndContinuousIndex(itkImageFunctionISS2DF self) -> itkContinuousIndexF2"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionISS2DF

    def cast(obj: 'itkLightObject') -> "itkImageFunctionISS2DF *":
        """cast(itkLightObject obj) -> itkImageFunctionISS2DF"""
        return _itkImageFunctionBasePython.itkImageFunctionISS2DF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionISS2DF

        Create a new object of the class itkImageFunctionISS2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionISS2DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionISS2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionISS2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionISS2DF.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DF_SetInputImage, None, itkImageFunctionISS2DF)
itkImageFunctionISS2DF.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DF_GetInputImage, None, itkImageFunctionISS2DF)
itkImageFunctionISS2DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DF_EvaluateAtIndex, None, itkImageFunctionISS2DF)
itkImageFunctionISS2DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DF_EvaluateAtContinuousIndex, None, itkImageFunctionISS2DF)
itkImageFunctionISS2DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DF_IsInsideBuffer, None, itkImageFunctionISS2DF)
itkImageFunctionISS2DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DF_ConvertPointToNearestIndex, None, itkImageFunctionISS2DF)
itkImageFunctionISS2DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DF_ConvertPointToContinuousIndex, None, itkImageFunctionISS2DF)
itkImageFunctionISS2DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DF_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionISS2DF)
itkImageFunctionISS2DF.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DF_GetStartIndex, None, itkImageFunctionISS2DF)
itkImageFunctionISS2DF.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DF_GetEndIndex, None, itkImageFunctionISS2DF)
itkImageFunctionISS2DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DF_GetStartContinuousIndex, None, itkImageFunctionISS2DF)
itkImageFunctionISS2DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS2DF_GetEndContinuousIndex, None, itkImageFunctionISS2DF)
itkImageFunctionISS2DF_swigregister = _itkImageFunctionBasePython.itkImageFunctionISS2DF_swigregister
itkImageFunctionISS2DF_swigregister(itkImageFunctionISS2DF)

def itkImageFunctionISS2DF_cast(obj: 'itkLightObject') -> "itkImageFunctionISS2DF *":
    """itkImageFunctionISS2DF_cast(itkLightObject obj) -> itkImageFunctionISS2DF"""
    return _itkImageFunctionBasePython.itkImageFunctionISS2DF_cast(obj)

class itkImageFunctionISS3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    """Proxy of C++ itkImageFunctionISS3DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageSS3') -> "void":
        """SetInputImage(itkImageFunctionISS3DD self, itkImageSS3 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageSS3 const *":
        """GetInputImage(itkImageFunctionISS3DD self) -> itkImageSS3"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "double":
        """EvaluateAtIndex(itkImageFunctionISS3DD self, itkIndex3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionISS3DD self, itkContinuousIndexD3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionISS3DD self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionISS3DD self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionISS3DD self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionISS3DD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionISS3DD self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionISS3DD self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionISS3DD self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionISS3DD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionISS3DD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionISS3DD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionISS3DD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionISS3DD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionISS3DD *":
        """cast(itkLightObject obj) -> itkImageFunctionISS3DD"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionISS3DD

        Create a new object of the class itkImageFunctionISS3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionISS3DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionISS3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionISS3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionISS3DD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DD_SetInputImage, None, itkImageFunctionISS3DD)
itkImageFunctionISS3DD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DD_GetInputImage, None, itkImageFunctionISS3DD)
itkImageFunctionISS3DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DD_EvaluateAtIndex, None, itkImageFunctionISS3DD)
itkImageFunctionISS3DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DD_EvaluateAtContinuousIndex, None, itkImageFunctionISS3DD)
itkImageFunctionISS3DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DD_IsInsideBuffer, None, itkImageFunctionISS3DD)
itkImageFunctionISS3DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DD_ConvertPointToNearestIndex, None, itkImageFunctionISS3DD)
itkImageFunctionISS3DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DD_ConvertPointToContinuousIndex, None, itkImageFunctionISS3DD)
itkImageFunctionISS3DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionISS3DD)
itkImageFunctionISS3DD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DD_GetStartIndex, None, itkImageFunctionISS3DD)
itkImageFunctionISS3DD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DD_GetEndIndex, None, itkImageFunctionISS3DD)
itkImageFunctionISS3DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DD_GetStartContinuousIndex, None, itkImageFunctionISS3DD)
itkImageFunctionISS3DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DD_GetEndContinuousIndex, None, itkImageFunctionISS3DD)
itkImageFunctionISS3DD_swigregister = _itkImageFunctionBasePython.itkImageFunctionISS3DD_swigregister
itkImageFunctionISS3DD_swigregister(itkImageFunctionISS3DD)

def itkImageFunctionISS3DD_cast(obj: 'itkLightObject') -> "itkImageFunctionISS3DD *":
    """itkImageFunctionISS3DD_cast(itkLightObject obj) -> itkImageFunctionISS3DD"""
    return _itkImageFunctionBasePython.itkImageFunctionISS3DD_cast(obj)

class itkImageFunctionISS3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    """Proxy of C++ itkImageFunctionISS3DF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageSS3') -> "void":
        """SetInputImage(itkImageFunctionISS3DF self, itkImageSS3 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DF_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageSS3 const *":
        """GetInputImage(itkImageFunctionISS3DF self) -> itkImageSS3"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DF_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "double":
        """EvaluateAtIndex(itkImageFunctionISS3DF self, itkIndex3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DF_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexF3') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionISS3DF self, itkContinuousIndexF3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DF_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionISS3DF self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionISS3DF self, itkContinuousIndexF3 index) -> bool
        IsInsideBuffer(itkImageFunctionISS3DF self, itkPointF3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionISS3DF_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointF3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionISS3DF self, itkPointF3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DF_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointF3', cindex: 'itkContinuousIndexF3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionISS3DF self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DF_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexF3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionISS3DF self, itkContinuousIndexF3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DF_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionISS3DF self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DF_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionISS3DF self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DF_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexF3 const &":
        """GetStartContinuousIndex(itkImageFunctionISS3DF self) -> itkContinuousIndexF3"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DF_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexF3 const &":
        """GetEndContinuousIndex(itkImageFunctionISS3DF self) -> itkContinuousIndexF3"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionISS3DF

    def cast(obj: 'itkLightObject') -> "itkImageFunctionISS3DF *":
        """cast(itkLightObject obj) -> itkImageFunctionISS3DF"""
        return _itkImageFunctionBasePython.itkImageFunctionISS3DF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionISS3DF

        Create a new object of the class itkImageFunctionISS3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionISS3DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionISS3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionISS3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionISS3DF.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DF_SetInputImage, None, itkImageFunctionISS3DF)
itkImageFunctionISS3DF.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DF_GetInputImage, None, itkImageFunctionISS3DF)
itkImageFunctionISS3DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DF_EvaluateAtIndex, None, itkImageFunctionISS3DF)
itkImageFunctionISS3DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DF_EvaluateAtContinuousIndex, None, itkImageFunctionISS3DF)
itkImageFunctionISS3DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DF_IsInsideBuffer, None, itkImageFunctionISS3DF)
itkImageFunctionISS3DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DF_ConvertPointToNearestIndex, None, itkImageFunctionISS3DF)
itkImageFunctionISS3DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DF_ConvertPointToContinuousIndex, None, itkImageFunctionISS3DF)
itkImageFunctionISS3DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DF_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionISS3DF)
itkImageFunctionISS3DF.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DF_GetStartIndex, None, itkImageFunctionISS3DF)
itkImageFunctionISS3DF.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DF_GetEndIndex, None, itkImageFunctionISS3DF)
itkImageFunctionISS3DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DF_GetStartContinuousIndex, None, itkImageFunctionISS3DF)
itkImageFunctionISS3DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionISS3DF_GetEndContinuousIndex, None, itkImageFunctionISS3DF)
itkImageFunctionISS3DF_swigregister = _itkImageFunctionBasePython.itkImageFunctionISS3DF_swigregister
itkImageFunctionISS3DF_swigregister(itkImageFunctionISS3DF)

def itkImageFunctionISS3DF_cast(obj: 'itkLightObject') -> "itkImageFunctionISS3DF *":
    """itkImageFunctionISS3DF_cast(itkLightObject obj) -> itkImageFunctionISS3DF"""
    return _itkImageFunctionBasePython.itkImageFunctionISS3DF_cast(obj)

class itkImageFunctionIUC2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    """Proxy of C++ itkImageFunctionIUC2DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageUC2') -> "void":
        """SetInputImage(itkImageFunctionIUC2DD self, itkImageUC2 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageUC2 const *":
        """GetInputImage(itkImageFunctionIUC2DD self) -> itkImageUC2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "double":
        """EvaluateAtIndex(itkImageFunctionIUC2DD self, itkIndex2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIUC2DD self, itkContinuousIndexD2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIUC2DD self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionIUC2DD self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionIUC2DD self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIUC2DD self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIUC2DD self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIUC2DD self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionIUC2DD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionIUC2DD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionIUC2DD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionIUC2DD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUC2DD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIUC2DD *":
        """cast(itkLightObject obj) -> itkImageFunctionIUC2DD"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUC2DD

        Create a new object of the class itkImageFunctionIUC2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUC2DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUC2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUC2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUC2DD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_SetInputImage, None, itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetInputImage, None, itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_EvaluateAtIndex, None, itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_EvaluateAtContinuousIndex, None, itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_IsInsideBuffer, None, itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_ConvertPointToNearestIndex, None, itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_ConvertPointToContinuousIndex, None, itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetStartIndex, None, itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetEndIndex, None, itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetStartContinuousIndex, None, itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetEndContinuousIndex, None, itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIUC2DD_swigregister
itkImageFunctionIUC2DD_swigregister(itkImageFunctionIUC2DD)

def itkImageFunctionIUC2DD_cast(obj: 'itkLightObject') -> "itkImageFunctionIUC2DD *":
    """itkImageFunctionIUC2DD_cast(itkLightObject obj) -> itkImageFunctionIUC2DD"""
    return _itkImageFunctionBasePython.itkImageFunctionIUC2DD_cast(obj)

class itkImageFunctionIUC2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    """Proxy of C++ itkImageFunctionIUC2DF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageUC2') -> "void":
        """SetInputImage(itkImageFunctionIUC2DF self, itkImageUC2 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageUC2 const *":
        """GetInputImage(itkImageFunctionIUC2DF self) -> itkImageUC2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "double":
        """EvaluateAtIndex(itkImageFunctionIUC2DF self, itkIndex2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexF2') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIUC2DF self, itkContinuousIndexF2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIUC2DF self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionIUC2DF self, itkContinuousIndexF2 index) -> bool
        IsInsideBuffer(itkImageFunctionIUC2DF self, itkPointF2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointF2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIUC2DF self, itkPointF2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointF2', cindex: 'itkContinuousIndexF2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIUC2DF self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexF2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIUC2DF self, itkContinuousIndexF2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionIUC2DF self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionIUC2DF self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexF2 const &":
        """GetStartContinuousIndex(itkImageFunctionIUC2DF self) -> itkContinuousIndexF2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexF2 const &":
        """GetEndContinuousIndex(itkImageFunctionIUC2DF self) -> itkContinuousIndexF2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUC2DF

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIUC2DF *":
        """cast(itkLightObject obj) -> itkImageFunctionIUC2DF"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUC2DF

        Create a new object of the class itkImageFunctionIUC2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUC2DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUC2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUC2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUC2DF.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_SetInputImage, None, itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetInputImage, None, itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_EvaluateAtIndex, None, itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_EvaluateAtContinuousIndex, None, itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_IsInsideBuffer, None, itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_ConvertPointToNearestIndex, None, itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_ConvertPointToContinuousIndex, None, itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetStartIndex, None, itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetEndIndex, None, itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetStartContinuousIndex, None, itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetEndContinuousIndex, None, itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF_swigregister = _itkImageFunctionBasePython.itkImageFunctionIUC2DF_swigregister
itkImageFunctionIUC2DF_swigregister(itkImageFunctionIUC2DF)

def itkImageFunctionIUC2DF_cast(obj: 'itkLightObject') -> "itkImageFunctionIUC2DF *":
    """itkImageFunctionIUC2DF_cast(itkLightObject obj) -> itkImageFunctionIUC2DF"""
    return _itkImageFunctionBasePython.itkImageFunctionIUC2DF_cast(obj)

class itkImageFunctionIUC3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    """Proxy of C++ itkImageFunctionIUC3DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageUC3') -> "void":
        """SetInputImage(itkImageFunctionIUC3DD self, itkImageUC3 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageUC3 const *":
        """GetInputImage(itkImageFunctionIUC3DD self) -> itkImageUC3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "double":
        """EvaluateAtIndex(itkImageFunctionIUC3DD self, itkIndex3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIUC3DD self, itkContinuousIndexD3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIUC3DD self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionIUC3DD self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionIUC3DD self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIUC3DD self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIUC3DD self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIUC3DD self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionIUC3DD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionIUC3DD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionIUC3DD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionIUC3DD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUC3DD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIUC3DD *":
        """cast(itkLightObject obj) -> itkImageFunctionIUC3DD"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUC3DD

        Create a new object of the class itkImageFunctionIUC3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUC3DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUC3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUC3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUC3DD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_SetInputImage, None, itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetInputImage, None, itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_EvaluateAtIndex, None, itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_EvaluateAtContinuousIndex, None, itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_IsInsideBuffer, None, itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_ConvertPointToNearestIndex, None, itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_ConvertPointToContinuousIndex, None, itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetStartIndex, None, itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetEndIndex, None, itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetStartContinuousIndex, None, itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetEndContinuousIndex, None, itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIUC3DD_swigregister
itkImageFunctionIUC3DD_swigregister(itkImageFunctionIUC3DD)

def itkImageFunctionIUC3DD_cast(obj: 'itkLightObject') -> "itkImageFunctionIUC3DD *":
    """itkImageFunctionIUC3DD_cast(itkLightObject obj) -> itkImageFunctionIUC3DD"""
    return _itkImageFunctionBasePython.itkImageFunctionIUC3DD_cast(obj)

class itkImageFunctionIUC3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    """Proxy of C++ itkImageFunctionIUC3DF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageUC3') -> "void":
        """SetInputImage(itkImageFunctionIUC3DF self, itkImageUC3 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageUC3 const *":
        """GetInputImage(itkImageFunctionIUC3DF self) -> itkImageUC3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "double":
        """EvaluateAtIndex(itkImageFunctionIUC3DF self, itkIndex3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexF3') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIUC3DF self, itkContinuousIndexF3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIUC3DF self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionIUC3DF self, itkContinuousIndexF3 index) -> bool
        IsInsideBuffer(itkImageFunctionIUC3DF self, itkPointF3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointF3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIUC3DF self, itkPointF3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointF3', cindex: 'itkContinuousIndexF3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIUC3DF self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexF3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIUC3DF self, itkContinuousIndexF3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionIUC3DF self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionIUC3DF self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexF3 const &":
        """GetStartContinuousIndex(itkImageFunctionIUC3DF self) -> itkContinuousIndexF3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexF3 const &":
        """GetEndContinuousIndex(itkImageFunctionIUC3DF self) -> itkContinuousIndexF3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUC3DF

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIUC3DF *":
        """cast(itkLightObject obj) -> itkImageFunctionIUC3DF"""
        return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUC3DF

        Create a new object of the class itkImageFunctionIUC3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUC3DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUC3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUC3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUC3DF.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_SetInputImage, None, itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetInputImage, None, itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_EvaluateAtIndex, None, itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_EvaluateAtContinuousIndex, None, itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_IsInsideBuffer, None, itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_ConvertPointToNearestIndex, None, itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_ConvertPointToContinuousIndex, None, itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetStartIndex, None, itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetEndIndex, None, itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetStartContinuousIndex, None, itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetEndContinuousIndex, None, itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF_swigregister = _itkImageFunctionBasePython.itkImageFunctionIUC3DF_swigregister
itkImageFunctionIUC3DF_swigregister(itkImageFunctionIUC3DF)

def itkImageFunctionIUC3DF_cast(obj: 'itkLightObject') -> "itkImageFunctionIUC3DF *":
    """itkImageFunctionIUC3DF_cast(itkLightObject obj) -> itkImageFunctionIUC3DF"""
    return _itkImageFunctionBasePython.itkImageFunctionIUC3DF_cast(obj)

class itkImageFunctionIUS2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    """Proxy of C++ itkImageFunctionIUS2DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageUS2') -> "void":
        """SetInputImage(itkImageFunctionIUS2DD self, itkImageUS2 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageUS2 const *":
        """GetInputImage(itkImageFunctionIUS2DD self) -> itkImageUS2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "double":
        """EvaluateAtIndex(itkImageFunctionIUS2DD self, itkIndex2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIUS2DD self, itkContinuousIndexD2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIUS2DD self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionIUS2DD self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionIUS2DD self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIUS2DD self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIUS2DD self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIUS2DD self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionIUS2DD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionIUS2DD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionIUS2DD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionIUS2DD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUS2DD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIUS2DD *":
        """cast(itkLightObject obj) -> itkImageFunctionIUS2DD"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUS2DD

        Create a new object of the class itkImageFunctionIUS2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUS2DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUS2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUS2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUS2DD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_SetInputImage, None, itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetInputImage, None, itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_EvaluateAtIndex, None, itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_EvaluateAtContinuousIndex, None, itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_IsInsideBuffer, None, itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_ConvertPointToNearestIndex, None, itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_ConvertPointToContinuousIndex, None, itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetStartIndex, None, itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetEndIndex, None, itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetStartContinuousIndex, None, itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetEndContinuousIndex, None, itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIUS2DD_swigregister
itkImageFunctionIUS2DD_swigregister(itkImageFunctionIUS2DD)

def itkImageFunctionIUS2DD_cast(obj: 'itkLightObject') -> "itkImageFunctionIUS2DD *":
    """itkImageFunctionIUS2DD_cast(itkLightObject obj) -> itkImageFunctionIUS2DD"""
    return _itkImageFunctionBasePython.itkImageFunctionIUS2DD_cast(obj)

class itkImageFunctionIUS2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    """Proxy of C++ itkImageFunctionIUS2DF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageUS2') -> "void":
        """SetInputImage(itkImageFunctionIUS2DF self, itkImageUS2 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageUS2 const *":
        """GetInputImage(itkImageFunctionIUS2DF self) -> itkImageUS2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "double":
        """EvaluateAtIndex(itkImageFunctionIUS2DF self, itkIndex2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexF2') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIUS2DF self, itkContinuousIndexF2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIUS2DF self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionIUS2DF self, itkContinuousIndexF2 index) -> bool
        IsInsideBuffer(itkImageFunctionIUS2DF self, itkPointF2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointF2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIUS2DF self, itkPointF2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointF2', cindex: 'itkContinuousIndexF2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIUS2DF self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexF2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIUS2DF self, itkContinuousIndexF2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionIUS2DF self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionIUS2DF self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexF2 const &":
        """GetStartContinuousIndex(itkImageFunctionIUS2DF self) -> itkContinuousIndexF2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexF2 const &":
        """GetEndContinuousIndex(itkImageFunctionIUS2DF self) -> itkContinuousIndexF2"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUS2DF

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIUS2DF *":
        """cast(itkLightObject obj) -> itkImageFunctionIUS2DF"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUS2DF

        Create a new object of the class itkImageFunctionIUS2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUS2DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUS2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUS2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUS2DF.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_SetInputImage, None, itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetInputImage, None, itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_EvaluateAtIndex, None, itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_EvaluateAtContinuousIndex, None, itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_IsInsideBuffer, None, itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_ConvertPointToNearestIndex, None, itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_ConvertPointToContinuousIndex, None, itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetStartIndex, None, itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetEndIndex, None, itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetStartContinuousIndex, None, itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetEndContinuousIndex, None, itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF_swigregister = _itkImageFunctionBasePython.itkImageFunctionIUS2DF_swigregister
itkImageFunctionIUS2DF_swigregister(itkImageFunctionIUS2DF)

def itkImageFunctionIUS2DF_cast(obj: 'itkLightObject') -> "itkImageFunctionIUS2DF *":
    """itkImageFunctionIUS2DF_cast(itkLightObject obj) -> itkImageFunctionIUS2DF"""
    return _itkImageFunctionBasePython.itkImageFunctionIUS2DF_cast(obj)

class itkImageFunctionIUS3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    """Proxy of C++ itkImageFunctionIUS3DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageUS3') -> "void":
        """SetInputImage(itkImageFunctionIUS3DD self, itkImageUS3 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageUS3 const *":
        """GetInputImage(itkImageFunctionIUS3DD self) -> itkImageUS3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "double":
        """EvaluateAtIndex(itkImageFunctionIUS3DD self, itkIndex3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIUS3DD self, itkContinuousIndexD3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIUS3DD self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionIUS3DD self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionIUS3DD self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIUS3DD self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIUS3DD self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIUS3DD self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionIUS3DD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionIUS3DD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionIUS3DD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionIUS3DD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUS3DD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIUS3DD *":
        """cast(itkLightObject obj) -> itkImageFunctionIUS3DD"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUS3DD

        Create a new object of the class itkImageFunctionIUS3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUS3DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUS3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUS3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUS3DD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_SetInputImage, None, itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetInputImage, None, itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_EvaluateAtIndex, None, itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_EvaluateAtContinuousIndex, None, itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_IsInsideBuffer, None, itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_ConvertPointToNearestIndex, None, itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_ConvertPointToContinuousIndex, None, itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetStartIndex, None, itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetEndIndex, None, itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetStartContinuousIndex, None, itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetEndContinuousIndex, None, itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIUS3DD_swigregister
itkImageFunctionIUS3DD_swigregister(itkImageFunctionIUS3DD)

def itkImageFunctionIUS3DD_cast(obj: 'itkLightObject') -> "itkImageFunctionIUS3DD *":
    """itkImageFunctionIUS3DD_cast(itkLightObject obj) -> itkImageFunctionIUS3DD"""
    return _itkImageFunctionBasePython.itkImageFunctionIUS3DD_cast(obj)

class itkImageFunctionIUS3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    """Proxy of C++ itkImageFunctionIUS3DF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageUS3') -> "void":
        """SetInputImage(itkImageFunctionIUS3DF self, itkImageUS3 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageUS3 const *":
        """GetInputImage(itkImageFunctionIUS3DF self) -> itkImageUS3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "double":
        """EvaluateAtIndex(itkImageFunctionIUS3DF self, itkIndex3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexF3') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIUS3DF self, itkContinuousIndexF3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIUS3DF self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionIUS3DF self, itkContinuousIndexF3 index) -> bool
        IsInsideBuffer(itkImageFunctionIUS3DF self, itkPointF3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointF3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIUS3DF self, itkPointF3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointF3', cindex: 'itkContinuousIndexF3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIUS3DF self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexF3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIUS3DF self, itkContinuousIndexF3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionIUS3DF self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionIUS3DF self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexF3 const &":
        """GetStartContinuousIndex(itkImageFunctionIUS3DF self) -> itkContinuousIndexF3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexF3 const &":
        """GetEndContinuousIndex(itkImageFunctionIUS3DF self) -> itkContinuousIndexF3"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUS3DF

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIUS3DF *":
        """cast(itkLightObject obj) -> itkImageFunctionIUS3DF"""
        return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUS3DF

        Create a new object of the class itkImageFunctionIUS3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUS3DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUS3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUS3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUS3DF.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_SetInputImage, None, itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetInputImage, None, itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_EvaluateAtIndex, None, itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_EvaluateAtContinuousIndex, None, itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_IsInsideBuffer, None, itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_ConvertPointToNearestIndex, None, itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_ConvertPointToContinuousIndex, None, itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetStartIndex, None, itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetEndIndex, None, itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetStartContinuousIndex, None, itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetEndContinuousIndex, None, itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF_swigregister = _itkImageFunctionBasePython.itkImageFunctionIUS3DF_swigregister
itkImageFunctionIUS3DF_swigregister(itkImageFunctionIUS3DF)

def itkImageFunctionIUS3DF_cast(obj: 'itkLightObject') -> "itkImageFunctionIUS3DF *":
    """itkImageFunctionIUS3DF_cast(itkLightObject obj) -> itkImageFunctionIUS3DF"""
    return _itkImageFunctionBasePython.itkImageFunctionIUS3DF_cast(obj)

class itkImageFunctionIVF22CVD2D(itkFunctionBasePython.itkFunctionBasePD2CVD2):
    """Proxy of C++ itkImageFunctionIVF22CVD2D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageVF22') -> "void":
        """SetInputImage(itkImageFunctionIVF22CVD2D self, itkImageVF22 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageVF22 const *":
        """GetInputImage(itkImageFunctionIVF22CVD2D self) -> itkImageVF22"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "itkCovariantVectorD2":
        """EvaluateAtIndex(itkImageFunctionIVF22CVD2D self, itkIndex2 index) -> itkCovariantVectorD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "itkCovariantVectorD2":
        """EvaluateAtContinuousIndex(itkImageFunctionIVF22CVD2D self, itkContinuousIndexD2 index) -> itkCovariantVectorD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIVF22CVD2D self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionIVF22CVD2D self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionIVF22CVD2D self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIVF22CVD2D self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIVF22CVD2D self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIVF22CVD2D self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionIVF22CVD2D self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionIVF22CVD2D self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionIVF22CVD2D self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionIVF22CVD2D self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIVF22CVD2D

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIVF22CVD2D *":
        """cast(itkLightObject obj) -> itkImageFunctionIVF22CVD2D"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF22CVD2D

        Create a new object of the class itkImageFunctionIVF22CVD2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIVF22CVD2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIVF22CVD2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF22CVD2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIVF22CVD2D.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_SetInputImage, None, itkImageFunctionIVF22CVD2D)
itkImageFunctionIVF22CVD2D.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetInputImage, None, itkImageFunctionIVF22CVD2D)
itkImageFunctionIVF22CVD2D.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_EvaluateAtIndex, None, itkImageFunctionIVF22CVD2D)
itkImageFunctionIVF22CVD2D.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_EvaluateAtContinuousIndex, None, itkImageFunctionIVF22CVD2D)
itkImageFunctionIVF22CVD2D.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_IsInsideBuffer, None, itkImageFunctionIVF22CVD2D)
itkImageFunctionIVF22CVD2D.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_ConvertPointToNearestIndex, None, itkImageFunctionIVF22CVD2D)
itkImageFunctionIVF22CVD2D.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_ConvertPointToContinuousIndex, None, itkImageFunctionIVF22CVD2D)
itkImageFunctionIVF22CVD2D.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIVF22CVD2D)
itkImageFunctionIVF22CVD2D.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetStartIndex, None, itkImageFunctionIVF22CVD2D)
itkImageFunctionIVF22CVD2D.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetEndIndex, None, itkImageFunctionIVF22CVD2D)
itkImageFunctionIVF22CVD2D.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetStartContinuousIndex, None, itkImageFunctionIVF22CVD2D)
itkImageFunctionIVF22CVD2D.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetEndContinuousIndex, None, itkImageFunctionIVF22CVD2D)
itkImageFunctionIVF22CVD2D_swigregister = _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_swigregister
itkImageFunctionIVF22CVD2D_swigregister(itkImageFunctionIVF22CVD2D)

def itkImageFunctionIVF22CVD2D_cast(obj: 'itkLightObject') -> "itkImageFunctionIVF22CVD2D *":
    """itkImageFunctionIVF22CVD2D_cast(itkLightObject obj) -> itkImageFunctionIVF22CVD2D"""
    return _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_cast(obj)

class itkImageFunctionIVF22DD(itkFunctionBasePython.itkFunctionBasePD2D):
    """Proxy of C++ itkImageFunctionIVF22DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageVF22') -> "void":
        """SetInputImage(itkImageFunctionIVF22DD self, itkImageVF22 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageVF22 const *":
        """GetInputImage(itkImageFunctionIVF22DD self) -> itkImageVF22"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "double":
        """EvaluateAtIndex(itkImageFunctionIVF22DD self, itkIndex2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIVF22DD self, itkContinuousIndexD2 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIVF22DD self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionIVF22DD self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionIVF22DD self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIVF22DD self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIVF22DD self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIVF22DD self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionIVF22DD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionIVF22DD self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionIVF22DD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionIVF22DD self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIVF22DD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIVF22DD *":
        """cast(itkLightObject obj) -> itkImageFunctionIVF22DD"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF22DD

        Create a new object of the class itkImageFunctionIVF22DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIVF22DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIVF22DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF22DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIVF22DD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_SetInputImage, None, itkImageFunctionIVF22DD)
itkImageFunctionIVF22DD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetInputImage, None, itkImageFunctionIVF22DD)
itkImageFunctionIVF22DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_EvaluateAtIndex, None, itkImageFunctionIVF22DD)
itkImageFunctionIVF22DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_EvaluateAtContinuousIndex, None, itkImageFunctionIVF22DD)
itkImageFunctionIVF22DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_IsInsideBuffer, None, itkImageFunctionIVF22DD)
itkImageFunctionIVF22DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_ConvertPointToNearestIndex, None, itkImageFunctionIVF22DD)
itkImageFunctionIVF22DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_ConvertPointToContinuousIndex, None, itkImageFunctionIVF22DD)
itkImageFunctionIVF22DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIVF22DD)
itkImageFunctionIVF22DD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetStartIndex, None, itkImageFunctionIVF22DD)
itkImageFunctionIVF22DD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetEndIndex, None, itkImageFunctionIVF22DD)
itkImageFunctionIVF22DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetStartContinuousIndex, None, itkImageFunctionIVF22DD)
itkImageFunctionIVF22DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetEndContinuousIndex, None, itkImageFunctionIVF22DD)
itkImageFunctionIVF22DD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIVF22DD_swigregister
itkImageFunctionIVF22DD_swigregister(itkImageFunctionIVF22DD)

def itkImageFunctionIVF22DD_cast(obj: 'itkLightObject') -> "itkImageFunctionIVF22DD *":
    """itkImageFunctionIVF22DD_cast(itkLightObject obj) -> itkImageFunctionIVF22DD"""
    return _itkImageFunctionBasePython.itkImageFunctionIVF22DD_cast(obj)

class itkImageFunctionIVF22VD2D(itkFunctionBasePython.itkFunctionBasePD2VD2):
    """Proxy of C++ itkImageFunctionIVF22VD2D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageVF22') -> "void":
        """SetInputImage(itkImageFunctionIVF22VD2D self, itkImageVF22 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageVF22 const *":
        """GetInputImage(itkImageFunctionIVF22VD2D self) -> itkImageVF22"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex2') -> "itkVectorD2":
        """EvaluateAtIndex(itkImageFunctionIVF22VD2D self, itkIndex2 index) -> itkVectorD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD2') -> "itkVectorD2":
        """EvaluateAtContinuousIndex(itkImageFunctionIVF22VD2D self, itkContinuousIndexD2 index) -> itkVectorD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIVF22VD2D self, itkIndex2 index) -> bool
        IsInsideBuffer(itkImageFunctionIVF22VD2D self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(itkImageFunctionIVF22VD2D self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD2', index: 'itkIndex2') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIVF22VD2D self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD2', cindex: 'itkContinuousIndexD2') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIVF22VD2D self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD2', index: 'itkIndex2') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIVF22VD2D self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex2 const &":
        """GetStartIndex(itkImageFunctionIVF22VD2D self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex2 const &":
        """GetEndIndex(itkImageFunctionIVF22VD2D self) -> itkIndex2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetStartContinuousIndex(itkImageFunctionIVF22VD2D self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD2 const &":
        """GetEndContinuousIndex(itkImageFunctionIVF22VD2D self) -> itkContinuousIndexD2"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIVF22VD2D

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIVF22VD2D *":
        """cast(itkLightObject obj) -> itkImageFunctionIVF22VD2D"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF22VD2D

        Create a new object of the class itkImageFunctionIVF22VD2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIVF22VD2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIVF22VD2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF22VD2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIVF22VD2D.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_SetInputImage, None, itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetInputImage, None, itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_EvaluateAtIndex, None, itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_EvaluateAtContinuousIndex, None, itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_IsInsideBuffer, None, itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_ConvertPointToNearestIndex, None, itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_ConvertPointToContinuousIndex, None, itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetStartIndex, None, itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetEndIndex, None, itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetStartContinuousIndex, None, itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetEndContinuousIndex, None, itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D_swigregister = _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_swigregister
itkImageFunctionIVF22VD2D_swigregister(itkImageFunctionIVF22VD2D)

def itkImageFunctionIVF22VD2D_cast(obj: 'itkLightObject') -> "itkImageFunctionIVF22VD2D *":
    """itkImageFunctionIVF22VD2D_cast(itkLightObject obj) -> itkImageFunctionIVF22VD2D"""
    return _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_cast(obj)

class itkImageFunctionIVF33CVD3D(itkFunctionBasePython.itkFunctionBasePD3CVD3):
    """Proxy of C++ itkImageFunctionIVF33CVD3D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageVF33') -> "void":
        """SetInputImage(itkImageFunctionIVF33CVD3D self, itkImageVF33 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageVF33 const *":
        """GetInputImage(itkImageFunctionIVF33CVD3D self) -> itkImageVF33"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "itkCovariantVectorD3":
        """EvaluateAtIndex(itkImageFunctionIVF33CVD3D self, itkIndex3 index) -> itkCovariantVectorD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "itkCovariantVectorD3":
        """EvaluateAtContinuousIndex(itkImageFunctionIVF33CVD3D self, itkContinuousIndexD3 index) -> itkCovariantVectorD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIVF33CVD3D self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionIVF33CVD3D self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionIVF33CVD3D self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIVF33CVD3D self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIVF33CVD3D self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIVF33CVD3D self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionIVF33CVD3D self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionIVF33CVD3D self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionIVF33CVD3D self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionIVF33CVD3D self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIVF33CVD3D

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIVF33CVD3D *":
        """cast(itkLightObject obj) -> itkImageFunctionIVF33CVD3D"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF33CVD3D

        Create a new object of the class itkImageFunctionIVF33CVD3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIVF33CVD3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIVF33CVD3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF33CVD3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIVF33CVD3D.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_SetInputImage, None, itkImageFunctionIVF33CVD3D)
itkImageFunctionIVF33CVD3D.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetInputImage, None, itkImageFunctionIVF33CVD3D)
itkImageFunctionIVF33CVD3D.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_EvaluateAtIndex, None, itkImageFunctionIVF33CVD3D)
itkImageFunctionIVF33CVD3D.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_EvaluateAtContinuousIndex, None, itkImageFunctionIVF33CVD3D)
itkImageFunctionIVF33CVD3D.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_IsInsideBuffer, None, itkImageFunctionIVF33CVD3D)
itkImageFunctionIVF33CVD3D.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_ConvertPointToNearestIndex, None, itkImageFunctionIVF33CVD3D)
itkImageFunctionIVF33CVD3D.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_ConvertPointToContinuousIndex, None, itkImageFunctionIVF33CVD3D)
itkImageFunctionIVF33CVD3D.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIVF33CVD3D)
itkImageFunctionIVF33CVD3D.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetStartIndex, None, itkImageFunctionIVF33CVD3D)
itkImageFunctionIVF33CVD3D.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetEndIndex, None, itkImageFunctionIVF33CVD3D)
itkImageFunctionIVF33CVD3D.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetStartContinuousIndex, None, itkImageFunctionIVF33CVD3D)
itkImageFunctionIVF33CVD3D.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetEndContinuousIndex, None, itkImageFunctionIVF33CVD3D)
itkImageFunctionIVF33CVD3D_swigregister = _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_swigregister
itkImageFunctionIVF33CVD3D_swigregister(itkImageFunctionIVF33CVD3D)

def itkImageFunctionIVF33CVD3D_cast(obj: 'itkLightObject') -> "itkImageFunctionIVF33CVD3D *":
    """itkImageFunctionIVF33CVD3D_cast(itkLightObject obj) -> itkImageFunctionIVF33CVD3D"""
    return _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_cast(obj)

class itkImageFunctionIVF33DD(itkFunctionBasePython.itkFunctionBasePD3D):
    """Proxy of C++ itkImageFunctionIVF33DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageVF33') -> "void":
        """SetInputImage(itkImageFunctionIVF33DD self, itkImageVF33 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageVF33 const *":
        """GetInputImage(itkImageFunctionIVF33DD self) -> itkImageVF33"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "double":
        """EvaluateAtIndex(itkImageFunctionIVF33DD self, itkIndex3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "double":
        """EvaluateAtContinuousIndex(itkImageFunctionIVF33DD self, itkContinuousIndexD3 index) -> double"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIVF33DD self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionIVF33DD self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionIVF33DD self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIVF33DD self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIVF33DD self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIVF33DD self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionIVF33DD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionIVF33DD self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionIVF33DD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionIVF33DD self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIVF33DD

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIVF33DD *":
        """cast(itkLightObject obj) -> itkImageFunctionIVF33DD"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF33DD

        Create a new object of the class itkImageFunctionIVF33DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIVF33DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIVF33DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF33DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIVF33DD.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_SetInputImage, None, itkImageFunctionIVF33DD)
itkImageFunctionIVF33DD.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetInputImage, None, itkImageFunctionIVF33DD)
itkImageFunctionIVF33DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_EvaluateAtIndex, None, itkImageFunctionIVF33DD)
itkImageFunctionIVF33DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_EvaluateAtContinuousIndex, None, itkImageFunctionIVF33DD)
itkImageFunctionIVF33DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_IsInsideBuffer, None, itkImageFunctionIVF33DD)
itkImageFunctionIVF33DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_ConvertPointToNearestIndex, None, itkImageFunctionIVF33DD)
itkImageFunctionIVF33DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_ConvertPointToContinuousIndex, None, itkImageFunctionIVF33DD)
itkImageFunctionIVF33DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIVF33DD)
itkImageFunctionIVF33DD.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetStartIndex, None, itkImageFunctionIVF33DD)
itkImageFunctionIVF33DD.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetEndIndex, None, itkImageFunctionIVF33DD)
itkImageFunctionIVF33DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetStartContinuousIndex, None, itkImageFunctionIVF33DD)
itkImageFunctionIVF33DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetEndContinuousIndex, None, itkImageFunctionIVF33DD)
itkImageFunctionIVF33DD_swigregister = _itkImageFunctionBasePython.itkImageFunctionIVF33DD_swigregister
itkImageFunctionIVF33DD_swigregister(itkImageFunctionIVF33DD)

def itkImageFunctionIVF33DD_cast(obj: 'itkLightObject') -> "itkImageFunctionIVF33DD *":
    """itkImageFunctionIVF33DD_cast(itkLightObject obj) -> itkImageFunctionIVF33DD"""
    return _itkImageFunctionBasePython.itkImageFunctionIVF33DD_cast(obj)

class itkImageFunctionIVF33VD3D(itkFunctionBasePython.itkFunctionBasePD3VD3):
    """Proxy of C++ itkImageFunctionIVF33VD3D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetInputImage(self, ptr: 'itkImageVF33') -> "void":
        """SetInputImage(itkImageFunctionIVF33VD3D self, itkImageVF33 ptr)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_SetInputImage(self, ptr)


    def GetInputImage(self) -> "itkImageVF33 const *":
        """GetInputImage(itkImageFunctionIVF33VD3D self) -> itkImageVF33"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetInputImage(self)


    def EvaluateAtIndex(self, index: 'itkIndex3') -> "itkVectorD3":
        """EvaluateAtIndex(itkImageFunctionIVF33VD3D self, itkIndex3 index) -> itkVectorD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_EvaluateAtIndex(self, index)


    def EvaluateAtContinuousIndex(self, index: 'itkContinuousIndexD3') -> "itkVectorD3":
        """EvaluateAtContinuousIndex(itkImageFunctionIVF33VD3D self, itkContinuousIndexD3 index) -> itkVectorD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_EvaluateAtContinuousIndex(self, index)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkImageFunctionIVF33VD3D self, itkIndex3 index) -> bool
        IsInsideBuffer(itkImageFunctionIVF33VD3D self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(itkImageFunctionIVF33VD3D self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_IsInsideBuffer(self, *args)


    def ConvertPointToNearestIndex(self, point: 'itkPointD3', index: 'itkIndex3') -> "void":
        """ConvertPointToNearestIndex(itkImageFunctionIVF33VD3D self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_ConvertPointToNearestIndex(self, point, index)


    def ConvertPointToContinuousIndex(self, point: 'itkPointD3', cindex: 'itkContinuousIndexD3') -> "void":
        """ConvertPointToContinuousIndex(itkImageFunctionIVF33VD3D self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_ConvertPointToContinuousIndex(self, point, cindex)


    def ConvertContinuousIndexToNearestIndex(self, cindex: 'itkContinuousIndexD3', index: 'itkIndex3') -> "void":
        """ConvertContinuousIndexToNearestIndex(itkImageFunctionIVF33VD3D self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_ConvertContinuousIndexToNearestIndex(self, cindex, index)


    def GetStartIndex(self) -> "itkIndex3 const &":
        """GetStartIndex(itkImageFunctionIVF33VD3D self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetStartIndex(self)


    def GetEndIndex(self) -> "itkIndex3 const &":
        """GetEndIndex(itkImageFunctionIVF33VD3D self) -> itkIndex3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetEndIndex(self)


    def GetStartContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetStartContinuousIndex(itkImageFunctionIVF33VD3D self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetStartContinuousIndex(self)


    def GetEndContinuousIndex(self) -> "itkContinuousIndexD3 const &":
        """GetEndContinuousIndex(itkImageFunctionIVF33VD3D self) -> itkContinuousIndexD3"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIVF33VD3D

    def cast(obj: 'itkLightObject') -> "itkImageFunctionIVF33VD3D *":
        """cast(itkLightObject obj) -> itkImageFunctionIVF33VD3D"""
        return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF33VD3D

        Create a new object of the class itkImageFunctionIVF33VD3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIVF33VD3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIVF33VD3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF33VD3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIVF33VD3D.SetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_SetInputImage, None, itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.GetInputImage = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetInputImage, None, itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.EvaluateAtIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_EvaluateAtIndex, None, itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_EvaluateAtContinuousIndex, None, itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.IsInsideBuffer = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_IsInsideBuffer, None, itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_ConvertPointToNearestIndex, None, itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_ConvertPointToContinuousIndex, None, itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_ConvertContinuousIndexToNearestIndex, None, itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.GetStartIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetStartIndex, None, itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.GetEndIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetEndIndex, None, itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetStartContinuousIndex, None, itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetEndContinuousIndex, None, itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D_swigregister = _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_swigregister
itkImageFunctionIVF33VD3D_swigregister(itkImageFunctionIVF33VD3D)

def itkImageFunctionIVF33VD3D_cast(obj: 'itkLightObject') -> "itkImageFunctionIVF33VD3D *":
    """itkImageFunctionIVF33VD3D_cast(itkLightObject obj) -> itkImageFunctionIVF33VD3D"""
    return _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_cast(obj)



