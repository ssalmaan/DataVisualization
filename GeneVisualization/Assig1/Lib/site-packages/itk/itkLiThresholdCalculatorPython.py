# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkLiThresholdCalculatorPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkLiThresholdCalculatorPython', [dirname(__file__)])
        except ImportError:
            import _itkLiThresholdCalculatorPython
            return _itkLiThresholdCalculatorPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkLiThresholdCalculatorPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkLiThresholdCalculatorPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkLiThresholdCalculatorPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramThresholdCalculatorPython
import itkHistogramPython
import itkSamplePython
import ITKCommonBasePython
import pyBasePython
import itkArrayPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkSimpleDataObjectDecoratorPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkCovariantVectorPython

def itkLiThresholdCalculatorHFF_New():
  return itkLiThresholdCalculatorHFF.New()


def itkLiThresholdCalculatorHDF_New():
  return itkLiThresholdCalculatorHDF.New()


def itkLiThresholdCalculatorHFUS_New():
  return itkLiThresholdCalculatorHFUS.New()


def itkLiThresholdCalculatorHDUS_New():
  return itkLiThresholdCalculatorHDUS.New()


def itkLiThresholdCalculatorHFUC_New():
  return itkLiThresholdCalculatorHFUC.New()


def itkLiThresholdCalculatorHDUC_New():
  return itkLiThresholdCalculatorHDUC.New()


def itkLiThresholdCalculatorHFSS_New():
  return itkLiThresholdCalculatorHFSS.New()


def itkLiThresholdCalculatorHDSS_New():
  return itkLiThresholdCalculatorHDSS.New()

class itkLiThresholdCalculatorHDF(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDF):
    """Proxy of C++ itkLiThresholdCalculatorHDF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLiThresholdCalculatorHDF_Pointer":
        """__New_orig__() -> itkLiThresholdCalculatorHDF_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLiThresholdCalculatorHDF_Pointer":
        """Clone(itkLiThresholdCalculatorHDF self) -> itkLiThresholdCalculatorHDF_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDF_Clone(self)

    __swig_destroy__ = _itkLiThresholdCalculatorPython.delete_itkLiThresholdCalculatorHDF

    def cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHDF *":
        """cast(itkLightObject obj) -> itkLiThresholdCalculatorHDF"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdCalculatorHDF

        Create a new object of the class itkLiThresholdCalculatorHDF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdCalculatorHDF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLiThresholdCalculatorHDF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLiThresholdCalculatorHDF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLiThresholdCalculatorHDF.Clone = new_instancemethod(_itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDF_Clone, None, itkLiThresholdCalculatorHDF)
itkLiThresholdCalculatorHDF_swigregister = _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDF_swigregister
itkLiThresholdCalculatorHDF_swigregister(itkLiThresholdCalculatorHDF)

def itkLiThresholdCalculatorHDF___New_orig__() -> "itkLiThresholdCalculatorHDF_Pointer":
    """itkLiThresholdCalculatorHDF___New_orig__() -> itkLiThresholdCalculatorHDF_Pointer"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDF___New_orig__()

def itkLiThresholdCalculatorHDF_cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHDF *":
    """itkLiThresholdCalculatorHDF_cast(itkLightObject obj) -> itkLiThresholdCalculatorHDF"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDF_cast(obj)

class itkLiThresholdCalculatorHDSS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDSS):
    """Proxy of C++ itkLiThresholdCalculatorHDSS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLiThresholdCalculatorHDSS_Pointer":
        """__New_orig__() -> itkLiThresholdCalculatorHDSS_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDSS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLiThresholdCalculatorHDSS_Pointer":
        """Clone(itkLiThresholdCalculatorHDSS self) -> itkLiThresholdCalculatorHDSS_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDSS_Clone(self)

    __swig_destroy__ = _itkLiThresholdCalculatorPython.delete_itkLiThresholdCalculatorHDSS

    def cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHDSS *":
        """cast(itkLightObject obj) -> itkLiThresholdCalculatorHDSS"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDSS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdCalculatorHDSS

        Create a new object of the class itkLiThresholdCalculatorHDSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdCalculatorHDSS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLiThresholdCalculatorHDSS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLiThresholdCalculatorHDSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLiThresholdCalculatorHDSS.Clone = new_instancemethod(_itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDSS_Clone, None, itkLiThresholdCalculatorHDSS)
itkLiThresholdCalculatorHDSS_swigregister = _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDSS_swigregister
itkLiThresholdCalculatorHDSS_swigregister(itkLiThresholdCalculatorHDSS)

def itkLiThresholdCalculatorHDSS___New_orig__() -> "itkLiThresholdCalculatorHDSS_Pointer":
    """itkLiThresholdCalculatorHDSS___New_orig__() -> itkLiThresholdCalculatorHDSS_Pointer"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDSS___New_orig__()

def itkLiThresholdCalculatorHDSS_cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHDSS *":
    """itkLiThresholdCalculatorHDSS_cast(itkLightObject obj) -> itkLiThresholdCalculatorHDSS"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDSS_cast(obj)

class itkLiThresholdCalculatorHDUC(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUC):
    """Proxy of C++ itkLiThresholdCalculatorHDUC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLiThresholdCalculatorHDUC_Pointer":
        """__New_orig__() -> itkLiThresholdCalculatorHDUC_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLiThresholdCalculatorHDUC_Pointer":
        """Clone(itkLiThresholdCalculatorHDUC self) -> itkLiThresholdCalculatorHDUC_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUC_Clone(self)

    __swig_destroy__ = _itkLiThresholdCalculatorPython.delete_itkLiThresholdCalculatorHDUC

    def cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHDUC *":
        """cast(itkLightObject obj) -> itkLiThresholdCalculatorHDUC"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdCalculatorHDUC

        Create a new object of the class itkLiThresholdCalculatorHDUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdCalculatorHDUC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLiThresholdCalculatorHDUC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLiThresholdCalculatorHDUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLiThresholdCalculatorHDUC.Clone = new_instancemethod(_itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUC_Clone, None, itkLiThresholdCalculatorHDUC)
itkLiThresholdCalculatorHDUC_swigregister = _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUC_swigregister
itkLiThresholdCalculatorHDUC_swigregister(itkLiThresholdCalculatorHDUC)

def itkLiThresholdCalculatorHDUC___New_orig__() -> "itkLiThresholdCalculatorHDUC_Pointer":
    """itkLiThresholdCalculatorHDUC___New_orig__() -> itkLiThresholdCalculatorHDUC_Pointer"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUC___New_orig__()

def itkLiThresholdCalculatorHDUC_cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHDUC *":
    """itkLiThresholdCalculatorHDUC_cast(itkLightObject obj) -> itkLiThresholdCalculatorHDUC"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUC_cast(obj)

class itkLiThresholdCalculatorHDUS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUS):
    """Proxy of C++ itkLiThresholdCalculatorHDUS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLiThresholdCalculatorHDUS_Pointer":
        """__New_orig__() -> itkLiThresholdCalculatorHDUS_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLiThresholdCalculatorHDUS_Pointer":
        """Clone(itkLiThresholdCalculatorHDUS self) -> itkLiThresholdCalculatorHDUS_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUS_Clone(self)

    __swig_destroy__ = _itkLiThresholdCalculatorPython.delete_itkLiThresholdCalculatorHDUS

    def cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHDUS *":
        """cast(itkLightObject obj) -> itkLiThresholdCalculatorHDUS"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdCalculatorHDUS

        Create a new object of the class itkLiThresholdCalculatorHDUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdCalculatorHDUS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLiThresholdCalculatorHDUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLiThresholdCalculatorHDUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLiThresholdCalculatorHDUS.Clone = new_instancemethod(_itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUS_Clone, None, itkLiThresholdCalculatorHDUS)
itkLiThresholdCalculatorHDUS_swigregister = _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUS_swigregister
itkLiThresholdCalculatorHDUS_swigregister(itkLiThresholdCalculatorHDUS)

def itkLiThresholdCalculatorHDUS___New_orig__() -> "itkLiThresholdCalculatorHDUS_Pointer":
    """itkLiThresholdCalculatorHDUS___New_orig__() -> itkLiThresholdCalculatorHDUS_Pointer"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUS___New_orig__()

def itkLiThresholdCalculatorHDUS_cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHDUS *":
    """itkLiThresholdCalculatorHDUS_cast(itkLightObject obj) -> itkLiThresholdCalculatorHDUS"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHDUS_cast(obj)

class itkLiThresholdCalculatorHFF(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFF):
    """Proxy of C++ itkLiThresholdCalculatorHFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLiThresholdCalculatorHFF_Pointer":
        """__New_orig__() -> itkLiThresholdCalculatorHFF_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLiThresholdCalculatorHFF_Pointer":
        """Clone(itkLiThresholdCalculatorHFF self) -> itkLiThresholdCalculatorHFF_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFF_Clone(self)

    __swig_destroy__ = _itkLiThresholdCalculatorPython.delete_itkLiThresholdCalculatorHFF

    def cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHFF *":
        """cast(itkLightObject obj) -> itkLiThresholdCalculatorHFF"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdCalculatorHFF

        Create a new object of the class itkLiThresholdCalculatorHFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdCalculatorHFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLiThresholdCalculatorHFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLiThresholdCalculatorHFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLiThresholdCalculatorHFF.Clone = new_instancemethod(_itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFF_Clone, None, itkLiThresholdCalculatorHFF)
itkLiThresholdCalculatorHFF_swigregister = _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFF_swigregister
itkLiThresholdCalculatorHFF_swigregister(itkLiThresholdCalculatorHFF)

def itkLiThresholdCalculatorHFF___New_orig__() -> "itkLiThresholdCalculatorHFF_Pointer":
    """itkLiThresholdCalculatorHFF___New_orig__() -> itkLiThresholdCalculatorHFF_Pointer"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFF___New_orig__()

def itkLiThresholdCalculatorHFF_cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHFF *":
    """itkLiThresholdCalculatorHFF_cast(itkLightObject obj) -> itkLiThresholdCalculatorHFF"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFF_cast(obj)

class itkLiThresholdCalculatorHFSS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFSS):
    """Proxy of C++ itkLiThresholdCalculatorHFSS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLiThresholdCalculatorHFSS_Pointer":
        """__New_orig__() -> itkLiThresholdCalculatorHFSS_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFSS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLiThresholdCalculatorHFSS_Pointer":
        """Clone(itkLiThresholdCalculatorHFSS self) -> itkLiThresholdCalculatorHFSS_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFSS_Clone(self)

    __swig_destroy__ = _itkLiThresholdCalculatorPython.delete_itkLiThresholdCalculatorHFSS

    def cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHFSS *":
        """cast(itkLightObject obj) -> itkLiThresholdCalculatorHFSS"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFSS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdCalculatorHFSS

        Create a new object of the class itkLiThresholdCalculatorHFSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdCalculatorHFSS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLiThresholdCalculatorHFSS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLiThresholdCalculatorHFSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLiThresholdCalculatorHFSS.Clone = new_instancemethod(_itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFSS_Clone, None, itkLiThresholdCalculatorHFSS)
itkLiThresholdCalculatorHFSS_swigregister = _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFSS_swigregister
itkLiThresholdCalculatorHFSS_swigregister(itkLiThresholdCalculatorHFSS)

def itkLiThresholdCalculatorHFSS___New_orig__() -> "itkLiThresholdCalculatorHFSS_Pointer":
    """itkLiThresholdCalculatorHFSS___New_orig__() -> itkLiThresholdCalculatorHFSS_Pointer"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFSS___New_orig__()

def itkLiThresholdCalculatorHFSS_cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHFSS *":
    """itkLiThresholdCalculatorHFSS_cast(itkLightObject obj) -> itkLiThresholdCalculatorHFSS"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFSS_cast(obj)

class itkLiThresholdCalculatorHFUC(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUC):
    """Proxy of C++ itkLiThresholdCalculatorHFUC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLiThresholdCalculatorHFUC_Pointer":
        """__New_orig__() -> itkLiThresholdCalculatorHFUC_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLiThresholdCalculatorHFUC_Pointer":
        """Clone(itkLiThresholdCalculatorHFUC self) -> itkLiThresholdCalculatorHFUC_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUC_Clone(self)

    __swig_destroy__ = _itkLiThresholdCalculatorPython.delete_itkLiThresholdCalculatorHFUC

    def cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHFUC *":
        """cast(itkLightObject obj) -> itkLiThresholdCalculatorHFUC"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdCalculatorHFUC

        Create a new object of the class itkLiThresholdCalculatorHFUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdCalculatorHFUC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLiThresholdCalculatorHFUC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLiThresholdCalculatorHFUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLiThresholdCalculatorHFUC.Clone = new_instancemethod(_itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUC_Clone, None, itkLiThresholdCalculatorHFUC)
itkLiThresholdCalculatorHFUC_swigregister = _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUC_swigregister
itkLiThresholdCalculatorHFUC_swigregister(itkLiThresholdCalculatorHFUC)

def itkLiThresholdCalculatorHFUC___New_orig__() -> "itkLiThresholdCalculatorHFUC_Pointer":
    """itkLiThresholdCalculatorHFUC___New_orig__() -> itkLiThresholdCalculatorHFUC_Pointer"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUC___New_orig__()

def itkLiThresholdCalculatorHFUC_cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHFUC *":
    """itkLiThresholdCalculatorHFUC_cast(itkLightObject obj) -> itkLiThresholdCalculatorHFUC"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUC_cast(obj)

class itkLiThresholdCalculatorHFUS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUS):
    """Proxy of C++ itkLiThresholdCalculatorHFUS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLiThresholdCalculatorHFUS_Pointer":
        """__New_orig__() -> itkLiThresholdCalculatorHFUS_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLiThresholdCalculatorHFUS_Pointer":
        """Clone(itkLiThresholdCalculatorHFUS self) -> itkLiThresholdCalculatorHFUS_Pointer"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUS_Clone(self)

    __swig_destroy__ = _itkLiThresholdCalculatorPython.delete_itkLiThresholdCalculatorHFUS

    def cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHFUS *":
        """cast(itkLightObject obj) -> itkLiThresholdCalculatorHFUS"""
        return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdCalculatorHFUS

        Create a new object of the class itkLiThresholdCalculatorHFUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdCalculatorHFUS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLiThresholdCalculatorHFUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLiThresholdCalculatorHFUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLiThresholdCalculatorHFUS.Clone = new_instancemethod(_itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUS_Clone, None, itkLiThresholdCalculatorHFUS)
itkLiThresholdCalculatorHFUS_swigregister = _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUS_swigregister
itkLiThresholdCalculatorHFUS_swigregister(itkLiThresholdCalculatorHFUS)

def itkLiThresholdCalculatorHFUS___New_orig__() -> "itkLiThresholdCalculatorHFUS_Pointer":
    """itkLiThresholdCalculatorHFUS___New_orig__() -> itkLiThresholdCalculatorHFUS_Pointer"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUS___New_orig__()

def itkLiThresholdCalculatorHFUS_cast(obj: 'itkLightObject') -> "itkLiThresholdCalculatorHFUS *":
    """itkLiThresholdCalculatorHFUS_cast(itkLightObject obj) -> itkLiThresholdCalculatorHFUS"""
    return _itkLiThresholdCalculatorPython.itkLiThresholdCalculatorHFUS_cast(obj)


def li_threshold_calculator(*args, **kwargs):
    """Procedural interface for LiThresholdCalculator"""
    import itk
    instance = itk.LiThresholdCalculator.New(*args, **kwargs)
    return instance.__internal_call__()

def li_threshold_calculator_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.LiThresholdCalculator, itkTemplate.itkTemplate):
        li_threshold_calculator.__doc__ = itk.LiThresholdCalculator.values()[0].__doc__
    else:
        li_threshold_calculator.__doc__ = itk.LiThresholdCalculator.__doc__




