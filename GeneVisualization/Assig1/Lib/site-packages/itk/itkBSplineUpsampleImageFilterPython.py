# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkBSplineUpsampleImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkBSplineUpsampleImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkBSplineUpsampleImageFilterPython
            return _itkBSplineUpsampleImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkBSplineUpsampleImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkBSplineUpsampleImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkBSplineUpsampleImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkBSplineDownsampleImageFilterPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkBSplineUpsampleImageFilterIF3IF3_New():
  return itkBSplineUpsampleImageFilterIF3IF3.New()


def itkBSplineUpsampleImageFilterIF2IF2_New():
  return itkBSplineUpsampleImageFilterIF2IF2.New()


def itkBSplineUpsampleImageFilterIUS3IUS3_New():
  return itkBSplineUpsampleImageFilterIUS3IUS3.New()


def itkBSplineUpsampleImageFilterIUS2IUS2_New():
  return itkBSplineUpsampleImageFilterIUS2IUS2.New()


def itkBSplineUpsampleImageFilterIUC3IUC3_New():
  return itkBSplineUpsampleImageFilterIUC3IUC3.New()


def itkBSplineUpsampleImageFilterIUC2IUC2_New():
  return itkBSplineUpsampleImageFilterIUC2IUC2.New()


def itkBSplineUpsampleImageFilterISS3ISS3_New():
  return itkBSplineUpsampleImageFilterISS3ISS3.New()


def itkBSplineUpsampleImageFilterISS2ISS2_New():
  return itkBSplineUpsampleImageFilterISS2ISS2.New()

class itkBSplineUpsampleImageFilterIF2IF2(itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkBSplineUpsampleImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineUpsampleImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkBSplineUpsampleImageFilterIF2IF2_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineUpsampleImageFilterIF2IF2_Pointer":
        """Clone(itkBSplineUpsampleImageFilterIF2IF2 self) -> itkBSplineUpsampleImageFilterIF2IF2_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF2IF2_Clone(self)


    def GenerateOutputInformation(self) -> "void":
        """GenerateOutputInformation(itkBSplineUpsampleImageFilterIF2IF2 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF2IF2_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkBSplineUpsampleImageFilterIF2IF2 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF2IF2_GenerateInputRequestedRegion(self)

    DoubleConvertibleToOutputCheck = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBSplineUpsampleImageFilterPython.delete_itkBSplineUpsampleImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterIF2IF2"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineUpsampleImageFilterIF2IF2

        Create a new object of the class itkBSplineUpsampleImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineUpsampleImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineUpsampleImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineUpsampleImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineUpsampleImageFilterIF2IF2.Clone = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF2IF2_Clone, None, itkBSplineUpsampleImageFilterIF2IF2)
itkBSplineUpsampleImageFilterIF2IF2.GenerateOutputInformation = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF2IF2_GenerateOutputInformation, None, itkBSplineUpsampleImageFilterIF2IF2)
itkBSplineUpsampleImageFilterIF2IF2.GenerateInputRequestedRegion = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF2IF2_GenerateInputRequestedRegion, None, itkBSplineUpsampleImageFilterIF2IF2)
itkBSplineUpsampleImageFilterIF2IF2_swigregister = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF2IF2_swigregister
itkBSplineUpsampleImageFilterIF2IF2_swigregister(itkBSplineUpsampleImageFilterIF2IF2)

def itkBSplineUpsampleImageFilterIF2IF2___New_orig__() -> "itkBSplineUpsampleImageFilterIF2IF2_Pointer":
    """itkBSplineUpsampleImageFilterIF2IF2___New_orig__() -> itkBSplineUpsampleImageFilterIF2IF2_Pointer"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF2IF2___New_orig__()

def itkBSplineUpsampleImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterIF2IF2 *":
    """itkBSplineUpsampleImageFilterIF2IF2_cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterIF2IF2"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF2IF2_cast(obj)

class itkBSplineUpsampleImageFilterIF3IF3(itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkBSplineUpsampleImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineUpsampleImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkBSplineUpsampleImageFilterIF3IF3_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineUpsampleImageFilterIF3IF3_Pointer":
        """Clone(itkBSplineUpsampleImageFilterIF3IF3 self) -> itkBSplineUpsampleImageFilterIF3IF3_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF3IF3_Clone(self)


    def GenerateOutputInformation(self) -> "void":
        """GenerateOutputInformation(itkBSplineUpsampleImageFilterIF3IF3 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF3IF3_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkBSplineUpsampleImageFilterIF3IF3 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF3IF3_GenerateInputRequestedRegion(self)

    DoubleConvertibleToOutputCheck = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBSplineUpsampleImageFilterPython.delete_itkBSplineUpsampleImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterIF3IF3"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineUpsampleImageFilterIF3IF3

        Create a new object of the class itkBSplineUpsampleImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineUpsampleImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineUpsampleImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineUpsampleImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineUpsampleImageFilterIF3IF3.Clone = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF3IF3_Clone, None, itkBSplineUpsampleImageFilterIF3IF3)
itkBSplineUpsampleImageFilterIF3IF3.GenerateOutputInformation = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF3IF3_GenerateOutputInformation, None, itkBSplineUpsampleImageFilterIF3IF3)
itkBSplineUpsampleImageFilterIF3IF3.GenerateInputRequestedRegion = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF3IF3_GenerateInputRequestedRegion, None, itkBSplineUpsampleImageFilterIF3IF3)
itkBSplineUpsampleImageFilterIF3IF3_swigregister = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF3IF3_swigregister
itkBSplineUpsampleImageFilterIF3IF3_swigregister(itkBSplineUpsampleImageFilterIF3IF3)

def itkBSplineUpsampleImageFilterIF3IF3___New_orig__() -> "itkBSplineUpsampleImageFilterIF3IF3_Pointer":
    """itkBSplineUpsampleImageFilterIF3IF3___New_orig__() -> itkBSplineUpsampleImageFilterIF3IF3_Pointer"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF3IF3___New_orig__()

def itkBSplineUpsampleImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterIF3IF3 *":
    """itkBSplineUpsampleImageFilterIF3IF3_cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterIF3IF3"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIF3IF3_cast(obj)

class itkBSplineUpsampleImageFilterISS2ISS2(itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS2ISS2_Superclass):
    """Proxy of C++ itkBSplineUpsampleImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineUpsampleImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkBSplineUpsampleImageFilterISS2ISS2_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineUpsampleImageFilterISS2ISS2_Pointer":
        """Clone(itkBSplineUpsampleImageFilterISS2ISS2 self) -> itkBSplineUpsampleImageFilterISS2ISS2_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS2ISS2_Clone(self)


    def GenerateOutputInformation(self) -> "void":
        """GenerateOutputInformation(itkBSplineUpsampleImageFilterISS2ISS2 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS2ISS2_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkBSplineUpsampleImageFilterISS2ISS2 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS2ISS2_GenerateInputRequestedRegion(self)

    DoubleConvertibleToOutputCheck = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS2ISS2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBSplineUpsampleImageFilterPython.delete_itkBSplineUpsampleImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterISS2ISS2"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineUpsampleImageFilterISS2ISS2

        Create a new object of the class itkBSplineUpsampleImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineUpsampleImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineUpsampleImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineUpsampleImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineUpsampleImageFilterISS2ISS2.Clone = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS2ISS2_Clone, None, itkBSplineUpsampleImageFilterISS2ISS2)
itkBSplineUpsampleImageFilterISS2ISS2.GenerateOutputInformation = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS2ISS2_GenerateOutputInformation, None, itkBSplineUpsampleImageFilterISS2ISS2)
itkBSplineUpsampleImageFilterISS2ISS2.GenerateInputRequestedRegion = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS2ISS2_GenerateInputRequestedRegion, None, itkBSplineUpsampleImageFilterISS2ISS2)
itkBSplineUpsampleImageFilterISS2ISS2_swigregister = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS2ISS2_swigregister
itkBSplineUpsampleImageFilterISS2ISS2_swigregister(itkBSplineUpsampleImageFilterISS2ISS2)

def itkBSplineUpsampleImageFilterISS2ISS2___New_orig__() -> "itkBSplineUpsampleImageFilterISS2ISS2_Pointer":
    """itkBSplineUpsampleImageFilterISS2ISS2___New_orig__() -> itkBSplineUpsampleImageFilterISS2ISS2_Pointer"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS2ISS2___New_orig__()

def itkBSplineUpsampleImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterISS2ISS2 *":
    """itkBSplineUpsampleImageFilterISS2ISS2_cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterISS2ISS2"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS2ISS2_cast(obj)

class itkBSplineUpsampleImageFilterISS3ISS3(itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS3ISS3_Superclass):
    """Proxy of C++ itkBSplineUpsampleImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineUpsampleImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkBSplineUpsampleImageFilterISS3ISS3_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineUpsampleImageFilterISS3ISS3_Pointer":
        """Clone(itkBSplineUpsampleImageFilterISS3ISS3 self) -> itkBSplineUpsampleImageFilterISS3ISS3_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS3ISS3_Clone(self)


    def GenerateOutputInformation(self) -> "void":
        """GenerateOutputInformation(itkBSplineUpsampleImageFilterISS3ISS3 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS3ISS3_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkBSplineUpsampleImageFilterISS3ISS3 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS3ISS3_GenerateInputRequestedRegion(self)

    DoubleConvertibleToOutputCheck = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS3ISS3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBSplineUpsampleImageFilterPython.delete_itkBSplineUpsampleImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterISS3ISS3"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineUpsampleImageFilterISS3ISS3

        Create a new object of the class itkBSplineUpsampleImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineUpsampleImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineUpsampleImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineUpsampleImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineUpsampleImageFilterISS3ISS3.Clone = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS3ISS3_Clone, None, itkBSplineUpsampleImageFilterISS3ISS3)
itkBSplineUpsampleImageFilterISS3ISS3.GenerateOutputInformation = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS3ISS3_GenerateOutputInformation, None, itkBSplineUpsampleImageFilterISS3ISS3)
itkBSplineUpsampleImageFilterISS3ISS3.GenerateInputRequestedRegion = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS3ISS3_GenerateInputRequestedRegion, None, itkBSplineUpsampleImageFilterISS3ISS3)
itkBSplineUpsampleImageFilterISS3ISS3_swigregister = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS3ISS3_swigregister
itkBSplineUpsampleImageFilterISS3ISS3_swigregister(itkBSplineUpsampleImageFilterISS3ISS3)

def itkBSplineUpsampleImageFilterISS3ISS3___New_orig__() -> "itkBSplineUpsampleImageFilterISS3ISS3_Pointer":
    """itkBSplineUpsampleImageFilterISS3ISS3___New_orig__() -> itkBSplineUpsampleImageFilterISS3ISS3_Pointer"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS3ISS3___New_orig__()

def itkBSplineUpsampleImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterISS3ISS3 *":
    """itkBSplineUpsampleImageFilterISS3ISS3_cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterISS3ISS3"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterISS3ISS3_cast(obj)

class itkBSplineUpsampleImageFilterIUC2IUC2(itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkBSplineUpsampleImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineUpsampleImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkBSplineUpsampleImageFilterIUC2IUC2_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineUpsampleImageFilterIUC2IUC2_Pointer":
        """Clone(itkBSplineUpsampleImageFilterIUC2IUC2 self) -> itkBSplineUpsampleImageFilterIUC2IUC2_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC2IUC2_Clone(self)


    def GenerateOutputInformation(self) -> "void":
        """GenerateOutputInformation(itkBSplineUpsampleImageFilterIUC2IUC2 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC2IUC2_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkBSplineUpsampleImageFilterIUC2IUC2 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC2IUC2_GenerateInputRequestedRegion(self)

    DoubleConvertibleToOutputCheck = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC2IUC2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBSplineUpsampleImageFilterPython.delete_itkBSplineUpsampleImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterIUC2IUC2"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineUpsampleImageFilterIUC2IUC2

        Create a new object of the class itkBSplineUpsampleImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineUpsampleImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineUpsampleImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineUpsampleImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineUpsampleImageFilterIUC2IUC2.Clone = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC2IUC2_Clone, None, itkBSplineUpsampleImageFilterIUC2IUC2)
itkBSplineUpsampleImageFilterIUC2IUC2.GenerateOutputInformation = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC2IUC2_GenerateOutputInformation, None, itkBSplineUpsampleImageFilterIUC2IUC2)
itkBSplineUpsampleImageFilterIUC2IUC2.GenerateInputRequestedRegion = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC2IUC2_GenerateInputRequestedRegion, None, itkBSplineUpsampleImageFilterIUC2IUC2)
itkBSplineUpsampleImageFilterIUC2IUC2_swigregister = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC2IUC2_swigregister
itkBSplineUpsampleImageFilterIUC2IUC2_swigregister(itkBSplineUpsampleImageFilterIUC2IUC2)

def itkBSplineUpsampleImageFilterIUC2IUC2___New_orig__() -> "itkBSplineUpsampleImageFilterIUC2IUC2_Pointer":
    """itkBSplineUpsampleImageFilterIUC2IUC2___New_orig__() -> itkBSplineUpsampleImageFilterIUC2IUC2_Pointer"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC2IUC2___New_orig__()

def itkBSplineUpsampleImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterIUC2IUC2 *":
    """itkBSplineUpsampleImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterIUC2IUC2"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC2IUC2_cast(obj)

class itkBSplineUpsampleImageFilterIUC3IUC3(itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkBSplineUpsampleImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineUpsampleImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkBSplineUpsampleImageFilterIUC3IUC3_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineUpsampleImageFilterIUC3IUC3_Pointer":
        """Clone(itkBSplineUpsampleImageFilterIUC3IUC3 self) -> itkBSplineUpsampleImageFilterIUC3IUC3_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC3IUC3_Clone(self)


    def GenerateOutputInformation(self) -> "void":
        """GenerateOutputInformation(itkBSplineUpsampleImageFilterIUC3IUC3 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC3IUC3_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkBSplineUpsampleImageFilterIUC3IUC3 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC3IUC3_GenerateInputRequestedRegion(self)

    DoubleConvertibleToOutputCheck = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC3IUC3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBSplineUpsampleImageFilterPython.delete_itkBSplineUpsampleImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterIUC3IUC3"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineUpsampleImageFilterIUC3IUC3

        Create a new object of the class itkBSplineUpsampleImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineUpsampleImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineUpsampleImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineUpsampleImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineUpsampleImageFilterIUC3IUC3.Clone = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC3IUC3_Clone, None, itkBSplineUpsampleImageFilterIUC3IUC3)
itkBSplineUpsampleImageFilterIUC3IUC3.GenerateOutputInformation = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC3IUC3_GenerateOutputInformation, None, itkBSplineUpsampleImageFilterIUC3IUC3)
itkBSplineUpsampleImageFilterIUC3IUC3.GenerateInputRequestedRegion = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC3IUC3_GenerateInputRequestedRegion, None, itkBSplineUpsampleImageFilterIUC3IUC3)
itkBSplineUpsampleImageFilterIUC3IUC3_swigregister = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC3IUC3_swigregister
itkBSplineUpsampleImageFilterIUC3IUC3_swigregister(itkBSplineUpsampleImageFilterIUC3IUC3)

def itkBSplineUpsampleImageFilterIUC3IUC3___New_orig__() -> "itkBSplineUpsampleImageFilterIUC3IUC3_Pointer":
    """itkBSplineUpsampleImageFilterIUC3IUC3___New_orig__() -> itkBSplineUpsampleImageFilterIUC3IUC3_Pointer"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC3IUC3___New_orig__()

def itkBSplineUpsampleImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterIUC3IUC3 *":
    """itkBSplineUpsampleImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterIUC3IUC3"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUC3IUC3_cast(obj)

class itkBSplineUpsampleImageFilterIUS2IUS2(itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkBSplineUpsampleImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineUpsampleImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkBSplineUpsampleImageFilterIUS2IUS2_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineUpsampleImageFilterIUS2IUS2_Pointer":
        """Clone(itkBSplineUpsampleImageFilterIUS2IUS2 self) -> itkBSplineUpsampleImageFilterIUS2IUS2_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS2IUS2_Clone(self)


    def GenerateOutputInformation(self) -> "void":
        """GenerateOutputInformation(itkBSplineUpsampleImageFilterIUS2IUS2 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS2IUS2_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkBSplineUpsampleImageFilterIUS2IUS2 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS2IUS2_GenerateInputRequestedRegion(self)

    DoubleConvertibleToOutputCheck = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS2IUS2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBSplineUpsampleImageFilterPython.delete_itkBSplineUpsampleImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterIUS2IUS2"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineUpsampleImageFilterIUS2IUS2

        Create a new object of the class itkBSplineUpsampleImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineUpsampleImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineUpsampleImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineUpsampleImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineUpsampleImageFilterIUS2IUS2.Clone = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS2IUS2_Clone, None, itkBSplineUpsampleImageFilterIUS2IUS2)
itkBSplineUpsampleImageFilterIUS2IUS2.GenerateOutputInformation = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS2IUS2_GenerateOutputInformation, None, itkBSplineUpsampleImageFilterIUS2IUS2)
itkBSplineUpsampleImageFilterIUS2IUS2.GenerateInputRequestedRegion = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS2IUS2_GenerateInputRequestedRegion, None, itkBSplineUpsampleImageFilterIUS2IUS2)
itkBSplineUpsampleImageFilterIUS2IUS2_swigregister = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS2IUS2_swigregister
itkBSplineUpsampleImageFilterIUS2IUS2_swigregister(itkBSplineUpsampleImageFilterIUS2IUS2)

def itkBSplineUpsampleImageFilterIUS2IUS2___New_orig__() -> "itkBSplineUpsampleImageFilterIUS2IUS2_Pointer":
    """itkBSplineUpsampleImageFilterIUS2IUS2___New_orig__() -> itkBSplineUpsampleImageFilterIUS2IUS2_Pointer"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS2IUS2___New_orig__()

def itkBSplineUpsampleImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterIUS2IUS2 *":
    """itkBSplineUpsampleImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterIUS2IUS2"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS2IUS2_cast(obj)

class itkBSplineUpsampleImageFilterIUS3IUS3(itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkBSplineUpsampleImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineUpsampleImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkBSplineUpsampleImageFilterIUS3IUS3_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineUpsampleImageFilterIUS3IUS3_Pointer":
        """Clone(itkBSplineUpsampleImageFilterIUS3IUS3 self) -> itkBSplineUpsampleImageFilterIUS3IUS3_Pointer"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS3IUS3_Clone(self)


    def GenerateOutputInformation(self) -> "void":
        """GenerateOutputInformation(itkBSplineUpsampleImageFilterIUS3IUS3 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS3IUS3_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """GenerateInputRequestedRegion(itkBSplineUpsampleImageFilterIUS3IUS3 self)"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS3IUS3_GenerateInputRequestedRegion(self)

    DoubleConvertibleToOutputCheck = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS3IUS3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkBSplineUpsampleImageFilterPython.delete_itkBSplineUpsampleImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterIUS3IUS3"""
        return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineUpsampleImageFilterIUS3IUS3

        Create a new object of the class itkBSplineUpsampleImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineUpsampleImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineUpsampleImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineUpsampleImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineUpsampleImageFilterIUS3IUS3.Clone = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS3IUS3_Clone, None, itkBSplineUpsampleImageFilterIUS3IUS3)
itkBSplineUpsampleImageFilterIUS3IUS3.GenerateOutputInformation = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS3IUS3_GenerateOutputInformation, None, itkBSplineUpsampleImageFilterIUS3IUS3)
itkBSplineUpsampleImageFilterIUS3IUS3.GenerateInputRequestedRegion = new_instancemethod(_itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS3IUS3_GenerateInputRequestedRegion, None, itkBSplineUpsampleImageFilterIUS3IUS3)
itkBSplineUpsampleImageFilterIUS3IUS3_swigregister = _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS3IUS3_swigregister
itkBSplineUpsampleImageFilterIUS3IUS3_swigregister(itkBSplineUpsampleImageFilterIUS3IUS3)

def itkBSplineUpsampleImageFilterIUS3IUS3___New_orig__() -> "itkBSplineUpsampleImageFilterIUS3IUS3_Pointer":
    """itkBSplineUpsampleImageFilterIUS3IUS3___New_orig__() -> itkBSplineUpsampleImageFilterIUS3IUS3_Pointer"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS3IUS3___New_orig__()

def itkBSplineUpsampleImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkBSplineUpsampleImageFilterIUS3IUS3 *":
    """itkBSplineUpsampleImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkBSplineUpsampleImageFilterIUS3IUS3"""
    return _itkBSplineUpsampleImageFilterPython.itkBSplineUpsampleImageFilterIUS3IUS3_cast(obj)


def b_spline_upsample_image_filter(*args, **kwargs):
    """Procedural interface for BSplineUpsampleImageFilter"""
    import itk
    instance = itk.BSplineUpsampleImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def b_spline_upsample_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.BSplineUpsampleImageFilter, itkTemplate.itkTemplate):
        b_spline_upsample_image_filter.__doc__ = itk.BSplineUpsampleImageFilter.values()[0].__doc__
    else:
        b_spline_upsample_image_filter.__doc__ = itk.BSplineUpsampleImageFilter.__doc__




