# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkRayCastInterpolateImageFunctionPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkRayCastInterpolateImageFunctionPython', [dirname(__file__)])
        except ImportError:
            import _itkRayCastInterpolateImageFunctionPython
            return _itkRayCastInterpolateImageFunctionPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkRayCastInterpolateImageFunctionPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkRayCastInterpolateImageFunctionPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkRayCastInterpolateImageFunctionPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import pyBasePython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import ITKCommonBasePython
import itkTransformBasePython
import itkCovariantVectorPython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkDiffusionTensor3DPython
import itkContinuousIndexPython
import itkInterpolateImageFunctionPython
import itkImageFunctionBasePython
import itkFunctionBasePython
import itkImagePython
import itkImageRegionPython
import itkRGBPixelPython
import itkRGBAPixelPython

def itkRayCastInterpolateImageFunctionIF3F_New():
  return itkRayCastInterpolateImageFunctionIF3F.New()


def itkRayCastInterpolateImageFunctionIF3D_New():
  return itkRayCastInterpolateImageFunctionIF3D.New()


def itkRayCastInterpolateImageFunctionIUS3F_New():
  return itkRayCastInterpolateImageFunctionIUS3F.New()


def itkRayCastInterpolateImageFunctionIUS3D_New():
  return itkRayCastInterpolateImageFunctionIUS3D.New()


def itkRayCastInterpolateImageFunctionIUC3F_New():
  return itkRayCastInterpolateImageFunctionIUC3F.New()


def itkRayCastInterpolateImageFunctionIUC3D_New():
  return itkRayCastInterpolateImageFunctionIUC3D.New()


def itkRayCastInterpolateImageFunctionISS3F_New():
  return itkRayCastInterpolateImageFunctionISS3F.New()


def itkRayCastInterpolateImageFunctionISS3D_New():
  return itkRayCastInterpolateImageFunctionISS3D.New()

class itkRayCastInterpolateImageFunctionIF3D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3D):
    """Proxy of C++ itkRayCastInterpolateImageFunctionIF3D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRayCastInterpolateImageFunctionIF3D_Pointer":
        """__New_orig__() -> itkRayCastInterpolateImageFunctionIF3D_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRayCastInterpolateImageFunctionIF3D_Pointer":
        """Clone(itkRayCastInterpolateImageFunctionIF3D self) -> itkRayCastInterpolateImageFunctionIF3D_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_Clone(self)


    def SetTransform(self, _arg: 'itkTransformD33') -> "void":
        """SetTransform(itkRayCastInterpolateImageFunctionIF3D self, itkTransformD33 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_SetTransform(self, _arg)


    def GetModifiableTransform(self) -> "itkTransformD33 *":
        """GetModifiableTransform(itkRayCastInterpolateImageFunctionIF3D self) -> itkTransformD33"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_GetModifiableTransform(self)


    def GetTransform(self, *args) -> "itkTransformD33 *":
        """
        GetTransform(itkRayCastInterpolateImageFunctionIF3D self) -> itkTransformD33
        GetTransform(itkRayCastInterpolateImageFunctionIF3D self) -> itkTransformD33
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_GetTransform(self, *args)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIF3D') -> "void":
        """SetInterpolator(itkRayCastInterpolateImageFunctionIF3D self, itkInterpolateImageFunctionIF3D _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIF3D *":
        """GetModifiableInterpolator(itkRayCastInterpolateImageFunctionIF3D self) -> itkInterpolateImageFunctionIF3D"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIF3D *":
        """
        GetInterpolator(itkRayCastInterpolateImageFunctionIF3D self) -> itkInterpolateImageFunctionIF3D
        GetInterpolator(itkRayCastInterpolateImageFunctionIF3D self) -> itkInterpolateImageFunctionIF3D
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_GetInterpolator(self, *args)


    def SetFocalPoint(self, _arg: 'itkPointD3') -> "void":
        """SetFocalPoint(itkRayCastInterpolateImageFunctionIF3D self, itkPointD3 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_SetFocalPoint(self, _arg)


    def GetFocalPoint(self) -> "itkPointD3":
        """GetFocalPoint(itkRayCastInterpolateImageFunctionIF3D self) -> itkPointD3"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_GetFocalPoint(self)


    def SetThreshold(self, _arg: 'double const') -> "void":
        """SetThreshold(itkRayCastInterpolateImageFunctionIF3D self, double const _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_SetThreshold(self, _arg)


    def GetThreshold(self) -> "double":
        """GetThreshold(itkRayCastInterpolateImageFunctionIF3D self) -> double"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_GetThreshold(self)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIF3D self, itkPointD3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIF3D self, itkContinuousIndexD3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIF3D self, itkIndex3 arg0) -> bool
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_IsInsideBuffer(self, *args)

    __swig_destroy__ = _itkRayCastInterpolateImageFunctionPython.delete_itkRayCastInterpolateImageFunctionIF3D

    def cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionIF3D *":
        """cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionIF3D"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkRayCastInterpolateImageFunctionIF3D

        Create a new object of the class itkRayCastInterpolateImageFunctionIF3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRayCastInterpolateImageFunctionIF3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRayCastInterpolateImageFunctionIF3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRayCastInterpolateImageFunctionIF3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRayCastInterpolateImageFunctionIF3D.Clone = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_Clone, None, itkRayCastInterpolateImageFunctionIF3D)
itkRayCastInterpolateImageFunctionIF3D.SetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_SetTransform, None, itkRayCastInterpolateImageFunctionIF3D)
itkRayCastInterpolateImageFunctionIF3D.GetModifiableTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_GetModifiableTransform, None, itkRayCastInterpolateImageFunctionIF3D)
itkRayCastInterpolateImageFunctionIF3D.GetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_GetTransform, None, itkRayCastInterpolateImageFunctionIF3D)
itkRayCastInterpolateImageFunctionIF3D.SetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_SetInterpolator, None, itkRayCastInterpolateImageFunctionIF3D)
itkRayCastInterpolateImageFunctionIF3D.GetModifiableInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_GetModifiableInterpolator, None, itkRayCastInterpolateImageFunctionIF3D)
itkRayCastInterpolateImageFunctionIF3D.GetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_GetInterpolator, None, itkRayCastInterpolateImageFunctionIF3D)
itkRayCastInterpolateImageFunctionIF3D.SetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_SetFocalPoint, None, itkRayCastInterpolateImageFunctionIF3D)
itkRayCastInterpolateImageFunctionIF3D.GetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_GetFocalPoint, None, itkRayCastInterpolateImageFunctionIF3D)
itkRayCastInterpolateImageFunctionIF3D.SetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_SetThreshold, None, itkRayCastInterpolateImageFunctionIF3D)
itkRayCastInterpolateImageFunctionIF3D.GetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_GetThreshold, None, itkRayCastInterpolateImageFunctionIF3D)
itkRayCastInterpolateImageFunctionIF3D.IsInsideBuffer = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_IsInsideBuffer, None, itkRayCastInterpolateImageFunctionIF3D)
itkRayCastInterpolateImageFunctionIF3D_swigregister = _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_swigregister
itkRayCastInterpolateImageFunctionIF3D_swigregister(itkRayCastInterpolateImageFunctionIF3D)

def itkRayCastInterpolateImageFunctionIF3D___New_orig__() -> "itkRayCastInterpolateImageFunctionIF3D_Pointer":
    """itkRayCastInterpolateImageFunctionIF3D___New_orig__() -> itkRayCastInterpolateImageFunctionIF3D_Pointer"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D___New_orig__()

def itkRayCastInterpolateImageFunctionIF3D_cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionIF3D *":
    """itkRayCastInterpolateImageFunctionIF3D_cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionIF3D"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3D_cast(obj)

class itkRayCastInterpolateImageFunctionIF3F(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3F):
    """Proxy of C++ itkRayCastInterpolateImageFunctionIF3F class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRayCastInterpolateImageFunctionIF3F_Pointer":
        """__New_orig__() -> itkRayCastInterpolateImageFunctionIF3F_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRayCastInterpolateImageFunctionIF3F_Pointer":
        """Clone(itkRayCastInterpolateImageFunctionIF3F self) -> itkRayCastInterpolateImageFunctionIF3F_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_Clone(self)


    def SetTransform(self, _arg: 'itkTransformF33') -> "void":
        """SetTransform(itkRayCastInterpolateImageFunctionIF3F self, itkTransformF33 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_SetTransform(self, _arg)


    def GetModifiableTransform(self) -> "itkTransformF33 *":
        """GetModifiableTransform(itkRayCastInterpolateImageFunctionIF3F self) -> itkTransformF33"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_GetModifiableTransform(self)


    def GetTransform(self, *args) -> "itkTransformF33 *":
        """
        GetTransform(itkRayCastInterpolateImageFunctionIF3F self) -> itkTransformF33
        GetTransform(itkRayCastInterpolateImageFunctionIF3F self) -> itkTransformF33
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_GetTransform(self, *args)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIF3F') -> "void":
        """SetInterpolator(itkRayCastInterpolateImageFunctionIF3F self, itkInterpolateImageFunctionIF3F _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIF3F *":
        """GetModifiableInterpolator(itkRayCastInterpolateImageFunctionIF3F self) -> itkInterpolateImageFunctionIF3F"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIF3F *":
        """
        GetInterpolator(itkRayCastInterpolateImageFunctionIF3F self) -> itkInterpolateImageFunctionIF3F
        GetInterpolator(itkRayCastInterpolateImageFunctionIF3F self) -> itkInterpolateImageFunctionIF3F
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_GetInterpolator(self, *args)


    def SetFocalPoint(self, _arg: 'itkPointF3') -> "void":
        """SetFocalPoint(itkRayCastInterpolateImageFunctionIF3F self, itkPointF3 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_SetFocalPoint(self, _arg)


    def GetFocalPoint(self) -> "itkPointF3":
        """GetFocalPoint(itkRayCastInterpolateImageFunctionIF3F self) -> itkPointF3"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_GetFocalPoint(self)


    def SetThreshold(self, _arg: 'double const') -> "void":
        """SetThreshold(itkRayCastInterpolateImageFunctionIF3F self, double const _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_SetThreshold(self, _arg)


    def GetThreshold(self) -> "double":
        """GetThreshold(itkRayCastInterpolateImageFunctionIF3F self) -> double"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_GetThreshold(self)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIF3F self, itkPointF3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIF3F self, itkContinuousIndexF3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIF3F self, itkIndex3 arg0) -> bool
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_IsInsideBuffer(self, *args)

    __swig_destroy__ = _itkRayCastInterpolateImageFunctionPython.delete_itkRayCastInterpolateImageFunctionIF3F

    def cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionIF3F *":
        """cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionIF3F"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkRayCastInterpolateImageFunctionIF3F

        Create a new object of the class itkRayCastInterpolateImageFunctionIF3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRayCastInterpolateImageFunctionIF3F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRayCastInterpolateImageFunctionIF3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRayCastInterpolateImageFunctionIF3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRayCastInterpolateImageFunctionIF3F.Clone = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_Clone, None, itkRayCastInterpolateImageFunctionIF3F)
itkRayCastInterpolateImageFunctionIF3F.SetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_SetTransform, None, itkRayCastInterpolateImageFunctionIF3F)
itkRayCastInterpolateImageFunctionIF3F.GetModifiableTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_GetModifiableTransform, None, itkRayCastInterpolateImageFunctionIF3F)
itkRayCastInterpolateImageFunctionIF3F.GetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_GetTransform, None, itkRayCastInterpolateImageFunctionIF3F)
itkRayCastInterpolateImageFunctionIF3F.SetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_SetInterpolator, None, itkRayCastInterpolateImageFunctionIF3F)
itkRayCastInterpolateImageFunctionIF3F.GetModifiableInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_GetModifiableInterpolator, None, itkRayCastInterpolateImageFunctionIF3F)
itkRayCastInterpolateImageFunctionIF3F.GetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_GetInterpolator, None, itkRayCastInterpolateImageFunctionIF3F)
itkRayCastInterpolateImageFunctionIF3F.SetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_SetFocalPoint, None, itkRayCastInterpolateImageFunctionIF3F)
itkRayCastInterpolateImageFunctionIF3F.GetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_GetFocalPoint, None, itkRayCastInterpolateImageFunctionIF3F)
itkRayCastInterpolateImageFunctionIF3F.SetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_SetThreshold, None, itkRayCastInterpolateImageFunctionIF3F)
itkRayCastInterpolateImageFunctionIF3F.GetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_GetThreshold, None, itkRayCastInterpolateImageFunctionIF3F)
itkRayCastInterpolateImageFunctionIF3F.IsInsideBuffer = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_IsInsideBuffer, None, itkRayCastInterpolateImageFunctionIF3F)
itkRayCastInterpolateImageFunctionIF3F_swigregister = _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_swigregister
itkRayCastInterpolateImageFunctionIF3F_swigregister(itkRayCastInterpolateImageFunctionIF3F)

def itkRayCastInterpolateImageFunctionIF3F___New_orig__() -> "itkRayCastInterpolateImageFunctionIF3F_Pointer":
    """itkRayCastInterpolateImageFunctionIF3F___New_orig__() -> itkRayCastInterpolateImageFunctionIF3F_Pointer"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F___New_orig__()

def itkRayCastInterpolateImageFunctionIF3F_cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionIF3F *":
    """itkRayCastInterpolateImageFunctionIF3F_cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionIF3F"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIF3F_cast(obj)

class itkRayCastInterpolateImageFunctionISS3D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3D):
    """Proxy of C++ itkRayCastInterpolateImageFunctionISS3D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRayCastInterpolateImageFunctionISS3D_Pointer":
        """__New_orig__() -> itkRayCastInterpolateImageFunctionISS3D_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRayCastInterpolateImageFunctionISS3D_Pointer":
        """Clone(itkRayCastInterpolateImageFunctionISS3D self) -> itkRayCastInterpolateImageFunctionISS3D_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_Clone(self)


    def SetTransform(self, _arg: 'itkTransformD33') -> "void":
        """SetTransform(itkRayCastInterpolateImageFunctionISS3D self, itkTransformD33 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_SetTransform(self, _arg)


    def GetModifiableTransform(self) -> "itkTransformD33 *":
        """GetModifiableTransform(itkRayCastInterpolateImageFunctionISS3D self) -> itkTransformD33"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_GetModifiableTransform(self)


    def GetTransform(self, *args) -> "itkTransformD33 *":
        """
        GetTransform(itkRayCastInterpolateImageFunctionISS3D self) -> itkTransformD33
        GetTransform(itkRayCastInterpolateImageFunctionISS3D self) -> itkTransformD33
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_GetTransform(self, *args)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionISS3D') -> "void":
        """SetInterpolator(itkRayCastInterpolateImageFunctionISS3D self, itkInterpolateImageFunctionISS3D _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionISS3D *":
        """GetModifiableInterpolator(itkRayCastInterpolateImageFunctionISS3D self) -> itkInterpolateImageFunctionISS3D"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionISS3D *":
        """
        GetInterpolator(itkRayCastInterpolateImageFunctionISS3D self) -> itkInterpolateImageFunctionISS3D
        GetInterpolator(itkRayCastInterpolateImageFunctionISS3D self) -> itkInterpolateImageFunctionISS3D
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_GetInterpolator(self, *args)


    def SetFocalPoint(self, _arg: 'itkPointD3') -> "void":
        """SetFocalPoint(itkRayCastInterpolateImageFunctionISS3D self, itkPointD3 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_SetFocalPoint(self, _arg)


    def GetFocalPoint(self) -> "itkPointD3":
        """GetFocalPoint(itkRayCastInterpolateImageFunctionISS3D self) -> itkPointD3"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_GetFocalPoint(self)


    def SetThreshold(self, _arg: 'double const') -> "void":
        """SetThreshold(itkRayCastInterpolateImageFunctionISS3D self, double const _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_SetThreshold(self, _arg)


    def GetThreshold(self) -> "double":
        """GetThreshold(itkRayCastInterpolateImageFunctionISS3D self) -> double"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_GetThreshold(self)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkRayCastInterpolateImageFunctionISS3D self, itkPointD3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionISS3D self, itkContinuousIndexD3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionISS3D self, itkIndex3 arg0) -> bool
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_IsInsideBuffer(self, *args)

    __swig_destroy__ = _itkRayCastInterpolateImageFunctionPython.delete_itkRayCastInterpolateImageFunctionISS3D

    def cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionISS3D *":
        """cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionISS3D"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkRayCastInterpolateImageFunctionISS3D

        Create a new object of the class itkRayCastInterpolateImageFunctionISS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRayCastInterpolateImageFunctionISS3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRayCastInterpolateImageFunctionISS3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRayCastInterpolateImageFunctionISS3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRayCastInterpolateImageFunctionISS3D.Clone = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_Clone, None, itkRayCastInterpolateImageFunctionISS3D)
itkRayCastInterpolateImageFunctionISS3D.SetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_SetTransform, None, itkRayCastInterpolateImageFunctionISS3D)
itkRayCastInterpolateImageFunctionISS3D.GetModifiableTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_GetModifiableTransform, None, itkRayCastInterpolateImageFunctionISS3D)
itkRayCastInterpolateImageFunctionISS3D.GetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_GetTransform, None, itkRayCastInterpolateImageFunctionISS3D)
itkRayCastInterpolateImageFunctionISS3D.SetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_SetInterpolator, None, itkRayCastInterpolateImageFunctionISS3D)
itkRayCastInterpolateImageFunctionISS3D.GetModifiableInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_GetModifiableInterpolator, None, itkRayCastInterpolateImageFunctionISS3D)
itkRayCastInterpolateImageFunctionISS3D.GetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_GetInterpolator, None, itkRayCastInterpolateImageFunctionISS3D)
itkRayCastInterpolateImageFunctionISS3D.SetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_SetFocalPoint, None, itkRayCastInterpolateImageFunctionISS3D)
itkRayCastInterpolateImageFunctionISS3D.GetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_GetFocalPoint, None, itkRayCastInterpolateImageFunctionISS3D)
itkRayCastInterpolateImageFunctionISS3D.SetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_SetThreshold, None, itkRayCastInterpolateImageFunctionISS3D)
itkRayCastInterpolateImageFunctionISS3D.GetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_GetThreshold, None, itkRayCastInterpolateImageFunctionISS3D)
itkRayCastInterpolateImageFunctionISS3D.IsInsideBuffer = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_IsInsideBuffer, None, itkRayCastInterpolateImageFunctionISS3D)
itkRayCastInterpolateImageFunctionISS3D_swigregister = _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_swigregister
itkRayCastInterpolateImageFunctionISS3D_swigregister(itkRayCastInterpolateImageFunctionISS3D)

def itkRayCastInterpolateImageFunctionISS3D___New_orig__() -> "itkRayCastInterpolateImageFunctionISS3D_Pointer":
    """itkRayCastInterpolateImageFunctionISS3D___New_orig__() -> itkRayCastInterpolateImageFunctionISS3D_Pointer"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D___New_orig__()

def itkRayCastInterpolateImageFunctionISS3D_cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionISS3D *":
    """itkRayCastInterpolateImageFunctionISS3D_cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionISS3D"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3D_cast(obj)

class itkRayCastInterpolateImageFunctionISS3F(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3F):
    """Proxy of C++ itkRayCastInterpolateImageFunctionISS3F class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRayCastInterpolateImageFunctionISS3F_Pointer":
        """__New_orig__() -> itkRayCastInterpolateImageFunctionISS3F_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRayCastInterpolateImageFunctionISS3F_Pointer":
        """Clone(itkRayCastInterpolateImageFunctionISS3F self) -> itkRayCastInterpolateImageFunctionISS3F_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_Clone(self)


    def SetTransform(self, _arg: 'itkTransformF33') -> "void":
        """SetTransform(itkRayCastInterpolateImageFunctionISS3F self, itkTransformF33 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_SetTransform(self, _arg)


    def GetModifiableTransform(self) -> "itkTransformF33 *":
        """GetModifiableTransform(itkRayCastInterpolateImageFunctionISS3F self) -> itkTransformF33"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_GetModifiableTransform(self)


    def GetTransform(self, *args) -> "itkTransformF33 *":
        """
        GetTransform(itkRayCastInterpolateImageFunctionISS3F self) -> itkTransformF33
        GetTransform(itkRayCastInterpolateImageFunctionISS3F self) -> itkTransformF33
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_GetTransform(self, *args)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionISS3F') -> "void":
        """SetInterpolator(itkRayCastInterpolateImageFunctionISS3F self, itkInterpolateImageFunctionISS3F _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionISS3F *":
        """GetModifiableInterpolator(itkRayCastInterpolateImageFunctionISS3F self) -> itkInterpolateImageFunctionISS3F"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionISS3F *":
        """
        GetInterpolator(itkRayCastInterpolateImageFunctionISS3F self) -> itkInterpolateImageFunctionISS3F
        GetInterpolator(itkRayCastInterpolateImageFunctionISS3F self) -> itkInterpolateImageFunctionISS3F
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_GetInterpolator(self, *args)


    def SetFocalPoint(self, _arg: 'itkPointF3') -> "void":
        """SetFocalPoint(itkRayCastInterpolateImageFunctionISS3F self, itkPointF3 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_SetFocalPoint(self, _arg)


    def GetFocalPoint(self) -> "itkPointF3":
        """GetFocalPoint(itkRayCastInterpolateImageFunctionISS3F self) -> itkPointF3"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_GetFocalPoint(self)


    def SetThreshold(self, _arg: 'double const') -> "void":
        """SetThreshold(itkRayCastInterpolateImageFunctionISS3F self, double const _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_SetThreshold(self, _arg)


    def GetThreshold(self) -> "double":
        """GetThreshold(itkRayCastInterpolateImageFunctionISS3F self) -> double"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_GetThreshold(self)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkRayCastInterpolateImageFunctionISS3F self, itkPointF3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionISS3F self, itkContinuousIndexF3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionISS3F self, itkIndex3 arg0) -> bool
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_IsInsideBuffer(self, *args)

    __swig_destroy__ = _itkRayCastInterpolateImageFunctionPython.delete_itkRayCastInterpolateImageFunctionISS3F

    def cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionISS3F *":
        """cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionISS3F"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkRayCastInterpolateImageFunctionISS3F

        Create a new object of the class itkRayCastInterpolateImageFunctionISS3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRayCastInterpolateImageFunctionISS3F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRayCastInterpolateImageFunctionISS3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRayCastInterpolateImageFunctionISS3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRayCastInterpolateImageFunctionISS3F.Clone = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_Clone, None, itkRayCastInterpolateImageFunctionISS3F)
itkRayCastInterpolateImageFunctionISS3F.SetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_SetTransform, None, itkRayCastInterpolateImageFunctionISS3F)
itkRayCastInterpolateImageFunctionISS3F.GetModifiableTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_GetModifiableTransform, None, itkRayCastInterpolateImageFunctionISS3F)
itkRayCastInterpolateImageFunctionISS3F.GetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_GetTransform, None, itkRayCastInterpolateImageFunctionISS3F)
itkRayCastInterpolateImageFunctionISS3F.SetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_SetInterpolator, None, itkRayCastInterpolateImageFunctionISS3F)
itkRayCastInterpolateImageFunctionISS3F.GetModifiableInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_GetModifiableInterpolator, None, itkRayCastInterpolateImageFunctionISS3F)
itkRayCastInterpolateImageFunctionISS3F.GetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_GetInterpolator, None, itkRayCastInterpolateImageFunctionISS3F)
itkRayCastInterpolateImageFunctionISS3F.SetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_SetFocalPoint, None, itkRayCastInterpolateImageFunctionISS3F)
itkRayCastInterpolateImageFunctionISS3F.GetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_GetFocalPoint, None, itkRayCastInterpolateImageFunctionISS3F)
itkRayCastInterpolateImageFunctionISS3F.SetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_SetThreshold, None, itkRayCastInterpolateImageFunctionISS3F)
itkRayCastInterpolateImageFunctionISS3F.GetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_GetThreshold, None, itkRayCastInterpolateImageFunctionISS3F)
itkRayCastInterpolateImageFunctionISS3F.IsInsideBuffer = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_IsInsideBuffer, None, itkRayCastInterpolateImageFunctionISS3F)
itkRayCastInterpolateImageFunctionISS3F_swigregister = _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_swigregister
itkRayCastInterpolateImageFunctionISS3F_swigregister(itkRayCastInterpolateImageFunctionISS3F)

def itkRayCastInterpolateImageFunctionISS3F___New_orig__() -> "itkRayCastInterpolateImageFunctionISS3F_Pointer":
    """itkRayCastInterpolateImageFunctionISS3F___New_orig__() -> itkRayCastInterpolateImageFunctionISS3F_Pointer"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F___New_orig__()

def itkRayCastInterpolateImageFunctionISS3F_cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionISS3F *":
    """itkRayCastInterpolateImageFunctionISS3F_cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionISS3F"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionISS3F_cast(obj)

class itkRayCastInterpolateImageFunctionIUC3D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3D):
    """Proxy of C++ itkRayCastInterpolateImageFunctionIUC3D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRayCastInterpolateImageFunctionIUC3D_Pointer":
        """__New_orig__() -> itkRayCastInterpolateImageFunctionIUC3D_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRayCastInterpolateImageFunctionIUC3D_Pointer":
        """Clone(itkRayCastInterpolateImageFunctionIUC3D self) -> itkRayCastInterpolateImageFunctionIUC3D_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_Clone(self)


    def SetTransform(self, _arg: 'itkTransformD33') -> "void":
        """SetTransform(itkRayCastInterpolateImageFunctionIUC3D self, itkTransformD33 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_SetTransform(self, _arg)


    def GetModifiableTransform(self) -> "itkTransformD33 *":
        """GetModifiableTransform(itkRayCastInterpolateImageFunctionIUC3D self) -> itkTransformD33"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_GetModifiableTransform(self)


    def GetTransform(self, *args) -> "itkTransformD33 *":
        """
        GetTransform(itkRayCastInterpolateImageFunctionIUC3D self) -> itkTransformD33
        GetTransform(itkRayCastInterpolateImageFunctionIUC3D self) -> itkTransformD33
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_GetTransform(self, *args)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUC3D') -> "void":
        """SetInterpolator(itkRayCastInterpolateImageFunctionIUC3D self, itkInterpolateImageFunctionIUC3D _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUC3D *":
        """GetModifiableInterpolator(itkRayCastInterpolateImageFunctionIUC3D self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUC3D *":
        """
        GetInterpolator(itkRayCastInterpolateImageFunctionIUC3D self) -> itkInterpolateImageFunctionIUC3D
        GetInterpolator(itkRayCastInterpolateImageFunctionIUC3D self) -> itkInterpolateImageFunctionIUC3D
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_GetInterpolator(self, *args)


    def SetFocalPoint(self, _arg: 'itkPointD3') -> "void":
        """SetFocalPoint(itkRayCastInterpolateImageFunctionIUC3D self, itkPointD3 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_SetFocalPoint(self, _arg)


    def GetFocalPoint(self) -> "itkPointD3":
        """GetFocalPoint(itkRayCastInterpolateImageFunctionIUC3D self) -> itkPointD3"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_GetFocalPoint(self)


    def SetThreshold(self, _arg: 'double const') -> "void":
        """SetThreshold(itkRayCastInterpolateImageFunctionIUC3D self, double const _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_SetThreshold(self, _arg)


    def GetThreshold(self) -> "double":
        """GetThreshold(itkRayCastInterpolateImageFunctionIUC3D self) -> double"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_GetThreshold(self)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIUC3D self, itkPointD3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIUC3D self, itkContinuousIndexD3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIUC3D self, itkIndex3 arg0) -> bool
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_IsInsideBuffer(self, *args)

    __swig_destroy__ = _itkRayCastInterpolateImageFunctionPython.delete_itkRayCastInterpolateImageFunctionIUC3D

    def cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionIUC3D *":
        """cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionIUC3D"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkRayCastInterpolateImageFunctionIUC3D

        Create a new object of the class itkRayCastInterpolateImageFunctionIUC3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRayCastInterpolateImageFunctionIUC3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRayCastInterpolateImageFunctionIUC3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRayCastInterpolateImageFunctionIUC3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRayCastInterpolateImageFunctionIUC3D.Clone = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_Clone, None, itkRayCastInterpolateImageFunctionIUC3D)
itkRayCastInterpolateImageFunctionIUC3D.SetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_SetTransform, None, itkRayCastInterpolateImageFunctionIUC3D)
itkRayCastInterpolateImageFunctionIUC3D.GetModifiableTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_GetModifiableTransform, None, itkRayCastInterpolateImageFunctionIUC3D)
itkRayCastInterpolateImageFunctionIUC3D.GetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_GetTransform, None, itkRayCastInterpolateImageFunctionIUC3D)
itkRayCastInterpolateImageFunctionIUC3D.SetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_SetInterpolator, None, itkRayCastInterpolateImageFunctionIUC3D)
itkRayCastInterpolateImageFunctionIUC3D.GetModifiableInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_GetModifiableInterpolator, None, itkRayCastInterpolateImageFunctionIUC3D)
itkRayCastInterpolateImageFunctionIUC3D.GetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_GetInterpolator, None, itkRayCastInterpolateImageFunctionIUC3D)
itkRayCastInterpolateImageFunctionIUC3D.SetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_SetFocalPoint, None, itkRayCastInterpolateImageFunctionIUC3D)
itkRayCastInterpolateImageFunctionIUC3D.GetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_GetFocalPoint, None, itkRayCastInterpolateImageFunctionIUC3D)
itkRayCastInterpolateImageFunctionIUC3D.SetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_SetThreshold, None, itkRayCastInterpolateImageFunctionIUC3D)
itkRayCastInterpolateImageFunctionIUC3D.GetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_GetThreshold, None, itkRayCastInterpolateImageFunctionIUC3D)
itkRayCastInterpolateImageFunctionIUC3D.IsInsideBuffer = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_IsInsideBuffer, None, itkRayCastInterpolateImageFunctionIUC3D)
itkRayCastInterpolateImageFunctionIUC3D_swigregister = _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_swigregister
itkRayCastInterpolateImageFunctionIUC3D_swigregister(itkRayCastInterpolateImageFunctionIUC3D)

def itkRayCastInterpolateImageFunctionIUC3D___New_orig__() -> "itkRayCastInterpolateImageFunctionIUC3D_Pointer":
    """itkRayCastInterpolateImageFunctionIUC3D___New_orig__() -> itkRayCastInterpolateImageFunctionIUC3D_Pointer"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D___New_orig__()

def itkRayCastInterpolateImageFunctionIUC3D_cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionIUC3D *":
    """itkRayCastInterpolateImageFunctionIUC3D_cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionIUC3D"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3D_cast(obj)

class itkRayCastInterpolateImageFunctionIUC3F(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3F):
    """Proxy of C++ itkRayCastInterpolateImageFunctionIUC3F class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRayCastInterpolateImageFunctionIUC3F_Pointer":
        """__New_orig__() -> itkRayCastInterpolateImageFunctionIUC3F_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRayCastInterpolateImageFunctionIUC3F_Pointer":
        """Clone(itkRayCastInterpolateImageFunctionIUC3F self) -> itkRayCastInterpolateImageFunctionIUC3F_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_Clone(self)


    def SetTransform(self, _arg: 'itkTransformF33') -> "void":
        """SetTransform(itkRayCastInterpolateImageFunctionIUC3F self, itkTransformF33 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_SetTransform(self, _arg)


    def GetModifiableTransform(self) -> "itkTransformF33 *":
        """GetModifiableTransform(itkRayCastInterpolateImageFunctionIUC3F self) -> itkTransformF33"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_GetModifiableTransform(self)


    def GetTransform(self, *args) -> "itkTransformF33 *":
        """
        GetTransform(itkRayCastInterpolateImageFunctionIUC3F self) -> itkTransformF33
        GetTransform(itkRayCastInterpolateImageFunctionIUC3F self) -> itkTransformF33
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_GetTransform(self, *args)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUC3F') -> "void":
        """SetInterpolator(itkRayCastInterpolateImageFunctionIUC3F self, itkInterpolateImageFunctionIUC3F _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUC3F *":
        """GetModifiableInterpolator(itkRayCastInterpolateImageFunctionIUC3F self) -> itkInterpolateImageFunctionIUC3F"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUC3F *":
        """
        GetInterpolator(itkRayCastInterpolateImageFunctionIUC3F self) -> itkInterpolateImageFunctionIUC3F
        GetInterpolator(itkRayCastInterpolateImageFunctionIUC3F self) -> itkInterpolateImageFunctionIUC3F
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_GetInterpolator(self, *args)


    def SetFocalPoint(self, _arg: 'itkPointF3') -> "void":
        """SetFocalPoint(itkRayCastInterpolateImageFunctionIUC3F self, itkPointF3 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_SetFocalPoint(self, _arg)


    def GetFocalPoint(self) -> "itkPointF3":
        """GetFocalPoint(itkRayCastInterpolateImageFunctionIUC3F self) -> itkPointF3"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_GetFocalPoint(self)


    def SetThreshold(self, _arg: 'double const') -> "void":
        """SetThreshold(itkRayCastInterpolateImageFunctionIUC3F self, double const _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_SetThreshold(self, _arg)


    def GetThreshold(self) -> "double":
        """GetThreshold(itkRayCastInterpolateImageFunctionIUC3F self) -> double"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_GetThreshold(self)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIUC3F self, itkPointF3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIUC3F self, itkContinuousIndexF3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIUC3F self, itkIndex3 arg0) -> bool
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_IsInsideBuffer(self, *args)

    __swig_destroy__ = _itkRayCastInterpolateImageFunctionPython.delete_itkRayCastInterpolateImageFunctionIUC3F

    def cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionIUC3F *":
        """cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionIUC3F"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkRayCastInterpolateImageFunctionIUC3F

        Create a new object of the class itkRayCastInterpolateImageFunctionIUC3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRayCastInterpolateImageFunctionIUC3F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRayCastInterpolateImageFunctionIUC3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRayCastInterpolateImageFunctionIUC3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRayCastInterpolateImageFunctionIUC3F.Clone = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_Clone, None, itkRayCastInterpolateImageFunctionIUC3F)
itkRayCastInterpolateImageFunctionIUC3F.SetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_SetTransform, None, itkRayCastInterpolateImageFunctionIUC3F)
itkRayCastInterpolateImageFunctionIUC3F.GetModifiableTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_GetModifiableTransform, None, itkRayCastInterpolateImageFunctionIUC3F)
itkRayCastInterpolateImageFunctionIUC3F.GetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_GetTransform, None, itkRayCastInterpolateImageFunctionIUC3F)
itkRayCastInterpolateImageFunctionIUC3F.SetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_SetInterpolator, None, itkRayCastInterpolateImageFunctionIUC3F)
itkRayCastInterpolateImageFunctionIUC3F.GetModifiableInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_GetModifiableInterpolator, None, itkRayCastInterpolateImageFunctionIUC3F)
itkRayCastInterpolateImageFunctionIUC3F.GetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_GetInterpolator, None, itkRayCastInterpolateImageFunctionIUC3F)
itkRayCastInterpolateImageFunctionIUC3F.SetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_SetFocalPoint, None, itkRayCastInterpolateImageFunctionIUC3F)
itkRayCastInterpolateImageFunctionIUC3F.GetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_GetFocalPoint, None, itkRayCastInterpolateImageFunctionIUC3F)
itkRayCastInterpolateImageFunctionIUC3F.SetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_SetThreshold, None, itkRayCastInterpolateImageFunctionIUC3F)
itkRayCastInterpolateImageFunctionIUC3F.GetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_GetThreshold, None, itkRayCastInterpolateImageFunctionIUC3F)
itkRayCastInterpolateImageFunctionIUC3F.IsInsideBuffer = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_IsInsideBuffer, None, itkRayCastInterpolateImageFunctionIUC3F)
itkRayCastInterpolateImageFunctionIUC3F_swigregister = _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_swigregister
itkRayCastInterpolateImageFunctionIUC3F_swigregister(itkRayCastInterpolateImageFunctionIUC3F)

def itkRayCastInterpolateImageFunctionIUC3F___New_orig__() -> "itkRayCastInterpolateImageFunctionIUC3F_Pointer":
    """itkRayCastInterpolateImageFunctionIUC3F___New_orig__() -> itkRayCastInterpolateImageFunctionIUC3F_Pointer"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F___New_orig__()

def itkRayCastInterpolateImageFunctionIUC3F_cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionIUC3F *":
    """itkRayCastInterpolateImageFunctionIUC3F_cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionIUC3F"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUC3F_cast(obj)

class itkRayCastInterpolateImageFunctionIUS3D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3D):
    """Proxy of C++ itkRayCastInterpolateImageFunctionIUS3D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRayCastInterpolateImageFunctionIUS3D_Pointer":
        """__New_orig__() -> itkRayCastInterpolateImageFunctionIUS3D_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRayCastInterpolateImageFunctionIUS3D_Pointer":
        """Clone(itkRayCastInterpolateImageFunctionIUS3D self) -> itkRayCastInterpolateImageFunctionIUS3D_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_Clone(self)


    def SetTransform(self, _arg: 'itkTransformD33') -> "void":
        """SetTransform(itkRayCastInterpolateImageFunctionIUS3D self, itkTransformD33 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_SetTransform(self, _arg)


    def GetModifiableTransform(self) -> "itkTransformD33 *":
        """GetModifiableTransform(itkRayCastInterpolateImageFunctionIUS3D self) -> itkTransformD33"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_GetModifiableTransform(self)


    def GetTransform(self, *args) -> "itkTransformD33 *":
        """
        GetTransform(itkRayCastInterpolateImageFunctionIUS3D self) -> itkTransformD33
        GetTransform(itkRayCastInterpolateImageFunctionIUS3D self) -> itkTransformD33
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_GetTransform(self, *args)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUS3D') -> "void":
        """SetInterpolator(itkRayCastInterpolateImageFunctionIUS3D self, itkInterpolateImageFunctionIUS3D _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUS3D *":
        """GetModifiableInterpolator(itkRayCastInterpolateImageFunctionIUS3D self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUS3D *":
        """
        GetInterpolator(itkRayCastInterpolateImageFunctionIUS3D self) -> itkInterpolateImageFunctionIUS3D
        GetInterpolator(itkRayCastInterpolateImageFunctionIUS3D self) -> itkInterpolateImageFunctionIUS3D
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_GetInterpolator(self, *args)


    def SetFocalPoint(self, _arg: 'itkPointD3') -> "void":
        """SetFocalPoint(itkRayCastInterpolateImageFunctionIUS3D self, itkPointD3 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_SetFocalPoint(self, _arg)


    def GetFocalPoint(self) -> "itkPointD3":
        """GetFocalPoint(itkRayCastInterpolateImageFunctionIUS3D self) -> itkPointD3"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_GetFocalPoint(self)


    def SetThreshold(self, _arg: 'double const') -> "void":
        """SetThreshold(itkRayCastInterpolateImageFunctionIUS3D self, double const _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_SetThreshold(self, _arg)


    def GetThreshold(self) -> "double":
        """GetThreshold(itkRayCastInterpolateImageFunctionIUS3D self) -> double"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_GetThreshold(self)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIUS3D self, itkPointD3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIUS3D self, itkContinuousIndexD3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIUS3D self, itkIndex3 arg0) -> bool
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_IsInsideBuffer(self, *args)

    __swig_destroy__ = _itkRayCastInterpolateImageFunctionPython.delete_itkRayCastInterpolateImageFunctionIUS3D

    def cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionIUS3D *":
        """cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionIUS3D"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkRayCastInterpolateImageFunctionIUS3D

        Create a new object of the class itkRayCastInterpolateImageFunctionIUS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRayCastInterpolateImageFunctionIUS3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRayCastInterpolateImageFunctionIUS3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRayCastInterpolateImageFunctionIUS3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRayCastInterpolateImageFunctionIUS3D.Clone = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_Clone, None, itkRayCastInterpolateImageFunctionIUS3D)
itkRayCastInterpolateImageFunctionIUS3D.SetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_SetTransform, None, itkRayCastInterpolateImageFunctionIUS3D)
itkRayCastInterpolateImageFunctionIUS3D.GetModifiableTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_GetModifiableTransform, None, itkRayCastInterpolateImageFunctionIUS3D)
itkRayCastInterpolateImageFunctionIUS3D.GetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_GetTransform, None, itkRayCastInterpolateImageFunctionIUS3D)
itkRayCastInterpolateImageFunctionIUS3D.SetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_SetInterpolator, None, itkRayCastInterpolateImageFunctionIUS3D)
itkRayCastInterpolateImageFunctionIUS3D.GetModifiableInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_GetModifiableInterpolator, None, itkRayCastInterpolateImageFunctionIUS3D)
itkRayCastInterpolateImageFunctionIUS3D.GetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_GetInterpolator, None, itkRayCastInterpolateImageFunctionIUS3D)
itkRayCastInterpolateImageFunctionIUS3D.SetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_SetFocalPoint, None, itkRayCastInterpolateImageFunctionIUS3D)
itkRayCastInterpolateImageFunctionIUS3D.GetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_GetFocalPoint, None, itkRayCastInterpolateImageFunctionIUS3D)
itkRayCastInterpolateImageFunctionIUS3D.SetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_SetThreshold, None, itkRayCastInterpolateImageFunctionIUS3D)
itkRayCastInterpolateImageFunctionIUS3D.GetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_GetThreshold, None, itkRayCastInterpolateImageFunctionIUS3D)
itkRayCastInterpolateImageFunctionIUS3D.IsInsideBuffer = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_IsInsideBuffer, None, itkRayCastInterpolateImageFunctionIUS3D)
itkRayCastInterpolateImageFunctionIUS3D_swigregister = _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_swigregister
itkRayCastInterpolateImageFunctionIUS3D_swigregister(itkRayCastInterpolateImageFunctionIUS3D)

def itkRayCastInterpolateImageFunctionIUS3D___New_orig__() -> "itkRayCastInterpolateImageFunctionIUS3D_Pointer":
    """itkRayCastInterpolateImageFunctionIUS3D___New_orig__() -> itkRayCastInterpolateImageFunctionIUS3D_Pointer"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D___New_orig__()

def itkRayCastInterpolateImageFunctionIUS3D_cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionIUS3D *":
    """itkRayCastInterpolateImageFunctionIUS3D_cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionIUS3D"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3D_cast(obj)

class itkRayCastInterpolateImageFunctionIUS3F(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3F):
    """Proxy of C++ itkRayCastInterpolateImageFunctionIUS3F class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRayCastInterpolateImageFunctionIUS3F_Pointer":
        """__New_orig__() -> itkRayCastInterpolateImageFunctionIUS3F_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRayCastInterpolateImageFunctionIUS3F_Pointer":
        """Clone(itkRayCastInterpolateImageFunctionIUS3F self) -> itkRayCastInterpolateImageFunctionIUS3F_Pointer"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_Clone(self)


    def SetTransform(self, _arg: 'itkTransformF33') -> "void":
        """SetTransform(itkRayCastInterpolateImageFunctionIUS3F self, itkTransformF33 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_SetTransform(self, _arg)


    def GetModifiableTransform(self) -> "itkTransformF33 *":
        """GetModifiableTransform(itkRayCastInterpolateImageFunctionIUS3F self) -> itkTransformF33"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_GetModifiableTransform(self)


    def GetTransform(self, *args) -> "itkTransformF33 *":
        """
        GetTransform(itkRayCastInterpolateImageFunctionIUS3F self) -> itkTransformF33
        GetTransform(itkRayCastInterpolateImageFunctionIUS3F self) -> itkTransformF33
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_GetTransform(self, *args)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUS3F') -> "void":
        """SetInterpolator(itkRayCastInterpolateImageFunctionIUS3F self, itkInterpolateImageFunctionIUS3F _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUS3F *":
        """GetModifiableInterpolator(itkRayCastInterpolateImageFunctionIUS3F self) -> itkInterpolateImageFunctionIUS3F"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUS3F *":
        """
        GetInterpolator(itkRayCastInterpolateImageFunctionIUS3F self) -> itkInterpolateImageFunctionIUS3F
        GetInterpolator(itkRayCastInterpolateImageFunctionIUS3F self) -> itkInterpolateImageFunctionIUS3F
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_GetInterpolator(self, *args)


    def SetFocalPoint(self, _arg: 'itkPointF3') -> "void":
        """SetFocalPoint(itkRayCastInterpolateImageFunctionIUS3F self, itkPointF3 _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_SetFocalPoint(self, _arg)


    def GetFocalPoint(self) -> "itkPointF3":
        """GetFocalPoint(itkRayCastInterpolateImageFunctionIUS3F self) -> itkPointF3"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_GetFocalPoint(self)


    def SetThreshold(self, _arg: 'double const') -> "void":
        """SetThreshold(itkRayCastInterpolateImageFunctionIUS3F self, double const _arg)"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_SetThreshold(self, _arg)


    def GetThreshold(self) -> "double":
        """GetThreshold(itkRayCastInterpolateImageFunctionIUS3F self) -> double"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_GetThreshold(self)


    def IsInsideBuffer(self, *args) -> "bool":
        """
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIUS3F self, itkPointF3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIUS3F self, itkContinuousIndexF3 arg0) -> bool
        IsInsideBuffer(itkRayCastInterpolateImageFunctionIUS3F self, itkIndex3 arg0) -> bool
        """
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_IsInsideBuffer(self, *args)

    __swig_destroy__ = _itkRayCastInterpolateImageFunctionPython.delete_itkRayCastInterpolateImageFunctionIUS3F

    def cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionIUS3F *":
        """cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionIUS3F"""
        return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkRayCastInterpolateImageFunctionIUS3F

        Create a new object of the class itkRayCastInterpolateImageFunctionIUS3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRayCastInterpolateImageFunctionIUS3F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRayCastInterpolateImageFunctionIUS3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRayCastInterpolateImageFunctionIUS3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRayCastInterpolateImageFunctionIUS3F.Clone = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_Clone, None, itkRayCastInterpolateImageFunctionIUS3F)
itkRayCastInterpolateImageFunctionIUS3F.SetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_SetTransform, None, itkRayCastInterpolateImageFunctionIUS3F)
itkRayCastInterpolateImageFunctionIUS3F.GetModifiableTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_GetModifiableTransform, None, itkRayCastInterpolateImageFunctionIUS3F)
itkRayCastInterpolateImageFunctionIUS3F.GetTransform = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_GetTransform, None, itkRayCastInterpolateImageFunctionIUS3F)
itkRayCastInterpolateImageFunctionIUS3F.SetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_SetInterpolator, None, itkRayCastInterpolateImageFunctionIUS3F)
itkRayCastInterpolateImageFunctionIUS3F.GetModifiableInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_GetModifiableInterpolator, None, itkRayCastInterpolateImageFunctionIUS3F)
itkRayCastInterpolateImageFunctionIUS3F.GetInterpolator = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_GetInterpolator, None, itkRayCastInterpolateImageFunctionIUS3F)
itkRayCastInterpolateImageFunctionIUS3F.SetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_SetFocalPoint, None, itkRayCastInterpolateImageFunctionIUS3F)
itkRayCastInterpolateImageFunctionIUS3F.GetFocalPoint = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_GetFocalPoint, None, itkRayCastInterpolateImageFunctionIUS3F)
itkRayCastInterpolateImageFunctionIUS3F.SetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_SetThreshold, None, itkRayCastInterpolateImageFunctionIUS3F)
itkRayCastInterpolateImageFunctionIUS3F.GetThreshold = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_GetThreshold, None, itkRayCastInterpolateImageFunctionIUS3F)
itkRayCastInterpolateImageFunctionIUS3F.IsInsideBuffer = new_instancemethod(_itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_IsInsideBuffer, None, itkRayCastInterpolateImageFunctionIUS3F)
itkRayCastInterpolateImageFunctionIUS3F_swigregister = _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_swigregister
itkRayCastInterpolateImageFunctionIUS3F_swigregister(itkRayCastInterpolateImageFunctionIUS3F)

def itkRayCastInterpolateImageFunctionIUS3F___New_orig__() -> "itkRayCastInterpolateImageFunctionIUS3F_Pointer":
    """itkRayCastInterpolateImageFunctionIUS3F___New_orig__() -> itkRayCastInterpolateImageFunctionIUS3F_Pointer"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F___New_orig__()

def itkRayCastInterpolateImageFunctionIUS3F_cast(obj: 'itkLightObject') -> "itkRayCastInterpolateImageFunctionIUS3F *":
    """itkRayCastInterpolateImageFunctionIUS3F_cast(itkLightObject obj) -> itkRayCastInterpolateImageFunctionIUS3F"""
    return _itkRayCastInterpolateImageFunctionPython.itkRayCastInterpolateImageFunctionIUS3F_cast(obj)



