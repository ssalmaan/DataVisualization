# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkImportImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImportImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkImportImageFilterPython
            return _itkImportImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImportImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImportImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImportImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import pyBasePython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkImageSourcePython
import itkImageSourceCommonPython
import ITKCommonBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython

def itkImportImageFilterF3_New():
  return itkImportImageFilterF3.New()


def itkImportImageFilterUS3_New():
  return itkImportImageFilterUS3.New()


def itkImportImageFilterUC3_New():
  return itkImportImageFilterUC3.New()


def itkImportImageFilterSS3_New():
  return itkImportImageFilterSS3.New()


def itkImportImageFilterF2_New():
  return itkImportImageFilterF2.New()


def itkImportImageFilterUS2_New():
  return itkImportImageFilterUS2.New()


def itkImportImageFilterUC2_New():
  return itkImportImageFilterUC2.New()


def itkImportImageFilterSS2_New():
  return itkImportImageFilterSS2.New()

class itkImportImageFilterF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImportImageFilterF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImportImageFilterF2_Pointer":
        """__New_orig__() -> itkImportImageFilterF2_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImportImageFilterF2_Pointer":
        """Clone(itkImportImageFilterF2 self) -> itkImportImageFilterF2_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterF2_Clone(self)


    def GetImportPointer(self) -> "float *":
        """GetImportPointer(itkImportImageFilterF2 self) -> float *"""
        return _itkImportImageFilterPython.itkImportImageFilterF2_GetImportPointer(self)


    def SetImportPointer(self, ptr: 'float *', num: 'unsigned long long', LetImageContainerManageMemory: 'bool') -> "void":
        """SetImportPointer(itkImportImageFilterF2 self, float * ptr, unsigned long long num, bool LetImageContainerManageMemory)"""
        return _itkImportImageFilterPython.itkImportImageFilterF2_SetImportPointer(self, ptr, num, LetImageContainerManageMemory)


    def SetRegion(self, region: 'itkImageRegion2') -> "void":
        """SetRegion(itkImportImageFilterF2 self, itkImageRegion2 region)"""
        return _itkImportImageFilterPython.itkImportImageFilterF2_SetRegion(self, region)


    def GetRegion(self) -> "itkImageRegion2 const &":
        """GetRegion(itkImportImageFilterF2 self) -> itkImageRegion2"""
        return _itkImportImageFilterPython.itkImportImageFilterF2_GetRegion(self)


    def GetSpacing(self) -> "itkVectorD2 const &":
        """GetSpacing(itkImportImageFilterF2 self) -> itkVectorD2"""
        return _itkImportImageFilterPython.itkImportImageFilterF2_GetSpacing(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkImportImageFilterF2 self, itkVectorD2 _arg)
        SetSpacing(itkImportImageFilterF2 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterF2_SetSpacing(self, *args)


    def GetOrigin(self) -> "itkPointD2 const &":
        """GetOrigin(itkImportImageFilterF2 self) -> itkPointD2"""
        return _itkImportImageFilterPython.itkImportImageFilterF2_GetOrigin(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkImportImageFilterF2 self, itkPointD2 _arg)
        SetOrigin(itkImportImageFilterF2 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterF2_SetOrigin(self, *args)


    def SetDirection(self, direction: 'itkMatrixD22') -> "void":
        """SetDirection(itkImportImageFilterF2 self, itkMatrixD22 direction)"""
        return _itkImportImageFilterPython.itkImportImageFilterF2_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD22 const &":
        """GetDirection(itkImportImageFilterF2 self) -> itkMatrixD22"""
        return _itkImportImageFilterPython.itkImportImageFilterF2_GetDirection(self)

    __swig_destroy__ = _itkImportImageFilterPython.delete_itkImportImageFilterF2

    def cast(obj: 'itkLightObject') -> "itkImportImageFilterF2 *":
        """cast(itkLightObject obj) -> itkImportImageFilterF2"""
        return _itkImportImageFilterPython.itkImportImageFilterF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImportImageFilterF2

        Create a new object of the class itkImportImageFilterF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImportImageFilterF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImportImageFilterF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImportImageFilterF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImportImageFilterF2.Clone = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF2_Clone, None, itkImportImageFilterF2)
itkImportImageFilterF2.GetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF2_GetImportPointer, None, itkImportImageFilterF2)
itkImportImageFilterF2.SetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF2_SetImportPointer, None, itkImportImageFilterF2)
itkImportImageFilterF2.SetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF2_SetRegion, None, itkImportImageFilterF2)
itkImportImageFilterF2.GetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF2_GetRegion, None, itkImportImageFilterF2)
itkImportImageFilterF2.GetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF2_GetSpacing, None, itkImportImageFilterF2)
itkImportImageFilterF2.SetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF2_SetSpacing, None, itkImportImageFilterF2)
itkImportImageFilterF2.GetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF2_GetOrigin, None, itkImportImageFilterF2)
itkImportImageFilterF2.SetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF2_SetOrigin, None, itkImportImageFilterF2)
itkImportImageFilterF2.SetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF2_SetDirection, None, itkImportImageFilterF2)
itkImportImageFilterF2.GetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF2_GetDirection, None, itkImportImageFilterF2)
itkImportImageFilterF2_swigregister = _itkImportImageFilterPython.itkImportImageFilterF2_swigregister
itkImportImageFilterF2_swigregister(itkImportImageFilterF2)

def itkImportImageFilterF2___New_orig__() -> "itkImportImageFilterF2_Pointer":
    """itkImportImageFilterF2___New_orig__() -> itkImportImageFilterF2_Pointer"""
    return _itkImportImageFilterPython.itkImportImageFilterF2___New_orig__()

def itkImportImageFilterF2_cast(obj: 'itkLightObject') -> "itkImportImageFilterF2 *":
    """itkImportImageFilterF2_cast(itkLightObject obj) -> itkImportImageFilterF2"""
    return _itkImportImageFilterPython.itkImportImageFilterF2_cast(obj)

class itkImportImageFilterF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImportImageFilterF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImportImageFilterF3_Pointer":
        """__New_orig__() -> itkImportImageFilterF3_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImportImageFilterF3_Pointer":
        """Clone(itkImportImageFilterF3 self) -> itkImportImageFilterF3_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterF3_Clone(self)


    def GetImportPointer(self) -> "float *":
        """GetImportPointer(itkImportImageFilterF3 self) -> float *"""
        return _itkImportImageFilterPython.itkImportImageFilterF3_GetImportPointer(self)


    def SetImportPointer(self, ptr: 'float *', num: 'unsigned long long', LetImageContainerManageMemory: 'bool') -> "void":
        """SetImportPointer(itkImportImageFilterF3 self, float * ptr, unsigned long long num, bool LetImageContainerManageMemory)"""
        return _itkImportImageFilterPython.itkImportImageFilterF3_SetImportPointer(self, ptr, num, LetImageContainerManageMemory)


    def SetRegion(self, region: 'itkImageRegion3') -> "void":
        """SetRegion(itkImportImageFilterF3 self, itkImageRegion3 region)"""
        return _itkImportImageFilterPython.itkImportImageFilterF3_SetRegion(self, region)


    def GetRegion(self) -> "itkImageRegion3 const &":
        """GetRegion(itkImportImageFilterF3 self) -> itkImageRegion3"""
        return _itkImportImageFilterPython.itkImportImageFilterF3_GetRegion(self)


    def GetSpacing(self) -> "itkVectorD3 const &":
        """GetSpacing(itkImportImageFilterF3 self) -> itkVectorD3"""
        return _itkImportImageFilterPython.itkImportImageFilterF3_GetSpacing(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkImportImageFilterF3 self, itkVectorD3 _arg)
        SetSpacing(itkImportImageFilterF3 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterF3_SetSpacing(self, *args)


    def GetOrigin(self) -> "itkPointD3 const &":
        """GetOrigin(itkImportImageFilterF3 self) -> itkPointD3"""
        return _itkImportImageFilterPython.itkImportImageFilterF3_GetOrigin(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkImportImageFilterF3 self, itkPointD3 _arg)
        SetOrigin(itkImportImageFilterF3 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterF3_SetOrigin(self, *args)


    def SetDirection(self, direction: 'itkMatrixD33') -> "void":
        """SetDirection(itkImportImageFilterF3 self, itkMatrixD33 direction)"""
        return _itkImportImageFilterPython.itkImportImageFilterF3_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD33 const &":
        """GetDirection(itkImportImageFilterF3 self) -> itkMatrixD33"""
        return _itkImportImageFilterPython.itkImportImageFilterF3_GetDirection(self)

    __swig_destroy__ = _itkImportImageFilterPython.delete_itkImportImageFilterF3

    def cast(obj: 'itkLightObject') -> "itkImportImageFilterF3 *":
        """cast(itkLightObject obj) -> itkImportImageFilterF3"""
        return _itkImportImageFilterPython.itkImportImageFilterF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImportImageFilterF3

        Create a new object of the class itkImportImageFilterF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImportImageFilterF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImportImageFilterF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImportImageFilterF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImportImageFilterF3.Clone = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF3_Clone, None, itkImportImageFilterF3)
itkImportImageFilterF3.GetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF3_GetImportPointer, None, itkImportImageFilterF3)
itkImportImageFilterF3.SetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF3_SetImportPointer, None, itkImportImageFilterF3)
itkImportImageFilterF3.SetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF3_SetRegion, None, itkImportImageFilterF3)
itkImportImageFilterF3.GetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF3_GetRegion, None, itkImportImageFilterF3)
itkImportImageFilterF3.GetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF3_GetSpacing, None, itkImportImageFilterF3)
itkImportImageFilterF3.SetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF3_SetSpacing, None, itkImportImageFilterF3)
itkImportImageFilterF3.GetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF3_GetOrigin, None, itkImportImageFilterF3)
itkImportImageFilterF3.SetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF3_SetOrigin, None, itkImportImageFilterF3)
itkImportImageFilterF3.SetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF3_SetDirection, None, itkImportImageFilterF3)
itkImportImageFilterF3.GetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterF3_GetDirection, None, itkImportImageFilterF3)
itkImportImageFilterF3_swigregister = _itkImportImageFilterPython.itkImportImageFilterF3_swigregister
itkImportImageFilterF3_swigregister(itkImportImageFilterF3)

def itkImportImageFilterF3___New_orig__() -> "itkImportImageFilterF3_Pointer":
    """itkImportImageFilterF3___New_orig__() -> itkImportImageFilterF3_Pointer"""
    return _itkImportImageFilterPython.itkImportImageFilterF3___New_orig__()

def itkImportImageFilterF3_cast(obj: 'itkLightObject') -> "itkImportImageFilterF3 *":
    """itkImportImageFilterF3_cast(itkLightObject obj) -> itkImportImageFilterF3"""
    return _itkImportImageFilterPython.itkImportImageFilterF3_cast(obj)

class itkImportImageFilterSS2(itkImageSourcePython.itkImageSourceISS2):
    """Proxy of C++ itkImportImageFilterSS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImportImageFilterSS2_Pointer":
        """__New_orig__() -> itkImportImageFilterSS2_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterSS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImportImageFilterSS2_Pointer":
        """Clone(itkImportImageFilterSS2 self) -> itkImportImageFilterSS2_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterSS2_Clone(self)


    def GetImportPointer(self) -> "short *":
        """GetImportPointer(itkImportImageFilterSS2 self) -> short *"""
        return _itkImportImageFilterPython.itkImportImageFilterSS2_GetImportPointer(self)


    def SetImportPointer(self, ptr: 'short *', num: 'unsigned long long', LetImageContainerManageMemory: 'bool') -> "void":
        """SetImportPointer(itkImportImageFilterSS2 self, short * ptr, unsigned long long num, bool LetImageContainerManageMemory)"""
        return _itkImportImageFilterPython.itkImportImageFilterSS2_SetImportPointer(self, ptr, num, LetImageContainerManageMemory)


    def SetRegion(self, region: 'itkImageRegion2') -> "void":
        """SetRegion(itkImportImageFilterSS2 self, itkImageRegion2 region)"""
        return _itkImportImageFilterPython.itkImportImageFilterSS2_SetRegion(self, region)


    def GetRegion(self) -> "itkImageRegion2 const &":
        """GetRegion(itkImportImageFilterSS2 self) -> itkImageRegion2"""
        return _itkImportImageFilterPython.itkImportImageFilterSS2_GetRegion(self)


    def GetSpacing(self) -> "itkVectorD2 const &":
        """GetSpacing(itkImportImageFilterSS2 self) -> itkVectorD2"""
        return _itkImportImageFilterPython.itkImportImageFilterSS2_GetSpacing(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkImportImageFilterSS2 self, itkVectorD2 _arg)
        SetSpacing(itkImportImageFilterSS2 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterSS2_SetSpacing(self, *args)


    def GetOrigin(self) -> "itkPointD2 const &":
        """GetOrigin(itkImportImageFilterSS2 self) -> itkPointD2"""
        return _itkImportImageFilterPython.itkImportImageFilterSS2_GetOrigin(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkImportImageFilterSS2 self, itkPointD2 _arg)
        SetOrigin(itkImportImageFilterSS2 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterSS2_SetOrigin(self, *args)


    def SetDirection(self, direction: 'itkMatrixD22') -> "void":
        """SetDirection(itkImportImageFilterSS2 self, itkMatrixD22 direction)"""
        return _itkImportImageFilterPython.itkImportImageFilterSS2_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD22 const &":
        """GetDirection(itkImportImageFilterSS2 self) -> itkMatrixD22"""
        return _itkImportImageFilterPython.itkImportImageFilterSS2_GetDirection(self)

    __swig_destroy__ = _itkImportImageFilterPython.delete_itkImportImageFilterSS2

    def cast(obj: 'itkLightObject') -> "itkImportImageFilterSS2 *":
        """cast(itkLightObject obj) -> itkImportImageFilterSS2"""
        return _itkImportImageFilterPython.itkImportImageFilterSS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImportImageFilterSS2

        Create a new object of the class itkImportImageFilterSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImportImageFilterSS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImportImageFilterSS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImportImageFilterSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImportImageFilterSS2.Clone = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS2_Clone, None, itkImportImageFilterSS2)
itkImportImageFilterSS2.GetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS2_GetImportPointer, None, itkImportImageFilterSS2)
itkImportImageFilterSS2.SetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS2_SetImportPointer, None, itkImportImageFilterSS2)
itkImportImageFilterSS2.SetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS2_SetRegion, None, itkImportImageFilterSS2)
itkImportImageFilterSS2.GetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS2_GetRegion, None, itkImportImageFilterSS2)
itkImportImageFilterSS2.GetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS2_GetSpacing, None, itkImportImageFilterSS2)
itkImportImageFilterSS2.SetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS2_SetSpacing, None, itkImportImageFilterSS2)
itkImportImageFilterSS2.GetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS2_GetOrigin, None, itkImportImageFilterSS2)
itkImportImageFilterSS2.SetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS2_SetOrigin, None, itkImportImageFilterSS2)
itkImportImageFilterSS2.SetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS2_SetDirection, None, itkImportImageFilterSS2)
itkImportImageFilterSS2.GetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS2_GetDirection, None, itkImportImageFilterSS2)
itkImportImageFilterSS2_swigregister = _itkImportImageFilterPython.itkImportImageFilterSS2_swigregister
itkImportImageFilterSS2_swigregister(itkImportImageFilterSS2)

def itkImportImageFilterSS2___New_orig__() -> "itkImportImageFilterSS2_Pointer":
    """itkImportImageFilterSS2___New_orig__() -> itkImportImageFilterSS2_Pointer"""
    return _itkImportImageFilterPython.itkImportImageFilterSS2___New_orig__()

def itkImportImageFilterSS2_cast(obj: 'itkLightObject') -> "itkImportImageFilterSS2 *":
    """itkImportImageFilterSS2_cast(itkLightObject obj) -> itkImportImageFilterSS2"""
    return _itkImportImageFilterPython.itkImportImageFilterSS2_cast(obj)

class itkImportImageFilterSS3(itkImageSourcePython.itkImageSourceISS3):
    """Proxy of C++ itkImportImageFilterSS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImportImageFilterSS3_Pointer":
        """__New_orig__() -> itkImportImageFilterSS3_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterSS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImportImageFilterSS3_Pointer":
        """Clone(itkImportImageFilterSS3 self) -> itkImportImageFilterSS3_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterSS3_Clone(self)


    def GetImportPointer(self) -> "short *":
        """GetImportPointer(itkImportImageFilterSS3 self) -> short *"""
        return _itkImportImageFilterPython.itkImportImageFilterSS3_GetImportPointer(self)


    def SetImportPointer(self, ptr: 'short *', num: 'unsigned long long', LetImageContainerManageMemory: 'bool') -> "void":
        """SetImportPointer(itkImportImageFilterSS3 self, short * ptr, unsigned long long num, bool LetImageContainerManageMemory)"""
        return _itkImportImageFilterPython.itkImportImageFilterSS3_SetImportPointer(self, ptr, num, LetImageContainerManageMemory)


    def SetRegion(self, region: 'itkImageRegion3') -> "void":
        """SetRegion(itkImportImageFilterSS3 self, itkImageRegion3 region)"""
        return _itkImportImageFilterPython.itkImportImageFilterSS3_SetRegion(self, region)


    def GetRegion(self) -> "itkImageRegion3 const &":
        """GetRegion(itkImportImageFilterSS3 self) -> itkImageRegion3"""
        return _itkImportImageFilterPython.itkImportImageFilterSS3_GetRegion(self)


    def GetSpacing(self) -> "itkVectorD3 const &":
        """GetSpacing(itkImportImageFilterSS3 self) -> itkVectorD3"""
        return _itkImportImageFilterPython.itkImportImageFilterSS3_GetSpacing(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkImportImageFilterSS3 self, itkVectorD3 _arg)
        SetSpacing(itkImportImageFilterSS3 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterSS3_SetSpacing(self, *args)


    def GetOrigin(self) -> "itkPointD3 const &":
        """GetOrigin(itkImportImageFilterSS3 self) -> itkPointD3"""
        return _itkImportImageFilterPython.itkImportImageFilterSS3_GetOrigin(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkImportImageFilterSS3 self, itkPointD3 _arg)
        SetOrigin(itkImportImageFilterSS3 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterSS3_SetOrigin(self, *args)


    def SetDirection(self, direction: 'itkMatrixD33') -> "void":
        """SetDirection(itkImportImageFilterSS3 self, itkMatrixD33 direction)"""
        return _itkImportImageFilterPython.itkImportImageFilterSS3_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD33 const &":
        """GetDirection(itkImportImageFilterSS3 self) -> itkMatrixD33"""
        return _itkImportImageFilterPython.itkImportImageFilterSS3_GetDirection(self)

    __swig_destroy__ = _itkImportImageFilterPython.delete_itkImportImageFilterSS3

    def cast(obj: 'itkLightObject') -> "itkImportImageFilterSS3 *":
        """cast(itkLightObject obj) -> itkImportImageFilterSS3"""
        return _itkImportImageFilterPython.itkImportImageFilterSS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImportImageFilterSS3

        Create a new object of the class itkImportImageFilterSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImportImageFilterSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImportImageFilterSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImportImageFilterSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImportImageFilterSS3.Clone = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS3_Clone, None, itkImportImageFilterSS3)
itkImportImageFilterSS3.GetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS3_GetImportPointer, None, itkImportImageFilterSS3)
itkImportImageFilterSS3.SetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS3_SetImportPointer, None, itkImportImageFilterSS3)
itkImportImageFilterSS3.SetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS3_SetRegion, None, itkImportImageFilterSS3)
itkImportImageFilterSS3.GetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS3_GetRegion, None, itkImportImageFilterSS3)
itkImportImageFilterSS3.GetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS3_GetSpacing, None, itkImportImageFilterSS3)
itkImportImageFilterSS3.SetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS3_SetSpacing, None, itkImportImageFilterSS3)
itkImportImageFilterSS3.GetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS3_GetOrigin, None, itkImportImageFilterSS3)
itkImportImageFilterSS3.SetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS3_SetOrigin, None, itkImportImageFilterSS3)
itkImportImageFilterSS3.SetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS3_SetDirection, None, itkImportImageFilterSS3)
itkImportImageFilterSS3.GetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterSS3_GetDirection, None, itkImportImageFilterSS3)
itkImportImageFilterSS3_swigregister = _itkImportImageFilterPython.itkImportImageFilterSS3_swigregister
itkImportImageFilterSS3_swigregister(itkImportImageFilterSS3)

def itkImportImageFilterSS3___New_orig__() -> "itkImportImageFilterSS3_Pointer":
    """itkImportImageFilterSS3___New_orig__() -> itkImportImageFilterSS3_Pointer"""
    return _itkImportImageFilterPython.itkImportImageFilterSS3___New_orig__()

def itkImportImageFilterSS3_cast(obj: 'itkLightObject') -> "itkImportImageFilterSS3 *":
    """itkImportImageFilterSS3_cast(itkLightObject obj) -> itkImportImageFilterSS3"""
    return _itkImportImageFilterPython.itkImportImageFilterSS3_cast(obj)

class itkImportImageFilterUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImportImageFilterUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImportImageFilterUC2_Pointer":
        """__New_orig__() -> itkImportImageFilterUC2_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImportImageFilterUC2_Pointer":
        """Clone(itkImportImageFilterUC2 self) -> itkImportImageFilterUC2_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterUC2_Clone(self)


    def GetImportPointer(self) -> "unsigned char *":
        """GetImportPointer(itkImportImageFilterUC2 self) -> unsigned char *"""
        return _itkImportImageFilterPython.itkImportImageFilterUC2_GetImportPointer(self)


    def SetImportPointer(self, ptr: 'unsigned char *', num: 'unsigned long long', LetImageContainerManageMemory: 'bool') -> "void":
        """SetImportPointer(itkImportImageFilterUC2 self, unsigned char * ptr, unsigned long long num, bool LetImageContainerManageMemory)"""
        return _itkImportImageFilterPython.itkImportImageFilterUC2_SetImportPointer(self, ptr, num, LetImageContainerManageMemory)


    def SetRegion(self, region: 'itkImageRegion2') -> "void":
        """SetRegion(itkImportImageFilterUC2 self, itkImageRegion2 region)"""
        return _itkImportImageFilterPython.itkImportImageFilterUC2_SetRegion(self, region)


    def GetRegion(self) -> "itkImageRegion2 const &":
        """GetRegion(itkImportImageFilterUC2 self) -> itkImageRegion2"""
        return _itkImportImageFilterPython.itkImportImageFilterUC2_GetRegion(self)


    def GetSpacing(self) -> "itkVectorD2 const &":
        """GetSpacing(itkImportImageFilterUC2 self) -> itkVectorD2"""
        return _itkImportImageFilterPython.itkImportImageFilterUC2_GetSpacing(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkImportImageFilterUC2 self, itkVectorD2 _arg)
        SetSpacing(itkImportImageFilterUC2 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterUC2_SetSpacing(self, *args)


    def GetOrigin(self) -> "itkPointD2 const &":
        """GetOrigin(itkImportImageFilterUC2 self) -> itkPointD2"""
        return _itkImportImageFilterPython.itkImportImageFilterUC2_GetOrigin(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkImportImageFilterUC2 self, itkPointD2 _arg)
        SetOrigin(itkImportImageFilterUC2 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterUC2_SetOrigin(self, *args)


    def SetDirection(self, direction: 'itkMatrixD22') -> "void":
        """SetDirection(itkImportImageFilterUC2 self, itkMatrixD22 direction)"""
        return _itkImportImageFilterPython.itkImportImageFilterUC2_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD22 const &":
        """GetDirection(itkImportImageFilterUC2 self) -> itkMatrixD22"""
        return _itkImportImageFilterPython.itkImportImageFilterUC2_GetDirection(self)

    __swig_destroy__ = _itkImportImageFilterPython.delete_itkImportImageFilterUC2

    def cast(obj: 'itkLightObject') -> "itkImportImageFilterUC2 *":
        """cast(itkLightObject obj) -> itkImportImageFilterUC2"""
        return _itkImportImageFilterPython.itkImportImageFilterUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImportImageFilterUC2

        Create a new object of the class itkImportImageFilterUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImportImageFilterUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImportImageFilterUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImportImageFilterUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImportImageFilterUC2.Clone = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC2_Clone, None, itkImportImageFilterUC2)
itkImportImageFilterUC2.GetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC2_GetImportPointer, None, itkImportImageFilterUC2)
itkImportImageFilterUC2.SetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC2_SetImportPointer, None, itkImportImageFilterUC2)
itkImportImageFilterUC2.SetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC2_SetRegion, None, itkImportImageFilterUC2)
itkImportImageFilterUC2.GetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC2_GetRegion, None, itkImportImageFilterUC2)
itkImportImageFilterUC2.GetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC2_GetSpacing, None, itkImportImageFilterUC2)
itkImportImageFilterUC2.SetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC2_SetSpacing, None, itkImportImageFilterUC2)
itkImportImageFilterUC2.GetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC2_GetOrigin, None, itkImportImageFilterUC2)
itkImportImageFilterUC2.SetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC2_SetOrigin, None, itkImportImageFilterUC2)
itkImportImageFilterUC2.SetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC2_SetDirection, None, itkImportImageFilterUC2)
itkImportImageFilterUC2.GetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC2_GetDirection, None, itkImportImageFilterUC2)
itkImportImageFilterUC2_swigregister = _itkImportImageFilterPython.itkImportImageFilterUC2_swigregister
itkImportImageFilterUC2_swigregister(itkImportImageFilterUC2)

def itkImportImageFilterUC2___New_orig__() -> "itkImportImageFilterUC2_Pointer":
    """itkImportImageFilterUC2___New_orig__() -> itkImportImageFilterUC2_Pointer"""
    return _itkImportImageFilterPython.itkImportImageFilterUC2___New_orig__()

def itkImportImageFilterUC2_cast(obj: 'itkLightObject') -> "itkImportImageFilterUC2 *":
    """itkImportImageFilterUC2_cast(itkLightObject obj) -> itkImportImageFilterUC2"""
    return _itkImportImageFilterPython.itkImportImageFilterUC2_cast(obj)

class itkImportImageFilterUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImportImageFilterUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImportImageFilterUC3_Pointer":
        """__New_orig__() -> itkImportImageFilterUC3_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImportImageFilterUC3_Pointer":
        """Clone(itkImportImageFilterUC3 self) -> itkImportImageFilterUC3_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterUC3_Clone(self)


    def GetImportPointer(self) -> "unsigned char *":
        """GetImportPointer(itkImportImageFilterUC3 self) -> unsigned char *"""
        return _itkImportImageFilterPython.itkImportImageFilterUC3_GetImportPointer(self)


    def SetImportPointer(self, ptr: 'unsigned char *', num: 'unsigned long long', LetImageContainerManageMemory: 'bool') -> "void":
        """SetImportPointer(itkImportImageFilterUC3 self, unsigned char * ptr, unsigned long long num, bool LetImageContainerManageMemory)"""
        return _itkImportImageFilterPython.itkImportImageFilterUC3_SetImportPointer(self, ptr, num, LetImageContainerManageMemory)


    def SetRegion(self, region: 'itkImageRegion3') -> "void":
        """SetRegion(itkImportImageFilterUC3 self, itkImageRegion3 region)"""
        return _itkImportImageFilterPython.itkImportImageFilterUC3_SetRegion(self, region)


    def GetRegion(self) -> "itkImageRegion3 const &":
        """GetRegion(itkImportImageFilterUC3 self) -> itkImageRegion3"""
        return _itkImportImageFilterPython.itkImportImageFilterUC3_GetRegion(self)


    def GetSpacing(self) -> "itkVectorD3 const &":
        """GetSpacing(itkImportImageFilterUC3 self) -> itkVectorD3"""
        return _itkImportImageFilterPython.itkImportImageFilterUC3_GetSpacing(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkImportImageFilterUC3 self, itkVectorD3 _arg)
        SetSpacing(itkImportImageFilterUC3 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterUC3_SetSpacing(self, *args)


    def GetOrigin(self) -> "itkPointD3 const &":
        """GetOrigin(itkImportImageFilterUC3 self) -> itkPointD3"""
        return _itkImportImageFilterPython.itkImportImageFilterUC3_GetOrigin(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkImportImageFilterUC3 self, itkPointD3 _arg)
        SetOrigin(itkImportImageFilterUC3 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterUC3_SetOrigin(self, *args)


    def SetDirection(self, direction: 'itkMatrixD33') -> "void":
        """SetDirection(itkImportImageFilterUC3 self, itkMatrixD33 direction)"""
        return _itkImportImageFilterPython.itkImportImageFilterUC3_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD33 const &":
        """GetDirection(itkImportImageFilterUC3 self) -> itkMatrixD33"""
        return _itkImportImageFilterPython.itkImportImageFilterUC3_GetDirection(self)

    __swig_destroy__ = _itkImportImageFilterPython.delete_itkImportImageFilterUC3

    def cast(obj: 'itkLightObject') -> "itkImportImageFilterUC3 *":
        """cast(itkLightObject obj) -> itkImportImageFilterUC3"""
        return _itkImportImageFilterPython.itkImportImageFilterUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImportImageFilterUC3

        Create a new object of the class itkImportImageFilterUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImportImageFilterUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImportImageFilterUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImportImageFilterUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImportImageFilterUC3.Clone = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC3_Clone, None, itkImportImageFilterUC3)
itkImportImageFilterUC3.GetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC3_GetImportPointer, None, itkImportImageFilterUC3)
itkImportImageFilterUC3.SetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC3_SetImportPointer, None, itkImportImageFilterUC3)
itkImportImageFilterUC3.SetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC3_SetRegion, None, itkImportImageFilterUC3)
itkImportImageFilterUC3.GetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC3_GetRegion, None, itkImportImageFilterUC3)
itkImportImageFilterUC3.GetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC3_GetSpacing, None, itkImportImageFilterUC3)
itkImportImageFilterUC3.SetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC3_SetSpacing, None, itkImportImageFilterUC3)
itkImportImageFilterUC3.GetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC3_GetOrigin, None, itkImportImageFilterUC3)
itkImportImageFilterUC3.SetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC3_SetOrigin, None, itkImportImageFilterUC3)
itkImportImageFilterUC3.SetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC3_SetDirection, None, itkImportImageFilterUC3)
itkImportImageFilterUC3.GetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUC3_GetDirection, None, itkImportImageFilterUC3)
itkImportImageFilterUC3_swigregister = _itkImportImageFilterPython.itkImportImageFilterUC3_swigregister
itkImportImageFilterUC3_swigregister(itkImportImageFilterUC3)

def itkImportImageFilterUC3___New_orig__() -> "itkImportImageFilterUC3_Pointer":
    """itkImportImageFilterUC3___New_orig__() -> itkImportImageFilterUC3_Pointer"""
    return _itkImportImageFilterPython.itkImportImageFilterUC3___New_orig__()

def itkImportImageFilterUC3_cast(obj: 'itkLightObject') -> "itkImportImageFilterUC3 *":
    """itkImportImageFilterUC3_cast(itkLightObject obj) -> itkImportImageFilterUC3"""
    return _itkImportImageFilterPython.itkImportImageFilterUC3_cast(obj)

class itkImportImageFilterUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImportImageFilterUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImportImageFilterUS2_Pointer":
        """__New_orig__() -> itkImportImageFilterUS2_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImportImageFilterUS2_Pointer":
        """Clone(itkImportImageFilterUS2 self) -> itkImportImageFilterUS2_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterUS2_Clone(self)


    def GetImportPointer(self) -> "unsigned short *":
        """GetImportPointer(itkImportImageFilterUS2 self) -> unsigned short *"""
        return _itkImportImageFilterPython.itkImportImageFilterUS2_GetImportPointer(self)


    def SetImportPointer(self, ptr: 'unsigned short *', num: 'unsigned long long', LetImageContainerManageMemory: 'bool') -> "void":
        """SetImportPointer(itkImportImageFilterUS2 self, unsigned short * ptr, unsigned long long num, bool LetImageContainerManageMemory)"""
        return _itkImportImageFilterPython.itkImportImageFilterUS2_SetImportPointer(self, ptr, num, LetImageContainerManageMemory)


    def SetRegion(self, region: 'itkImageRegion2') -> "void":
        """SetRegion(itkImportImageFilterUS2 self, itkImageRegion2 region)"""
        return _itkImportImageFilterPython.itkImportImageFilterUS2_SetRegion(self, region)


    def GetRegion(self) -> "itkImageRegion2 const &":
        """GetRegion(itkImportImageFilterUS2 self) -> itkImageRegion2"""
        return _itkImportImageFilterPython.itkImportImageFilterUS2_GetRegion(self)


    def GetSpacing(self) -> "itkVectorD2 const &":
        """GetSpacing(itkImportImageFilterUS2 self) -> itkVectorD2"""
        return _itkImportImageFilterPython.itkImportImageFilterUS2_GetSpacing(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkImportImageFilterUS2 self, itkVectorD2 _arg)
        SetSpacing(itkImportImageFilterUS2 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterUS2_SetSpacing(self, *args)


    def GetOrigin(self) -> "itkPointD2 const &":
        """GetOrigin(itkImportImageFilterUS2 self) -> itkPointD2"""
        return _itkImportImageFilterPython.itkImportImageFilterUS2_GetOrigin(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkImportImageFilterUS2 self, itkPointD2 _arg)
        SetOrigin(itkImportImageFilterUS2 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterUS2_SetOrigin(self, *args)


    def SetDirection(self, direction: 'itkMatrixD22') -> "void":
        """SetDirection(itkImportImageFilterUS2 self, itkMatrixD22 direction)"""
        return _itkImportImageFilterPython.itkImportImageFilterUS2_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD22 const &":
        """GetDirection(itkImportImageFilterUS2 self) -> itkMatrixD22"""
        return _itkImportImageFilterPython.itkImportImageFilterUS2_GetDirection(self)

    __swig_destroy__ = _itkImportImageFilterPython.delete_itkImportImageFilterUS2

    def cast(obj: 'itkLightObject') -> "itkImportImageFilterUS2 *":
        """cast(itkLightObject obj) -> itkImportImageFilterUS2"""
        return _itkImportImageFilterPython.itkImportImageFilterUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImportImageFilterUS2

        Create a new object of the class itkImportImageFilterUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImportImageFilterUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImportImageFilterUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImportImageFilterUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImportImageFilterUS2.Clone = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS2_Clone, None, itkImportImageFilterUS2)
itkImportImageFilterUS2.GetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS2_GetImportPointer, None, itkImportImageFilterUS2)
itkImportImageFilterUS2.SetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS2_SetImportPointer, None, itkImportImageFilterUS2)
itkImportImageFilterUS2.SetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS2_SetRegion, None, itkImportImageFilterUS2)
itkImportImageFilterUS2.GetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS2_GetRegion, None, itkImportImageFilterUS2)
itkImportImageFilterUS2.GetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS2_GetSpacing, None, itkImportImageFilterUS2)
itkImportImageFilterUS2.SetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS2_SetSpacing, None, itkImportImageFilterUS2)
itkImportImageFilterUS2.GetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS2_GetOrigin, None, itkImportImageFilterUS2)
itkImportImageFilterUS2.SetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS2_SetOrigin, None, itkImportImageFilterUS2)
itkImportImageFilterUS2.SetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS2_SetDirection, None, itkImportImageFilterUS2)
itkImportImageFilterUS2.GetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS2_GetDirection, None, itkImportImageFilterUS2)
itkImportImageFilterUS2_swigregister = _itkImportImageFilterPython.itkImportImageFilterUS2_swigregister
itkImportImageFilterUS2_swigregister(itkImportImageFilterUS2)

def itkImportImageFilterUS2___New_orig__() -> "itkImportImageFilterUS2_Pointer":
    """itkImportImageFilterUS2___New_orig__() -> itkImportImageFilterUS2_Pointer"""
    return _itkImportImageFilterPython.itkImportImageFilterUS2___New_orig__()

def itkImportImageFilterUS2_cast(obj: 'itkLightObject') -> "itkImportImageFilterUS2 *":
    """itkImportImageFilterUS2_cast(itkLightObject obj) -> itkImportImageFilterUS2"""
    return _itkImportImageFilterPython.itkImportImageFilterUS2_cast(obj)

class itkImportImageFilterUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImportImageFilterUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImportImageFilterUS3_Pointer":
        """__New_orig__() -> itkImportImageFilterUS3_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImportImageFilterUS3_Pointer":
        """Clone(itkImportImageFilterUS3 self) -> itkImportImageFilterUS3_Pointer"""
        return _itkImportImageFilterPython.itkImportImageFilterUS3_Clone(self)


    def GetImportPointer(self) -> "unsigned short *":
        """GetImportPointer(itkImportImageFilterUS3 self) -> unsigned short *"""
        return _itkImportImageFilterPython.itkImportImageFilterUS3_GetImportPointer(self)


    def SetImportPointer(self, ptr: 'unsigned short *', num: 'unsigned long long', LetImageContainerManageMemory: 'bool') -> "void":
        """SetImportPointer(itkImportImageFilterUS3 self, unsigned short * ptr, unsigned long long num, bool LetImageContainerManageMemory)"""
        return _itkImportImageFilterPython.itkImportImageFilterUS3_SetImportPointer(self, ptr, num, LetImageContainerManageMemory)


    def SetRegion(self, region: 'itkImageRegion3') -> "void":
        """SetRegion(itkImportImageFilterUS3 self, itkImageRegion3 region)"""
        return _itkImportImageFilterPython.itkImportImageFilterUS3_SetRegion(self, region)


    def GetRegion(self) -> "itkImageRegion3 const &":
        """GetRegion(itkImportImageFilterUS3 self) -> itkImageRegion3"""
        return _itkImportImageFilterPython.itkImportImageFilterUS3_GetRegion(self)


    def GetSpacing(self) -> "itkVectorD3 const &":
        """GetSpacing(itkImportImageFilterUS3 self) -> itkVectorD3"""
        return _itkImportImageFilterPython.itkImportImageFilterUS3_GetSpacing(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkImportImageFilterUS3 self, itkVectorD3 _arg)
        SetSpacing(itkImportImageFilterUS3 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterUS3_SetSpacing(self, *args)


    def GetOrigin(self) -> "itkPointD3 const &":
        """GetOrigin(itkImportImageFilterUS3 self) -> itkPointD3"""
        return _itkImportImageFilterPython.itkImportImageFilterUS3_GetOrigin(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkImportImageFilterUS3 self, itkPointD3 _arg)
        SetOrigin(itkImportImageFilterUS3 self, float const * data)
        """
        return _itkImportImageFilterPython.itkImportImageFilterUS3_SetOrigin(self, *args)


    def SetDirection(self, direction: 'itkMatrixD33') -> "void":
        """SetDirection(itkImportImageFilterUS3 self, itkMatrixD33 direction)"""
        return _itkImportImageFilterPython.itkImportImageFilterUS3_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD33 const &":
        """GetDirection(itkImportImageFilterUS3 self) -> itkMatrixD33"""
        return _itkImportImageFilterPython.itkImportImageFilterUS3_GetDirection(self)

    __swig_destroy__ = _itkImportImageFilterPython.delete_itkImportImageFilterUS3

    def cast(obj: 'itkLightObject') -> "itkImportImageFilterUS3 *":
        """cast(itkLightObject obj) -> itkImportImageFilterUS3"""
        return _itkImportImageFilterPython.itkImportImageFilterUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImportImageFilterUS3

        Create a new object of the class itkImportImageFilterUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImportImageFilterUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImportImageFilterUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImportImageFilterUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImportImageFilterUS3.Clone = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS3_Clone, None, itkImportImageFilterUS3)
itkImportImageFilterUS3.GetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS3_GetImportPointer, None, itkImportImageFilterUS3)
itkImportImageFilterUS3.SetImportPointer = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS3_SetImportPointer, None, itkImportImageFilterUS3)
itkImportImageFilterUS3.SetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS3_SetRegion, None, itkImportImageFilterUS3)
itkImportImageFilterUS3.GetRegion = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS3_GetRegion, None, itkImportImageFilterUS3)
itkImportImageFilterUS3.GetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS3_GetSpacing, None, itkImportImageFilterUS3)
itkImportImageFilterUS3.SetSpacing = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS3_SetSpacing, None, itkImportImageFilterUS3)
itkImportImageFilterUS3.GetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS3_GetOrigin, None, itkImportImageFilterUS3)
itkImportImageFilterUS3.SetOrigin = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS3_SetOrigin, None, itkImportImageFilterUS3)
itkImportImageFilterUS3.SetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS3_SetDirection, None, itkImportImageFilterUS3)
itkImportImageFilterUS3.GetDirection = new_instancemethod(_itkImportImageFilterPython.itkImportImageFilterUS3_GetDirection, None, itkImportImageFilterUS3)
itkImportImageFilterUS3_swigregister = _itkImportImageFilterPython.itkImportImageFilterUS3_swigregister
itkImportImageFilterUS3_swigregister(itkImportImageFilterUS3)

def itkImportImageFilterUS3___New_orig__() -> "itkImportImageFilterUS3_Pointer":
    """itkImportImageFilterUS3___New_orig__() -> itkImportImageFilterUS3_Pointer"""
    return _itkImportImageFilterPython.itkImportImageFilterUS3___New_orig__()

def itkImportImageFilterUS3_cast(obj: 'itkLightObject') -> "itkImportImageFilterUS3 *":
    """itkImportImageFilterUS3_cast(itkLightObject obj) -> itkImportImageFilterUS3"""
    return _itkImportImageFilterPython.itkImportImageFilterUS3_cast(obj)


def import_image_filter(*args, **kwargs):
    """Procedural interface for ImportImageFilter"""
    import itk
    instance = itk.ImportImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def import_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ImportImageFilter, itkTemplate.itkTemplate):
        import_image_filter.__doc__ = itk.ImportImageFilter.values()[0].__doc__
    else:
        import_image_filter.__doc__ = itk.ImportImageFilter.__doc__




