# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkHuangThresholdCalculatorPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkHuangThresholdCalculatorPython', [dirname(__file__)])
        except ImportError:
            import _itkHuangThresholdCalculatorPython
            return _itkHuangThresholdCalculatorPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkHuangThresholdCalculatorPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkHuangThresholdCalculatorPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkHuangThresholdCalculatorPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramThresholdCalculatorPython
import itkHistogramPython
import itkSamplePython
import ITKCommonBasePython
import pyBasePython
import itkArrayPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkSimpleDataObjectDecoratorPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkCovariantVectorPython

def itkHuangThresholdCalculatorHFF_New():
  return itkHuangThresholdCalculatorHFF.New()


def itkHuangThresholdCalculatorHDF_New():
  return itkHuangThresholdCalculatorHDF.New()


def itkHuangThresholdCalculatorHFUS_New():
  return itkHuangThresholdCalculatorHFUS.New()


def itkHuangThresholdCalculatorHDUS_New():
  return itkHuangThresholdCalculatorHDUS.New()


def itkHuangThresholdCalculatorHFUC_New():
  return itkHuangThresholdCalculatorHFUC.New()


def itkHuangThresholdCalculatorHDUC_New():
  return itkHuangThresholdCalculatorHDUC.New()


def itkHuangThresholdCalculatorHFSS_New():
  return itkHuangThresholdCalculatorHFSS.New()


def itkHuangThresholdCalculatorHDSS_New():
  return itkHuangThresholdCalculatorHDSS.New()

class itkHuangThresholdCalculatorHDF(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDF):
    """Proxy of C++ itkHuangThresholdCalculatorHDF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdCalculatorHDF_Pointer":
        """__New_orig__() -> itkHuangThresholdCalculatorHDF_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdCalculatorHDF_Pointer":
        """Clone(itkHuangThresholdCalculatorHDF self) -> itkHuangThresholdCalculatorHDF_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDF_Clone(self)

    __swig_destroy__ = _itkHuangThresholdCalculatorPython.delete_itkHuangThresholdCalculatorHDF

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHDF *":
        """cast(itkLightObject obj) -> itkHuangThresholdCalculatorHDF"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdCalculatorHDF

        Create a new object of the class itkHuangThresholdCalculatorHDF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdCalculatorHDF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdCalculatorHDF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdCalculatorHDF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdCalculatorHDF.Clone = new_instancemethod(_itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDF_Clone, None, itkHuangThresholdCalculatorHDF)
itkHuangThresholdCalculatorHDF_swigregister = _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDF_swigregister
itkHuangThresholdCalculatorHDF_swigregister(itkHuangThresholdCalculatorHDF)

def itkHuangThresholdCalculatorHDF___New_orig__() -> "itkHuangThresholdCalculatorHDF_Pointer":
    """itkHuangThresholdCalculatorHDF___New_orig__() -> itkHuangThresholdCalculatorHDF_Pointer"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDF___New_orig__()

def itkHuangThresholdCalculatorHDF_cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHDF *":
    """itkHuangThresholdCalculatorHDF_cast(itkLightObject obj) -> itkHuangThresholdCalculatorHDF"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDF_cast(obj)

class itkHuangThresholdCalculatorHDSS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDSS):
    """Proxy of C++ itkHuangThresholdCalculatorHDSS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdCalculatorHDSS_Pointer":
        """__New_orig__() -> itkHuangThresholdCalculatorHDSS_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDSS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdCalculatorHDSS_Pointer":
        """Clone(itkHuangThresholdCalculatorHDSS self) -> itkHuangThresholdCalculatorHDSS_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDSS_Clone(self)

    __swig_destroy__ = _itkHuangThresholdCalculatorPython.delete_itkHuangThresholdCalculatorHDSS

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHDSS *":
        """cast(itkLightObject obj) -> itkHuangThresholdCalculatorHDSS"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDSS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdCalculatorHDSS

        Create a new object of the class itkHuangThresholdCalculatorHDSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdCalculatorHDSS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdCalculatorHDSS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdCalculatorHDSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdCalculatorHDSS.Clone = new_instancemethod(_itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDSS_Clone, None, itkHuangThresholdCalculatorHDSS)
itkHuangThresholdCalculatorHDSS_swigregister = _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDSS_swigregister
itkHuangThresholdCalculatorHDSS_swigregister(itkHuangThresholdCalculatorHDSS)

def itkHuangThresholdCalculatorHDSS___New_orig__() -> "itkHuangThresholdCalculatorHDSS_Pointer":
    """itkHuangThresholdCalculatorHDSS___New_orig__() -> itkHuangThresholdCalculatorHDSS_Pointer"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDSS___New_orig__()

def itkHuangThresholdCalculatorHDSS_cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHDSS *":
    """itkHuangThresholdCalculatorHDSS_cast(itkLightObject obj) -> itkHuangThresholdCalculatorHDSS"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDSS_cast(obj)

class itkHuangThresholdCalculatorHDUC(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUC):
    """Proxy of C++ itkHuangThresholdCalculatorHDUC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdCalculatorHDUC_Pointer":
        """__New_orig__() -> itkHuangThresholdCalculatorHDUC_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdCalculatorHDUC_Pointer":
        """Clone(itkHuangThresholdCalculatorHDUC self) -> itkHuangThresholdCalculatorHDUC_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUC_Clone(self)

    __swig_destroy__ = _itkHuangThresholdCalculatorPython.delete_itkHuangThresholdCalculatorHDUC

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHDUC *":
        """cast(itkLightObject obj) -> itkHuangThresholdCalculatorHDUC"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdCalculatorHDUC

        Create a new object of the class itkHuangThresholdCalculatorHDUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdCalculatorHDUC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdCalculatorHDUC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdCalculatorHDUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdCalculatorHDUC.Clone = new_instancemethod(_itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUC_Clone, None, itkHuangThresholdCalculatorHDUC)
itkHuangThresholdCalculatorHDUC_swigregister = _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUC_swigregister
itkHuangThresholdCalculatorHDUC_swigregister(itkHuangThresholdCalculatorHDUC)

def itkHuangThresholdCalculatorHDUC___New_orig__() -> "itkHuangThresholdCalculatorHDUC_Pointer":
    """itkHuangThresholdCalculatorHDUC___New_orig__() -> itkHuangThresholdCalculatorHDUC_Pointer"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUC___New_orig__()

def itkHuangThresholdCalculatorHDUC_cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHDUC *":
    """itkHuangThresholdCalculatorHDUC_cast(itkLightObject obj) -> itkHuangThresholdCalculatorHDUC"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUC_cast(obj)

class itkHuangThresholdCalculatorHDUS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUS):
    """Proxy of C++ itkHuangThresholdCalculatorHDUS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdCalculatorHDUS_Pointer":
        """__New_orig__() -> itkHuangThresholdCalculatorHDUS_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdCalculatorHDUS_Pointer":
        """Clone(itkHuangThresholdCalculatorHDUS self) -> itkHuangThresholdCalculatorHDUS_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUS_Clone(self)

    __swig_destroy__ = _itkHuangThresholdCalculatorPython.delete_itkHuangThresholdCalculatorHDUS

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHDUS *":
        """cast(itkLightObject obj) -> itkHuangThresholdCalculatorHDUS"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdCalculatorHDUS

        Create a new object of the class itkHuangThresholdCalculatorHDUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdCalculatorHDUS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdCalculatorHDUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdCalculatorHDUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdCalculatorHDUS.Clone = new_instancemethod(_itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUS_Clone, None, itkHuangThresholdCalculatorHDUS)
itkHuangThresholdCalculatorHDUS_swigregister = _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUS_swigregister
itkHuangThresholdCalculatorHDUS_swigregister(itkHuangThresholdCalculatorHDUS)

def itkHuangThresholdCalculatorHDUS___New_orig__() -> "itkHuangThresholdCalculatorHDUS_Pointer":
    """itkHuangThresholdCalculatorHDUS___New_orig__() -> itkHuangThresholdCalculatorHDUS_Pointer"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUS___New_orig__()

def itkHuangThresholdCalculatorHDUS_cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHDUS *":
    """itkHuangThresholdCalculatorHDUS_cast(itkLightObject obj) -> itkHuangThresholdCalculatorHDUS"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHDUS_cast(obj)

class itkHuangThresholdCalculatorHFF(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFF):
    """Proxy of C++ itkHuangThresholdCalculatorHFF class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdCalculatorHFF_Pointer":
        """__New_orig__() -> itkHuangThresholdCalculatorHFF_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdCalculatorHFF_Pointer":
        """Clone(itkHuangThresholdCalculatorHFF self) -> itkHuangThresholdCalculatorHFF_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFF_Clone(self)

    __swig_destroy__ = _itkHuangThresholdCalculatorPython.delete_itkHuangThresholdCalculatorHFF

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHFF *":
        """cast(itkLightObject obj) -> itkHuangThresholdCalculatorHFF"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdCalculatorHFF

        Create a new object of the class itkHuangThresholdCalculatorHFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdCalculatorHFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdCalculatorHFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdCalculatorHFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdCalculatorHFF.Clone = new_instancemethod(_itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFF_Clone, None, itkHuangThresholdCalculatorHFF)
itkHuangThresholdCalculatorHFF_swigregister = _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFF_swigregister
itkHuangThresholdCalculatorHFF_swigregister(itkHuangThresholdCalculatorHFF)

def itkHuangThresholdCalculatorHFF___New_orig__() -> "itkHuangThresholdCalculatorHFF_Pointer":
    """itkHuangThresholdCalculatorHFF___New_orig__() -> itkHuangThresholdCalculatorHFF_Pointer"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFF___New_orig__()

def itkHuangThresholdCalculatorHFF_cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHFF *":
    """itkHuangThresholdCalculatorHFF_cast(itkLightObject obj) -> itkHuangThresholdCalculatorHFF"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFF_cast(obj)

class itkHuangThresholdCalculatorHFSS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFSS):
    """Proxy of C++ itkHuangThresholdCalculatorHFSS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdCalculatorHFSS_Pointer":
        """__New_orig__() -> itkHuangThresholdCalculatorHFSS_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFSS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdCalculatorHFSS_Pointer":
        """Clone(itkHuangThresholdCalculatorHFSS self) -> itkHuangThresholdCalculatorHFSS_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFSS_Clone(self)

    __swig_destroy__ = _itkHuangThresholdCalculatorPython.delete_itkHuangThresholdCalculatorHFSS

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHFSS *":
        """cast(itkLightObject obj) -> itkHuangThresholdCalculatorHFSS"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFSS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdCalculatorHFSS

        Create a new object of the class itkHuangThresholdCalculatorHFSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdCalculatorHFSS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdCalculatorHFSS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdCalculatorHFSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdCalculatorHFSS.Clone = new_instancemethod(_itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFSS_Clone, None, itkHuangThresholdCalculatorHFSS)
itkHuangThresholdCalculatorHFSS_swigregister = _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFSS_swigregister
itkHuangThresholdCalculatorHFSS_swigregister(itkHuangThresholdCalculatorHFSS)

def itkHuangThresholdCalculatorHFSS___New_orig__() -> "itkHuangThresholdCalculatorHFSS_Pointer":
    """itkHuangThresholdCalculatorHFSS___New_orig__() -> itkHuangThresholdCalculatorHFSS_Pointer"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFSS___New_orig__()

def itkHuangThresholdCalculatorHFSS_cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHFSS *":
    """itkHuangThresholdCalculatorHFSS_cast(itkLightObject obj) -> itkHuangThresholdCalculatorHFSS"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFSS_cast(obj)

class itkHuangThresholdCalculatorHFUC(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUC):
    """Proxy of C++ itkHuangThresholdCalculatorHFUC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdCalculatorHFUC_Pointer":
        """__New_orig__() -> itkHuangThresholdCalculatorHFUC_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdCalculatorHFUC_Pointer":
        """Clone(itkHuangThresholdCalculatorHFUC self) -> itkHuangThresholdCalculatorHFUC_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUC_Clone(self)

    __swig_destroy__ = _itkHuangThresholdCalculatorPython.delete_itkHuangThresholdCalculatorHFUC

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHFUC *":
        """cast(itkLightObject obj) -> itkHuangThresholdCalculatorHFUC"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdCalculatorHFUC

        Create a new object of the class itkHuangThresholdCalculatorHFUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdCalculatorHFUC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdCalculatorHFUC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdCalculatorHFUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdCalculatorHFUC.Clone = new_instancemethod(_itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUC_Clone, None, itkHuangThresholdCalculatorHFUC)
itkHuangThresholdCalculatorHFUC_swigregister = _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUC_swigregister
itkHuangThresholdCalculatorHFUC_swigregister(itkHuangThresholdCalculatorHFUC)

def itkHuangThresholdCalculatorHFUC___New_orig__() -> "itkHuangThresholdCalculatorHFUC_Pointer":
    """itkHuangThresholdCalculatorHFUC___New_orig__() -> itkHuangThresholdCalculatorHFUC_Pointer"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUC___New_orig__()

def itkHuangThresholdCalculatorHFUC_cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHFUC *":
    """itkHuangThresholdCalculatorHFUC_cast(itkLightObject obj) -> itkHuangThresholdCalculatorHFUC"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUC_cast(obj)

class itkHuangThresholdCalculatorHFUS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUS):
    """Proxy of C++ itkHuangThresholdCalculatorHFUS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdCalculatorHFUS_Pointer":
        """__New_orig__() -> itkHuangThresholdCalculatorHFUS_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdCalculatorHFUS_Pointer":
        """Clone(itkHuangThresholdCalculatorHFUS self) -> itkHuangThresholdCalculatorHFUS_Pointer"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUS_Clone(self)

    __swig_destroy__ = _itkHuangThresholdCalculatorPython.delete_itkHuangThresholdCalculatorHFUS

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHFUS *":
        """cast(itkLightObject obj) -> itkHuangThresholdCalculatorHFUS"""
        return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdCalculatorHFUS

        Create a new object of the class itkHuangThresholdCalculatorHFUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdCalculatorHFUS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdCalculatorHFUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdCalculatorHFUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdCalculatorHFUS.Clone = new_instancemethod(_itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUS_Clone, None, itkHuangThresholdCalculatorHFUS)
itkHuangThresholdCalculatorHFUS_swigregister = _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUS_swigregister
itkHuangThresholdCalculatorHFUS_swigregister(itkHuangThresholdCalculatorHFUS)

def itkHuangThresholdCalculatorHFUS___New_orig__() -> "itkHuangThresholdCalculatorHFUS_Pointer":
    """itkHuangThresholdCalculatorHFUS___New_orig__() -> itkHuangThresholdCalculatorHFUS_Pointer"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUS___New_orig__()

def itkHuangThresholdCalculatorHFUS_cast(obj: 'itkLightObject') -> "itkHuangThresholdCalculatorHFUS *":
    """itkHuangThresholdCalculatorHFUS_cast(itkLightObject obj) -> itkHuangThresholdCalculatorHFUS"""
    return _itkHuangThresholdCalculatorPython.itkHuangThresholdCalculatorHFUS_cast(obj)


def huang_threshold_calculator(*args, **kwargs):
    """Procedural interface for HuangThresholdCalculator"""
    import itk
    instance = itk.HuangThresholdCalculator.New(*args, **kwargs)
    return instance.__internal_call__()

def huang_threshold_calculator_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.HuangThresholdCalculator, itkTemplate.itkTemplate):
        huang_threshold_calculator.__doc__ = itk.HuangThresholdCalculator.values()[0].__doc__
    else:
        huang_threshold_calculator.__doc__ = itk.HuangThresholdCalculator.__doc__




