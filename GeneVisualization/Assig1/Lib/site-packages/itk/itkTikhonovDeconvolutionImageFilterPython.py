# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkTikhonovDeconvolutionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkTikhonovDeconvolutionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkTikhonovDeconvolutionImageFilterPython
            return _itkTikhonovDeconvolutionImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkTikhonovDeconvolutionImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkTikhonovDeconvolutionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkTikhonovDeconvolutionImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkInverseDeconvolutionImageFilterPython
import itkFFTConvolutionImageFilterPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkConvolutionImageFilterBasePython
import itkImageBoundaryConditionPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkTikhonovDeconvolutionImageFilterIF3IF3_New():
  return itkTikhonovDeconvolutionImageFilterIF3IF3.New()


def itkTikhonovDeconvolutionImageFilterIF2IF2_New():
  return itkTikhonovDeconvolutionImageFilterIF2IF2.New()


def itkTikhonovDeconvolutionImageFilterIUS3IUS3_New():
  return itkTikhonovDeconvolutionImageFilterIUS3IUS3.New()


def itkTikhonovDeconvolutionImageFilterIUS2IUS2_New():
  return itkTikhonovDeconvolutionImageFilterIUS2IUS2.New()


def itkTikhonovDeconvolutionImageFilterIUC3IUC3_New():
  return itkTikhonovDeconvolutionImageFilterIUC3IUC3.New()


def itkTikhonovDeconvolutionImageFilterIUC2IUC2_New():
  return itkTikhonovDeconvolutionImageFilterIUC2IUC2.New()


def itkTikhonovDeconvolutionImageFilterISS3ISS3_New():
  return itkTikhonovDeconvolutionImageFilterISS3ISS3.New()


def itkTikhonovDeconvolutionImageFilterISS2ISS2_New():
  return itkTikhonovDeconvolutionImageFilterISS2ISS2.New()

class itkTikhonovDeconvolutionImageFilterIF2IF2(itkInverseDeconvolutionImageFilterPython.itkInverseDeconvolutionImageFilterIF2IF2):
    """Proxy of C++ itkTikhonovDeconvolutionImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTikhonovDeconvolutionImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkTikhonovDeconvolutionImageFilterIF2IF2_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTikhonovDeconvolutionImageFilterIF2IF2_Pointer":
        """Clone(itkTikhonovDeconvolutionImageFilterIF2IF2 self) -> itkTikhonovDeconvolutionImageFilterIF2IF2_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF2IF2_Clone(self)


    def SetRegularizationConstant(self, _arg: 'double const') -> "void":
        """SetRegularizationConstant(itkTikhonovDeconvolutionImageFilterIF2IF2 self, double const _arg)"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF2IF2_SetRegularizationConstant(self, _arg)


    def GetRegularizationConstant(self) -> "double":
        """GetRegularizationConstant(itkTikhonovDeconvolutionImageFilterIF2IF2 self) -> double"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF2IF2_GetRegularizationConstant(self)

    __swig_destroy__ = _itkTikhonovDeconvolutionImageFilterPython.delete_itkTikhonovDeconvolutionImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterIF2IF2"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTikhonovDeconvolutionImageFilterIF2IF2

        Create a new object of the class itkTikhonovDeconvolutionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTikhonovDeconvolutionImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTikhonovDeconvolutionImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTikhonovDeconvolutionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTikhonovDeconvolutionImageFilterIF2IF2.Clone = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF2IF2_Clone, None, itkTikhonovDeconvolutionImageFilterIF2IF2)
itkTikhonovDeconvolutionImageFilterIF2IF2.SetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF2IF2_SetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterIF2IF2)
itkTikhonovDeconvolutionImageFilterIF2IF2.GetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF2IF2_GetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterIF2IF2)
itkTikhonovDeconvolutionImageFilterIF2IF2_swigregister = _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF2IF2_swigregister
itkTikhonovDeconvolutionImageFilterIF2IF2_swigregister(itkTikhonovDeconvolutionImageFilterIF2IF2)

def itkTikhonovDeconvolutionImageFilterIF2IF2___New_orig__() -> "itkTikhonovDeconvolutionImageFilterIF2IF2_Pointer":
    """itkTikhonovDeconvolutionImageFilterIF2IF2___New_orig__() -> itkTikhonovDeconvolutionImageFilterIF2IF2_Pointer"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF2IF2___New_orig__()

def itkTikhonovDeconvolutionImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterIF2IF2 *":
    """itkTikhonovDeconvolutionImageFilterIF2IF2_cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterIF2IF2"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF2IF2_cast(obj)

class itkTikhonovDeconvolutionImageFilterIF3IF3(itkInverseDeconvolutionImageFilterPython.itkInverseDeconvolutionImageFilterIF3IF3):
    """Proxy of C++ itkTikhonovDeconvolutionImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTikhonovDeconvolutionImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkTikhonovDeconvolutionImageFilterIF3IF3_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTikhonovDeconvolutionImageFilterIF3IF3_Pointer":
        """Clone(itkTikhonovDeconvolutionImageFilterIF3IF3 self) -> itkTikhonovDeconvolutionImageFilterIF3IF3_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF3IF3_Clone(self)


    def SetRegularizationConstant(self, _arg: 'double const') -> "void":
        """SetRegularizationConstant(itkTikhonovDeconvolutionImageFilterIF3IF3 self, double const _arg)"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF3IF3_SetRegularizationConstant(self, _arg)


    def GetRegularizationConstant(self) -> "double":
        """GetRegularizationConstant(itkTikhonovDeconvolutionImageFilterIF3IF3 self) -> double"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF3IF3_GetRegularizationConstant(self)

    __swig_destroy__ = _itkTikhonovDeconvolutionImageFilterPython.delete_itkTikhonovDeconvolutionImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterIF3IF3"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTikhonovDeconvolutionImageFilterIF3IF3

        Create a new object of the class itkTikhonovDeconvolutionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTikhonovDeconvolutionImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTikhonovDeconvolutionImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTikhonovDeconvolutionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTikhonovDeconvolutionImageFilterIF3IF3.Clone = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF3IF3_Clone, None, itkTikhonovDeconvolutionImageFilterIF3IF3)
itkTikhonovDeconvolutionImageFilterIF3IF3.SetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF3IF3_SetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterIF3IF3)
itkTikhonovDeconvolutionImageFilterIF3IF3.GetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF3IF3_GetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterIF3IF3)
itkTikhonovDeconvolutionImageFilterIF3IF3_swigregister = _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF3IF3_swigregister
itkTikhonovDeconvolutionImageFilterIF3IF3_swigregister(itkTikhonovDeconvolutionImageFilterIF3IF3)

def itkTikhonovDeconvolutionImageFilterIF3IF3___New_orig__() -> "itkTikhonovDeconvolutionImageFilterIF3IF3_Pointer":
    """itkTikhonovDeconvolutionImageFilterIF3IF3___New_orig__() -> itkTikhonovDeconvolutionImageFilterIF3IF3_Pointer"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF3IF3___New_orig__()

def itkTikhonovDeconvolutionImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterIF3IF3 *":
    """itkTikhonovDeconvolutionImageFilterIF3IF3_cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterIF3IF3"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIF3IF3_cast(obj)

class itkTikhonovDeconvolutionImageFilterISS2ISS2(itkInverseDeconvolutionImageFilterPython.itkInverseDeconvolutionImageFilterISS2ISS2):
    """Proxy of C++ itkTikhonovDeconvolutionImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTikhonovDeconvolutionImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkTikhonovDeconvolutionImageFilterISS2ISS2_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTikhonovDeconvolutionImageFilterISS2ISS2_Pointer":
        """Clone(itkTikhonovDeconvolutionImageFilterISS2ISS2 self) -> itkTikhonovDeconvolutionImageFilterISS2ISS2_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS2ISS2_Clone(self)


    def SetRegularizationConstant(self, _arg: 'double const') -> "void":
        """SetRegularizationConstant(itkTikhonovDeconvolutionImageFilterISS2ISS2 self, double const _arg)"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS2ISS2_SetRegularizationConstant(self, _arg)


    def GetRegularizationConstant(self) -> "double":
        """GetRegularizationConstant(itkTikhonovDeconvolutionImageFilterISS2ISS2 self) -> double"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS2ISS2_GetRegularizationConstant(self)

    __swig_destroy__ = _itkTikhonovDeconvolutionImageFilterPython.delete_itkTikhonovDeconvolutionImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterISS2ISS2"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTikhonovDeconvolutionImageFilterISS2ISS2

        Create a new object of the class itkTikhonovDeconvolutionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTikhonovDeconvolutionImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTikhonovDeconvolutionImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTikhonovDeconvolutionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTikhonovDeconvolutionImageFilterISS2ISS2.Clone = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS2ISS2_Clone, None, itkTikhonovDeconvolutionImageFilterISS2ISS2)
itkTikhonovDeconvolutionImageFilterISS2ISS2.SetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS2ISS2_SetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterISS2ISS2)
itkTikhonovDeconvolutionImageFilterISS2ISS2.GetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS2ISS2_GetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterISS2ISS2)
itkTikhonovDeconvolutionImageFilterISS2ISS2_swigregister = _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS2ISS2_swigregister
itkTikhonovDeconvolutionImageFilterISS2ISS2_swigregister(itkTikhonovDeconvolutionImageFilterISS2ISS2)

def itkTikhonovDeconvolutionImageFilterISS2ISS2___New_orig__() -> "itkTikhonovDeconvolutionImageFilterISS2ISS2_Pointer":
    """itkTikhonovDeconvolutionImageFilterISS2ISS2___New_orig__() -> itkTikhonovDeconvolutionImageFilterISS2ISS2_Pointer"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS2ISS2___New_orig__()

def itkTikhonovDeconvolutionImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterISS2ISS2 *":
    """itkTikhonovDeconvolutionImageFilterISS2ISS2_cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterISS2ISS2"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS2ISS2_cast(obj)

class itkTikhonovDeconvolutionImageFilterISS3ISS3(itkInverseDeconvolutionImageFilterPython.itkInverseDeconvolutionImageFilterISS3ISS3):
    """Proxy of C++ itkTikhonovDeconvolutionImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTikhonovDeconvolutionImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkTikhonovDeconvolutionImageFilterISS3ISS3_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTikhonovDeconvolutionImageFilterISS3ISS3_Pointer":
        """Clone(itkTikhonovDeconvolutionImageFilterISS3ISS3 self) -> itkTikhonovDeconvolutionImageFilterISS3ISS3_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS3ISS3_Clone(self)


    def SetRegularizationConstant(self, _arg: 'double const') -> "void":
        """SetRegularizationConstant(itkTikhonovDeconvolutionImageFilterISS3ISS3 self, double const _arg)"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS3ISS3_SetRegularizationConstant(self, _arg)


    def GetRegularizationConstant(self) -> "double":
        """GetRegularizationConstant(itkTikhonovDeconvolutionImageFilterISS3ISS3 self) -> double"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS3ISS3_GetRegularizationConstant(self)

    __swig_destroy__ = _itkTikhonovDeconvolutionImageFilterPython.delete_itkTikhonovDeconvolutionImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterISS3ISS3"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTikhonovDeconvolutionImageFilterISS3ISS3

        Create a new object of the class itkTikhonovDeconvolutionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTikhonovDeconvolutionImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTikhonovDeconvolutionImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTikhonovDeconvolutionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTikhonovDeconvolutionImageFilterISS3ISS3.Clone = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS3ISS3_Clone, None, itkTikhonovDeconvolutionImageFilterISS3ISS3)
itkTikhonovDeconvolutionImageFilterISS3ISS3.SetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS3ISS3_SetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterISS3ISS3)
itkTikhonovDeconvolutionImageFilterISS3ISS3.GetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS3ISS3_GetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterISS3ISS3)
itkTikhonovDeconvolutionImageFilterISS3ISS3_swigregister = _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS3ISS3_swigregister
itkTikhonovDeconvolutionImageFilterISS3ISS3_swigregister(itkTikhonovDeconvolutionImageFilterISS3ISS3)

def itkTikhonovDeconvolutionImageFilterISS3ISS3___New_orig__() -> "itkTikhonovDeconvolutionImageFilterISS3ISS3_Pointer":
    """itkTikhonovDeconvolutionImageFilterISS3ISS3___New_orig__() -> itkTikhonovDeconvolutionImageFilterISS3ISS3_Pointer"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS3ISS3___New_orig__()

def itkTikhonovDeconvolutionImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterISS3ISS3 *":
    """itkTikhonovDeconvolutionImageFilterISS3ISS3_cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterISS3ISS3"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterISS3ISS3_cast(obj)

class itkTikhonovDeconvolutionImageFilterIUC2IUC2(itkInverseDeconvolutionImageFilterPython.itkInverseDeconvolutionImageFilterIUC2IUC2):
    """Proxy of C++ itkTikhonovDeconvolutionImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTikhonovDeconvolutionImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkTikhonovDeconvolutionImageFilterIUC2IUC2_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTikhonovDeconvolutionImageFilterIUC2IUC2_Pointer":
        """Clone(itkTikhonovDeconvolutionImageFilterIUC2IUC2 self) -> itkTikhonovDeconvolutionImageFilterIUC2IUC2_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC2IUC2_Clone(self)


    def SetRegularizationConstant(self, _arg: 'double const') -> "void":
        """SetRegularizationConstant(itkTikhonovDeconvolutionImageFilterIUC2IUC2 self, double const _arg)"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC2IUC2_SetRegularizationConstant(self, _arg)


    def GetRegularizationConstant(self) -> "double":
        """GetRegularizationConstant(itkTikhonovDeconvolutionImageFilterIUC2IUC2 self) -> double"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC2IUC2_GetRegularizationConstant(self)

    __swig_destroy__ = _itkTikhonovDeconvolutionImageFilterPython.delete_itkTikhonovDeconvolutionImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterIUC2IUC2"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTikhonovDeconvolutionImageFilterIUC2IUC2

        Create a new object of the class itkTikhonovDeconvolutionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTikhonovDeconvolutionImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTikhonovDeconvolutionImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTikhonovDeconvolutionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTikhonovDeconvolutionImageFilterIUC2IUC2.Clone = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC2IUC2_Clone, None, itkTikhonovDeconvolutionImageFilterIUC2IUC2)
itkTikhonovDeconvolutionImageFilterIUC2IUC2.SetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC2IUC2_SetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterIUC2IUC2)
itkTikhonovDeconvolutionImageFilterIUC2IUC2.GetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC2IUC2_GetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterIUC2IUC2)
itkTikhonovDeconvolutionImageFilterIUC2IUC2_swigregister = _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC2IUC2_swigregister
itkTikhonovDeconvolutionImageFilterIUC2IUC2_swigregister(itkTikhonovDeconvolutionImageFilterIUC2IUC2)

def itkTikhonovDeconvolutionImageFilterIUC2IUC2___New_orig__() -> "itkTikhonovDeconvolutionImageFilterIUC2IUC2_Pointer":
    """itkTikhonovDeconvolutionImageFilterIUC2IUC2___New_orig__() -> itkTikhonovDeconvolutionImageFilterIUC2IUC2_Pointer"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC2IUC2___New_orig__()

def itkTikhonovDeconvolutionImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterIUC2IUC2 *":
    """itkTikhonovDeconvolutionImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterIUC2IUC2"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC2IUC2_cast(obj)

class itkTikhonovDeconvolutionImageFilterIUC3IUC3(itkInverseDeconvolutionImageFilterPython.itkInverseDeconvolutionImageFilterIUC3IUC3):
    """Proxy of C++ itkTikhonovDeconvolutionImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTikhonovDeconvolutionImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkTikhonovDeconvolutionImageFilterIUC3IUC3_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTikhonovDeconvolutionImageFilterIUC3IUC3_Pointer":
        """Clone(itkTikhonovDeconvolutionImageFilterIUC3IUC3 self) -> itkTikhonovDeconvolutionImageFilterIUC3IUC3_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC3IUC3_Clone(self)


    def SetRegularizationConstant(self, _arg: 'double const') -> "void":
        """SetRegularizationConstant(itkTikhonovDeconvolutionImageFilterIUC3IUC3 self, double const _arg)"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC3IUC3_SetRegularizationConstant(self, _arg)


    def GetRegularizationConstant(self) -> "double":
        """GetRegularizationConstant(itkTikhonovDeconvolutionImageFilterIUC3IUC3 self) -> double"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC3IUC3_GetRegularizationConstant(self)

    __swig_destroy__ = _itkTikhonovDeconvolutionImageFilterPython.delete_itkTikhonovDeconvolutionImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterIUC3IUC3"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTikhonovDeconvolutionImageFilterIUC3IUC3

        Create a new object of the class itkTikhonovDeconvolutionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTikhonovDeconvolutionImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTikhonovDeconvolutionImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTikhonovDeconvolutionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTikhonovDeconvolutionImageFilterIUC3IUC3.Clone = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC3IUC3_Clone, None, itkTikhonovDeconvolutionImageFilterIUC3IUC3)
itkTikhonovDeconvolutionImageFilterIUC3IUC3.SetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC3IUC3_SetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterIUC3IUC3)
itkTikhonovDeconvolutionImageFilterIUC3IUC3.GetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC3IUC3_GetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterIUC3IUC3)
itkTikhonovDeconvolutionImageFilterIUC3IUC3_swigregister = _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC3IUC3_swigregister
itkTikhonovDeconvolutionImageFilterIUC3IUC3_swigregister(itkTikhonovDeconvolutionImageFilterIUC3IUC3)

def itkTikhonovDeconvolutionImageFilterIUC3IUC3___New_orig__() -> "itkTikhonovDeconvolutionImageFilterIUC3IUC3_Pointer":
    """itkTikhonovDeconvolutionImageFilterIUC3IUC3___New_orig__() -> itkTikhonovDeconvolutionImageFilterIUC3IUC3_Pointer"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC3IUC3___New_orig__()

def itkTikhonovDeconvolutionImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterIUC3IUC3 *":
    """itkTikhonovDeconvolutionImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterIUC3IUC3"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUC3IUC3_cast(obj)

class itkTikhonovDeconvolutionImageFilterIUS2IUS2(itkInverseDeconvolutionImageFilterPython.itkInverseDeconvolutionImageFilterIUS2IUS2):
    """Proxy of C++ itkTikhonovDeconvolutionImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTikhonovDeconvolutionImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkTikhonovDeconvolutionImageFilterIUS2IUS2_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTikhonovDeconvolutionImageFilterIUS2IUS2_Pointer":
        """Clone(itkTikhonovDeconvolutionImageFilterIUS2IUS2 self) -> itkTikhonovDeconvolutionImageFilterIUS2IUS2_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS2IUS2_Clone(self)


    def SetRegularizationConstant(self, _arg: 'double const') -> "void":
        """SetRegularizationConstant(itkTikhonovDeconvolutionImageFilterIUS2IUS2 self, double const _arg)"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS2IUS2_SetRegularizationConstant(self, _arg)


    def GetRegularizationConstant(self) -> "double":
        """GetRegularizationConstant(itkTikhonovDeconvolutionImageFilterIUS2IUS2 self) -> double"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS2IUS2_GetRegularizationConstant(self)

    __swig_destroy__ = _itkTikhonovDeconvolutionImageFilterPython.delete_itkTikhonovDeconvolutionImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterIUS2IUS2"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTikhonovDeconvolutionImageFilterIUS2IUS2

        Create a new object of the class itkTikhonovDeconvolutionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTikhonovDeconvolutionImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTikhonovDeconvolutionImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTikhonovDeconvolutionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTikhonovDeconvolutionImageFilterIUS2IUS2.Clone = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS2IUS2_Clone, None, itkTikhonovDeconvolutionImageFilterIUS2IUS2)
itkTikhonovDeconvolutionImageFilterIUS2IUS2.SetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS2IUS2_SetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterIUS2IUS2)
itkTikhonovDeconvolutionImageFilterIUS2IUS2.GetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS2IUS2_GetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterIUS2IUS2)
itkTikhonovDeconvolutionImageFilterIUS2IUS2_swigregister = _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS2IUS2_swigregister
itkTikhonovDeconvolutionImageFilterIUS2IUS2_swigregister(itkTikhonovDeconvolutionImageFilterIUS2IUS2)

def itkTikhonovDeconvolutionImageFilterIUS2IUS2___New_orig__() -> "itkTikhonovDeconvolutionImageFilterIUS2IUS2_Pointer":
    """itkTikhonovDeconvolutionImageFilterIUS2IUS2___New_orig__() -> itkTikhonovDeconvolutionImageFilterIUS2IUS2_Pointer"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS2IUS2___New_orig__()

def itkTikhonovDeconvolutionImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterIUS2IUS2 *":
    """itkTikhonovDeconvolutionImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterIUS2IUS2"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS2IUS2_cast(obj)

class itkTikhonovDeconvolutionImageFilterIUS3IUS3(itkInverseDeconvolutionImageFilterPython.itkInverseDeconvolutionImageFilterIUS3IUS3):
    """Proxy of C++ itkTikhonovDeconvolutionImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTikhonovDeconvolutionImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkTikhonovDeconvolutionImageFilterIUS3IUS3_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTikhonovDeconvolutionImageFilterIUS3IUS3_Pointer":
        """Clone(itkTikhonovDeconvolutionImageFilterIUS3IUS3 self) -> itkTikhonovDeconvolutionImageFilterIUS3IUS3_Pointer"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS3IUS3_Clone(self)


    def SetRegularizationConstant(self, _arg: 'double const') -> "void":
        """SetRegularizationConstant(itkTikhonovDeconvolutionImageFilterIUS3IUS3 self, double const _arg)"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS3IUS3_SetRegularizationConstant(self, _arg)


    def GetRegularizationConstant(self) -> "double":
        """GetRegularizationConstant(itkTikhonovDeconvolutionImageFilterIUS3IUS3 self) -> double"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS3IUS3_GetRegularizationConstant(self)

    __swig_destroy__ = _itkTikhonovDeconvolutionImageFilterPython.delete_itkTikhonovDeconvolutionImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterIUS3IUS3"""
        return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTikhonovDeconvolutionImageFilterIUS3IUS3

        Create a new object of the class itkTikhonovDeconvolutionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTikhonovDeconvolutionImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTikhonovDeconvolutionImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTikhonovDeconvolutionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTikhonovDeconvolutionImageFilterIUS3IUS3.Clone = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS3IUS3_Clone, None, itkTikhonovDeconvolutionImageFilterIUS3IUS3)
itkTikhonovDeconvolutionImageFilterIUS3IUS3.SetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS3IUS3_SetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterIUS3IUS3)
itkTikhonovDeconvolutionImageFilterIUS3IUS3.GetRegularizationConstant = new_instancemethod(_itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS3IUS3_GetRegularizationConstant, None, itkTikhonovDeconvolutionImageFilterIUS3IUS3)
itkTikhonovDeconvolutionImageFilterIUS3IUS3_swigregister = _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS3IUS3_swigregister
itkTikhonovDeconvolutionImageFilterIUS3IUS3_swigregister(itkTikhonovDeconvolutionImageFilterIUS3IUS3)

def itkTikhonovDeconvolutionImageFilterIUS3IUS3___New_orig__() -> "itkTikhonovDeconvolutionImageFilterIUS3IUS3_Pointer":
    """itkTikhonovDeconvolutionImageFilterIUS3IUS3___New_orig__() -> itkTikhonovDeconvolutionImageFilterIUS3IUS3_Pointer"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS3IUS3___New_orig__()

def itkTikhonovDeconvolutionImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkTikhonovDeconvolutionImageFilterIUS3IUS3 *":
    """itkTikhonovDeconvolutionImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkTikhonovDeconvolutionImageFilterIUS3IUS3"""
    return _itkTikhonovDeconvolutionImageFilterPython.itkTikhonovDeconvolutionImageFilterIUS3IUS3_cast(obj)


def tikhonov_deconvolution_image_filter(*args, **kwargs):
    """Procedural interface for TikhonovDeconvolutionImageFilter"""
    import itk
    instance = itk.TikhonovDeconvolutionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def tikhonov_deconvolution_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.TikhonovDeconvolutionImageFilter, itkTemplate.itkTemplate):
        tikhonov_deconvolution_image_filter.__doc__ = itk.TikhonovDeconvolutionImageFilter.values()[0].__doc__
    else:
        tikhonov_deconvolution_image_filter.__doc__ = itk.TikhonovDeconvolutionImageFilter.__doc__




