# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkImageSpatialObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageSpatialObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkImageSpatialObjectPython
            return _itkImageSpatialObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageSpatialObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageSpatialObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageSpatialObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSpatialObjectBasePython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import vnl_vector_refPython
import itkFixedArrayPython
import itkCovariantVectorPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import ITKCommonBasePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkPointPython
import itkVectorContainerPython
import itkOffsetPython
import itkSizePython
import itkContinuousIndexPython
import itkIndexPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkImageRegionPython
import itkAffineTransformPython
import itkTransformBasePython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkSymmetricSecondRankTensorPython
import itkDiffusionTensor3DPython
import itkMatrixOffsetTransformBasePython
import itkImagePython
import itkRGBPixelPython
import itkInterpolateImageFunctionPython
import itkImageFunctionBasePython
import itkFunctionBasePython

def itkImageSpatialObject3F_New():
  return itkImageSpatialObject3F.New()


def itkImageSpatialObject3US_New():
  return itkImageSpatialObject3US.New()


def itkImageSpatialObject3SS_New():
  return itkImageSpatialObject3SS.New()


def itkImageSpatialObject3UC_New():
  return itkImageSpatialObject3UC.New()


def itkImageSpatialObject2F_New():
  return itkImageSpatialObject2F.New()


def itkImageSpatialObject2US_New():
  return itkImageSpatialObject2US.New()


def itkImageSpatialObject2SS_New():
  return itkImageSpatialObject2SS.New()


def itkImageSpatialObject2UC_New():
  return itkImageSpatialObject2UC.New()

class itkImageSpatialObject2F(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkImageSpatialObject2F class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageSpatialObject2F_Pointer":
        """__New_orig__() -> itkImageSpatialObject2F_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageSpatialObject2F_Pointer":
        """Clone(itkImageSpatialObject2F self) -> itkImageSpatialObject2F_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_Clone(self)


    def SetImage(self, image: 'itkImageF2') -> "void":
        """SetImage(itkImageSpatialObject2F self, itkImageF2 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_SetImage(self, image)


    def GetImage(self) -> "itkImageF2 const *":
        """GetImage(itkImageSpatialObject2F self) -> itkImageF2"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_GetImage(self)


    def ValueAtInObjectSpace(self, *args) -> "bool":
        """
        ValueAtInObjectSpace(itkImageSpatialObject2F self, itkPointD2 point, double & value, unsigned int depth=0, std::string const & name) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject2F self, itkPointD2 point, double & value, unsigned int depth=0) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject2F self, itkPointD2 point, double & value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_ValueAtInObjectSpace(self, *args)


    def SetSliceNumber(self, *args) -> "void":
        """
        SetSliceNumber(itkImageSpatialObject2F self, itkIndex2 _arg)
        SetSliceNumber(itkImageSpatialObject2F self, unsigned int dimension, int position)
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_SetSliceNumber(self, *args)


    def GetSliceNumber(self, *args) -> "int":
        """
        GetSliceNumber(itkImageSpatialObject2F self) -> itkIndex2
        GetSliceNumber(itkImageSpatialObject2F self, unsigned int dimension) -> int
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_GetSliceNumber(self, *args)


    def GetPixelTypeName(self) -> "char const *":
        """GetPixelTypeName(itkImageSpatialObject2F self) -> char const *"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_GetPixelTypeName(self)


    def SetInterpolator(self, interpolator: 'itkInterpolateImageFunctionIF2D') -> "void":
        """SetInterpolator(itkImageSpatialObject2F self, itkInterpolateImageFunctionIF2D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_SetInterpolator(self, interpolator)


    def GetInterpolator(self) -> "itkInterpolateImageFunctionIF2D *":
        """GetInterpolator(itkImageSpatialObject2F self) -> itkInterpolateImageFunctionIF2D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2F

    def cast(obj: 'itkLightObject') -> "itkImageSpatialObject2F *":
        """cast(itkLightObject obj) -> itkImageSpatialObject2F"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2F

        Create a new object of the class itkImageSpatialObject2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject2F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject2F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject2F.Clone = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_Clone, None, itkImageSpatialObject2F)
itkImageSpatialObject2F.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_SetImage, None, itkImageSpatialObject2F)
itkImageSpatialObject2F.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_GetImage, None, itkImageSpatialObject2F)
itkImageSpatialObject2F.ValueAtInObjectSpace = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_ValueAtInObjectSpace, None, itkImageSpatialObject2F)
itkImageSpatialObject2F.SetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_SetSliceNumber, None, itkImageSpatialObject2F)
itkImageSpatialObject2F.GetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_GetSliceNumber, None, itkImageSpatialObject2F)
itkImageSpatialObject2F.GetPixelTypeName = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_GetPixelTypeName, None, itkImageSpatialObject2F)
itkImageSpatialObject2F.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_SetInterpolator, None, itkImageSpatialObject2F)
itkImageSpatialObject2F.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_GetInterpolator, None, itkImageSpatialObject2F)
itkImageSpatialObject2F_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject2F_swigregister
itkImageSpatialObject2F_swigregister(itkImageSpatialObject2F)

def itkImageSpatialObject2F___New_orig__() -> "itkImageSpatialObject2F_Pointer":
    """itkImageSpatialObject2F___New_orig__() -> itkImageSpatialObject2F_Pointer"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject2F___New_orig__()

def itkImageSpatialObject2F_cast(obj: 'itkLightObject') -> "itkImageSpatialObject2F *":
    """itkImageSpatialObject2F_cast(itkLightObject obj) -> itkImageSpatialObject2F"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject2F_cast(obj)

class itkImageSpatialObject2SS(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkImageSpatialObject2SS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageSpatialObject2SS_Pointer":
        """__New_orig__() -> itkImageSpatialObject2SS_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2SS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageSpatialObject2SS_Pointer":
        """Clone(itkImageSpatialObject2SS self) -> itkImageSpatialObject2SS_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2SS_Clone(self)


    def SetImage(self, image: 'itkImageSS2') -> "void":
        """SetImage(itkImageSpatialObject2SS self, itkImageSS2 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2SS_SetImage(self, image)


    def GetImage(self) -> "itkImageSS2 const *":
        """GetImage(itkImageSpatialObject2SS self) -> itkImageSS2"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2SS_GetImage(self)


    def ValueAtInObjectSpace(self, *args) -> "bool":
        """
        ValueAtInObjectSpace(itkImageSpatialObject2SS self, itkPointD2 point, double & value, unsigned int depth=0, std::string const & name) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject2SS self, itkPointD2 point, double & value, unsigned int depth=0) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject2SS self, itkPointD2 point, double & value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2SS_ValueAtInObjectSpace(self, *args)


    def SetSliceNumber(self, *args) -> "void":
        """
        SetSliceNumber(itkImageSpatialObject2SS self, itkIndex2 _arg)
        SetSliceNumber(itkImageSpatialObject2SS self, unsigned int dimension, int position)
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2SS_SetSliceNumber(self, *args)


    def GetSliceNumber(self, *args) -> "int":
        """
        GetSliceNumber(itkImageSpatialObject2SS self) -> itkIndex2
        GetSliceNumber(itkImageSpatialObject2SS self, unsigned int dimension) -> int
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2SS_GetSliceNumber(self, *args)


    def GetPixelTypeName(self) -> "char const *":
        """GetPixelTypeName(itkImageSpatialObject2SS self) -> char const *"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2SS_GetPixelTypeName(self)


    def SetInterpolator(self, interpolator: 'itkInterpolateImageFunctionISS2D') -> "void":
        """SetInterpolator(itkImageSpatialObject2SS self, itkInterpolateImageFunctionISS2D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2SS_SetInterpolator(self, interpolator)


    def GetInterpolator(self) -> "itkInterpolateImageFunctionISS2D *":
        """GetInterpolator(itkImageSpatialObject2SS self) -> itkInterpolateImageFunctionISS2D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2SS_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2SS

    def cast(obj: 'itkLightObject') -> "itkImageSpatialObject2SS *":
        """cast(itkLightObject obj) -> itkImageSpatialObject2SS"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2SS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2SS

        Create a new object of the class itkImageSpatialObject2SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject2SS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject2SS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject2SS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject2SS.Clone = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_Clone, None, itkImageSpatialObject2SS)
itkImageSpatialObject2SS.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_SetImage, None, itkImageSpatialObject2SS)
itkImageSpatialObject2SS.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_GetImage, None, itkImageSpatialObject2SS)
itkImageSpatialObject2SS.ValueAtInObjectSpace = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_ValueAtInObjectSpace, None, itkImageSpatialObject2SS)
itkImageSpatialObject2SS.SetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_SetSliceNumber, None, itkImageSpatialObject2SS)
itkImageSpatialObject2SS.GetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_GetSliceNumber, None, itkImageSpatialObject2SS)
itkImageSpatialObject2SS.GetPixelTypeName = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_GetPixelTypeName, None, itkImageSpatialObject2SS)
itkImageSpatialObject2SS.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_SetInterpolator, None, itkImageSpatialObject2SS)
itkImageSpatialObject2SS.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_GetInterpolator, None, itkImageSpatialObject2SS)
itkImageSpatialObject2SS_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject2SS_swigregister
itkImageSpatialObject2SS_swigregister(itkImageSpatialObject2SS)

def itkImageSpatialObject2SS___New_orig__() -> "itkImageSpatialObject2SS_Pointer":
    """itkImageSpatialObject2SS___New_orig__() -> itkImageSpatialObject2SS_Pointer"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject2SS___New_orig__()

def itkImageSpatialObject2SS_cast(obj: 'itkLightObject') -> "itkImageSpatialObject2SS *":
    """itkImageSpatialObject2SS_cast(itkLightObject obj) -> itkImageSpatialObject2SS"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject2SS_cast(obj)

class itkImageSpatialObject2UC(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkImageSpatialObject2UC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageSpatialObject2UC_Pointer":
        """__New_orig__() -> itkImageSpatialObject2UC_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageSpatialObject2UC_Pointer":
        """Clone(itkImageSpatialObject2UC self) -> itkImageSpatialObject2UC_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_Clone(self)


    def SetImage(self, image: 'itkImageUC2') -> "void":
        """SetImage(itkImageSpatialObject2UC self, itkImageUC2 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetImage(self, image)


    def GetImage(self) -> "itkImageUC2 const *":
        """GetImage(itkImageSpatialObject2UC self) -> itkImageUC2"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetImage(self)


    def ValueAtInObjectSpace(self, *args) -> "bool":
        """
        ValueAtInObjectSpace(itkImageSpatialObject2UC self, itkPointD2 point, double & value, unsigned int depth=0, std::string const & name) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject2UC self, itkPointD2 point, double & value, unsigned int depth=0) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject2UC self, itkPointD2 point, double & value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_ValueAtInObjectSpace(self, *args)


    def SetSliceNumber(self, *args) -> "void":
        """
        SetSliceNumber(itkImageSpatialObject2UC self, itkIndex2 _arg)
        SetSliceNumber(itkImageSpatialObject2UC self, unsigned int dimension, int position)
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetSliceNumber(self, *args)


    def GetSliceNumber(self, *args) -> "int":
        """
        GetSliceNumber(itkImageSpatialObject2UC self) -> itkIndex2
        GetSliceNumber(itkImageSpatialObject2UC self, unsigned int dimension) -> int
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetSliceNumber(self, *args)


    def GetPixelTypeName(self) -> "char const *":
        """GetPixelTypeName(itkImageSpatialObject2UC self) -> char const *"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetPixelTypeName(self)


    def SetInterpolator(self, interpolator: 'itkInterpolateImageFunctionIUC2D') -> "void":
        """SetInterpolator(itkImageSpatialObject2UC self, itkInterpolateImageFunctionIUC2D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetInterpolator(self, interpolator)


    def GetInterpolator(self) -> "itkInterpolateImageFunctionIUC2D *":
        """GetInterpolator(itkImageSpatialObject2UC self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2UC

    def cast(obj: 'itkLightObject') -> "itkImageSpatialObject2UC *":
        """cast(itkLightObject obj) -> itkImageSpatialObject2UC"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2UC

        Create a new object of the class itkImageSpatialObject2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject2UC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject2UC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject2UC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject2UC.Clone = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_Clone, None, itkImageSpatialObject2UC)
itkImageSpatialObject2UC.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetImage, None, itkImageSpatialObject2UC)
itkImageSpatialObject2UC.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetImage, None, itkImageSpatialObject2UC)
itkImageSpatialObject2UC.ValueAtInObjectSpace = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_ValueAtInObjectSpace, None, itkImageSpatialObject2UC)
itkImageSpatialObject2UC.SetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetSliceNumber, None, itkImageSpatialObject2UC)
itkImageSpatialObject2UC.GetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetSliceNumber, None, itkImageSpatialObject2UC)
itkImageSpatialObject2UC.GetPixelTypeName = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetPixelTypeName, None, itkImageSpatialObject2UC)
itkImageSpatialObject2UC.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetInterpolator, None, itkImageSpatialObject2UC)
itkImageSpatialObject2UC.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetInterpolator, None, itkImageSpatialObject2UC)
itkImageSpatialObject2UC_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject2UC_swigregister
itkImageSpatialObject2UC_swigregister(itkImageSpatialObject2UC)

def itkImageSpatialObject2UC___New_orig__() -> "itkImageSpatialObject2UC_Pointer":
    """itkImageSpatialObject2UC___New_orig__() -> itkImageSpatialObject2UC_Pointer"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject2UC___New_orig__()

def itkImageSpatialObject2UC_cast(obj: 'itkLightObject') -> "itkImageSpatialObject2UC *":
    """itkImageSpatialObject2UC_cast(itkLightObject obj) -> itkImageSpatialObject2UC"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_cast(obj)

class itkImageSpatialObject2US(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkImageSpatialObject2US class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageSpatialObject2US_Pointer":
        """__New_orig__() -> itkImageSpatialObject2US_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageSpatialObject2US_Pointer":
        """Clone(itkImageSpatialObject2US self) -> itkImageSpatialObject2US_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_Clone(self)


    def SetImage(self, image: 'itkImageUS2') -> "void":
        """SetImage(itkImageSpatialObject2US self, itkImageUS2 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_SetImage(self, image)


    def GetImage(self) -> "itkImageUS2 const *":
        """GetImage(itkImageSpatialObject2US self) -> itkImageUS2"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_GetImage(self)


    def ValueAtInObjectSpace(self, *args) -> "bool":
        """
        ValueAtInObjectSpace(itkImageSpatialObject2US self, itkPointD2 point, double & value, unsigned int depth=0, std::string const & name) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject2US self, itkPointD2 point, double & value, unsigned int depth=0) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject2US self, itkPointD2 point, double & value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_ValueAtInObjectSpace(self, *args)


    def SetSliceNumber(self, *args) -> "void":
        """
        SetSliceNumber(itkImageSpatialObject2US self, itkIndex2 _arg)
        SetSliceNumber(itkImageSpatialObject2US self, unsigned int dimension, int position)
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_SetSliceNumber(self, *args)


    def GetSliceNumber(self, *args) -> "int":
        """
        GetSliceNumber(itkImageSpatialObject2US self) -> itkIndex2
        GetSliceNumber(itkImageSpatialObject2US self, unsigned int dimension) -> int
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_GetSliceNumber(self, *args)


    def GetPixelTypeName(self) -> "char const *":
        """GetPixelTypeName(itkImageSpatialObject2US self) -> char const *"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_GetPixelTypeName(self)


    def SetInterpolator(self, interpolator: 'itkInterpolateImageFunctionIUS2D') -> "void":
        """SetInterpolator(itkImageSpatialObject2US self, itkInterpolateImageFunctionIUS2D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_SetInterpolator(self, interpolator)


    def GetInterpolator(self) -> "itkInterpolateImageFunctionIUS2D *":
        """GetInterpolator(itkImageSpatialObject2US self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2US

    def cast(obj: 'itkLightObject') -> "itkImageSpatialObject2US *":
        """cast(itkLightObject obj) -> itkImageSpatialObject2US"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2US

        Create a new object of the class itkImageSpatialObject2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject2US.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject2US.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject2US.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject2US.Clone = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_Clone, None, itkImageSpatialObject2US)
itkImageSpatialObject2US.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_SetImage, None, itkImageSpatialObject2US)
itkImageSpatialObject2US.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_GetImage, None, itkImageSpatialObject2US)
itkImageSpatialObject2US.ValueAtInObjectSpace = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_ValueAtInObjectSpace, None, itkImageSpatialObject2US)
itkImageSpatialObject2US.SetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_SetSliceNumber, None, itkImageSpatialObject2US)
itkImageSpatialObject2US.GetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_GetSliceNumber, None, itkImageSpatialObject2US)
itkImageSpatialObject2US.GetPixelTypeName = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_GetPixelTypeName, None, itkImageSpatialObject2US)
itkImageSpatialObject2US.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_SetInterpolator, None, itkImageSpatialObject2US)
itkImageSpatialObject2US.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_GetInterpolator, None, itkImageSpatialObject2US)
itkImageSpatialObject2US_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject2US_swigregister
itkImageSpatialObject2US_swigregister(itkImageSpatialObject2US)

def itkImageSpatialObject2US___New_orig__() -> "itkImageSpatialObject2US_Pointer":
    """itkImageSpatialObject2US___New_orig__() -> itkImageSpatialObject2US_Pointer"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject2US___New_orig__()

def itkImageSpatialObject2US_cast(obj: 'itkLightObject') -> "itkImageSpatialObject2US *":
    """itkImageSpatialObject2US_cast(itkLightObject obj) -> itkImageSpatialObject2US"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject2US_cast(obj)

class itkImageSpatialObject3F(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkImageSpatialObject3F class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageSpatialObject3F_Pointer":
        """__New_orig__() -> itkImageSpatialObject3F_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageSpatialObject3F_Pointer":
        """Clone(itkImageSpatialObject3F self) -> itkImageSpatialObject3F_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_Clone(self)


    def SetImage(self, image: 'itkImageF3') -> "void":
        """SetImage(itkImageSpatialObject3F self, itkImageF3 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_SetImage(self, image)


    def GetImage(self) -> "itkImageF3 const *":
        """GetImage(itkImageSpatialObject3F self) -> itkImageF3"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_GetImage(self)


    def ValueAtInObjectSpace(self, *args) -> "bool":
        """
        ValueAtInObjectSpace(itkImageSpatialObject3F self, itkPointD3 point, double & value, unsigned int depth=0, std::string const & name) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject3F self, itkPointD3 point, double & value, unsigned int depth=0) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject3F self, itkPointD3 point, double & value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_ValueAtInObjectSpace(self, *args)


    def SetSliceNumber(self, *args) -> "void":
        """
        SetSliceNumber(itkImageSpatialObject3F self, itkIndex3 _arg)
        SetSliceNumber(itkImageSpatialObject3F self, unsigned int dimension, int position)
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_SetSliceNumber(self, *args)


    def GetSliceNumber(self, *args) -> "int":
        """
        GetSliceNumber(itkImageSpatialObject3F self) -> itkIndex3
        GetSliceNumber(itkImageSpatialObject3F self, unsigned int dimension) -> int
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_GetSliceNumber(self, *args)


    def GetPixelTypeName(self) -> "char const *":
        """GetPixelTypeName(itkImageSpatialObject3F self) -> char const *"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_GetPixelTypeName(self)


    def SetInterpolator(self, interpolator: 'itkInterpolateImageFunctionIF3D') -> "void":
        """SetInterpolator(itkImageSpatialObject3F self, itkInterpolateImageFunctionIF3D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_SetInterpolator(self, interpolator)


    def GetInterpolator(self) -> "itkInterpolateImageFunctionIF3D *":
        """GetInterpolator(itkImageSpatialObject3F self) -> itkInterpolateImageFunctionIF3D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3F

    def cast(obj: 'itkLightObject') -> "itkImageSpatialObject3F *":
        """cast(itkLightObject obj) -> itkImageSpatialObject3F"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3F

        Create a new object of the class itkImageSpatialObject3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject3F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject3F.Clone = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_Clone, None, itkImageSpatialObject3F)
itkImageSpatialObject3F.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_SetImage, None, itkImageSpatialObject3F)
itkImageSpatialObject3F.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_GetImage, None, itkImageSpatialObject3F)
itkImageSpatialObject3F.ValueAtInObjectSpace = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_ValueAtInObjectSpace, None, itkImageSpatialObject3F)
itkImageSpatialObject3F.SetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_SetSliceNumber, None, itkImageSpatialObject3F)
itkImageSpatialObject3F.GetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_GetSliceNumber, None, itkImageSpatialObject3F)
itkImageSpatialObject3F.GetPixelTypeName = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_GetPixelTypeName, None, itkImageSpatialObject3F)
itkImageSpatialObject3F.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_SetInterpolator, None, itkImageSpatialObject3F)
itkImageSpatialObject3F.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_GetInterpolator, None, itkImageSpatialObject3F)
itkImageSpatialObject3F_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject3F_swigregister
itkImageSpatialObject3F_swigregister(itkImageSpatialObject3F)

def itkImageSpatialObject3F___New_orig__() -> "itkImageSpatialObject3F_Pointer":
    """itkImageSpatialObject3F___New_orig__() -> itkImageSpatialObject3F_Pointer"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject3F___New_orig__()

def itkImageSpatialObject3F_cast(obj: 'itkLightObject') -> "itkImageSpatialObject3F *":
    """itkImageSpatialObject3F_cast(itkLightObject obj) -> itkImageSpatialObject3F"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject3F_cast(obj)

class itkImageSpatialObject3SS(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkImageSpatialObject3SS class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageSpatialObject3SS_Pointer":
        """__New_orig__() -> itkImageSpatialObject3SS_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3SS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageSpatialObject3SS_Pointer":
        """Clone(itkImageSpatialObject3SS self) -> itkImageSpatialObject3SS_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3SS_Clone(self)


    def SetImage(self, image: 'itkImageSS3') -> "void":
        """SetImage(itkImageSpatialObject3SS self, itkImageSS3 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3SS_SetImage(self, image)


    def GetImage(self) -> "itkImageSS3 const *":
        """GetImage(itkImageSpatialObject3SS self) -> itkImageSS3"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3SS_GetImage(self)


    def ValueAtInObjectSpace(self, *args) -> "bool":
        """
        ValueAtInObjectSpace(itkImageSpatialObject3SS self, itkPointD3 point, double & value, unsigned int depth=0, std::string const & name) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject3SS self, itkPointD3 point, double & value, unsigned int depth=0) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject3SS self, itkPointD3 point, double & value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3SS_ValueAtInObjectSpace(self, *args)


    def SetSliceNumber(self, *args) -> "void":
        """
        SetSliceNumber(itkImageSpatialObject3SS self, itkIndex3 _arg)
        SetSliceNumber(itkImageSpatialObject3SS self, unsigned int dimension, int position)
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3SS_SetSliceNumber(self, *args)


    def GetSliceNumber(self, *args) -> "int":
        """
        GetSliceNumber(itkImageSpatialObject3SS self) -> itkIndex3
        GetSliceNumber(itkImageSpatialObject3SS self, unsigned int dimension) -> int
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3SS_GetSliceNumber(self, *args)


    def GetPixelTypeName(self) -> "char const *":
        """GetPixelTypeName(itkImageSpatialObject3SS self) -> char const *"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3SS_GetPixelTypeName(self)


    def SetInterpolator(self, interpolator: 'itkInterpolateImageFunctionISS3D') -> "void":
        """SetInterpolator(itkImageSpatialObject3SS self, itkInterpolateImageFunctionISS3D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3SS_SetInterpolator(self, interpolator)


    def GetInterpolator(self) -> "itkInterpolateImageFunctionISS3D *":
        """GetInterpolator(itkImageSpatialObject3SS self) -> itkInterpolateImageFunctionISS3D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3SS_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3SS

    def cast(obj: 'itkLightObject') -> "itkImageSpatialObject3SS *":
        """cast(itkLightObject obj) -> itkImageSpatialObject3SS"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3SS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3SS

        Create a new object of the class itkImageSpatialObject3SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject3SS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject3SS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject3SS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject3SS.Clone = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_Clone, None, itkImageSpatialObject3SS)
itkImageSpatialObject3SS.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_SetImage, None, itkImageSpatialObject3SS)
itkImageSpatialObject3SS.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_GetImage, None, itkImageSpatialObject3SS)
itkImageSpatialObject3SS.ValueAtInObjectSpace = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_ValueAtInObjectSpace, None, itkImageSpatialObject3SS)
itkImageSpatialObject3SS.SetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_SetSliceNumber, None, itkImageSpatialObject3SS)
itkImageSpatialObject3SS.GetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_GetSliceNumber, None, itkImageSpatialObject3SS)
itkImageSpatialObject3SS.GetPixelTypeName = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_GetPixelTypeName, None, itkImageSpatialObject3SS)
itkImageSpatialObject3SS.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_SetInterpolator, None, itkImageSpatialObject3SS)
itkImageSpatialObject3SS.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_GetInterpolator, None, itkImageSpatialObject3SS)
itkImageSpatialObject3SS_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject3SS_swigregister
itkImageSpatialObject3SS_swigregister(itkImageSpatialObject3SS)

def itkImageSpatialObject3SS___New_orig__() -> "itkImageSpatialObject3SS_Pointer":
    """itkImageSpatialObject3SS___New_orig__() -> itkImageSpatialObject3SS_Pointer"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject3SS___New_orig__()

def itkImageSpatialObject3SS_cast(obj: 'itkLightObject') -> "itkImageSpatialObject3SS *":
    """itkImageSpatialObject3SS_cast(itkLightObject obj) -> itkImageSpatialObject3SS"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject3SS_cast(obj)

class itkImageSpatialObject3UC(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkImageSpatialObject3UC class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageSpatialObject3UC_Pointer":
        """__New_orig__() -> itkImageSpatialObject3UC_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageSpatialObject3UC_Pointer":
        """Clone(itkImageSpatialObject3UC self) -> itkImageSpatialObject3UC_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_Clone(self)


    def SetImage(self, image: 'itkImageUC3') -> "void":
        """SetImage(itkImageSpatialObject3UC self, itkImageUC3 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetImage(self, image)


    def GetImage(self) -> "itkImageUC3 const *":
        """GetImage(itkImageSpatialObject3UC self) -> itkImageUC3"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetImage(self)


    def ValueAtInObjectSpace(self, *args) -> "bool":
        """
        ValueAtInObjectSpace(itkImageSpatialObject3UC self, itkPointD3 point, double & value, unsigned int depth=0, std::string const & name) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject3UC self, itkPointD3 point, double & value, unsigned int depth=0) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject3UC self, itkPointD3 point, double & value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_ValueAtInObjectSpace(self, *args)


    def SetSliceNumber(self, *args) -> "void":
        """
        SetSliceNumber(itkImageSpatialObject3UC self, itkIndex3 _arg)
        SetSliceNumber(itkImageSpatialObject3UC self, unsigned int dimension, int position)
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetSliceNumber(self, *args)


    def GetSliceNumber(self, *args) -> "int":
        """
        GetSliceNumber(itkImageSpatialObject3UC self) -> itkIndex3
        GetSliceNumber(itkImageSpatialObject3UC self, unsigned int dimension) -> int
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetSliceNumber(self, *args)


    def GetPixelTypeName(self) -> "char const *":
        """GetPixelTypeName(itkImageSpatialObject3UC self) -> char const *"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetPixelTypeName(self)


    def SetInterpolator(self, interpolator: 'itkInterpolateImageFunctionIUC3D') -> "void":
        """SetInterpolator(itkImageSpatialObject3UC self, itkInterpolateImageFunctionIUC3D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetInterpolator(self, interpolator)


    def GetInterpolator(self) -> "itkInterpolateImageFunctionIUC3D *":
        """GetInterpolator(itkImageSpatialObject3UC self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3UC

    def cast(obj: 'itkLightObject') -> "itkImageSpatialObject3UC *":
        """cast(itkLightObject obj) -> itkImageSpatialObject3UC"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3UC

        Create a new object of the class itkImageSpatialObject3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject3UC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject3UC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject3UC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject3UC.Clone = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_Clone, None, itkImageSpatialObject3UC)
itkImageSpatialObject3UC.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetImage, None, itkImageSpatialObject3UC)
itkImageSpatialObject3UC.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetImage, None, itkImageSpatialObject3UC)
itkImageSpatialObject3UC.ValueAtInObjectSpace = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_ValueAtInObjectSpace, None, itkImageSpatialObject3UC)
itkImageSpatialObject3UC.SetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetSliceNumber, None, itkImageSpatialObject3UC)
itkImageSpatialObject3UC.GetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetSliceNumber, None, itkImageSpatialObject3UC)
itkImageSpatialObject3UC.GetPixelTypeName = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetPixelTypeName, None, itkImageSpatialObject3UC)
itkImageSpatialObject3UC.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetInterpolator, None, itkImageSpatialObject3UC)
itkImageSpatialObject3UC.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetInterpolator, None, itkImageSpatialObject3UC)
itkImageSpatialObject3UC_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject3UC_swigregister
itkImageSpatialObject3UC_swigregister(itkImageSpatialObject3UC)

def itkImageSpatialObject3UC___New_orig__() -> "itkImageSpatialObject3UC_Pointer":
    """itkImageSpatialObject3UC___New_orig__() -> itkImageSpatialObject3UC_Pointer"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject3UC___New_orig__()

def itkImageSpatialObject3UC_cast(obj: 'itkLightObject') -> "itkImageSpatialObject3UC *":
    """itkImageSpatialObject3UC_cast(itkLightObject obj) -> itkImageSpatialObject3UC"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_cast(obj)

class itkImageSpatialObject3US(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkImageSpatialObject3US class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageSpatialObject3US_Pointer":
        """__New_orig__() -> itkImageSpatialObject3US_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageSpatialObject3US_Pointer":
        """Clone(itkImageSpatialObject3US self) -> itkImageSpatialObject3US_Pointer"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_Clone(self)


    def SetImage(self, image: 'itkImageUS3') -> "void":
        """SetImage(itkImageSpatialObject3US self, itkImageUS3 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_SetImage(self, image)


    def GetImage(self) -> "itkImageUS3 const *":
        """GetImage(itkImageSpatialObject3US self) -> itkImageUS3"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_GetImage(self)


    def ValueAtInObjectSpace(self, *args) -> "bool":
        """
        ValueAtInObjectSpace(itkImageSpatialObject3US self, itkPointD3 point, double & value, unsigned int depth=0, std::string const & name) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject3US self, itkPointD3 point, double & value, unsigned int depth=0) -> bool
        ValueAtInObjectSpace(itkImageSpatialObject3US self, itkPointD3 point, double & value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_ValueAtInObjectSpace(self, *args)


    def SetSliceNumber(self, *args) -> "void":
        """
        SetSliceNumber(itkImageSpatialObject3US self, itkIndex3 _arg)
        SetSliceNumber(itkImageSpatialObject3US self, unsigned int dimension, int position)
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_SetSliceNumber(self, *args)


    def GetSliceNumber(self, *args) -> "int":
        """
        GetSliceNumber(itkImageSpatialObject3US self) -> itkIndex3
        GetSliceNumber(itkImageSpatialObject3US self, unsigned int dimension) -> int
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_GetSliceNumber(self, *args)


    def GetPixelTypeName(self) -> "char const *":
        """GetPixelTypeName(itkImageSpatialObject3US self) -> char const *"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_GetPixelTypeName(self)


    def SetInterpolator(self, interpolator: 'itkInterpolateImageFunctionIUS3D') -> "void":
        """SetInterpolator(itkImageSpatialObject3US self, itkInterpolateImageFunctionIUS3D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_SetInterpolator(self, interpolator)


    def GetInterpolator(self) -> "itkInterpolateImageFunctionIUS3D *":
        """GetInterpolator(itkImageSpatialObject3US self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3US

    def cast(obj: 'itkLightObject') -> "itkImageSpatialObject3US *":
        """cast(itkLightObject obj) -> itkImageSpatialObject3US"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3US

        Create a new object of the class itkImageSpatialObject3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject3US.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject3US.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject3US.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject3US.Clone = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_Clone, None, itkImageSpatialObject3US)
itkImageSpatialObject3US.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_SetImage, None, itkImageSpatialObject3US)
itkImageSpatialObject3US.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_GetImage, None, itkImageSpatialObject3US)
itkImageSpatialObject3US.ValueAtInObjectSpace = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_ValueAtInObjectSpace, None, itkImageSpatialObject3US)
itkImageSpatialObject3US.SetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_SetSliceNumber, None, itkImageSpatialObject3US)
itkImageSpatialObject3US.GetSliceNumber = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_GetSliceNumber, None, itkImageSpatialObject3US)
itkImageSpatialObject3US.GetPixelTypeName = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_GetPixelTypeName, None, itkImageSpatialObject3US)
itkImageSpatialObject3US.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_SetInterpolator, None, itkImageSpatialObject3US)
itkImageSpatialObject3US.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_GetInterpolator, None, itkImageSpatialObject3US)
itkImageSpatialObject3US_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject3US_swigregister
itkImageSpatialObject3US_swigregister(itkImageSpatialObject3US)

def itkImageSpatialObject3US___New_orig__() -> "itkImageSpatialObject3US_Pointer":
    """itkImageSpatialObject3US___New_orig__() -> itkImageSpatialObject3US_Pointer"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject3US___New_orig__()

def itkImageSpatialObject3US_cast(obj: 'itkLightObject') -> "itkImageSpatialObject3US *":
    """itkImageSpatialObject3US_cast(itkLightObject obj) -> itkImageSpatialObject3US"""
    return _itkImageSpatialObjectPython.itkImageSpatialObject3US_cast(obj)



