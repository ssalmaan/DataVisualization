# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkImageMaskSpatialObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageMaskSpatialObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkImageMaskSpatialObjectPython
            return _itkImageMaskSpatialObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageMaskSpatialObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageMaskSpatialObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageMaskSpatialObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageSpatialObjectPython
import itkSpatialObjectBasePython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import vnl_vector_refPython
import itkFixedArrayPython
import itkCovariantVectorPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import ITKCommonBasePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkPointPython
import itkVectorContainerPython
import itkOffsetPython
import itkSizePython
import itkContinuousIndexPython
import itkIndexPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkImageRegionPython
import itkAffineTransformPython
import itkTransformBasePython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkSymmetricSecondRankTensorPython
import itkDiffusionTensor3DPython
import itkMatrixOffsetTransformBasePython
import itkImagePython
import itkRGBPixelPython
import itkInterpolateImageFunctionPython
import itkImageFunctionBasePython
import itkFunctionBasePython

def itkImageMaskSpatialObject3_New():
  return itkImageMaskSpatialObject3.New()


def itkImageMaskSpatialObject2_New():
  return itkImageMaskSpatialObject2.New()

class itkImageMaskSpatialObject2(itkImageSpatialObjectPython.itkImageSpatialObject2UC):
    """Proxy of C++ itkImageMaskSpatialObject2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageMaskSpatialObject2_Pointer":
        """__New_orig__() -> itkImageMaskSpatialObject2_Pointer"""
        return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageMaskSpatialObject2_Pointer":
        """Clone(itkImageMaskSpatialObject2 self) -> itkImageMaskSpatialObject2_Pointer"""
        return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject2_Clone(self)


    def ComputeMyBoundingBoxInIndexSpace(self) -> "itkImageRegion2":
        """ComputeMyBoundingBoxInIndexSpace(itkImageMaskSpatialObject2 self) -> itkImageRegion2"""
        return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject2_ComputeMyBoundingBoxInIndexSpace(self)


    def GetAxisAlignedBoundingBoxRegion(self) -> "itkImageRegion2":
        """GetAxisAlignedBoundingBoxRegion(itkImageMaskSpatialObject2 self) -> itkImageRegion2"""
        return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject2_GetAxisAlignedBoundingBoxRegion(self)

    __swig_destroy__ = _itkImageMaskSpatialObjectPython.delete_itkImageMaskSpatialObject2

    def cast(obj: 'itkLightObject') -> "itkImageMaskSpatialObject2 *":
        """cast(itkLightObject obj) -> itkImageMaskSpatialObject2"""
        return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageMaskSpatialObject2

        Create a new object of the class itkImageMaskSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageMaskSpatialObject2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageMaskSpatialObject2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageMaskSpatialObject2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageMaskSpatialObject2.Clone = new_instancemethod(_itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject2_Clone, None, itkImageMaskSpatialObject2)
itkImageMaskSpatialObject2.ComputeMyBoundingBoxInIndexSpace = new_instancemethod(_itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject2_ComputeMyBoundingBoxInIndexSpace, None, itkImageMaskSpatialObject2)
itkImageMaskSpatialObject2.GetAxisAlignedBoundingBoxRegion = new_instancemethod(_itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject2_GetAxisAlignedBoundingBoxRegion, None, itkImageMaskSpatialObject2)
itkImageMaskSpatialObject2_swigregister = _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject2_swigregister
itkImageMaskSpatialObject2_swigregister(itkImageMaskSpatialObject2)

def itkImageMaskSpatialObject2___New_orig__() -> "itkImageMaskSpatialObject2_Pointer":
    """itkImageMaskSpatialObject2___New_orig__() -> itkImageMaskSpatialObject2_Pointer"""
    return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject2___New_orig__()

def itkImageMaskSpatialObject2_cast(obj: 'itkLightObject') -> "itkImageMaskSpatialObject2 *":
    """itkImageMaskSpatialObject2_cast(itkLightObject obj) -> itkImageMaskSpatialObject2"""
    return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject2_cast(obj)

class itkImageMaskSpatialObject3(itkImageSpatialObjectPython.itkImageSpatialObject3UC):
    """Proxy of C++ itkImageMaskSpatialObject3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageMaskSpatialObject3_Pointer":
        """__New_orig__() -> itkImageMaskSpatialObject3_Pointer"""
        return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageMaskSpatialObject3_Pointer":
        """Clone(itkImageMaskSpatialObject3 self) -> itkImageMaskSpatialObject3_Pointer"""
        return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject3_Clone(self)


    def ComputeMyBoundingBoxInIndexSpace(self) -> "itkImageRegion3":
        """ComputeMyBoundingBoxInIndexSpace(itkImageMaskSpatialObject3 self) -> itkImageRegion3"""
        return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject3_ComputeMyBoundingBoxInIndexSpace(self)


    def GetAxisAlignedBoundingBoxRegion(self) -> "itkImageRegion3":
        """GetAxisAlignedBoundingBoxRegion(itkImageMaskSpatialObject3 self) -> itkImageRegion3"""
        return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject3_GetAxisAlignedBoundingBoxRegion(self)

    __swig_destroy__ = _itkImageMaskSpatialObjectPython.delete_itkImageMaskSpatialObject3

    def cast(obj: 'itkLightObject') -> "itkImageMaskSpatialObject3 *":
        """cast(itkLightObject obj) -> itkImageMaskSpatialObject3"""
        return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageMaskSpatialObject3

        Create a new object of the class itkImageMaskSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageMaskSpatialObject3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageMaskSpatialObject3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageMaskSpatialObject3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageMaskSpatialObject3.Clone = new_instancemethod(_itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject3_Clone, None, itkImageMaskSpatialObject3)
itkImageMaskSpatialObject3.ComputeMyBoundingBoxInIndexSpace = new_instancemethod(_itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject3_ComputeMyBoundingBoxInIndexSpace, None, itkImageMaskSpatialObject3)
itkImageMaskSpatialObject3.GetAxisAlignedBoundingBoxRegion = new_instancemethod(_itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject3_GetAxisAlignedBoundingBoxRegion, None, itkImageMaskSpatialObject3)
itkImageMaskSpatialObject3_swigregister = _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject3_swigregister
itkImageMaskSpatialObject3_swigregister(itkImageMaskSpatialObject3)

def itkImageMaskSpatialObject3___New_orig__() -> "itkImageMaskSpatialObject3_Pointer":
    """itkImageMaskSpatialObject3___New_orig__() -> itkImageMaskSpatialObject3_Pointer"""
    return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject3___New_orig__()

def itkImageMaskSpatialObject3_cast(obj: 'itkLightObject') -> "itkImageMaskSpatialObject3 *":
    """itkImageMaskSpatialObject3_cast(itkLightObject obj) -> itkImageMaskSpatialObject3"""
    return _itkImageMaskSpatialObjectPython.itkImageMaskSpatialObject3_cast(obj)



