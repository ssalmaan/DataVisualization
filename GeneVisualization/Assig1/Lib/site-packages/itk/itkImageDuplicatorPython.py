# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkImageDuplicatorPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageDuplicatorPython', [dirname(__file__)])
        except ImportError:
            import _itkImageDuplicatorPython
            return _itkImageDuplicatorPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageDuplicatorPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageDuplicatorPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageDuplicatorPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImagePython
import itkOffsetPython
import itkSizePython
import pyBasePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import ITKCommonBasePython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython

def itkImageDuplicatorIUL3_New():
  return itkImageDuplicatorIUL3.New()


def itkImageDuplicatorIUL2_New():
  return itkImageDuplicatorIUL2.New()


def itkImageDuplicatorISSRTD33_New():
  return itkImageDuplicatorISSRTD33.New()


def itkImageDuplicatorID3_New():
  return itkImageDuplicatorID3.New()


def itkImageDuplicatorISSRTD22_New():
  return itkImageDuplicatorISSRTD22.New()


def itkImageDuplicatorID2_New():
  return itkImageDuplicatorID2.New()


def itkImageDuplicatorICVF43_New():
  return itkImageDuplicatorICVF43.New()


def itkImageDuplicatorIVF43_New():
  return itkImageDuplicatorIVF43.New()


def itkImageDuplicatorICVF33_New():
  return itkImageDuplicatorICVF33.New()


def itkImageDuplicatorIVF33_New():
  return itkImageDuplicatorIVF33.New()


def itkImageDuplicatorICVF23_New():
  return itkImageDuplicatorICVF23.New()


def itkImageDuplicatorIVF23_New():
  return itkImageDuplicatorIVF23.New()


def itkImageDuplicatorIF3_New():
  return itkImageDuplicatorIF3.New()


def itkImageDuplicatorICVF42_New():
  return itkImageDuplicatorICVF42.New()


def itkImageDuplicatorIVF42_New():
  return itkImageDuplicatorIVF42.New()


def itkImageDuplicatorICVF32_New():
  return itkImageDuplicatorICVF32.New()


def itkImageDuplicatorIVF32_New():
  return itkImageDuplicatorIVF32.New()


def itkImageDuplicatorICVF22_New():
  return itkImageDuplicatorICVF22.New()


def itkImageDuplicatorIVF22_New():
  return itkImageDuplicatorIVF22.New()


def itkImageDuplicatorIF2_New():
  return itkImageDuplicatorIF2.New()


def itkImageDuplicatorIUS3_New():
  return itkImageDuplicatorIUS3.New()


def itkImageDuplicatorIUS2_New():
  return itkImageDuplicatorIUS2.New()


def itkImageDuplicatorIRGBAUC3_New():
  return itkImageDuplicatorIRGBAUC3.New()


def itkImageDuplicatorIRGBUC3_New():
  return itkImageDuplicatorIRGBUC3.New()


def itkImageDuplicatorIUC3_New():
  return itkImageDuplicatorIUC3.New()


def itkImageDuplicatorIRGBAUC2_New():
  return itkImageDuplicatorIRGBAUC2.New()


def itkImageDuplicatorIRGBUC2_New():
  return itkImageDuplicatorIRGBUC2.New()


def itkImageDuplicatorIUC2_New():
  return itkImageDuplicatorIUC2.New()


def itkImageDuplicatorISS3_New():
  return itkImageDuplicatorISS3.New()


def itkImageDuplicatorISS2_New():
  return itkImageDuplicatorISS2.New()

class itkImageDuplicatorICVF22(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorICVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorICVF22_Pointer":
        """__New_orig__() -> itkImageDuplicatorICVF22_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorICVF22_Pointer":
        """Clone(itkImageDuplicatorICVF22 self) -> itkImageDuplicatorICVF22_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF22_Clone(self)


    def SetInputImage(self, _arg: 'itkImageCVF22') -> "void":
        """SetInputImage(itkImageDuplicatorICVF22 self, itkImageCVF22 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF22_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageCVF22 *":
        """
        GetOutput(itkImageDuplicatorICVF22 self) -> itkImageCVF22
        GetOutput(itkImageDuplicatorICVF22 self) -> itkImageCVF22
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF22_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageCVF22 *":
        """GetModifiableOutput(itkImageDuplicatorICVF22 self) -> itkImageCVF22"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF22_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorICVF22 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF22_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF22

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorICVF22 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorICVF22"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF22

        Create a new object of the class itkImageDuplicatorICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorICVF22.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF22_Clone, None, itkImageDuplicatorICVF22)
itkImageDuplicatorICVF22.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF22_SetInputImage, None, itkImageDuplicatorICVF22)
itkImageDuplicatorICVF22.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF22_GetOutput, None, itkImageDuplicatorICVF22)
itkImageDuplicatorICVF22.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF22_GetModifiableOutput, None, itkImageDuplicatorICVF22)
itkImageDuplicatorICVF22.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF22_Update, None, itkImageDuplicatorICVF22)
itkImageDuplicatorICVF22_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorICVF22_swigregister
itkImageDuplicatorICVF22_swigregister(itkImageDuplicatorICVF22)

def itkImageDuplicatorICVF22___New_orig__() -> "itkImageDuplicatorICVF22_Pointer":
    """itkImageDuplicatorICVF22___New_orig__() -> itkImageDuplicatorICVF22_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorICVF22___New_orig__()

def itkImageDuplicatorICVF22_cast(obj: 'itkLightObject') -> "itkImageDuplicatorICVF22 *":
    """itkImageDuplicatorICVF22_cast(itkLightObject obj) -> itkImageDuplicatorICVF22"""
    return _itkImageDuplicatorPython.itkImageDuplicatorICVF22_cast(obj)

class itkImageDuplicatorICVF23(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorICVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorICVF23_Pointer":
        """__New_orig__() -> itkImageDuplicatorICVF23_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorICVF23_Pointer":
        """Clone(itkImageDuplicatorICVF23 self) -> itkImageDuplicatorICVF23_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF23_Clone(self)


    def SetInputImage(self, _arg: 'itkImageCVF23') -> "void":
        """SetInputImage(itkImageDuplicatorICVF23 self, itkImageCVF23 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF23_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageCVF23 *":
        """
        GetOutput(itkImageDuplicatorICVF23 self) -> itkImageCVF23
        GetOutput(itkImageDuplicatorICVF23 self) -> itkImageCVF23
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF23_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageCVF23 *":
        """GetModifiableOutput(itkImageDuplicatorICVF23 self) -> itkImageCVF23"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF23_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorICVF23 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF23_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF23

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorICVF23 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorICVF23"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF23

        Create a new object of the class itkImageDuplicatorICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorICVF23.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF23_Clone, None, itkImageDuplicatorICVF23)
itkImageDuplicatorICVF23.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF23_SetInputImage, None, itkImageDuplicatorICVF23)
itkImageDuplicatorICVF23.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF23_GetOutput, None, itkImageDuplicatorICVF23)
itkImageDuplicatorICVF23.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF23_GetModifiableOutput, None, itkImageDuplicatorICVF23)
itkImageDuplicatorICVF23.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF23_Update, None, itkImageDuplicatorICVF23)
itkImageDuplicatorICVF23_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorICVF23_swigregister
itkImageDuplicatorICVF23_swigregister(itkImageDuplicatorICVF23)

def itkImageDuplicatorICVF23___New_orig__() -> "itkImageDuplicatorICVF23_Pointer":
    """itkImageDuplicatorICVF23___New_orig__() -> itkImageDuplicatorICVF23_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorICVF23___New_orig__()

def itkImageDuplicatorICVF23_cast(obj: 'itkLightObject') -> "itkImageDuplicatorICVF23 *":
    """itkImageDuplicatorICVF23_cast(itkLightObject obj) -> itkImageDuplicatorICVF23"""
    return _itkImageDuplicatorPython.itkImageDuplicatorICVF23_cast(obj)

class itkImageDuplicatorICVF32(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorICVF32 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorICVF32_Pointer":
        """__New_orig__() -> itkImageDuplicatorICVF32_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorICVF32_Pointer":
        """Clone(itkImageDuplicatorICVF32 self) -> itkImageDuplicatorICVF32_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF32_Clone(self)


    def SetInputImage(self, _arg: 'itkImageCVF32') -> "void":
        """SetInputImage(itkImageDuplicatorICVF32 self, itkImageCVF32 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF32_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageCVF32 *":
        """
        GetOutput(itkImageDuplicatorICVF32 self) -> itkImageCVF32
        GetOutput(itkImageDuplicatorICVF32 self) -> itkImageCVF32
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF32_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageCVF32 *":
        """GetModifiableOutput(itkImageDuplicatorICVF32 self) -> itkImageCVF32"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF32_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorICVF32 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF32_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF32

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorICVF32 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorICVF32"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF32

        Create a new object of the class itkImageDuplicatorICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorICVF32.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF32_Clone, None, itkImageDuplicatorICVF32)
itkImageDuplicatorICVF32.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF32_SetInputImage, None, itkImageDuplicatorICVF32)
itkImageDuplicatorICVF32.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF32_GetOutput, None, itkImageDuplicatorICVF32)
itkImageDuplicatorICVF32.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF32_GetModifiableOutput, None, itkImageDuplicatorICVF32)
itkImageDuplicatorICVF32.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF32_Update, None, itkImageDuplicatorICVF32)
itkImageDuplicatorICVF32_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorICVF32_swigregister
itkImageDuplicatorICVF32_swigregister(itkImageDuplicatorICVF32)

def itkImageDuplicatorICVF32___New_orig__() -> "itkImageDuplicatorICVF32_Pointer":
    """itkImageDuplicatorICVF32___New_orig__() -> itkImageDuplicatorICVF32_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorICVF32___New_orig__()

def itkImageDuplicatorICVF32_cast(obj: 'itkLightObject') -> "itkImageDuplicatorICVF32 *":
    """itkImageDuplicatorICVF32_cast(itkLightObject obj) -> itkImageDuplicatorICVF32"""
    return _itkImageDuplicatorPython.itkImageDuplicatorICVF32_cast(obj)

class itkImageDuplicatorICVF33(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorICVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorICVF33_Pointer":
        """__New_orig__() -> itkImageDuplicatorICVF33_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorICVF33_Pointer":
        """Clone(itkImageDuplicatorICVF33 self) -> itkImageDuplicatorICVF33_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF33_Clone(self)


    def SetInputImage(self, _arg: 'itkImageCVF33') -> "void":
        """SetInputImage(itkImageDuplicatorICVF33 self, itkImageCVF33 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF33_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageCVF33 *":
        """
        GetOutput(itkImageDuplicatorICVF33 self) -> itkImageCVF33
        GetOutput(itkImageDuplicatorICVF33 self) -> itkImageCVF33
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF33_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageCVF33 *":
        """GetModifiableOutput(itkImageDuplicatorICVF33 self) -> itkImageCVF33"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF33_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorICVF33 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF33_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF33

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorICVF33 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorICVF33"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF33

        Create a new object of the class itkImageDuplicatorICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorICVF33.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF33_Clone, None, itkImageDuplicatorICVF33)
itkImageDuplicatorICVF33.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF33_SetInputImage, None, itkImageDuplicatorICVF33)
itkImageDuplicatorICVF33.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF33_GetOutput, None, itkImageDuplicatorICVF33)
itkImageDuplicatorICVF33.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF33_GetModifiableOutput, None, itkImageDuplicatorICVF33)
itkImageDuplicatorICVF33.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF33_Update, None, itkImageDuplicatorICVF33)
itkImageDuplicatorICVF33_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorICVF33_swigregister
itkImageDuplicatorICVF33_swigregister(itkImageDuplicatorICVF33)

def itkImageDuplicatorICVF33___New_orig__() -> "itkImageDuplicatorICVF33_Pointer":
    """itkImageDuplicatorICVF33___New_orig__() -> itkImageDuplicatorICVF33_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorICVF33___New_orig__()

def itkImageDuplicatorICVF33_cast(obj: 'itkLightObject') -> "itkImageDuplicatorICVF33 *":
    """itkImageDuplicatorICVF33_cast(itkLightObject obj) -> itkImageDuplicatorICVF33"""
    return _itkImageDuplicatorPython.itkImageDuplicatorICVF33_cast(obj)

class itkImageDuplicatorICVF42(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorICVF42 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorICVF42_Pointer":
        """__New_orig__() -> itkImageDuplicatorICVF42_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorICVF42_Pointer":
        """Clone(itkImageDuplicatorICVF42 self) -> itkImageDuplicatorICVF42_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF42_Clone(self)


    def SetInputImage(self, _arg: 'itkImageCVF42') -> "void":
        """SetInputImage(itkImageDuplicatorICVF42 self, itkImageCVF42 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF42_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageCVF42 *":
        """
        GetOutput(itkImageDuplicatorICVF42 self) -> itkImageCVF42
        GetOutput(itkImageDuplicatorICVF42 self) -> itkImageCVF42
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF42_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageCVF42 *":
        """GetModifiableOutput(itkImageDuplicatorICVF42 self) -> itkImageCVF42"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF42_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorICVF42 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF42_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF42

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorICVF42 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorICVF42"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF42

        Create a new object of the class itkImageDuplicatorICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorICVF42.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF42_Clone, None, itkImageDuplicatorICVF42)
itkImageDuplicatorICVF42.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF42_SetInputImage, None, itkImageDuplicatorICVF42)
itkImageDuplicatorICVF42.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF42_GetOutput, None, itkImageDuplicatorICVF42)
itkImageDuplicatorICVF42.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF42_GetModifiableOutput, None, itkImageDuplicatorICVF42)
itkImageDuplicatorICVF42.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF42_Update, None, itkImageDuplicatorICVF42)
itkImageDuplicatorICVF42_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorICVF42_swigregister
itkImageDuplicatorICVF42_swigregister(itkImageDuplicatorICVF42)

def itkImageDuplicatorICVF42___New_orig__() -> "itkImageDuplicatorICVF42_Pointer":
    """itkImageDuplicatorICVF42___New_orig__() -> itkImageDuplicatorICVF42_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorICVF42___New_orig__()

def itkImageDuplicatorICVF42_cast(obj: 'itkLightObject') -> "itkImageDuplicatorICVF42 *":
    """itkImageDuplicatorICVF42_cast(itkLightObject obj) -> itkImageDuplicatorICVF42"""
    return _itkImageDuplicatorPython.itkImageDuplicatorICVF42_cast(obj)

class itkImageDuplicatorICVF43(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorICVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorICVF43_Pointer":
        """__New_orig__() -> itkImageDuplicatorICVF43_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorICVF43_Pointer":
        """Clone(itkImageDuplicatorICVF43 self) -> itkImageDuplicatorICVF43_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF43_Clone(self)


    def SetInputImage(self, _arg: 'itkImageCVF43') -> "void":
        """SetInputImage(itkImageDuplicatorICVF43 self, itkImageCVF43 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF43_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageCVF43 *":
        """
        GetOutput(itkImageDuplicatorICVF43 self) -> itkImageCVF43
        GetOutput(itkImageDuplicatorICVF43 self) -> itkImageCVF43
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF43_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageCVF43 *":
        """GetModifiableOutput(itkImageDuplicatorICVF43 self) -> itkImageCVF43"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF43_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorICVF43 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF43_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF43

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorICVF43 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorICVF43"""
        return _itkImageDuplicatorPython.itkImageDuplicatorICVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF43

        Create a new object of the class itkImageDuplicatorICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorICVF43.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF43_Clone, None, itkImageDuplicatorICVF43)
itkImageDuplicatorICVF43.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF43_SetInputImage, None, itkImageDuplicatorICVF43)
itkImageDuplicatorICVF43.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF43_GetOutput, None, itkImageDuplicatorICVF43)
itkImageDuplicatorICVF43.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF43_GetModifiableOutput, None, itkImageDuplicatorICVF43)
itkImageDuplicatorICVF43.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorICVF43_Update, None, itkImageDuplicatorICVF43)
itkImageDuplicatorICVF43_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorICVF43_swigregister
itkImageDuplicatorICVF43_swigregister(itkImageDuplicatorICVF43)

def itkImageDuplicatorICVF43___New_orig__() -> "itkImageDuplicatorICVF43_Pointer":
    """itkImageDuplicatorICVF43___New_orig__() -> itkImageDuplicatorICVF43_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorICVF43___New_orig__()

def itkImageDuplicatorICVF43_cast(obj: 'itkLightObject') -> "itkImageDuplicatorICVF43 *":
    """itkImageDuplicatorICVF43_cast(itkLightObject obj) -> itkImageDuplicatorICVF43"""
    return _itkImageDuplicatorPython.itkImageDuplicatorICVF43_cast(obj)

class itkImageDuplicatorID2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorID2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorID2_Pointer":
        """__New_orig__() -> itkImageDuplicatorID2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorID2_Pointer":
        """Clone(itkImageDuplicatorID2 self) -> itkImageDuplicatorID2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorID2_Clone(self)


    def SetInputImage(self, _arg: 'itkImageD2') -> "void":
        """SetInputImage(itkImageDuplicatorID2 self, itkImageD2 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorID2_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageD2 *":
        """
        GetOutput(itkImageDuplicatorID2 self) -> itkImageD2
        GetOutput(itkImageDuplicatorID2 self) -> itkImageD2
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorID2_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageD2 *":
        """GetModifiableOutput(itkImageDuplicatorID2 self) -> itkImageD2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorID2_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorID2 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorID2_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorID2

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorID2 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorID2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorID2

        Create a new object of the class itkImageDuplicatorID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorID2.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorID2_Clone, None, itkImageDuplicatorID2)
itkImageDuplicatorID2.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorID2_SetInputImage, None, itkImageDuplicatorID2)
itkImageDuplicatorID2.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorID2_GetOutput, None, itkImageDuplicatorID2)
itkImageDuplicatorID2.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorID2_GetModifiableOutput, None, itkImageDuplicatorID2)
itkImageDuplicatorID2.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorID2_Update, None, itkImageDuplicatorID2)
itkImageDuplicatorID2_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorID2_swigregister
itkImageDuplicatorID2_swigregister(itkImageDuplicatorID2)

def itkImageDuplicatorID2___New_orig__() -> "itkImageDuplicatorID2_Pointer":
    """itkImageDuplicatorID2___New_orig__() -> itkImageDuplicatorID2_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorID2___New_orig__()

def itkImageDuplicatorID2_cast(obj: 'itkLightObject') -> "itkImageDuplicatorID2 *":
    """itkImageDuplicatorID2_cast(itkLightObject obj) -> itkImageDuplicatorID2"""
    return _itkImageDuplicatorPython.itkImageDuplicatorID2_cast(obj)

class itkImageDuplicatorID3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorID3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorID3_Pointer":
        """__New_orig__() -> itkImageDuplicatorID3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorID3_Pointer":
        """Clone(itkImageDuplicatorID3 self) -> itkImageDuplicatorID3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorID3_Clone(self)


    def SetInputImage(self, _arg: 'itkImageD3') -> "void":
        """SetInputImage(itkImageDuplicatorID3 self, itkImageD3 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorID3_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageD3 *":
        """
        GetOutput(itkImageDuplicatorID3 self) -> itkImageD3
        GetOutput(itkImageDuplicatorID3 self) -> itkImageD3
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorID3_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageD3 *":
        """GetModifiableOutput(itkImageDuplicatorID3 self) -> itkImageD3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorID3_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorID3 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorID3_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorID3

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorID3 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorID3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorID3

        Create a new object of the class itkImageDuplicatorID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorID3.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorID3_Clone, None, itkImageDuplicatorID3)
itkImageDuplicatorID3.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorID3_SetInputImage, None, itkImageDuplicatorID3)
itkImageDuplicatorID3.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorID3_GetOutput, None, itkImageDuplicatorID3)
itkImageDuplicatorID3.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorID3_GetModifiableOutput, None, itkImageDuplicatorID3)
itkImageDuplicatorID3.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorID3_Update, None, itkImageDuplicatorID3)
itkImageDuplicatorID3_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorID3_swigregister
itkImageDuplicatorID3_swigregister(itkImageDuplicatorID3)

def itkImageDuplicatorID3___New_orig__() -> "itkImageDuplicatorID3_Pointer":
    """itkImageDuplicatorID3___New_orig__() -> itkImageDuplicatorID3_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorID3___New_orig__()

def itkImageDuplicatorID3_cast(obj: 'itkLightObject') -> "itkImageDuplicatorID3 *":
    """itkImageDuplicatorID3_cast(itkLightObject obj) -> itkImageDuplicatorID3"""
    return _itkImageDuplicatorPython.itkImageDuplicatorID3_cast(obj)

class itkImageDuplicatorIF2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIF2_Pointer":
        """__New_orig__() -> itkImageDuplicatorIF2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIF2_Pointer":
        """Clone(itkImageDuplicatorIF2 self) -> itkImageDuplicatorIF2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIF2_Clone(self)


    def SetInputImage(self, _arg: 'itkImageF2') -> "void":
        """SetInputImage(itkImageDuplicatorIF2 self, itkImageF2 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIF2_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageF2 *":
        """
        GetOutput(itkImageDuplicatorIF2 self) -> itkImageF2
        GetOutput(itkImageDuplicatorIF2 self) -> itkImageF2
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIF2_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageF2 *":
        """GetModifiableOutput(itkImageDuplicatorIF2 self) -> itkImageF2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIF2_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIF2 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIF2_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIF2

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIF2 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIF2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIF2

        Create a new object of the class itkImageDuplicatorIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIF2.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIF2_Clone, None, itkImageDuplicatorIF2)
itkImageDuplicatorIF2.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIF2_SetInputImage, None, itkImageDuplicatorIF2)
itkImageDuplicatorIF2.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIF2_GetOutput, None, itkImageDuplicatorIF2)
itkImageDuplicatorIF2.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIF2_GetModifiableOutput, None, itkImageDuplicatorIF2)
itkImageDuplicatorIF2.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIF2_Update, None, itkImageDuplicatorIF2)
itkImageDuplicatorIF2_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIF2_swigregister
itkImageDuplicatorIF2_swigregister(itkImageDuplicatorIF2)

def itkImageDuplicatorIF2___New_orig__() -> "itkImageDuplicatorIF2_Pointer":
    """itkImageDuplicatorIF2___New_orig__() -> itkImageDuplicatorIF2_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIF2___New_orig__()

def itkImageDuplicatorIF2_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIF2 *":
    """itkImageDuplicatorIF2_cast(itkLightObject obj) -> itkImageDuplicatorIF2"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIF2_cast(obj)

class itkImageDuplicatorIF3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIF3_Pointer":
        """__New_orig__() -> itkImageDuplicatorIF3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIF3_Pointer":
        """Clone(itkImageDuplicatorIF3 self) -> itkImageDuplicatorIF3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIF3_Clone(self)


    def SetInputImage(self, _arg: 'itkImageF3') -> "void":
        """SetInputImage(itkImageDuplicatorIF3 self, itkImageF3 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIF3_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageF3 *":
        """
        GetOutput(itkImageDuplicatorIF3 self) -> itkImageF3
        GetOutput(itkImageDuplicatorIF3 self) -> itkImageF3
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIF3_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageF3 *":
        """GetModifiableOutput(itkImageDuplicatorIF3 self) -> itkImageF3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIF3_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIF3 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIF3_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIF3

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIF3 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIF3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIF3

        Create a new object of the class itkImageDuplicatorIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIF3.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIF3_Clone, None, itkImageDuplicatorIF3)
itkImageDuplicatorIF3.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIF3_SetInputImage, None, itkImageDuplicatorIF3)
itkImageDuplicatorIF3.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIF3_GetOutput, None, itkImageDuplicatorIF3)
itkImageDuplicatorIF3.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIF3_GetModifiableOutput, None, itkImageDuplicatorIF3)
itkImageDuplicatorIF3.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIF3_Update, None, itkImageDuplicatorIF3)
itkImageDuplicatorIF3_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIF3_swigregister
itkImageDuplicatorIF3_swigregister(itkImageDuplicatorIF3)

def itkImageDuplicatorIF3___New_orig__() -> "itkImageDuplicatorIF3_Pointer":
    """itkImageDuplicatorIF3___New_orig__() -> itkImageDuplicatorIF3_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIF3___New_orig__()

def itkImageDuplicatorIF3_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIF3 *":
    """itkImageDuplicatorIF3_cast(itkLightObject obj) -> itkImageDuplicatorIF3"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIF3_cast(obj)

class itkImageDuplicatorIRGBAUC2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIRGBAUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIRGBAUC2_Pointer":
        """__New_orig__() -> itkImageDuplicatorIRGBAUC2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIRGBAUC2_Pointer":
        """Clone(itkImageDuplicatorIRGBAUC2 self) -> itkImageDuplicatorIRGBAUC2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_Clone(self)


    def SetInputImage(self, _arg: 'itkImageRGBAUC2') -> "void":
        """SetInputImage(itkImageDuplicatorIRGBAUC2 self, itkImageRGBAUC2 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageRGBAUC2 *":
        """
        GetOutput(itkImageDuplicatorIRGBAUC2 self) -> itkImageRGBAUC2
        GetOutput(itkImageDuplicatorIRGBAUC2 self) -> itkImageRGBAUC2
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageRGBAUC2 *":
        """GetModifiableOutput(itkImageDuplicatorIRGBAUC2 self) -> itkImageRGBAUC2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIRGBAUC2 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIRGBAUC2

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIRGBAUC2 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIRGBAUC2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIRGBAUC2

        Create a new object of the class itkImageDuplicatorIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIRGBAUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIRGBAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIRGBAUC2.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_Clone, None, itkImageDuplicatorIRGBAUC2)
itkImageDuplicatorIRGBAUC2.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_SetInputImage, None, itkImageDuplicatorIRGBAUC2)
itkImageDuplicatorIRGBAUC2.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_GetOutput, None, itkImageDuplicatorIRGBAUC2)
itkImageDuplicatorIRGBAUC2.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_GetModifiableOutput, None, itkImageDuplicatorIRGBAUC2)
itkImageDuplicatorIRGBAUC2.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_Update, None, itkImageDuplicatorIRGBAUC2)
itkImageDuplicatorIRGBAUC2_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_swigregister
itkImageDuplicatorIRGBAUC2_swigregister(itkImageDuplicatorIRGBAUC2)

def itkImageDuplicatorIRGBAUC2___New_orig__() -> "itkImageDuplicatorIRGBAUC2_Pointer":
    """itkImageDuplicatorIRGBAUC2___New_orig__() -> itkImageDuplicatorIRGBAUC2_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2___New_orig__()

def itkImageDuplicatorIRGBAUC2_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIRGBAUC2 *":
    """itkImageDuplicatorIRGBAUC2_cast(itkLightObject obj) -> itkImageDuplicatorIRGBAUC2"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_cast(obj)

class itkImageDuplicatorIRGBAUC3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIRGBAUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIRGBAUC3_Pointer":
        """__New_orig__() -> itkImageDuplicatorIRGBAUC3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIRGBAUC3_Pointer":
        """Clone(itkImageDuplicatorIRGBAUC3 self) -> itkImageDuplicatorIRGBAUC3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_Clone(self)


    def SetInputImage(self, _arg: 'itkImageRGBAUC3') -> "void":
        """SetInputImage(itkImageDuplicatorIRGBAUC3 self, itkImageRGBAUC3 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageRGBAUC3 *":
        """
        GetOutput(itkImageDuplicatorIRGBAUC3 self) -> itkImageRGBAUC3
        GetOutput(itkImageDuplicatorIRGBAUC3 self) -> itkImageRGBAUC3
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageRGBAUC3 *":
        """GetModifiableOutput(itkImageDuplicatorIRGBAUC3 self) -> itkImageRGBAUC3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIRGBAUC3 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIRGBAUC3

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIRGBAUC3 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIRGBAUC3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIRGBAUC3

        Create a new object of the class itkImageDuplicatorIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIRGBAUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIRGBAUC3.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_Clone, None, itkImageDuplicatorIRGBAUC3)
itkImageDuplicatorIRGBAUC3.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_SetInputImage, None, itkImageDuplicatorIRGBAUC3)
itkImageDuplicatorIRGBAUC3.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_GetOutput, None, itkImageDuplicatorIRGBAUC3)
itkImageDuplicatorIRGBAUC3.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_GetModifiableOutput, None, itkImageDuplicatorIRGBAUC3)
itkImageDuplicatorIRGBAUC3.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_Update, None, itkImageDuplicatorIRGBAUC3)
itkImageDuplicatorIRGBAUC3_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_swigregister
itkImageDuplicatorIRGBAUC3_swigregister(itkImageDuplicatorIRGBAUC3)

def itkImageDuplicatorIRGBAUC3___New_orig__() -> "itkImageDuplicatorIRGBAUC3_Pointer":
    """itkImageDuplicatorIRGBAUC3___New_orig__() -> itkImageDuplicatorIRGBAUC3_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3___New_orig__()

def itkImageDuplicatorIRGBAUC3_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIRGBAUC3 *":
    """itkImageDuplicatorIRGBAUC3_cast(itkLightObject obj) -> itkImageDuplicatorIRGBAUC3"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_cast(obj)

class itkImageDuplicatorIRGBUC2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIRGBUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIRGBUC2_Pointer":
        """__New_orig__() -> itkImageDuplicatorIRGBUC2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIRGBUC2_Pointer":
        """Clone(itkImageDuplicatorIRGBUC2 self) -> itkImageDuplicatorIRGBUC2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_Clone(self)


    def SetInputImage(self, _arg: 'itkImageRGBUC2') -> "void":
        """SetInputImage(itkImageDuplicatorIRGBUC2 self, itkImageRGBUC2 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageRGBUC2 *":
        """
        GetOutput(itkImageDuplicatorIRGBUC2 self) -> itkImageRGBUC2
        GetOutput(itkImageDuplicatorIRGBUC2 self) -> itkImageRGBUC2
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageRGBUC2 *":
        """GetModifiableOutput(itkImageDuplicatorIRGBUC2 self) -> itkImageRGBUC2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIRGBUC2 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIRGBUC2

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIRGBUC2 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIRGBUC2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIRGBUC2

        Create a new object of the class itkImageDuplicatorIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIRGBUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIRGBUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIRGBUC2.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_Clone, None, itkImageDuplicatorIRGBUC2)
itkImageDuplicatorIRGBUC2.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_SetInputImage, None, itkImageDuplicatorIRGBUC2)
itkImageDuplicatorIRGBUC2.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_GetOutput, None, itkImageDuplicatorIRGBUC2)
itkImageDuplicatorIRGBUC2.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_GetModifiableOutput, None, itkImageDuplicatorIRGBUC2)
itkImageDuplicatorIRGBUC2.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_Update, None, itkImageDuplicatorIRGBUC2)
itkImageDuplicatorIRGBUC2_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_swigregister
itkImageDuplicatorIRGBUC2_swigregister(itkImageDuplicatorIRGBUC2)

def itkImageDuplicatorIRGBUC2___New_orig__() -> "itkImageDuplicatorIRGBUC2_Pointer":
    """itkImageDuplicatorIRGBUC2___New_orig__() -> itkImageDuplicatorIRGBUC2_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2___New_orig__()

def itkImageDuplicatorIRGBUC2_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIRGBUC2 *":
    """itkImageDuplicatorIRGBUC2_cast(itkLightObject obj) -> itkImageDuplicatorIRGBUC2"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_cast(obj)

class itkImageDuplicatorIRGBUC3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIRGBUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIRGBUC3_Pointer":
        """__New_orig__() -> itkImageDuplicatorIRGBUC3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIRGBUC3_Pointer":
        """Clone(itkImageDuplicatorIRGBUC3 self) -> itkImageDuplicatorIRGBUC3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_Clone(self)


    def SetInputImage(self, _arg: 'itkImageRGBUC3') -> "void":
        """SetInputImage(itkImageDuplicatorIRGBUC3 self, itkImageRGBUC3 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageRGBUC3 *":
        """
        GetOutput(itkImageDuplicatorIRGBUC3 self) -> itkImageRGBUC3
        GetOutput(itkImageDuplicatorIRGBUC3 self) -> itkImageRGBUC3
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageRGBUC3 *":
        """GetModifiableOutput(itkImageDuplicatorIRGBUC3 self) -> itkImageRGBUC3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIRGBUC3 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIRGBUC3

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIRGBUC3 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIRGBUC3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIRGBUC3

        Create a new object of the class itkImageDuplicatorIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIRGBUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIRGBUC3.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_Clone, None, itkImageDuplicatorIRGBUC3)
itkImageDuplicatorIRGBUC3.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_SetInputImage, None, itkImageDuplicatorIRGBUC3)
itkImageDuplicatorIRGBUC3.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_GetOutput, None, itkImageDuplicatorIRGBUC3)
itkImageDuplicatorIRGBUC3.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_GetModifiableOutput, None, itkImageDuplicatorIRGBUC3)
itkImageDuplicatorIRGBUC3.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_Update, None, itkImageDuplicatorIRGBUC3)
itkImageDuplicatorIRGBUC3_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_swigregister
itkImageDuplicatorIRGBUC3_swigregister(itkImageDuplicatorIRGBUC3)

def itkImageDuplicatorIRGBUC3___New_orig__() -> "itkImageDuplicatorIRGBUC3_Pointer":
    """itkImageDuplicatorIRGBUC3___New_orig__() -> itkImageDuplicatorIRGBUC3_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3___New_orig__()

def itkImageDuplicatorIRGBUC3_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIRGBUC3 *":
    """itkImageDuplicatorIRGBUC3_cast(itkLightObject obj) -> itkImageDuplicatorIRGBUC3"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_cast(obj)

class itkImageDuplicatorISS2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorISS2_Pointer":
        """__New_orig__() -> itkImageDuplicatorISS2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorISS2_Pointer":
        """Clone(itkImageDuplicatorISS2 self) -> itkImageDuplicatorISS2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISS2_Clone(self)


    def SetInputImage(self, _arg: 'itkImageSS2') -> "void":
        """SetInputImage(itkImageDuplicatorISS2 self, itkImageSS2 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISS2_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageSS2 *":
        """
        GetOutput(itkImageDuplicatorISS2 self) -> itkImageSS2
        GetOutput(itkImageDuplicatorISS2 self) -> itkImageSS2
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorISS2_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageSS2 *":
        """GetModifiableOutput(itkImageDuplicatorISS2 self) -> itkImageSS2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISS2_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorISS2 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISS2_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISS2

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorISS2 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorISS2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISS2

        Create a new object of the class itkImageDuplicatorISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorISS2.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISS2_Clone, None, itkImageDuplicatorISS2)
itkImageDuplicatorISS2.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISS2_SetInputImage, None, itkImageDuplicatorISS2)
itkImageDuplicatorISS2.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISS2_GetOutput, None, itkImageDuplicatorISS2)
itkImageDuplicatorISS2.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISS2_GetModifiableOutput, None, itkImageDuplicatorISS2)
itkImageDuplicatorISS2.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISS2_Update, None, itkImageDuplicatorISS2)
itkImageDuplicatorISS2_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorISS2_swigregister
itkImageDuplicatorISS2_swigregister(itkImageDuplicatorISS2)

def itkImageDuplicatorISS2___New_orig__() -> "itkImageDuplicatorISS2_Pointer":
    """itkImageDuplicatorISS2___New_orig__() -> itkImageDuplicatorISS2_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorISS2___New_orig__()

def itkImageDuplicatorISS2_cast(obj: 'itkLightObject') -> "itkImageDuplicatorISS2 *":
    """itkImageDuplicatorISS2_cast(itkLightObject obj) -> itkImageDuplicatorISS2"""
    return _itkImageDuplicatorPython.itkImageDuplicatorISS2_cast(obj)

class itkImageDuplicatorISS3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorISS3_Pointer":
        """__New_orig__() -> itkImageDuplicatorISS3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorISS3_Pointer":
        """Clone(itkImageDuplicatorISS3 self) -> itkImageDuplicatorISS3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISS3_Clone(self)


    def SetInputImage(self, _arg: 'itkImageSS3') -> "void":
        """SetInputImage(itkImageDuplicatorISS3 self, itkImageSS3 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISS3_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageSS3 *":
        """
        GetOutput(itkImageDuplicatorISS3 self) -> itkImageSS3
        GetOutput(itkImageDuplicatorISS3 self) -> itkImageSS3
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorISS3_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageSS3 *":
        """GetModifiableOutput(itkImageDuplicatorISS3 self) -> itkImageSS3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISS3_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorISS3 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISS3_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISS3

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorISS3 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorISS3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISS3

        Create a new object of the class itkImageDuplicatorISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorISS3.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISS3_Clone, None, itkImageDuplicatorISS3)
itkImageDuplicatorISS3.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISS3_SetInputImage, None, itkImageDuplicatorISS3)
itkImageDuplicatorISS3.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISS3_GetOutput, None, itkImageDuplicatorISS3)
itkImageDuplicatorISS3.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISS3_GetModifiableOutput, None, itkImageDuplicatorISS3)
itkImageDuplicatorISS3.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISS3_Update, None, itkImageDuplicatorISS3)
itkImageDuplicatorISS3_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorISS3_swigregister
itkImageDuplicatorISS3_swigregister(itkImageDuplicatorISS3)

def itkImageDuplicatorISS3___New_orig__() -> "itkImageDuplicatorISS3_Pointer":
    """itkImageDuplicatorISS3___New_orig__() -> itkImageDuplicatorISS3_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorISS3___New_orig__()

def itkImageDuplicatorISS3_cast(obj: 'itkLightObject') -> "itkImageDuplicatorISS3 *":
    """itkImageDuplicatorISS3_cast(itkLightObject obj) -> itkImageDuplicatorISS3"""
    return _itkImageDuplicatorPython.itkImageDuplicatorISS3_cast(obj)

class itkImageDuplicatorISSRTD22(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorISSRTD22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorISSRTD22_Pointer":
        """__New_orig__() -> itkImageDuplicatorISSRTD22_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorISSRTD22_Pointer":
        """Clone(itkImageDuplicatorISSRTD22 self) -> itkImageDuplicatorISSRTD22_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_Clone(self)


    def SetInputImage(self, _arg: 'itkImageSSRTD22') -> "void":
        """SetInputImage(itkImageDuplicatorISSRTD22 self, itkImageSSRTD22 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageSSRTD22 *":
        """
        GetOutput(itkImageDuplicatorISSRTD22 self) -> itkImageSSRTD22
        GetOutput(itkImageDuplicatorISSRTD22 self) -> itkImageSSRTD22
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageSSRTD22 *":
        """GetModifiableOutput(itkImageDuplicatorISSRTD22 self) -> itkImageSSRTD22"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorISSRTD22 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISSRTD22

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorISSRTD22 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorISSRTD22"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISSRTD22

        Create a new object of the class itkImageDuplicatorISSRTD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISSRTD22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISSRTD22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorISSRTD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorISSRTD22.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_Clone, None, itkImageDuplicatorISSRTD22)
itkImageDuplicatorISSRTD22.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_SetInputImage, None, itkImageDuplicatorISSRTD22)
itkImageDuplicatorISSRTD22.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_GetOutput, None, itkImageDuplicatorISSRTD22)
itkImageDuplicatorISSRTD22.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_GetModifiableOutput, None, itkImageDuplicatorISSRTD22)
itkImageDuplicatorISSRTD22.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_Update, None, itkImageDuplicatorISSRTD22)
itkImageDuplicatorISSRTD22_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_swigregister
itkImageDuplicatorISSRTD22_swigregister(itkImageDuplicatorISSRTD22)

def itkImageDuplicatorISSRTD22___New_orig__() -> "itkImageDuplicatorISSRTD22_Pointer":
    """itkImageDuplicatorISSRTD22___New_orig__() -> itkImageDuplicatorISSRTD22_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD22___New_orig__()

def itkImageDuplicatorISSRTD22_cast(obj: 'itkLightObject') -> "itkImageDuplicatorISSRTD22 *":
    """itkImageDuplicatorISSRTD22_cast(itkLightObject obj) -> itkImageDuplicatorISSRTD22"""
    return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_cast(obj)

class itkImageDuplicatorISSRTD33(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorISSRTD33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorISSRTD33_Pointer":
        """__New_orig__() -> itkImageDuplicatorISSRTD33_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorISSRTD33_Pointer":
        """Clone(itkImageDuplicatorISSRTD33 self) -> itkImageDuplicatorISSRTD33_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_Clone(self)


    def SetInputImage(self, _arg: 'itkImageSSRTD33') -> "void":
        """SetInputImage(itkImageDuplicatorISSRTD33 self, itkImageSSRTD33 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageSSRTD33 *":
        """
        GetOutput(itkImageDuplicatorISSRTD33 self) -> itkImageSSRTD33
        GetOutput(itkImageDuplicatorISSRTD33 self) -> itkImageSSRTD33
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageSSRTD33 *":
        """GetModifiableOutput(itkImageDuplicatorISSRTD33 self) -> itkImageSSRTD33"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorISSRTD33 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISSRTD33

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorISSRTD33 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorISSRTD33"""
        return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISSRTD33

        Create a new object of the class itkImageDuplicatorISSRTD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISSRTD33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISSRTD33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorISSRTD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorISSRTD33.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_Clone, None, itkImageDuplicatorISSRTD33)
itkImageDuplicatorISSRTD33.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_SetInputImage, None, itkImageDuplicatorISSRTD33)
itkImageDuplicatorISSRTD33.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_GetOutput, None, itkImageDuplicatorISSRTD33)
itkImageDuplicatorISSRTD33.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_GetModifiableOutput, None, itkImageDuplicatorISSRTD33)
itkImageDuplicatorISSRTD33.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_Update, None, itkImageDuplicatorISSRTD33)
itkImageDuplicatorISSRTD33_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_swigregister
itkImageDuplicatorISSRTD33_swigregister(itkImageDuplicatorISSRTD33)

def itkImageDuplicatorISSRTD33___New_orig__() -> "itkImageDuplicatorISSRTD33_Pointer":
    """itkImageDuplicatorISSRTD33___New_orig__() -> itkImageDuplicatorISSRTD33_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD33___New_orig__()

def itkImageDuplicatorISSRTD33_cast(obj: 'itkLightObject') -> "itkImageDuplicatorISSRTD33 *":
    """itkImageDuplicatorISSRTD33_cast(itkLightObject obj) -> itkImageDuplicatorISSRTD33"""
    return _itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_cast(obj)

class itkImageDuplicatorIUC2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIUC2_Pointer":
        """__New_orig__() -> itkImageDuplicatorIUC2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIUC2_Pointer":
        """Clone(itkImageDuplicatorIUC2 self) -> itkImageDuplicatorIUC2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC2_Clone(self)


    def SetInputImage(self, _arg: 'itkImageUC2') -> "void":
        """SetInputImage(itkImageDuplicatorIUC2 self, itkImageUC2 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC2_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageUC2 *":
        """
        GetOutput(itkImageDuplicatorIUC2 self) -> itkImageUC2
        GetOutput(itkImageDuplicatorIUC2 self) -> itkImageUC2
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC2_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageUC2 *":
        """GetModifiableOutput(itkImageDuplicatorIUC2 self) -> itkImageUC2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC2_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIUC2 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC2_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUC2

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIUC2 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIUC2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUC2

        Create a new object of the class itkImageDuplicatorIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIUC2.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUC2_Clone, None, itkImageDuplicatorIUC2)
itkImageDuplicatorIUC2.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUC2_SetInputImage, None, itkImageDuplicatorIUC2)
itkImageDuplicatorIUC2.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUC2_GetOutput, None, itkImageDuplicatorIUC2)
itkImageDuplicatorIUC2.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUC2_GetModifiableOutput, None, itkImageDuplicatorIUC2)
itkImageDuplicatorIUC2.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUC2_Update, None, itkImageDuplicatorIUC2)
itkImageDuplicatorIUC2_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIUC2_swigregister
itkImageDuplicatorIUC2_swigregister(itkImageDuplicatorIUC2)

def itkImageDuplicatorIUC2___New_orig__() -> "itkImageDuplicatorIUC2_Pointer":
    """itkImageDuplicatorIUC2___New_orig__() -> itkImageDuplicatorIUC2_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIUC2___New_orig__()

def itkImageDuplicatorIUC2_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIUC2 *":
    """itkImageDuplicatorIUC2_cast(itkLightObject obj) -> itkImageDuplicatorIUC2"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIUC2_cast(obj)

class itkImageDuplicatorIUC3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIUC3_Pointer":
        """__New_orig__() -> itkImageDuplicatorIUC3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIUC3_Pointer":
        """Clone(itkImageDuplicatorIUC3 self) -> itkImageDuplicatorIUC3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC3_Clone(self)


    def SetInputImage(self, _arg: 'itkImageUC3') -> "void":
        """SetInputImage(itkImageDuplicatorIUC3 self, itkImageUC3 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC3_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageUC3 *":
        """
        GetOutput(itkImageDuplicatorIUC3 self) -> itkImageUC3
        GetOutput(itkImageDuplicatorIUC3 self) -> itkImageUC3
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC3_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageUC3 *":
        """GetModifiableOutput(itkImageDuplicatorIUC3 self) -> itkImageUC3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC3_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIUC3 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC3_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUC3

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIUC3 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIUC3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUC3

        Create a new object of the class itkImageDuplicatorIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIUC3.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUC3_Clone, None, itkImageDuplicatorIUC3)
itkImageDuplicatorIUC3.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUC3_SetInputImage, None, itkImageDuplicatorIUC3)
itkImageDuplicatorIUC3.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUC3_GetOutput, None, itkImageDuplicatorIUC3)
itkImageDuplicatorIUC3.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUC3_GetModifiableOutput, None, itkImageDuplicatorIUC3)
itkImageDuplicatorIUC3.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUC3_Update, None, itkImageDuplicatorIUC3)
itkImageDuplicatorIUC3_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIUC3_swigregister
itkImageDuplicatorIUC3_swigregister(itkImageDuplicatorIUC3)

def itkImageDuplicatorIUC3___New_orig__() -> "itkImageDuplicatorIUC3_Pointer":
    """itkImageDuplicatorIUC3___New_orig__() -> itkImageDuplicatorIUC3_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIUC3___New_orig__()

def itkImageDuplicatorIUC3_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIUC3 *":
    """itkImageDuplicatorIUC3_cast(itkLightObject obj) -> itkImageDuplicatorIUC3"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIUC3_cast(obj)

class itkImageDuplicatorIUL2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIUL2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIUL2_Pointer":
        """__New_orig__() -> itkImageDuplicatorIUL2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIUL2_Pointer":
        """Clone(itkImageDuplicatorIUL2 self) -> itkImageDuplicatorIUL2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL2_Clone(self)


    def SetInputImage(self, _arg: 'itkImageUL2') -> "void":
        """SetInputImage(itkImageDuplicatorIUL2 self, itkImageUL2 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL2_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageUL2 *":
        """
        GetOutput(itkImageDuplicatorIUL2 self) -> itkImageUL2
        GetOutput(itkImageDuplicatorIUL2 self) -> itkImageUL2
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL2_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageUL2 *":
        """GetModifiableOutput(itkImageDuplicatorIUL2 self) -> itkImageUL2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL2_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIUL2 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL2_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUL2

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIUL2 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIUL2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUL2

        Create a new object of the class itkImageDuplicatorIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUL2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIUL2.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUL2_Clone, None, itkImageDuplicatorIUL2)
itkImageDuplicatorIUL2.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUL2_SetInputImage, None, itkImageDuplicatorIUL2)
itkImageDuplicatorIUL2.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUL2_GetOutput, None, itkImageDuplicatorIUL2)
itkImageDuplicatorIUL2.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUL2_GetModifiableOutput, None, itkImageDuplicatorIUL2)
itkImageDuplicatorIUL2.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUL2_Update, None, itkImageDuplicatorIUL2)
itkImageDuplicatorIUL2_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIUL2_swigregister
itkImageDuplicatorIUL2_swigregister(itkImageDuplicatorIUL2)

def itkImageDuplicatorIUL2___New_orig__() -> "itkImageDuplicatorIUL2_Pointer":
    """itkImageDuplicatorIUL2___New_orig__() -> itkImageDuplicatorIUL2_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIUL2___New_orig__()

def itkImageDuplicatorIUL2_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIUL2 *":
    """itkImageDuplicatorIUL2_cast(itkLightObject obj) -> itkImageDuplicatorIUL2"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIUL2_cast(obj)

class itkImageDuplicatorIUL3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIUL3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIUL3_Pointer":
        """__New_orig__() -> itkImageDuplicatorIUL3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIUL3_Pointer":
        """Clone(itkImageDuplicatorIUL3 self) -> itkImageDuplicatorIUL3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL3_Clone(self)


    def SetInputImage(self, _arg: 'itkImageUL3') -> "void":
        """SetInputImage(itkImageDuplicatorIUL3 self, itkImageUL3 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL3_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageUL3 *":
        """
        GetOutput(itkImageDuplicatorIUL3 self) -> itkImageUL3
        GetOutput(itkImageDuplicatorIUL3 self) -> itkImageUL3
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL3_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageUL3 *":
        """GetModifiableOutput(itkImageDuplicatorIUL3 self) -> itkImageUL3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL3_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIUL3 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL3_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUL3

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIUL3 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIUL3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUL3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUL3

        Create a new object of the class itkImageDuplicatorIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUL3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIUL3.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUL3_Clone, None, itkImageDuplicatorIUL3)
itkImageDuplicatorIUL3.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUL3_SetInputImage, None, itkImageDuplicatorIUL3)
itkImageDuplicatorIUL3.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUL3_GetOutput, None, itkImageDuplicatorIUL3)
itkImageDuplicatorIUL3.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUL3_GetModifiableOutput, None, itkImageDuplicatorIUL3)
itkImageDuplicatorIUL3.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUL3_Update, None, itkImageDuplicatorIUL3)
itkImageDuplicatorIUL3_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIUL3_swigregister
itkImageDuplicatorIUL3_swigregister(itkImageDuplicatorIUL3)

def itkImageDuplicatorIUL3___New_orig__() -> "itkImageDuplicatorIUL3_Pointer":
    """itkImageDuplicatorIUL3___New_orig__() -> itkImageDuplicatorIUL3_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIUL3___New_orig__()

def itkImageDuplicatorIUL3_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIUL3 *":
    """itkImageDuplicatorIUL3_cast(itkLightObject obj) -> itkImageDuplicatorIUL3"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIUL3_cast(obj)

class itkImageDuplicatorIUS2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIUS2_Pointer":
        """__New_orig__() -> itkImageDuplicatorIUS2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIUS2_Pointer":
        """Clone(itkImageDuplicatorIUS2 self) -> itkImageDuplicatorIUS2_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS2_Clone(self)


    def SetInputImage(self, _arg: 'itkImageUS2') -> "void":
        """SetInputImage(itkImageDuplicatorIUS2 self, itkImageUS2 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS2_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageUS2 *":
        """
        GetOutput(itkImageDuplicatorIUS2 self) -> itkImageUS2
        GetOutput(itkImageDuplicatorIUS2 self) -> itkImageUS2
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS2_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageUS2 *":
        """GetModifiableOutput(itkImageDuplicatorIUS2 self) -> itkImageUS2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS2_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIUS2 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS2_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUS2

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIUS2 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIUS2"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUS2

        Create a new object of the class itkImageDuplicatorIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIUS2.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUS2_Clone, None, itkImageDuplicatorIUS2)
itkImageDuplicatorIUS2.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUS2_SetInputImage, None, itkImageDuplicatorIUS2)
itkImageDuplicatorIUS2.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUS2_GetOutput, None, itkImageDuplicatorIUS2)
itkImageDuplicatorIUS2.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUS2_GetModifiableOutput, None, itkImageDuplicatorIUS2)
itkImageDuplicatorIUS2.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUS2_Update, None, itkImageDuplicatorIUS2)
itkImageDuplicatorIUS2_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIUS2_swigregister
itkImageDuplicatorIUS2_swigregister(itkImageDuplicatorIUS2)

def itkImageDuplicatorIUS2___New_orig__() -> "itkImageDuplicatorIUS2_Pointer":
    """itkImageDuplicatorIUS2___New_orig__() -> itkImageDuplicatorIUS2_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIUS2___New_orig__()

def itkImageDuplicatorIUS2_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIUS2 *":
    """itkImageDuplicatorIUS2_cast(itkLightObject obj) -> itkImageDuplicatorIUS2"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIUS2_cast(obj)

class itkImageDuplicatorIUS3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIUS3_Pointer":
        """__New_orig__() -> itkImageDuplicatorIUS3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIUS3_Pointer":
        """Clone(itkImageDuplicatorIUS3 self) -> itkImageDuplicatorIUS3_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS3_Clone(self)


    def SetInputImage(self, _arg: 'itkImageUS3') -> "void":
        """SetInputImage(itkImageDuplicatorIUS3 self, itkImageUS3 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS3_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageUS3 *":
        """
        GetOutput(itkImageDuplicatorIUS3 self) -> itkImageUS3
        GetOutput(itkImageDuplicatorIUS3 self) -> itkImageUS3
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS3_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageUS3 *":
        """GetModifiableOutput(itkImageDuplicatorIUS3 self) -> itkImageUS3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS3_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIUS3 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS3_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUS3

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIUS3 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIUS3"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUS3

        Create a new object of the class itkImageDuplicatorIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIUS3.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUS3_Clone, None, itkImageDuplicatorIUS3)
itkImageDuplicatorIUS3.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUS3_SetInputImage, None, itkImageDuplicatorIUS3)
itkImageDuplicatorIUS3.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUS3_GetOutput, None, itkImageDuplicatorIUS3)
itkImageDuplicatorIUS3.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUS3_GetModifiableOutput, None, itkImageDuplicatorIUS3)
itkImageDuplicatorIUS3.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIUS3_Update, None, itkImageDuplicatorIUS3)
itkImageDuplicatorIUS3_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIUS3_swigregister
itkImageDuplicatorIUS3_swigregister(itkImageDuplicatorIUS3)

def itkImageDuplicatorIUS3___New_orig__() -> "itkImageDuplicatorIUS3_Pointer":
    """itkImageDuplicatorIUS3___New_orig__() -> itkImageDuplicatorIUS3_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIUS3___New_orig__()

def itkImageDuplicatorIUS3_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIUS3 *":
    """itkImageDuplicatorIUS3_cast(itkLightObject obj) -> itkImageDuplicatorIUS3"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIUS3_cast(obj)

class itkImageDuplicatorIVF22(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIVF22_Pointer":
        """__New_orig__() -> itkImageDuplicatorIVF22_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIVF22_Pointer":
        """Clone(itkImageDuplicatorIVF22 self) -> itkImageDuplicatorIVF22_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF22_Clone(self)


    def SetInputImage(self, _arg: 'itkImageVF22') -> "void":
        """SetInputImage(itkImageDuplicatorIVF22 self, itkImageVF22 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF22_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageVF22 *":
        """
        GetOutput(itkImageDuplicatorIVF22 self) -> itkImageVF22
        GetOutput(itkImageDuplicatorIVF22 self) -> itkImageVF22
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF22_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageVF22 *":
        """GetModifiableOutput(itkImageDuplicatorIVF22 self) -> itkImageVF22"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF22_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIVF22 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF22_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF22

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIVF22 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIVF22"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF22

        Create a new object of the class itkImageDuplicatorIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIVF22.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF22_Clone, None, itkImageDuplicatorIVF22)
itkImageDuplicatorIVF22.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF22_SetInputImage, None, itkImageDuplicatorIVF22)
itkImageDuplicatorIVF22.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF22_GetOutput, None, itkImageDuplicatorIVF22)
itkImageDuplicatorIVF22.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF22_GetModifiableOutput, None, itkImageDuplicatorIVF22)
itkImageDuplicatorIVF22.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF22_Update, None, itkImageDuplicatorIVF22)
itkImageDuplicatorIVF22_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIVF22_swigregister
itkImageDuplicatorIVF22_swigregister(itkImageDuplicatorIVF22)

def itkImageDuplicatorIVF22___New_orig__() -> "itkImageDuplicatorIVF22_Pointer":
    """itkImageDuplicatorIVF22___New_orig__() -> itkImageDuplicatorIVF22_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIVF22___New_orig__()

def itkImageDuplicatorIVF22_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIVF22 *":
    """itkImageDuplicatorIVF22_cast(itkLightObject obj) -> itkImageDuplicatorIVF22"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIVF22_cast(obj)

class itkImageDuplicatorIVF23(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIVF23_Pointer":
        """__New_orig__() -> itkImageDuplicatorIVF23_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIVF23_Pointer":
        """Clone(itkImageDuplicatorIVF23 self) -> itkImageDuplicatorIVF23_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF23_Clone(self)


    def SetInputImage(self, _arg: 'itkImageVF23') -> "void":
        """SetInputImage(itkImageDuplicatorIVF23 self, itkImageVF23 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF23_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageVF23 *":
        """
        GetOutput(itkImageDuplicatorIVF23 self) -> itkImageVF23
        GetOutput(itkImageDuplicatorIVF23 self) -> itkImageVF23
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF23_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageVF23 *":
        """GetModifiableOutput(itkImageDuplicatorIVF23 self) -> itkImageVF23"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF23_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIVF23 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF23_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF23

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIVF23 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIVF23"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF23

        Create a new object of the class itkImageDuplicatorIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIVF23.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF23_Clone, None, itkImageDuplicatorIVF23)
itkImageDuplicatorIVF23.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF23_SetInputImage, None, itkImageDuplicatorIVF23)
itkImageDuplicatorIVF23.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF23_GetOutput, None, itkImageDuplicatorIVF23)
itkImageDuplicatorIVF23.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF23_GetModifiableOutput, None, itkImageDuplicatorIVF23)
itkImageDuplicatorIVF23.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF23_Update, None, itkImageDuplicatorIVF23)
itkImageDuplicatorIVF23_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIVF23_swigregister
itkImageDuplicatorIVF23_swigregister(itkImageDuplicatorIVF23)

def itkImageDuplicatorIVF23___New_orig__() -> "itkImageDuplicatorIVF23_Pointer":
    """itkImageDuplicatorIVF23___New_orig__() -> itkImageDuplicatorIVF23_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIVF23___New_orig__()

def itkImageDuplicatorIVF23_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIVF23 *":
    """itkImageDuplicatorIVF23_cast(itkLightObject obj) -> itkImageDuplicatorIVF23"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIVF23_cast(obj)

class itkImageDuplicatorIVF32(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIVF32 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIVF32_Pointer":
        """__New_orig__() -> itkImageDuplicatorIVF32_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIVF32_Pointer":
        """Clone(itkImageDuplicatorIVF32 self) -> itkImageDuplicatorIVF32_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF32_Clone(self)


    def SetInputImage(self, _arg: 'itkImageVF32') -> "void":
        """SetInputImage(itkImageDuplicatorIVF32 self, itkImageVF32 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF32_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageVF32 *":
        """
        GetOutput(itkImageDuplicatorIVF32 self) -> itkImageVF32
        GetOutput(itkImageDuplicatorIVF32 self) -> itkImageVF32
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF32_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageVF32 *":
        """GetModifiableOutput(itkImageDuplicatorIVF32 self) -> itkImageVF32"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF32_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIVF32 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF32_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF32

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIVF32 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIVF32"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF32

        Create a new object of the class itkImageDuplicatorIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIVF32.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF32_Clone, None, itkImageDuplicatorIVF32)
itkImageDuplicatorIVF32.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF32_SetInputImage, None, itkImageDuplicatorIVF32)
itkImageDuplicatorIVF32.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF32_GetOutput, None, itkImageDuplicatorIVF32)
itkImageDuplicatorIVF32.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF32_GetModifiableOutput, None, itkImageDuplicatorIVF32)
itkImageDuplicatorIVF32.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF32_Update, None, itkImageDuplicatorIVF32)
itkImageDuplicatorIVF32_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIVF32_swigregister
itkImageDuplicatorIVF32_swigregister(itkImageDuplicatorIVF32)

def itkImageDuplicatorIVF32___New_orig__() -> "itkImageDuplicatorIVF32_Pointer":
    """itkImageDuplicatorIVF32___New_orig__() -> itkImageDuplicatorIVF32_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIVF32___New_orig__()

def itkImageDuplicatorIVF32_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIVF32 *":
    """itkImageDuplicatorIVF32_cast(itkLightObject obj) -> itkImageDuplicatorIVF32"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIVF32_cast(obj)

class itkImageDuplicatorIVF33(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIVF33_Pointer":
        """__New_orig__() -> itkImageDuplicatorIVF33_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIVF33_Pointer":
        """Clone(itkImageDuplicatorIVF33 self) -> itkImageDuplicatorIVF33_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF33_Clone(self)


    def SetInputImage(self, _arg: 'itkImageVF33') -> "void":
        """SetInputImage(itkImageDuplicatorIVF33 self, itkImageVF33 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF33_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageVF33 *":
        """
        GetOutput(itkImageDuplicatorIVF33 self) -> itkImageVF33
        GetOutput(itkImageDuplicatorIVF33 self) -> itkImageVF33
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF33_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageVF33 *":
        """GetModifiableOutput(itkImageDuplicatorIVF33 self) -> itkImageVF33"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF33_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIVF33 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF33_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF33

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIVF33 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIVF33"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF33

        Create a new object of the class itkImageDuplicatorIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIVF33.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF33_Clone, None, itkImageDuplicatorIVF33)
itkImageDuplicatorIVF33.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF33_SetInputImage, None, itkImageDuplicatorIVF33)
itkImageDuplicatorIVF33.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF33_GetOutput, None, itkImageDuplicatorIVF33)
itkImageDuplicatorIVF33.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF33_GetModifiableOutput, None, itkImageDuplicatorIVF33)
itkImageDuplicatorIVF33.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF33_Update, None, itkImageDuplicatorIVF33)
itkImageDuplicatorIVF33_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIVF33_swigregister
itkImageDuplicatorIVF33_swigregister(itkImageDuplicatorIVF33)

def itkImageDuplicatorIVF33___New_orig__() -> "itkImageDuplicatorIVF33_Pointer":
    """itkImageDuplicatorIVF33___New_orig__() -> itkImageDuplicatorIVF33_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIVF33___New_orig__()

def itkImageDuplicatorIVF33_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIVF33 *":
    """itkImageDuplicatorIVF33_cast(itkLightObject obj) -> itkImageDuplicatorIVF33"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIVF33_cast(obj)

class itkImageDuplicatorIVF42(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIVF42 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIVF42_Pointer":
        """__New_orig__() -> itkImageDuplicatorIVF42_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIVF42_Pointer":
        """Clone(itkImageDuplicatorIVF42 self) -> itkImageDuplicatorIVF42_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF42_Clone(self)


    def SetInputImage(self, _arg: 'itkImageVF42') -> "void":
        """SetInputImage(itkImageDuplicatorIVF42 self, itkImageVF42 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF42_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageVF42 *":
        """
        GetOutput(itkImageDuplicatorIVF42 self) -> itkImageVF42
        GetOutput(itkImageDuplicatorIVF42 self) -> itkImageVF42
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF42_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageVF42 *":
        """GetModifiableOutput(itkImageDuplicatorIVF42 self) -> itkImageVF42"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF42_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIVF42 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF42_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF42

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIVF42 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIVF42"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF42

        Create a new object of the class itkImageDuplicatorIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIVF42.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF42_Clone, None, itkImageDuplicatorIVF42)
itkImageDuplicatorIVF42.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF42_SetInputImage, None, itkImageDuplicatorIVF42)
itkImageDuplicatorIVF42.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF42_GetOutput, None, itkImageDuplicatorIVF42)
itkImageDuplicatorIVF42.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF42_GetModifiableOutput, None, itkImageDuplicatorIVF42)
itkImageDuplicatorIVF42.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF42_Update, None, itkImageDuplicatorIVF42)
itkImageDuplicatorIVF42_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIVF42_swigregister
itkImageDuplicatorIVF42_swigregister(itkImageDuplicatorIVF42)

def itkImageDuplicatorIVF42___New_orig__() -> "itkImageDuplicatorIVF42_Pointer":
    """itkImageDuplicatorIVF42___New_orig__() -> itkImageDuplicatorIVF42_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIVF42___New_orig__()

def itkImageDuplicatorIVF42_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIVF42 *":
    """itkImageDuplicatorIVF42_cast(itkLightObject obj) -> itkImageDuplicatorIVF42"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIVF42_cast(obj)

class itkImageDuplicatorIVF43(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageDuplicatorIVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageDuplicatorIVF43_Pointer":
        """__New_orig__() -> itkImageDuplicatorIVF43_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageDuplicatorIVF43_Pointer":
        """Clone(itkImageDuplicatorIVF43 self) -> itkImageDuplicatorIVF43_Pointer"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF43_Clone(self)


    def SetInputImage(self, _arg: 'itkImageVF43') -> "void":
        """SetInputImage(itkImageDuplicatorIVF43 self, itkImageVF43 _arg)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF43_SetInputImage(self, _arg)


    def GetOutput(self, *args) -> "itkImageVF43 *":
        """
        GetOutput(itkImageDuplicatorIVF43 self) -> itkImageVF43
        GetOutput(itkImageDuplicatorIVF43 self) -> itkImageVF43
        """
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF43_GetOutput(self, *args)


    def GetModifiableOutput(self) -> "itkImageVF43 *":
        """GetModifiableOutput(itkImageDuplicatorIVF43 self) -> itkImageVF43"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF43_GetModifiableOutput(self)


    def Update(self) -> "void":
        """Update(itkImageDuplicatorIVF43 self)"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF43_Update(self)

    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF43

    def cast(obj: 'itkLightObject') -> "itkImageDuplicatorIVF43 *":
        """cast(itkLightObject obj) -> itkImageDuplicatorIVF43"""
        return _itkImageDuplicatorPython.itkImageDuplicatorIVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF43

        Create a new object of the class itkImageDuplicatorIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageDuplicatorIVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()

itkImageDuplicatorIVF43.Clone = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF43_Clone, None, itkImageDuplicatorIVF43)
itkImageDuplicatorIVF43.SetInputImage = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF43_SetInputImage, None, itkImageDuplicatorIVF43)
itkImageDuplicatorIVF43.GetOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF43_GetOutput, None, itkImageDuplicatorIVF43)
itkImageDuplicatorIVF43.GetModifiableOutput = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF43_GetModifiableOutput, None, itkImageDuplicatorIVF43)
itkImageDuplicatorIVF43.Update = new_instancemethod(_itkImageDuplicatorPython.itkImageDuplicatorIVF43_Update, None, itkImageDuplicatorIVF43)
itkImageDuplicatorIVF43_swigregister = _itkImageDuplicatorPython.itkImageDuplicatorIVF43_swigregister
itkImageDuplicatorIVF43_swigregister(itkImageDuplicatorIVF43)

def itkImageDuplicatorIVF43___New_orig__() -> "itkImageDuplicatorIVF43_Pointer":
    """itkImageDuplicatorIVF43___New_orig__() -> itkImageDuplicatorIVF43_Pointer"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIVF43___New_orig__()

def itkImageDuplicatorIVF43_cast(obj: 'itkLightObject') -> "itkImageDuplicatorIVF43 *":
    """itkImageDuplicatorIVF43_cast(itkLightObject obj) -> itkImageDuplicatorIVF43"""
    return _itkImageDuplicatorPython.itkImageDuplicatorIVF43_cast(obj)


def image_duplicator(*args, **kwargs):
    """Procedural interface for ImageDuplicator"""
    import itk
    instance = itk.ImageDuplicator.New(*args, **kwargs)
    return instance.__internal_call__()

def image_duplicator_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ImageDuplicator, itkTemplate.itkTemplate):
        image_duplicator.__doc__ = itk.ImageDuplicator.values()[0].__doc__
    else:
        image_duplicator.__doc__ = itk.ImageDuplicator.__doc__




