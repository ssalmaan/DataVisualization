# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkSqrtImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSqrtImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkSqrtImageFilterPython
            return _itkSqrtImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSqrtImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSqrtImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSqrtImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkUnaryGeneratorImageFilterPython
import itkInPlaceImageFilterBPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython

def itkSqrtImageFilterIF3IF3_New():
  return itkSqrtImageFilterIF3IF3.New()


def itkSqrtImageFilterIF2IF2_New():
  return itkSqrtImageFilterIF2IF2.New()


def itkSqrtImageFilterIUS3IUS3_New():
  return itkSqrtImageFilterIUS3IUS3.New()


def itkSqrtImageFilterIUS2IUS2_New():
  return itkSqrtImageFilterIUS2IUS2.New()


def itkSqrtImageFilterIUC3IUC3_New():
  return itkSqrtImageFilterIUC3IUC3.New()


def itkSqrtImageFilterIUC2IUC2_New():
  return itkSqrtImageFilterIUC2IUC2.New()


def itkSqrtImageFilterISS3ISS3_New():
  return itkSqrtImageFilterISS3ISS3.New()


def itkSqrtImageFilterISS2ISS2_New():
  return itkSqrtImageFilterISS2ISS2.New()

class itkSqrtImageFilterIF2IF2(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IF2):
    """Proxy of C++ itkSqrtImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSqrtImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkSqrtImageFilterIF2IF2_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSqrtImageFilterIF2IF2_Pointer":
        """Clone(itkSqrtImageFilterIF2IF2 self) -> itkSqrtImageFilterIF2IF2_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_Clone(self)

    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkSqrtImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkSqrtImageFilterIF2IF2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIF2IF2

        Create a new object of the class itkSqrtImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSqrtImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSqrtImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIF2IF2.Clone = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_Clone, None, itkSqrtImageFilterIF2IF2)
itkSqrtImageFilterIF2IF2_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_swigregister
itkSqrtImageFilterIF2IF2_swigregister(itkSqrtImageFilterIF2IF2)

def itkSqrtImageFilterIF2IF2___New_orig__() -> "itkSqrtImageFilterIF2IF2_Pointer":
    """itkSqrtImageFilterIF2IF2___New_orig__() -> itkSqrtImageFilterIF2IF2_Pointer"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2___New_orig__()

def itkSqrtImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkSqrtImageFilterIF2IF2 *":
    """itkSqrtImageFilterIF2IF2_cast(itkLightObject obj) -> itkSqrtImageFilterIF2IF2"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_cast(obj)

class itkSqrtImageFilterIF3IF3(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IF3):
    """Proxy of C++ itkSqrtImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSqrtImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkSqrtImageFilterIF3IF3_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSqrtImageFilterIF3IF3_Pointer":
        """Clone(itkSqrtImageFilterIF3IF3 self) -> itkSqrtImageFilterIF3IF3_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_Clone(self)

    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkSqrtImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkSqrtImageFilterIF3IF3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIF3IF3

        Create a new object of the class itkSqrtImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSqrtImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSqrtImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIF3IF3.Clone = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_Clone, None, itkSqrtImageFilterIF3IF3)
itkSqrtImageFilterIF3IF3_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_swigregister
itkSqrtImageFilterIF3IF3_swigregister(itkSqrtImageFilterIF3IF3)

def itkSqrtImageFilterIF3IF3___New_orig__() -> "itkSqrtImageFilterIF3IF3_Pointer":
    """itkSqrtImageFilterIF3IF3___New_orig__() -> itkSqrtImageFilterIF3IF3_Pointer"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3___New_orig__()

def itkSqrtImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkSqrtImageFilterIF3IF3 *":
    """itkSqrtImageFilterIF3IF3_cast(itkLightObject obj) -> itkSqrtImageFilterIF3IF3"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_cast(obj)

class itkSqrtImageFilterISS2ISS2(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ISS2):
    """Proxy of C++ itkSqrtImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSqrtImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkSqrtImageFilterISS2ISS2_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSqrtImageFilterISS2ISS2_Pointer":
        """Clone(itkSqrtImageFilterISS2ISS2 self) -> itkSqrtImageFilterISS2ISS2_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterISS2ISS2_Clone(self)

    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterISS2ISS2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterISS2ISS2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkSqrtImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkSqrtImageFilterISS2ISS2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterISS2ISS2

        Create a new object of the class itkSqrtImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSqrtImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSqrtImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterISS2ISS2.Clone = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterISS2ISS2_Clone, None, itkSqrtImageFilterISS2ISS2)
itkSqrtImageFilterISS2ISS2_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterISS2ISS2_swigregister
itkSqrtImageFilterISS2ISS2_swigregister(itkSqrtImageFilterISS2ISS2)

def itkSqrtImageFilterISS2ISS2___New_orig__() -> "itkSqrtImageFilterISS2ISS2_Pointer":
    """itkSqrtImageFilterISS2ISS2___New_orig__() -> itkSqrtImageFilterISS2ISS2_Pointer"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterISS2ISS2___New_orig__()

def itkSqrtImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkSqrtImageFilterISS2ISS2 *":
    """itkSqrtImageFilterISS2ISS2_cast(itkLightObject obj) -> itkSqrtImageFilterISS2ISS2"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterISS2ISS2_cast(obj)

class itkSqrtImageFilterISS3ISS3(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ISS3):
    """Proxy of C++ itkSqrtImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSqrtImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkSqrtImageFilterISS3ISS3_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSqrtImageFilterISS3ISS3_Pointer":
        """Clone(itkSqrtImageFilterISS3ISS3 self) -> itkSqrtImageFilterISS3ISS3_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterISS3ISS3_Clone(self)

    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterISS3ISS3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterISS3ISS3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkSqrtImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkSqrtImageFilterISS3ISS3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterISS3ISS3

        Create a new object of the class itkSqrtImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSqrtImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSqrtImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterISS3ISS3.Clone = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterISS3ISS3_Clone, None, itkSqrtImageFilterISS3ISS3)
itkSqrtImageFilterISS3ISS3_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterISS3ISS3_swigregister
itkSqrtImageFilterISS3ISS3_swigregister(itkSqrtImageFilterISS3ISS3)

def itkSqrtImageFilterISS3ISS3___New_orig__() -> "itkSqrtImageFilterISS3ISS3_Pointer":
    """itkSqrtImageFilterISS3ISS3___New_orig__() -> itkSqrtImageFilterISS3ISS3_Pointer"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterISS3ISS3___New_orig__()

def itkSqrtImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkSqrtImageFilterISS3ISS3 *":
    """itkSqrtImageFilterISS3ISS3_cast(itkLightObject obj) -> itkSqrtImageFilterISS3ISS3"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterISS3ISS3_cast(obj)

class itkSqrtImageFilterIUC2IUC2(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUC2):
    """Proxy of C++ itkSqrtImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSqrtImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkSqrtImageFilterIUC2IUC2_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSqrtImageFilterIUC2IUC2_Pointer":
        """Clone(itkSqrtImageFilterIUC2IUC2 self) -> itkSqrtImageFilterIUC2IUC2_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_Clone(self)

    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkSqrtImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUC2IUC2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUC2IUC2

        Create a new object of the class itkSqrtImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSqrtImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSqrtImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUC2IUC2.Clone = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_Clone, None, itkSqrtImageFilterIUC2IUC2)
itkSqrtImageFilterIUC2IUC2_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_swigregister
itkSqrtImageFilterIUC2IUC2_swigregister(itkSqrtImageFilterIUC2IUC2)

def itkSqrtImageFilterIUC2IUC2___New_orig__() -> "itkSqrtImageFilterIUC2IUC2_Pointer":
    """itkSqrtImageFilterIUC2IUC2___New_orig__() -> itkSqrtImageFilterIUC2IUC2_Pointer"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2___New_orig__()

def itkSqrtImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkSqrtImageFilterIUC2IUC2 *":
    """itkSqrtImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkSqrtImageFilterIUC2IUC2"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_cast(obj)

class itkSqrtImageFilterIUC3IUC3(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUC3):
    """Proxy of C++ itkSqrtImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSqrtImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkSqrtImageFilterIUC3IUC3_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSqrtImageFilterIUC3IUC3_Pointer":
        """Clone(itkSqrtImageFilterIUC3IUC3 self) -> itkSqrtImageFilterIUC3IUC3_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_Clone(self)

    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkSqrtImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUC3IUC3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUC3IUC3

        Create a new object of the class itkSqrtImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSqrtImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSqrtImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUC3IUC3.Clone = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_Clone, None, itkSqrtImageFilterIUC3IUC3)
itkSqrtImageFilterIUC3IUC3_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_swigregister
itkSqrtImageFilterIUC3IUC3_swigregister(itkSqrtImageFilterIUC3IUC3)

def itkSqrtImageFilterIUC3IUC3___New_orig__() -> "itkSqrtImageFilterIUC3IUC3_Pointer":
    """itkSqrtImageFilterIUC3IUC3___New_orig__() -> itkSqrtImageFilterIUC3IUC3_Pointer"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3___New_orig__()

def itkSqrtImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkSqrtImageFilterIUC3IUC3 *":
    """itkSqrtImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkSqrtImageFilterIUC3IUC3"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_cast(obj)

class itkSqrtImageFilterIUS2IUS2(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUS2):
    """Proxy of C++ itkSqrtImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSqrtImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkSqrtImageFilterIUS2IUS2_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSqrtImageFilterIUS2IUS2_Pointer":
        """Clone(itkSqrtImageFilterIUS2IUS2 self) -> itkSqrtImageFilterIUS2IUS2_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_Clone(self)

    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkSqrtImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUS2IUS2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUS2IUS2

        Create a new object of the class itkSqrtImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSqrtImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSqrtImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUS2IUS2.Clone = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_Clone, None, itkSqrtImageFilterIUS2IUS2)
itkSqrtImageFilterIUS2IUS2_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_swigregister
itkSqrtImageFilterIUS2IUS2_swigregister(itkSqrtImageFilterIUS2IUS2)

def itkSqrtImageFilterIUS2IUS2___New_orig__() -> "itkSqrtImageFilterIUS2IUS2_Pointer":
    """itkSqrtImageFilterIUS2IUS2___New_orig__() -> itkSqrtImageFilterIUS2IUS2_Pointer"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2___New_orig__()

def itkSqrtImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkSqrtImageFilterIUS2IUS2 *":
    """itkSqrtImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkSqrtImageFilterIUS2IUS2"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_cast(obj)

class itkSqrtImageFilterIUS3IUS3(itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUS3):
    """Proxy of C++ itkSqrtImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSqrtImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkSqrtImageFilterIUS3IUS3_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSqrtImageFilterIUS3IUS3_Pointer":
        """Clone(itkSqrtImageFilterIUS3IUS3 self) -> itkSqrtImageFilterIUS3IUS3_Pointer"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_Clone(self)

    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkSqrtImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUS3IUS3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUS3IUS3

        Create a new object of the class itkSqrtImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSqrtImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSqrtImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUS3IUS3.Clone = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_Clone, None, itkSqrtImageFilterIUS3IUS3)
itkSqrtImageFilterIUS3IUS3_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_swigregister
itkSqrtImageFilterIUS3IUS3_swigregister(itkSqrtImageFilterIUS3IUS3)

def itkSqrtImageFilterIUS3IUS3___New_orig__() -> "itkSqrtImageFilterIUS3IUS3_Pointer":
    """itkSqrtImageFilterIUS3IUS3___New_orig__() -> itkSqrtImageFilterIUS3IUS3_Pointer"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3___New_orig__()

def itkSqrtImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkSqrtImageFilterIUS3IUS3 *":
    """itkSqrtImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkSqrtImageFilterIUS3IUS3"""
    return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_cast(obj)


def sqrt_image_filter(*args, **kwargs):
    """Procedural interface for SqrtImageFilter"""
    import itk
    instance = itk.SqrtImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def sqrt_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.SqrtImageFilter, itkTemplate.itkTemplate):
        sqrt_image_filter.__doc__ = itk.SqrtImageFilter.values()[0].__doc__
    else:
        sqrt_image_filter.__doc__ = itk.SqrtImageFilter.__doc__




