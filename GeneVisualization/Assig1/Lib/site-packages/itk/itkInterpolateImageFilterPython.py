# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkInterpolateImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkInterpolateImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkInterpolateImageFilterPython
            return _itkInterpolateImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkInterpolateImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkInterpolateImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkInterpolateImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkInterpolateImageFunctionPython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import pyBasePython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkSizePython
import itkImageFunctionBasePython
import itkFunctionBasePython
import itkArrayPython
import itkContinuousIndexPython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import ITKCommonBasePython
import itkImageRegionPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkInterpolateImageFilterIF3IF3_New():
  return itkInterpolateImageFilterIF3IF3.New()


def itkInterpolateImageFilterIF2IF2_New():
  return itkInterpolateImageFilterIF2IF2.New()


def itkInterpolateImageFilterIUS3IUS3_New():
  return itkInterpolateImageFilterIUS3IUS3.New()


def itkInterpolateImageFilterIUS2IUS2_New():
  return itkInterpolateImageFilterIUS2IUS2.New()


def itkInterpolateImageFilterIUC3IUC3_New():
  return itkInterpolateImageFilterIUC3IUC3.New()


def itkInterpolateImageFilterIUC2IUC2_New():
  return itkInterpolateImageFilterIUC2IUC2.New()


def itkInterpolateImageFilterISS3ISS3_New():
  return itkInterpolateImageFilterISS3ISS3.New()


def itkInterpolateImageFilterISS2ISS2_New():
  return itkInterpolateImageFilterISS2ISS2.New()

class itkInterpolateImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkInterpolateImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkInterpolateImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkInterpolateImageFilterIF2IF2_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkInterpolateImageFilterIF2IF2_Pointer":
        """Clone(itkInterpolateImageFilterIF2IF2 self) -> itkInterpolateImageFilterIF2IF2_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_Clone(self)


    def SetInput1(self, image: 'itkImageF2') -> "void":
        """SetInput1(itkInterpolateImageFilterIF2IF2 self, itkImageF2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetInput1(self, image)


    def GetInput1(self) -> "itkImageF2 const *":
        """GetInput1(itkInterpolateImageFilterIF2IF2 self) -> itkImageF2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetInput1(self)


    def SetInput2(self, image: 'itkImageF2') -> "void":
        """SetInput2(itkInterpolateImageFilterIF2IF2 self, itkImageF2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetInput2(self, image)


    def GetInput2(self) -> "itkImageF2 const *":
        """GetInput2(itkInterpolateImageFilterIF2IF2 self) -> itkImageF2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetInput2(self)


    def SetDistance(self, _arg: 'double') -> "void":
        """SetDistance(itkInterpolateImageFilterIF2IF2 self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetDistance(self, _arg)


    def GetDistance(self) -> "double":
        """GetDistance(itkInterpolateImageFilterIF2IF2 self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetDistance(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIF3D') -> "void":
        """SetInterpolator(itkInterpolateImageFilterIF2IF2 self, itkInterpolateImageFunctionIF3D _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIF3D *":
        """GetModifiableInterpolator(itkInterpolateImageFilterIF2IF2 self) -> itkInterpolateImageFunctionIF3D"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIF3D *":
        """
        GetInterpolator(itkInterpolateImageFilterIF2IF2 self) -> itkInterpolateImageFunctionIF3D
        GetInterpolator(itkInterpolateImageFilterIF2IF2 self) -> itkInterpolateImageFunctionIF3D
        """
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetInterpolator(self, *args)


    def BeforeThreadedGenerateData(self) -> "void":
        """BeforeThreadedGenerateData(itkInterpolateImageFilterIF2IF2 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """AfterThreadedGenerateData(itkInterpolateImageFilterIF2IF2 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_AfterThreadedGenerateData(self)

    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIF2IF2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIF2IF2

        Create a new object of the class itkInterpolateImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInterpolateImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkInterpolateImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIF2IF2.Clone = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_Clone, None, itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetInput1, None, itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetInput1, None, itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetInput2, None, itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetInput2, None, itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetDistance, None, itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetDistance, None, itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetInterpolator, None, itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.GetModifiableInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetModifiableInterpolator, None, itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetInterpolator, None, itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_BeforeThreadedGenerateData, None, itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_AfterThreadedGenerateData, None, itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_swigregister
itkInterpolateImageFilterIF2IF2_swigregister(itkInterpolateImageFilterIF2IF2)

def itkInterpolateImageFilterIF2IF2___New_orig__() -> "itkInterpolateImageFilterIF2IF2_Pointer":
    """itkInterpolateImageFilterIF2IF2___New_orig__() -> itkInterpolateImageFilterIF2IF2_Pointer"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2___New_orig__()

def itkInterpolateImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterIF2IF2 *":
    """itkInterpolateImageFilterIF2IF2_cast(itkLightObject obj) -> itkInterpolateImageFilterIF2IF2"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_cast(obj)

class itkInterpolateImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkInterpolateImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkInterpolateImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkInterpolateImageFilterIF3IF3_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkInterpolateImageFilterIF3IF3_Pointer":
        """Clone(itkInterpolateImageFilterIF3IF3 self) -> itkInterpolateImageFilterIF3IF3_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_Clone(self)


    def SetInput1(self, image: 'itkImageF3') -> "void":
        """SetInput1(itkInterpolateImageFilterIF3IF3 self, itkImageF3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetInput1(self, image)


    def GetInput1(self) -> "itkImageF3 const *":
        """GetInput1(itkInterpolateImageFilterIF3IF3 self) -> itkImageF3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetInput1(self)


    def SetInput2(self, image: 'itkImageF3') -> "void":
        """SetInput2(itkInterpolateImageFilterIF3IF3 self, itkImageF3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetInput2(self, image)


    def GetInput2(self) -> "itkImageF3 const *":
        """GetInput2(itkInterpolateImageFilterIF3IF3 self) -> itkImageF3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetInput2(self)


    def SetDistance(self, _arg: 'double') -> "void":
        """SetDistance(itkInterpolateImageFilterIF3IF3 self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetDistance(self, _arg)


    def GetDistance(self) -> "double":
        """GetDistance(itkInterpolateImageFilterIF3IF3 self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetDistance(self)


    def SetInterpolator(self, _arg: 'itk::InterpolateImageFunction< itk::Image< float,4 >,double > *') -> "void":
        """SetInterpolator(itkInterpolateImageFilterIF3IF3 self, itk::InterpolateImageFunction< itk::Image< float,4 >,double > * _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itk::InterpolateImageFunction< itk::Image< float,4 >,double > *":
        """GetModifiableInterpolator(itkInterpolateImageFilterIF3IF3 self) -> itk::InterpolateImageFunction< itk::Image< float,4 >,double > *"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itk::InterpolateImageFunction< itk::Image< float,4 >,double > *":
        """
        GetInterpolator(itkInterpolateImageFilterIF3IF3 self) -> itk::InterpolateImageFunction< itk::Image< float,4 >,double > const
        GetInterpolator(itkInterpolateImageFilterIF3IF3 self) -> itk::InterpolateImageFunction< itk::Image< float,4 >,double > *
        """
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetInterpolator(self, *args)


    def BeforeThreadedGenerateData(self) -> "void":
        """BeforeThreadedGenerateData(itkInterpolateImageFilterIF3IF3 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """AfterThreadedGenerateData(itkInterpolateImageFilterIF3IF3 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_AfterThreadedGenerateData(self)

    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIF3IF3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIF3IF3

        Create a new object of the class itkInterpolateImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInterpolateImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkInterpolateImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIF3IF3.Clone = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_Clone, None, itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetInput1, None, itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetInput1, None, itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetInput2, None, itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetInput2, None, itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetDistance, None, itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetDistance, None, itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetInterpolator, None, itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.GetModifiableInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetModifiableInterpolator, None, itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetInterpolator, None, itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_BeforeThreadedGenerateData, None, itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_AfterThreadedGenerateData, None, itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_swigregister
itkInterpolateImageFilterIF3IF3_swigregister(itkInterpolateImageFilterIF3IF3)

def itkInterpolateImageFilterIF3IF3___New_orig__() -> "itkInterpolateImageFilterIF3IF3_Pointer":
    """itkInterpolateImageFilterIF3IF3___New_orig__() -> itkInterpolateImageFilterIF3IF3_Pointer"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3___New_orig__()

def itkInterpolateImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterIF3IF3 *":
    """itkInterpolateImageFilterIF3IF3_cast(itkLightObject obj) -> itkInterpolateImageFilterIF3IF3"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_cast(obj)

class itkInterpolateImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkInterpolateImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkInterpolateImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkInterpolateImageFilterISS2ISS2_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkInterpolateImageFilterISS2ISS2_Pointer":
        """Clone(itkInterpolateImageFilterISS2ISS2 self) -> itkInterpolateImageFilterISS2ISS2_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_Clone(self)


    def SetInput1(self, image: 'itkImageSS2') -> "void":
        """SetInput1(itkInterpolateImageFilterISS2ISS2 self, itkImageSS2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_SetInput1(self, image)


    def GetInput1(self) -> "itkImageSS2 const *":
        """GetInput1(itkInterpolateImageFilterISS2ISS2 self) -> itkImageSS2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_GetInput1(self)


    def SetInput2(self, image: 'itkImageSS2') -> "void":
        """SetInput2(itkInterpolateImageFilterISS2ISS2 self, itkImageSS2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_SetInput2(self, image)


    def GetInput2(self) -> "itkImageSS2 const *":
        """GetInput2(itkInterpolateImageFilterISS2ISS2 self) -> itkImageSS2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_GetInput2(self)


    def SetDistance(self, _arg: 'double') -> "void":
        """SetDistance(itkInterpolateImageFilterISS2ISS2 self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_SetDistance(self, _arg)


    def GetDistance(self) -> "double":
        """GetDistance(itkInterpolateImageFilterISS2ISS2 self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_GetDistance(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionISS3D') -> "void":
        """SetInterpolator(itkInterpolateImageFilterISS2ISS2 self, itkInterpolateImageFunctionISS3D _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionISS3D *":
        """GetModifiableInterpolator(itkInterpolateImageFilterISS2ISS2 self) -> itkInterpolateImageFunctionISS3D"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionISS3D *":
        """
        GetInterpolator(itkInterpolateImageFilterISS2ISS2 self) -> itkInterpolateImageFunctionISS3D
        GetInterpolator(itkInterpolateImageFilterISS2ISS2 self) -> itkInterpolateImageFunctionISS3D
        """
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_GetInterpolator(self, *args)


    def BeforeThreadedGenerateData(self) -> "void":
        """BeforeThreadedGenerateData(itkInterpolateImageFilterISS2ISS2 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """AfterThreadedGenerateData(itkInterpolateImageFilterISS2ISS2 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_AfterThreadedGenerateData(self)

    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkInterpolateImageFilterISS2ISS2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterISS2ISS2

        Create a new object of the class itkInterpolateImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInterpolateImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkInterpolateImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterISS2ISS2.Clone = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_Clone, None, itkInterpolateImageFilterISS2ISS2)
itkInterpolateImageFilterISS2ISS2.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_SetInput1, None, itkInterpolateImageFilterISS2ISS2)
itkInterpolateImageFilterISS2ISS2.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_GetInput1, None, itkInterpolateImageFilterISS2ISS2)
itkInterpolateImageFilterISS2ISS2.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_SetInput2, None, itkInterpolateImageFilterISS2ISS2)
itkInterpolateImageFilterISS2ISS2.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_GetInput2, None, itkInterpolateImageFilterISS2ISS2)
itkInterpolateImageFilterISS2ISS2.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_SetDistance, None, itkInterpolateImageFilterISS2ISS2)
itkInterpolateImageFilterISS2ISS2.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_GetDistance, None, itkInterpolateImageFilterISS2ISS2)
itkInterpolateImageFilterISS2ISS2.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_SetInterpolator, None, itkInterpolateImageFilterISS2ISS2)
itkInterpolateImageFilterISS2ISS2.GetModifiableInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_GetModifiableInterpolator, None, itkInterpolateImageFilterISS2ISS2)
itkInterpolateImageFilterISS2ISS2.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_GetInterpolator, None, itkInterpolateImageFilterISS2ISS2)
itkInterpolateImageFilterISS2ISS2.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_BeforeThreadedGenerateData, None, itkInterpolateImageFilterISS2ISS2)
itkInterpolateImageFilterISS2ISS2.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_AfterThreadedGenerateData, None, itkInterpolateImageFilterISS2ISS2)
itkInterpolateImageFilterISS2ISS2_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_swigregister
itkInterpolateImageFilterISS2ISS2_swigregister(itkInterpolateImageFilterISS2ISS2)

def itkInterpolateImageFilterISS2ISS2___New_orig__() -> "itkInterpolateImageFilterISS2ISS2_Pointer":
    """itkInterpolateImageFilterISS2ISS2___New_orig__() -> itkInterpolateImageFilterISS2ISS2_Pointer"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2___New_orig__()

def itkInterpolateImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterISS2ISS2 *":
    """itkInterpolateImageFilterISS2ISS2_cast(itkLightObject obj) -> itkInterpolateImageFilterISS2ISS2"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS2ISS2_cast(obj)

class itkInterpolateImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkInterpolateImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkInterpolateImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkInterpolateImageFilterISS3ISS3_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkInterpolateImageFilterISS3ISS3_Pointer":
        """Clone(itkInterpolateImageFilterISS3ISS3 self) -> itkInterpolateImageFilterISS3ISS3_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_Clone(self)


    def SetInput1(self, image: 'itkImageSS3') -> "void":
        """SetInput1(itkInterpolateImageFilterISS3ISS3 self, itkImageSS3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_SetInput1(self, image)


    def GetInput1(self) -> "itkImageSS3 const *":
        """GetInput1(itkInterpolateImageFilterISS3ISS3 self) -> itkImageSS3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_GetInput1(self)


    def SetInput2(self, image: 'itkImageSS3') -> "void":
        """SetInput2(itkInterpolateImageFilterISS3ISS3 self, itkImageSS3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_SetInput2(self, image)


    def GetInput2(self) -> "itkImageSS3 const *":
        """GetInput2(itkInterpolateImageFilterISS3ISS3 self) -> itkImageSS3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_GetInput2(self)


    def SetDistance(self, _arg: 'double') -> "void":
        """SetDistance(itkInterpolateImageFilterISS3ISS3 self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_SetDistance(self, _arg)


    def GetDistance(self) -> "double":
        """GetDistance(itkInterpolateImageFilterISS3ISS3 self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_GetDistance(self)


    def SetInterpolator(self, _arg: 'itk::InterpolateImageFunction< itk::Image< short,4 >,double > *') -> "void":
        """SetInterpolator(itkInterpolateImageFilterISS3ISS3 self, itk::InterpolateImageFunction< itk::Image< short,4 >,double > * _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itk::InterpolateImageFunction< itk::Image< short,4 >,double > *":
        """GetModifiableInterpolator(itkInterpolateImageFilterISS3ISS3 self) -> itk::InterpolateImageFunction< itk::Image< short,4 >,double > *"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itk::InterpolateImageFunction< itk::Image< short,4 >,double > *":
        """
        GetInterpolator(itkInterpolateImageFilterISS3ISS3 self) -> itk::InterpolateImageFunction< itk::Image< short,4 >,double > const
        GetInterpolator(itkInterpolateImageFilterISS3ISS3 self) -> itk::InterpolateImageFunction< itk::Image< short,4 >,double > *
        """
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_GetInterpolator(self, *args)


    def BeforeThreadedGenerateData(self) -> "void":
        """BeforeThreadedGenerateData(itkInterpolateImageFilterISS3ISS3 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """AfterThreadedGenerateData(itkInterpolateImageFilterISS3ISS3 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_AfterThreadedGenerateData(self)

    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkInterpolateImageFilterISS3ISS3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterISS3ISS3

        Create a new object of the class itkInterpolateImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInterpolateImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkInterpolateImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterISS3ISS3.Clone = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_Clone, None, itkInterpolateImageFilterISS3ISS3)
itkInterpolateImageFilterISS3ISS3.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_SetInput1, None, itkInterpolateImageFilterISS3ISS3)
itkInterpolateImageFilterISS3ISS3.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_GetInput1, None, itkInterpolateImageFilterISS3ISS3)
itkInterpolateImageFilterISS3ISS3.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_SetInput2, None, itkInterpolateImageFilterISS3ISS3)
itkInterpolateImageFilterISS3ISS3.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_GetInput2, None, itkInterpolateImageFilterISS3ISS3)
itkInterpolateImageFilterISS3ISS3.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_SetDistance, None, itkInterpolateImageFilterISS3ISS3)
itkInterpolateImageFilterISS3ISS3.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_GetDistance, None, itkInterpolateImageFilterISS3ISS3)
itkInterpolateImageFilterISS3ISS3.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_SetInterpolator, None, itkInterpolateImageFilterISS3ISS3)
itkInterpolateImageFilterISS3ISS3.GetModifiableInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_GetModifiableInterpolator, None, itkInterpolateImageFilterISS3ISS3)
itkInterpolateImageFilterISS3ISS3.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_GetInterpolator, None, itkInterpolateImageFilterISS3ISS3)
itkInterpolateImageFilterISS3ISS3.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_BeforeThreadedGenerateData, None, itkInterpolateImageFilterISS3ISS3)
itkInterpolateImageFilterISS3ISS3.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_AfterThreadedGenerateData, None, itkInterpolateImageFilterISS3ISS3)
itkInterpolateImageFilterISS3ISS3_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_swigregister
itkInterpolateImageFilterISS3ISS3_swigregister(itkInterpolateImageFilterISS3ISS3)

def itkInterpolateImageFilterISS3ISS3___New_orig__() -> "itkInterpolateImageFilterISS3ISS3_Pointer":
    """itkInterpolateImageFilterISS3ISS3___New_orig__() -> itkInterpolateImageFilterISS3ISS3_Pointer"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3___New_orig__()

def itkInterpolateImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterISS3ISS3 *":
    """itkInterpolateImageFilterISS3ISS3_cast(itkLightObject obj) -> itkInterpolateImageFilterISS3ISS3"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterISS3ISS3_cast(obj)

class itkInterpolateImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkInterpolateImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkInterpolateImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkInterpolateImageFilterIUC2IUC2_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkInterpolateImageFilterIUC2IUC2_Pointer":
        """Clone(itkInterpolateImageFilterIUC2IUC2 self) -> itkInterpolateImageFilterIUC2IUC2_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_Clone(self)


    def SetInput1(self, image: 'itkImageUC2') -> "void":
        """SetInput1(itkInterpolateImageFilterIUC2IUC2 self, itkImageUC2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetInput1(self, image)


    def GetInput1(self) -> "itkImageUC2 const *":
        """GetInput1(itkInterpolateImageFilterIUC2IUC2 self) -> itkImageUC2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetInput1(self)


    def SetInput2(self, image: 'itkImageUC2') -> "void":
        """SetInput2(itkInterpolateImageFilterIUC2IUC2 self, itkImageUC2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetInput2(self, image)


    def GetInput2(self) -> "itkImageUC2 const *":
        """GetInput2(itkInterpolateImageFilterIUC2IUC2 self) -> itkImageUC2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetInput2(self)


    def SetDistance(self, _arg: 'double') -> "void":
        """SetDistance(itkInterpolateImageFilterIUC2IUC2 self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetDistance(self, _arg)


    def GetDistance(self) -> "double":
        """GetDistance(itkInterpolateImageFilterIUC2IUC2 self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetDistance(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUC3D') -> "void":
        """SetInterpolator(itkInterpolateImageFilterIUC2IUC2 self, itkInterpolateImageFunctionIUC3D _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUC3D *":
        """GetModifiableInterpolator(itkInterpolateImageFilterIUC2IUC2 self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUC3D *":
        """
        GetInterpolator(itkInterpolateImageFilterIUC2IUC2 self) -> itkInterpolateImageFunctionIUC3D
        GetInterpolator(itkInterpolateImageFilterIUC2IUC2 self) -> itkInterpolateImageFunctionIUC3D
        """
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetInterpolator(self, *args)


    def BeforeThreadedGenerateData(self) -> "void":
        """BeforeThreadedGenerateData(itkInterpolateImageFilterIUC2IUC2 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """AfterThreadedGenerateData(itkInterpolateImageFilterIUC2IUC2 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_AfterThreadedGenerateData(self)

    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIUC2IUC2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIUC2IUC2

        Create a new object of the class itkInterpolateImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInterpolateImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkInterpolateImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIUC2IUC2.Clone = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_Clone, None, itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetInput1, None, itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetInput1, None, itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetInput2, None, itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetInput2, None, itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetDistance, None, itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetDistance, None, itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetInterpolator, None, itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.GetModifiableInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetModifiableInterpolator, None, itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetInterpolator, None, itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_BeforeThreadedGenerateData, None, itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_AfterThreadedGenerateData, None, itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_swigregister
itkInterpolateImageFilterIUC2IUC2_swigregister(itkInterpolateImageFilterIUC2IUC2)

def itkInterpolateImageFilterIUC2IUC2___New_orig__() -> "itkInterpolateImageFilterIUC2IUC2_Pointer":
    """itkInterpolateImageFilterIUC2IUC2___New_orig__() -> itkInterpolateImageFilterIUC2IUC2_Pointer"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2___New_orig__()

def itkInterpolateImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterIUC2IUC2 *":
    """itkInterpolateImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkInterpolateImageFilterIUC2IUC2"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_cast(obj)

class itkInterpolateImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkInterpolateImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkInterpolateImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkInterpolateImageFilterIUC3IUC3_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkInterpolateImageFilterIUC3IUC3_Pointer":
        """Clone(itkInterpolateImageFilterIUC3IUC3 self) -> itkInterpolateImageFilterIUC3IUC3_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_Clone(self)


    def SetInput1(self, image: 'itkImageUC3') -> "void":
        """SetInput1(itkInterpolateImageFilterIUC3IUC3 self, itkImageUC3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetInput1(self, image)


    def GetInput1(self) -> "itkImageUC3 const *":
        """GetInput1(itkInterpolateImageFilterIUC3IUC3 self) -> itkImageUC3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetInput1(self)


    def SetInput2(self, image: 'itkImageUC3') -> "void":
        """SetInput2(itkInterpolateImageFilterIUC3IUC3 self, itkImageUC3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetInput2(self, image)


    def GetInput2(self) -> "itkImageUC3 const *":
        """GetInput2(itkInterpolateImageFilterIUC3IUC3 self) -> itkImageUC3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetInput2(self)


    def SetDistance(self, _arg: 'double') -> "void":
        """SetDistance(itkInterpolateImageFilterIUC3IUC3 self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetDistance(self, _arg)


    def GetDistance(self) -> "double":
        """GetDistance(itkInterpolateImageFilterIUC3IUC3 self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetDistance(self)


    def SetInterpolator(self, _arg: 'itk::InterpolateImageFunction< itk::Image< unsigned char,4 >,double > *') -> "void":
        """SetInterpolator(itkInterpolateImageFilterIUC3IUC3 self, itk::InterpolateImageFunction< itk::Image< unsigned char,4 >,double > * _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itk::InterpolateImageFunction< itk::Image< unsigned char,4 >,double > *":
        """GetModifiableInterpolator(itkInterpolateImageFilterIUC3IUC3 self) -> itk::InterpolateImageFunction< itk::Image< unsigned char,4 >,double > *"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itk::InterpolateImageFunction< itk::Image< unsigned char,4 >,double > *":
        """
        GetInterpolator(itkInterpolateImageFilterIUC3IUC3 self) -> itk::InterpolateImageFunction< itk::Image< unsigned char,4 >,double > const
        GetInterpolator(itkInterpolateImageFilterIUC3IUC3 self) -> itk::InterpolateImageFunction< itk::Image< unsigned char,4 >,double > *
        """
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetInterpolator(self, *args)


    def BeforeThreadedGenerateData(self) -> "void":
        """BeforeThreadedGenerateData(itkInterpolateImageFilterIUC3IUC3 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """AfterThreadedGenerateData(itkInterpolateImageFilterIUC3IUC3 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_AfterThreadedGenerateData(self)

    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIUC3IUC3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIUC3IUC3

        Create a new object of the class itkInterpolateImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInterpolateImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkInterpolateImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIUC3IUC3.Clone = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_Clone, None, itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetInput1, None, itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetInput1, None, itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetInput2, None, itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetInput2, None, itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetDistance, None, itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetDistance, None, itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetInterpolator, None, itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.GetModifiableInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetModifiableInterpolator, None, itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetInterpolator, None, itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_BeforeThreadedGenerateData, None, itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_AfterThreadedGenerateData, None, itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_swigregister
itkInterpolateImageFilterIUC3IUC3_swigregister(itkInterpolateImageFilterIUC3IUC3)

def itkInterpolateImageFilterIUC3IUC3___New_orig__() -> "itkInterpolateImageFilterIUC3IUC3_Pointer":
    """itkInterpolateImageFilterIUC3IUC3___New_orig__() -> itkInterpolateImageFilterIUC3IUC3_Pointer"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3___New_orig__()

def itkInterpolateImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterIUC3IUC3 *":
    """itkInterpolateImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkInterpolateImageFilterIUC3IUC3"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_cast(obj)

class itkInterpolateImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkInterpolateImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkInterpolateImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkInterpolateImageFilterIUS2IUS2_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkInterpolateImageFilterIUS2IUS2_Pointer":
        """Clone(itkInterpolateImageFilterIUS2IUS2 self) -> itkInterpolateImageFilterIUS2IUS2_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_Clone(self)


    def SetInput1(self, image: 'itkImageUS2') -> "void":
        """SetInput1(itkInterpolateImageFilterIUS2IUS2 self, itkImageUS2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetInput1(self, image)


    def GetInput1(self) -> "itkImageUS2 const *":
        """GetInput1(itkInterpolateImageFilterIUS2IUS2 self) -> itkImageUS2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetInput1(self)


    def SetInput2(self, image: 'itkImageUS2') -> "void":
        """SetInput2(itkInterpolateImageFilterIUS2IUS2 self, itkImageUS2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetInput2(self, image)


    def GetInput2(self) -> "itkImageUS2 const *":
        """GetInput2(itkInterpolateImageFilterIUS2IUS2 self) -> itkImageUS2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetInput2(self)


    def SetDistance(self, _arg: 'double') -> "void":
        """SetDistance(itkInterpolateImageFilterIUS2IUS2 self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetDistance(self, _arg)


    def GetDistance(self) -> "double":
        """GetDistance(itkInterpolateImageFilterIUS2IUS2 self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetDistance(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUS3D') -> "void":
        """SetInterpolator(itkInterpolateImageFilterIUS2IUS2 self, itkInterpolateImageFunctionIUS3D _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUS3D *":
        """GetModifiableInterpolator(itkInterpolateImageFilterIUS2IUS2 self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUS3D *":
        """
        GetInterpolator(itkInterpolateImageFilterIUS2IUS2 self) -> itkInterpolateImageFunctionIUS3D
        GetInterpolator(itkInterpolateImageFilterIUS2IUS2 self) -> itkInterpolateImageFunctionIUS3D
        """
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetInterpolator(self, *args)


    def BeforeThreadedGenerateData(self) -> "void":
        """BeforeThreadedGenerateData(itkInterpolateImageFilterIUS2IUS2 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """AfterThreadedGenerateData(itkInterpolateImageFilterIUS2IUS2 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_AfterThreadedGenerateData(self)

    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIUS2IUS2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIUS2IUS2

        Create a new object of the class itkInterpolateImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInterpolateImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkInterpolateImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIUS2IUS2.Clone = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_Clone, None, itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetInput1, None, itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetInput1, None, itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetInput2, None, itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetInput2, None, itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetDistance, None, itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetDistance, None, itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetInterpolator, None, itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.GetModifiableInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetModifiableInterpolator, None, itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetInterpolator, None, itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_BeforeThreadedGenerateData, None, itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_AfterThreadedGenerateData, None, itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_swigregister
itkInterpolateImageFilterIUS2IUS2_swigregister(itkInterpolateImageFilterIUS2IUS2)

def itkInterpolateImageFilterIUS2IUS2___New_orig__() -> "itkInterpolateImageFilterIUS2IUS2_Pointer":
    """itkInterpolateImageFilterIUS2IUS2___New_orig__() -> itkInterpolateImageFilterIUS2IUS2_Pointer"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2___New_orig__()

def itkInterpolateImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterIUS2IUS2 *":
    """itkInterpolateImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkInterpolateImageFilterIUS2IUS2"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_cast(obj)

class itkInterpolateImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkInterpolateImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkInterpolateImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkInterpolateImageFilterIUS3IUS3_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkInterpolateImageFilterIUS3IUS3_Pointer":
        """Clone(itkInterpolateImageFilterIUS3IUS3 self) -> itkInterpolateImageFilterIUS3IUS3_Pointer"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_Clone(self)


    def SetInput1(self, image: 'itkImageUS3') -> "void":
        """SetInput1(itkInterpolateImageFilterIUS3IUS3 self, itkImageUS3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetInput1(self, image)


    def GetInput1(self) -> "itkImageUS3 const *":
        """GetInput1(itkInterpolateImageFilterIUS3IUS3 self) -> itkImageUS3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetInput1(self)


    def SetInput2(self, image: 'itkImageUS3') -> "void":
        """SetInput2(itkInterpolateImageFilterIUS3IUS3 self, itkImageUS3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetInput2(self, image)


    def GetInput2(self) -> "itkImageUS3 const *":
        """GetInput2(itkInterpolateImageFilterIUS3IUS3 self) -> itkImageUS3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetInput2(self)


    def SetDistance(self, _arg: 'double') -> "void":
        """SetDistance(itkInterpolateImageFilterIUS3IUS3 self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetDistance(self, _arg)


    def GetDistance(self) -> "double":
        """GetDistance(itkInterpolateImageFilterIUS3IUS3 self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetDistance(self)


    def SetInterpolator(self, _arg: 'itk::InterpolateImageFunction< itk::Image< unsigned short,4 >,double > *') -> "void":
        """SetInterpolator(itkInterpolateImageFilterIUS3IUS3 self, itk::InterpolateImageFunction< itk::Image< unsigned short,4 >,double > * _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itk::InterpolateImageFunction< itk::Image< unsigned short,4 >,double > *":
        """GetModifiableInterpolator(itkInterpolateImageFilterIUS3IUS3 self) -> itk::InterpolateImageFunction< itk::Image< unsigned short,4 >,double > *"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itk::InterpolateImageFunction< itk::Image< unsigned short,4 >,double > *":
        """
        GetInterpolator(itkInterpolateImageFilterIUS3IUS3 self) -> itk::InterpolateImageFunction< itk::Image< unsigned short,4 >,double > const
        GetInterpolator(itkInterpolateImageFilterIUS3IUS3 self) -> itk::InterpolateImageFunction< itk::Image< unsigned short,4 >,double > *
        """
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetInterpolator(self, *args)


    def BeforeThreadedGenerateData(self) -> "void":
        """BeforeThreadedGenerateData(itkInterpolateImageFilterIUS3IUS3 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """AfterThreadedGenerateData(itkInterpolateImageFilterIUS3IUS3 self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_AfterThreadedGenerateData(self)

    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIUS3IUS3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIUS3IUS3

        Create a new object of the class itkInterpolateImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInterpolateImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkInterpolateImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIUS3IUS3.Clone = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_Clone, None, itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetInput1, None, itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetInput1, None, itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetInput2, None, itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetInput2, None, itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetDistance, None, itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetDistance, None, itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetInterpolator, None, itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.GetModifiableInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetModifiableInterpolator, None, itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetInterpolator, None, itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_BeforeThreadedGenerateData, None, itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_AfterThreadedGenerateData, None, itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_swigregister
itkInterpolateImageFilterIUS3IUS3_swigregister(itkInterpolateImageFilterIUS3IUS3)

def itkInterpolateImageFilterIUS3IUS3___New_orig__() -> "itkInterpolateImageFilterIUS3IUS3_Pointer":
    """itkInterpolateImageFilterIUS3IUS3___New_orig__() -> itkInterpolateImageFilterIUS3IUS3_Pointer"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3___New_orig__()

def itkInterpolateImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkInterpolateImageFilterIUS3IUS3 *":
    """itkInterpolateImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkInterpolateImageFilterIUS3IUS3"""
    return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_cast(obj)


def interpolate_image_filter(*args, **kwargs):
    """Procedural interface for InterpolateImageFilter"""
    import itk
    instance = itk.InterpolateImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def interpolate_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.InterpolateImageFilter, itkTemplate.itkTemplate):
        interpolate_image_filter.__doc__ = itk.InterpolateImageFilter.values()[0].__doc__
    else:
        interpolate_image_filter.__doc__ = itk.InterpolateImageFilter.__doc__




