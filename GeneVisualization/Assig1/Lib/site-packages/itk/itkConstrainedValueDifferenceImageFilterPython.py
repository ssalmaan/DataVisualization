# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkConstrainedValueDifferenceImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkConstrainedValueDifferenceImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkConstrainedValueDifferenceImageFilterPython
            return _itkConstrainedValueDifferenceImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkConstrainedValueDifferenceImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkConstrainedValueDifferenceImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkConstrainedValueDifferenceImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkBinaryGeneratorImageFilterPython
import itkInPlaceImageFilterBPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkSimpleDataObjectDecoratorPython
import itkArrayPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython

def itkConstrainedValueDifferenceImageFilterIF3IF3IF3_New():
  return itkConstrainedValueDifferenceImageFilterIF3IF3IF3.New()


def itkConstrainedValueDifferenceImageFilterIF2IF2IF2_New():
  return itkConstrainedValueDifferenceImageFilterIF2IF2IF2.New()


def itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_New():
  return itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3.New()


def itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_New():
  return itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2.New()


def itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_New():
  return itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3.New()


def itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_New():
  return itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2.New()


def itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_New():
  return itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3.New()


def itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_New():
  return itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2.New()

class itkConstrainedValueDifferenceImageFilterIF2IF2IF2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2):
    """Proxy of C++ itkConstrainedValueDifferenceImageFilterIF2IF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer":
        """__New_orig__() -> itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF2IF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer":
        """Clone(itkConstrainedValueDifferenceImageFilterIF2IF2IF2 self) -> itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Clone(self)

    Input1ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Input1ConvertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Input2ConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF2IF2IF2_DoubleConvertibleToOutputCheck
    DoubleGreaterThanOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF2IF2IF2_DoubleGreaterThanOutputCheck
    __swig_destroy__ = _itkConstrainedValueDifferenceImageFilterPython.delete_itkConstrainedValueDifferenceImageFilterIF2IF2IF2

    def cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterIF2IF2IF2 *":
        """cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterIF2IF2IF2"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF2IF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueDifferenceImageFilterIF2IF2IF2

        Create a new object of the class itkConstrainedValueDifferenceImageFilterIF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueDifferenceImageFilterIF2IF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConstrainedValueDifferenceImageFilterIF2IF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConstrainedValueDifferenceImageFilterIF2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConstrainedValueDifferenceImageFilterIF2IF2IF2.Clone = new_instancemethod(_itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Clone, None, itkConstrainedValueDifferenceImageFilterIF2IF2IF2)
itkConstrainedValueDifferenceImageFilterIF2IF2IF2_swigregister = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF2IF2IF2_swigregister
itkConstrainedValueDifferenceImageFilterIF2IF2IF2_swigregister(itkConstrainedValueDifferenceImageFilterIF2IF2IF2)

def itkConstrainedValueDifferenceImageFilterIF2IF2IF2___New_orig__() -> "itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer":
    """itkConstrainedValueDifferenceImageFilterIF2IF2IF2___New_orig__() -> itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF2IF2IF2___New_orig__()

def itkConstrainedValueDifferenceImageFilterIF2IF2IF2_cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterIF2IF2IF2 *":
    """itkConstrainedValueDifferenceImageFilterIF2IF2IF2_cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterIF2IF2IF2"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF2IF2IF2_cast(obj)

class itkConstrainedValueDifferenceImageFilterIF3IF3IF3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3):
    """Proxy of C++ itkConstrainedValueDifferenceImageFilterIF3IF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer":
        """__New_orig__() -> itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF3IF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer":
        """Clone(itkConstrainedValueDifferenceImageFilterIF3IF3IF3 self) -> itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Clone(self)

    Input1ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Input1ConvertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Input2ConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF3IF3IF3_DoubleConvertibleToOutputCheck
    DoubleGreaterThanOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF3IF3IF3_DoubleGreaterThanOutputCheck
    __swig_destroy__ = _itkConstrainedValueDifferenceImageFilterPython.delete_itkConstrainedValueDifferenceImageFilterIF3IF3IF3

    def cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterIF3IF3IF3 *":
        """cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterIF3IF3IF3"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF3IF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueDifferenceImageFilterIF3IF3IF3

        Create a new object of the class itkConstrainedValueDifferenceImageFilterIF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueDifferenceImageFilterIF3IF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConstrainedValueDifferenceImageFilterIF3IF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConstrainedValueDifferenceImageFilterIF3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConstrainedValueDifferenceImageFilterIF3IF3IF3.Clone = new_instancemethod(_itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Clone, None, itkConstrainedValueDifferenceImageFilterIF3IF3IF3)
itkConstrainedValueDifferenceImageFilterIF3IF3IF3_swigregister = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF3IF3IF3_swigregister
itkConstrainedValueDifferenceImageFilterIF3IF3IF3_swigregister(itkConstrainedValueDifferenceImageFilterIF3IF3IF3)

def itkConstrainedValueDifferenceImageFilterIF3IF3IF3___New_orig__() -> "itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer":
    """itkConstrainedValueDifferenceImageFilterIF3IF3IF3___New_orig__() -> itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF3IF3IF3___New_orig__()

def itkConstrainedValueDifferenceImageFilterIF3IF3IF3_cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterIF3IF3IF3 *":
    """itkConstrainedValueDifferenceImageFilterIF3IF3IF3_cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterIF3IF3IF3"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIF3IF3IF3_cast(obj)

class itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2):
    """Proxy of C++ itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_Pointer":
        """__New_orig__() -> itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_Pointer":
        """Clone(itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2 self) -> itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_Clone(self)

    Input1ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_Input1ConvertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_Input2ConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_DoubleConvertibleToOutputCheck
    DoubleGreaterThanOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_DoubleGreaterThanOutputCheck
    __swig_destroy__ = _itkConstrainedValueDifferenceImageFilterPython.delete_itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2 *":
        """cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2

        Create a new object of the class itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2.Clone = new_instancemethod(_itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_Clone, None, itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2)
itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_swigregister = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_swigregister
itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_swigregister(itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2)

def itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2___New_orig__() -> "itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_Pointer":
    """itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2___New_orig__() -> itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_Pointer"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2___New_orig__()

def itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2 *":
    """itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS2ISS2ISS2_cast(obj)

class itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3):
    """Proxy of C++ itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_Pointer":
        """__New_orig__() -> itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_Pointer":
        """Clone(itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3 self) -> itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_Clone(self)

    Input1ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_Input1ConvertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_Input2ConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_DoubleConvertibleToOutputCheck
    DoubleGreaterThanOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_DoubleGreaterThanOutputCheck
    __swig_destroy__ = _itkConstrainedValueDifferenceImageFilterPython.delete_itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3 *":
        """cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3

        Create a new object of the class itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3.Clone = new_instancemethod(_itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_Clone, None, itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3)
itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_swigregister = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_swigregister
itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_swigregister(itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3)

def itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3___New_orig__() -> "itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_Pointer":
    """itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3___New_orig__() -> itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_Pointer"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3___New_orig__()

def itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3 *":
    """itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterISS3ISS3ISS3_cast(obj)

class itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2):
    """Proxy of C++ itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer":
        """__New_orig__() -> itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer":
        """Clone(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2 self) -> itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Clone(self)

    Input1ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Input1ConvertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Input2ConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_DoubleConvertibleToOutputCheck
    DoubleGreaterThanOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_DoubleGreaterThanOutputCheck
    __swig_destroy__ = _itkConstrainedValueDifferenceImageFilterPython.delete_itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2 *":
        """cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2

        Create a new object of the class itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2.Clone = new_instancemethod(_itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Clone, None, itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2)
itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_swigregister = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_swigregister
itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_swigregister(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2)

def itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2___New_orig__() -> "itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer":
    """itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2___New_orig__() -> itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2___New_orig__()

def itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2 *":
    """itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_cast(obj)

class itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3):
    """Proxy of C++ itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer":
        """__New_orig__() -> itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer":
        """Clone(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3 self) -> itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Clone(self)

    Input1ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Input1ConvertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Input2ConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_DoubleConvertibleToOutputCheck
    DoubleGreaterThanOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_DoubleGreaterThanOutputCheck
    __swig_destroy__ = _itkConstrainedValueDifferenceImageFilterPython.delete_itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3 *":
        """cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3

        Create a new object of the class itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3.Clone = new_instancemethod(_itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Clone, None, itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3)
itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_swigregister = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_swigregister
itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_swigregister(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3)

def itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3___New_orig__() -> "itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer":
    """itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3___New_orig__() -> itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3___New_orig__()

def itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3 *":
    """itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_cast(obj)

class itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2):
    """Proxy of C++ itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer":
        """__New_orig__() -> itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer":
        """Clone(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2 self) -> itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Clone(self)

    Input1ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Input1ConvertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Input2ConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_DoubleConvertibleToOutputCheck
    DoubleGreaterThanOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_DoubleGreaterThanOutputCheck
    __swig_destroy__ = _itkConstrainedValueDifferenceImageFilterPython.delete_itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2 *":
        """cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2

        Create a new object of the class itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2.Clone = new_instancemethod(_itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Clone, None, itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2)
itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_swigregister = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_swigregister
itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_swigregister(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2)

def itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2___New_orig__() -> "itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer":
    """itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2___New_orig__() -> itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2___New_orig__()

def itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2 *":
    """itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_cast(obj)

class itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3(itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3):
    """Proxy of C++ itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer":
        """__New_orig__() -> itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer":
        """Clone(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3 self) -> itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Clone(self)

    Input1ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Input1ConvertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Input2ConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_DoubleConvertibleToOutputCheck
    DoubleGreaterThanOutputCheck = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_DoubleGreaterThanOutputCheck
    __swig_destroy__ = _itkConstrainedValueDifferenceImageFilterPython.delete_itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3 *":
        """cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3"""
        return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3

        Create a new object of the class itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3.Clone = new_instancemethod(_itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Clone, None, itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3)
itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_swigregister = _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_swigregister
itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_swigregister(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3)

def itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3___New_orig__() -> "itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer":
    """itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3___New_orig__() -> itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3___New_orig__()

def itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_cast(obj: 'itkLightObject') -> "itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3 *":
    """itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_cast(itkLightObject obj) -> itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3"""
    return _itkConstrainedValueDifferenceImageFilterPython.itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_cast(obj)


def constrained_value_difference_image_filter(*args, **kwargs):
    """Procedural interface for ConstrainedValueDifferenceImageFilter"""
    import itk
    instance = itk.ConstrainedValueDifferenceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def constrained_value_difference_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ConstrainedValueDifferenceImageFilter, itkTemplate.itkTemplate):
        constrained_value_difference_image_filter.__doc__ = itk.ConstrainedValueDifferenceImageFilter.values()[0].__doc__
    else:
        constrained_value_difference_image_filter.__doc__ = itk.ConstrainedValueDifferenceImageFilter.__doc__




