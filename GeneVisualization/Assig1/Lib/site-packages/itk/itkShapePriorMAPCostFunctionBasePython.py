# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkShapePriorMAPCostFunctionBasePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkShapePriorMAPCostFunctionBasePython', [dirname(__file__)])
        except ImportError:
            import _itkShapePriorMAPCostFunctionBasePython
            return _itkShapePriorMAPCostFunctionBasePython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkShapePriorMAPCostFunctionBasePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkShapePriorMAPCostFunctionBasePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkShapePriorMAPCostFunctionBasePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImagePython
import itkOffsetPython
import itkSizePython
import pyBasePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import ITKCommonBasePython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkArrayPython
import ITKCostFunctionsPython
import vnl_least_squares_functionPython
import itkOptimizerParametersPython
import itkArray2DPython
import vnl_cost_functionPython
import vnl_unary_functionPython
import itkCostFunctionPython
import itkShapeSignedDistanceFunctionPython
import itkSpatialFunctionPython
import itkFunctionBasePython
import itkContinuousIndexPython
import ITKFastMarchingBasePython
import itkFastMarchingStoppingCriterionBasePython
import itkNodePairPython
import itkLevelSetNodePython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkShapePriorMAPCostFunctionBaseIF3F_New():
  return itkShapePriorMAPCostFunctionBaseIF3F.New()


def itkShapePriorMAPCostFunctionBaseIF2F_New():
  return itkShapePriorMAPCostFunctionBaseIF2F.New()

class itkShapePriorMAPCostFunctionBaseIF2F(ITKCostFunctionsPython.itkSingleValuedCostFunction):
    """Proxy of C++ itkShapePriorMAPCostFunctionBaseIF2F class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetShapeFunction(self, _arg: 'itkShapeSignedDistanceFunctionD2') -> "void":
        """SetShapeFunction(itkShapePriorMAPCostFunctionBaseIF2F self, itkShapeSignedDistanceFunctionD2 _arg)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_SetShapeFunction(self, _arg)


    def GetModifiableShapeFunction(self) -> "itkShapeSignedDistanceFunctionD2 *":
        """GetModifiableShapeFunction(itkShapePriorMAPCostFunctionBaseIF2F self) -> itkShapeSignedDistanceFunctionD2"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_GetModifiableShapeFunction(self)


    def GetShapeFunction(self, *args) -> "itkShapeSignedDistanceFunctionD2 *":
        """
        GetShapeFunction(itkShapePriorMAPCostFunctionBaseIF2F self) -> itkShapeSignedDistanceFunctionD2
        GetShapeFunction(itkShapePriorMAPCostFunctionBaseIF2F self) -> itkShapeSignedDistanceFunctionD2
        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_GetShapeFunction(self, *args)


    def SetActiveRegion(self, _arg: 'itkVectorContainerUILSNF2') -> "void":
        """SetActiveRegion(itkShapePriorMAPCostFunctionBaseIF2F self, itkVectorContainerUILSNF2 _arg)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_SetActiveRegion(self, _arg)


    def GetActiveRegion(self) -> "itkVectorContainerUILSNF2 const *":
        """GetActiveRegion(itkShapePriorMAPCostFunctionBaseIF2F self) -> itkVectorContainerUILSNF2"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_GetActiveRegion(self)


    def SetFeatureImage(self, _arg: 'itkImageF2') -> "void":
        """SetFeatureImage(itkShapePriorMAPCostFunctionBaseIF2F self, itkImageF2 _arg)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_SetFeatureImage(self, _arg)


    def GetFeatureImage(self) -> "itkImageF2 const *":
        """GetFeatureImage(itkShapePriorMAPCostFunctionBaseIF2F self) -> itkImageF2"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_GetFeatureImage(self)


    def ComputeLogInsideTerm(self, arg0: 'itkOptimizerParametersD') -> "double":
        """ComputeLogInsideTerm(itkShapePriorMAPCostFunctionBaseIF2F self, itkOptimizerParametersD arg0) -> double"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_ComputeLogInsideTerm(self, arg0)


    def ComputeLogGradientTerm(self, arg0: 'itkOptimizerParametersD') -> "double":
        """ComputeLogGradientTerm(itkShapePriorMAPCostFunctionBaseIF2F self, itkOptimizerParametersD arg0) -> double"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_ComputeLogGradientTerm(self, arg0)


    def ComputeLogShapePriorTerm(self, arg0: 'itkOptimizerParametersD') -> "double":
        """ComputeLogShapePriorTerm(itkShapePriorMAPCostFunctionBaseIF2F self, itkOptimizerParametersD arg0) -> double"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_ComputeLogShapePriorTerm(self, arg0)


    def ComputeLogPosePriorTerm(self, arg0: 'itkOptimizerParametersD') -> "double":
        """ComputeLogPosePriorTerm(itkShapePriorMAPCostFunctionBaseIF2F self, itkOptimizerParametersD arg0) -> double"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_ComputeLogPosePriorTerm(self, arg0)


    def Initialize(self) -> "void":
        """Initialize(itkShapePriorMAPCostFunctionBaseIF2F self)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_Initialize(self)

    __swig_destroy__ = _itkShapePriorMAPCostFunctionBasePython.delete_itkShapePriorMAPCostFunctionBaseIF2F

    def cast(obj: 'itkLightObject') -> "itkShapePriorMAPCostFunctionBaseIF2F *":
        """cast(itkLightObject obj) -> itkShapePriorMAPCostFunctionBaseIF2F"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShapePriorMAPCostFunctionBaseIF2F

        Create a new object of the class itkShapePriorMAPCostFunctionBaseIF2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShapePriorMAPCostFunctionBaseIF2F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShapePriorMAPCostFunctionBaseIF2F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShapePriorMAPCostFunctionBaseIF2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShapePriorMAPCostFunctionBaseIF2F.SetShapeFunction = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_SetShapeFunction, None, itkShapePriorMAPCostFunctionBaseIF2F)
itkShapePriorMAPCostFunctionBaseIF2F.GetModifiableShapeFunction = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_GetModifiableShapeFunction, None, itkShapePriorMAPCostFunctionBaseIF2F)
itkShapePriorMAPCostFunctionBaseIF2F.GetShapeFunction = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_GetShapeFunction, None, itkShapePriorMAPCostFunctionBaseIF2F)
itkShapePriorMAPCostFunctionBaseIF2F.SetActiveRegion = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_SetActiveRegion, None, itkShapePriorMAPCostFunctionBaseIF2F)
itkShapePriorMAPCostFunctionBaseIF2F.GetActiveRegion = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_GetActiveRegion, None, itkShapePriorMAPCostFunctionBaseIF2F)
itkShapePriorMAPCostFunctionBaseIF2F.SetFeatureImage = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_SetFeatureImage, None, itkShapePriorMAPCostFunctionBaseIF2F)
itkShapePriorMAPCostFunctionBaseIF2F.GetFeatureImage = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_GetFeatureImage, None, itkShapePriorMAPCostFunctionBaseIF2F)
itkShapePriorMAPCostFunctionBaseIF2F.ComputeLogInsideTerm = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_ComputeLogInsideTerm, None, itkShapePriorMAPCostFunctionBaseIF2F)
itkShapePriorMAPCostFunctionBaseIF2F.ComputeLogGradientTerm = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_ComputeLogGradientTerm, None, itkShapePriorMAPCostFunctionBaseIF2F)
itkShapePriorMAPCostFunctionBaseIF2F.ComputeLogShapePriorTerm = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_ComputeLogShapePriorTerm, None, itkShapePriorMAPCostFunctionBaseIF2F)
itkShapePriorMAPCostFunctionBaseIF2F.ComputeLogPosePriorTerm = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_ComputeLogPosePriorTerm, None, itkShapePriorMAPCostFunctionBaseIF2F)
itkShapePriorMAPCostFunctionBaseIF2F.Initialize = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_Initialize, None, itkShapePriorMAPCostFunctionBaseIF2F)
itkShapePriorMAPCostFunctionBaseIF2F_swigregister = _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_swigregister
itkShapePriorMAPCostFunctionBaseIF2F_swigregister(itkShapePriorMAPCostFunctionBaseIF2F)

def itkShapePriorMAPCostFunctionBaseIF2F_cast(obj: 'itkLightObject') -> "itkShapePriorMAPCostFunctionBaseIF2F *":
    """itkShapePriorMAPCostFunctionBaseIF2F_cast(itkLightObject obj) -> itkShapePriorMAPCostFunctionBaseIF2F"""
    return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_cast(obj)

class itkShapePriorMAPCostFunctionBaseIF3F(ITKCostFunctionsPython.itkSingleValuedCostFunction):
    """Proxy of C++ itkShapePriorMAPCostFunctionBaseIF3F class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetShapeFunction(self, _arg: 'itkShapeSignedDistanceFunctionD3') -> "void":
        """SetShapeFunction(itkShapePriorMAPCostFunctionBaseIF3F self, itkShapeSignedDistanceFunctionD3 _arg)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_SetShapeFunction(self, _arg)


    def GetModifiableShapeFunction(self) -> "itkShapeSignedDistanceFunctionD3 *":
        """GetModifiableShapeFunction(itkShapePriorMAPCostFunctionBaseIF3F self) -> itkShapeSignedDistanceFunctionD3"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_GetModifiableShapeFunction(self)


    def GetShapeFunction(self, *args) -> "itkShapeSignedDistanceFunctionD3 *":
        """
        GetShapeFunction(itkShapePriorMAPCostFunctionBaseIF3F self) -> itkShapeSignedDistanceFunctionD3
        GetShapeFunction(itkShapePriorMAPCostFunctionBaseIF3F self) -> itkShapeSignedDistanceFunctionD3
        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_GetShapeFunction(self, *args)


    def SetActiveRegion(self, _arg: 'itkVectorContainerUILSNF3') -> "void":
        """SetActiveRegion(itkShapePriorMAPCostFunctionBaseIF3F self, itkVectorContainerUILSNF3 _arg)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_SetActiveRegion(self, _arg)


    def GetActiveRegion(self) -> "itkVectorContainerUILSNF3 const *":
        """GetActiveRegion(itkShapePriorMAPCostFunctionBaseIF3F self) -> itkVectorContainerUILSNF3"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_GetActiveRegion(self)


    def SetFeatureImage(self, _arg: 'itkImageF3') -> "void":
        """SetFeatureImage(itkShapePriorMAPCostFunctionBaseIF3F self, itkImageF3 _arg)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_SetFeatureImage(self, _arg)


    def GetFeatureImage(self) -> "itkImageF3 const *":
        """GetFeatureImage(itkShapePriorMAPCostFunctionBaseIF3F self) -> itkImageF3"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_GetFeatureImage(self)


    def ComputeLogInsideTerm(self, arg0: 'itkOptimizerParametersD') -> "double":
        """ComputeLogInsideTerm(itkShapePriorMAPCostFunctionBaseIF3F self, itkOptimizerParametersD arg0) -> double"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_ComputeLogInsideTerm(self, arg0)


    def ComputeLogGradientTerm(self, arg0: 'itkOptimizerParametersD') -> "double":
        """ComputeLogGradientTerm(itkShapePriorMAPCostFunctionBaseIF3F self, itkOptimizerParametersD arg0) -> double"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_ComputeLogGradientTerm(self, arg0)


    def ComputeLogShapePriorTerm(self, arg0: 'itkOptimizerParametersD') -> "double":
        """ComputeLogShapePriorTerm(itkShapePriorMAPCostFunctionBaseIF3F self, itkOptimizerParametersD arg0) -> double"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_ComputeLogShapePriorTerm(self, arg0)


    def ComputeLogPosePriorTerm(self, arg0: 'itkOptimizerParametersD') -> "double":
        """ComputeLogPosePriorTerm(itkShapePriorMAPCostFunctionBaseIF3F self, itkOptimizerParametersD arg0) -> double"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_ComputeLogPosePriorTerm(self, arg0)


    def Initialize(self) -> "void":
        """Initialize(itkShapePriorMAPCostFunctionBaseIF3F self)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_Initialize(self)

    __swig_destroy__ = _itkShapePriorMAPCostFunctionBasePython.delete_itkShapePriorMAPCostFunctionBaseIF3F

    def cast(obj: 'itkLightObject') -> "itkShapePriorMAPCostFunctionBaseIF3F *":
        """cast(itkLightObject obj) -> itkShapePriorMAPCostFunctionBaseIF3F"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShapePriorMAPCostFunctionBaseIF3F

        Create a new object of the class itkShapePriorMAPCostFunctionBaseIF3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShapePriorMAPCostFunctionBaseIF3F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShapePriorMAPCostFunctionBaseIF3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShapePriorMAPCostFunctionBaseIF3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShapePriorMAPCostFunctionBaseIF3F.SetShapeFunction = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_SetShapeFunction, None, itkShapePriorMAPCostFunctionBaseIF3F)
itkShapePriorMAPCostFunctionBaseIF3F.GetModifiableShapeFunction = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_GetModifiableShapeFunction, None, itkShapePriorMAPCostFunctionBaseIF3F)
itkShapePriorMAPCostFunctionBaseIF3F.GetShapeFunction = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_GetShapeFunction, None, itkShapePriorMAPCostFunctionBaseIF3F)
itkShapePriorMAPCostFunctionBaseIF3F.SetActiveRegion = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_SetActiveRegion, None, itkShapePriorMAPCostFunctionBaseIF3F)
itkShapePriorMAPCostFunctionBaseIF3F.GetActiveRegion = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_GetActiveRegion, None, itkShapePriorMAPCostFunctionBaseIF3F)
itkShapePriorMAPCostFunctionBaseIF3F.SetFeatureImage = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_SetFeatureImage, None, itkShapePriorMAPCostFunctionBaseIF3F)
itkShapePriorMAPCostFunctionBaseIF3F.GetFeatureImage = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_GetFeatureImage, None, itkShapePriorMAPCostFunctionBaseIF3F)
itkShapePriorMAPCostFunctionBaseIF3F.ComputeLogInsideTerm = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_ComputeLogInsideTerm, None, itkShapePriorMAPCostFunctionBaseIF3F)
itkShapePriorMAPCostFunctionBaseIF3F.ComputeLogGradientTerm = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_ComputeLogGradientTerm, None, itkShapePriorMAPCostFunctionBaseIF3F)
itkShapePriorMAPCostFunctionBaseIF3F.ComputeLogShapePriorTerm = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_ComputeLogShapePriorTerm, None, itkShapePriorMAPCostFunctionBaseIF3F)
itkShapePriorMAPCostFunctionBaseIF3F.ComputeLogPosePriorTerm = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_ComputeLogPosePriorTerm, None, itkShapePriorMAPCostFunctionBaseIF3F)
itkShapePriorMAPCostFunctionBaseIF3F.Initialize = new_instancemethod(_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_Initialize, None, itkShapePriorMAPCostFunctionBaseIF3F)
itkShapePriorMAPCostFunctionBaseIF3F_swigregister = _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_swigregister
itkShapePriorMAPCostFunctionBaseIF3F_swigregister(itkShapePriorMAPCostFunctionBaseIF3F)

def itkShapePriorMAPCostFunctionBaseIF3F_cast(obj: 'itkLightObject') -> "itkShapePriorMAPCostFunctionBaseIF3F *":
    """itkShapePriorMAPCostFunctionBaseIF3F_cast(itkLightObject obj) -> itkShapePriorMAPCostFunctionBaseIF3F"""
    return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_cast(obj)



